{
	"id": "44ebd05c7df8f782dd70884553209fe9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Day50_ERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"erc721a/contracts/ERC721A.sol\";\n\ncontract Azuki is ERC721A {\n  constructor() ERC721A(\"Azuki\", \"AZUKI\") {}\n\n  function mint(uint256 quantity) external payable {\n    // _safeMint's second argument now takes in a quantity, not a tokenId.\n    _safeMint(msg.sender, quantity);\n  }\n}"
			},
			"erc721a/contracts/ERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.1.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721A.sol';\n\n/**\n * @dev ERC721 token receiver interface.\n */\ninterface ERC721A__IERC721Receiver {\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard,\n * including the Metadata extension. Built to optimize for lower gas during batch mints.\n *\n * Assumes serials are sequentially minted starting at `_startTokenId()`\n * (defaults to 0, e.g. 0, 1, 2, 3..).\n *\n * Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n *\n * Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).\n */\ncontract ERC721A is IERC721A {\n    // Mask of an entry in packed address data.\n    uint256 private constant BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\n\n    // The bit position of `numberMinted` in packed address data.\n    uint256 private constant BITPOS_NUMBER_MINTED = 64;\n\n    // The bit position of `numberBurned` in packed address data.\n    uint256 private constant BITPOS_NUMBER_BURNED = 128;\n\n    // The bit position of `aux` in packed address data.\n    uint256 private constant BITPOS_AUX = 192;\n\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\n    uint256 private constant BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\n\n    // The bit position of `startTimestamp` in packed ownership.\n    uint256 private constant BITPOS_START_TIMESTAMP = 160;\n\n    // The bit mask of the `burned` bit in packed ownership.\n    uint256 private constant BITMASK_BURNED = 1 << 224;\n\n    // The bit position of the `nextInitialized` bit in packed ownership.\n    uint256 private constant BITPOS_NEXT_INITIALIZED = 225;\n\n    // The bit mask of the `nextInitialized` bit in packed ownership.\n    uint256 private constant BITMASK_NEXT_INITIALIZED = 1 << 225;\n\n    // The bit position of `extraData` in packed ownership.\n    uint256 private constant BITPOS_EXTRA_DATA = 232;\n\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\n    uint256 private constant BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\n\n    // The mask of the lower 160 bits for addresses.\n    uint256 private constant BITMASK_ADDRESS = (1 << 160) - 1;\n\n    // The maximum `quantity` that can be minted with `_mintERC2309`.\n    // This limit is to prevent overflows on the address data entries.\n    // For a limit of 5000, a total of 3.689e15 calls to `_mintERC2309`\n    // is required to cause an overflow, which is unrealistic.\n    uint256 private constant MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\n\n    // The tokenId of the next token to be minted.\n    uint256 private _currentIndex;\n\n    // The number of tokens burned.\n    uint256 private _burnCounter;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to ownership details\n    // An empty struct value does not necessarily mean the token is unowned.\n    // See `_packedOwnershipOf` implementation for details.\n    //\n    // Bits Layout:\n    // - [0..159]   `addr`\n    // - [160..223] `startTimestamp`\n    // - [224]      `burned`\n    // - [225]      `nextInitialized`\n    // - [232..255] `extraData`\n    mapping(uint256 => uint256) private _packedOwnerships;\n\n    // Mapping owner address to address data.\n    //\n    // Bits Layout:\n    // - [0..63]    `balance`\n    // - [64..127]  `numberMinted`\n    // - [128..191] `numberBurned`\n    // - [192..255] `aux`\n    mapping(address => uint256) private _packedAddressData;\n\n    // Mapping from token ID to approved address.\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _currentIndex = _startTokenId();\n    }\n\n    /**\n     * @dev Returns the starting token ID.\n     * To change the starting token ID, please override this function.\n     */\n    function _startTokenId() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev Returns the next token ID to be minted.\n     */\n    function _nextTokenId() internal view returns (uint256) {\n        return _currentIndex;\n    }\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see `_totalMinted`.\n     */\n    function totalSupply() public view override returns (uint256) {\n        // Counter underflow is impossible as _burnCounter cannot be incremented\n        // more than `_currentIndex - _startTokenId()` times.\n        unchecked {\n            return _currentIndex - _burnCounter - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total amount of tokens minted in the contract.\n     */\n    function _totalMinted() internal view returns (uint256) {\n        // Counter underflow is impossible as _currentIndex does not decrement,\n        // and it is initialized to `_startTokenId()`\n        unchecked {\n            return _currentIndex - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total number of tokens burned.\n     */\n    function _totalBurned() internal view returns (uint256) {\n        return _burnCounter;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        // The interface IDs are constants representing the first 4 bytes of the XOR of\n        // all function selectors in the interface. See: https://eips.ethereum.org/EIPS/eip-165\n        // e.g. `bytes4(i.functionA.selector ^ i.functionB.selector ^ ...)`\n        return\n            interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\n            interfaceId == 0x80ac58cd || // ERC165 interface ID for ERC721.\n            interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view override returns (uint256) {\n        if (owner == address(0)) revert BalanceQueryForZeroAddress();\n        return _packedAddressData[owner] & BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens minted by `owner`.\n     */\n    function _numberMinted(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> BITPOS_NUMBER_MINTED) & BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens burned by or on behalf of `owner`.\n     */\n    function _numberBurned(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> BITPOS_NUMBER_BURNED) & BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     */\n    function _getAux(address owner) internal view returns (uint64) {\n        return uint64(_packedAddressData[owner] >> BITPOS_AUX);\n    }\n\n    /**\n     * Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     * If there are multiple variables, please pack them into a uint64.\n     */\n    function _setAux(address owner, uint64 aux) internal {\n        uint256 packed = _packedAddressData[owner];\n        uint256 auxCasted;\n        // Cast `aux` with assembly to avoid redundant masking.\n        assembly {\n            auxCasted := aux\n        }\n        packed = (packed & BITMASK_AUX_COMPLEMENT) | (auxCasted << BITPOS_AUX);\n        _packedAddressData[owner] = packed;\n    }\n\n    /**\n     * Returns the packed ownership data of `tokenId`.\n     */\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {\n        uint256 curr = tokenId;\n\n        unchecked {\n            if (_startTokenId() <= curr)\n                if (curr < _currentIndex) {\n                    uint256 packed = _packedOwnerships[curr];\n                    // If not burned.\n                    if (packed & BITMASK_BURNED == 0) {\n                        // Invariant:\n                        // There will always be an ownership that has an address and is not burned\n                        // before an ownership that does not have an address and is not burned.\n                        // Hence, curr will not underflow.\n                        //\n                        // We can directly compare the packed value.\n                        // If the address is zero, packed is zero.\n                        while (packed == 0) {\n                            packed = _packedOwnerships[--curr];\n                        }\n                        return packed;\n                    }\n                }\n        }\n        revert OwnerQueryForNonexistentToken();\n    }\n\n    /**\n     * Returns the unpacked `TokenOwnership` struct from `packed`.\n     */\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\n        ownership.addr = address(uint160(packed));\n        ownership.startTimestamp = uint64(packed >> BITPOS_START_TIMESTAMP);\n        ownership.burned = packed & BITMASK_BURNED != 0;\n        ownership.extraData = uint24(packed >> BITPOS_EXTRA_DATA);\n    }\n\n    /**\n     * Returns the unpacked `TokenOwnership` struct at `index`.\n     */\n    function _ownershipAt(uint256 index) internal view returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnerships[index]);\n    }\n\n    /**\n     * @dev Initializes the ownership slot minted at `index` for efficiency purposes.\n     */\n    function _initializeOwnershipAt(uint256 index) internal {\n        if (_packedOwnerships[index] == 0) {\n            _packedOwnerships[index] = _packedOwnershipOf(index);\n        }\n    }\n\n    /**\n     * Gas spent here starts off proportional to the maximum mint batch size.\n     * It gradually moves to O(1) as tokens get transferred around in the collection over time.\n     */\n    function _ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\n    }\n\n    /**\n     * @dev Packs ownership data into a single uint256.\n     */\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, BITMASK_ADDRESS)\n            // `owner | (block.timestamp << BITPOS_START_TIMESTAMP) | flags`.\n            result := or(owner, or(shl(BITPOS_START_TIMESTAMP, timestamp()), flags))\n        }\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view override returns (address) {\n        return address(uint160(_packedOwnershipOf(tokenId)));\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        if (!_exists(tokenId)) revert URIQueryForNonexistentToken();\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, it can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return '';\n    }\n\n    /**\n     * @dev Returns the `nextInitialized` flag set if `quantity` equals 1.\n     */\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\n        // For branchless setting of the `nextInitialized` flag.\n        assembly {\n            // `(quantity == 1) << BITPOS_NEXT_INITIALIZED`.\n            result := shl(BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\n        }\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public override {\n        address owner = ownerOf(tokenId);\n\n        if (_msgSenderERC721A() != owner)\n            if (!isApprovedForAll(owner, _msgSenderERC721A())) {\n                revert ApprovalCallerNotOwnerNorApproved();\n            }\n\n        _tokenApprovals[tokenId] = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view override returns (address) {\n        if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken();\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        if (operator == _msgSenderERC721A()) revert ApproveToCaller();\n\n        _operatorApprovals[_msgSenderERC721A()][operator] = approved;\n        emit ApprovalForAll(_msgSenderERC721A(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, '');\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        transferFrom(from, to, tokenId);\n        if (to.code.length != 0)\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\n                revert TransferToNonERC721ReceiverImplementer();\n            }\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     */\n    function _exists(uint256 tokenId) internal view returns (bool) {\n        return\n            _startTokenId() <= tokenId &&\n            tokenId < _currentIndex && // If within bounds,\n            _packedOwnerships[tokenId] & BITMASK_BURNED == 0; // and not burned.\n    }\n\n    /**\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\n     */\n    function _safeMint(address to, uint256 quantity) internal {\n        _safeMint(to, quantity, '');\n    }\n\n    /**\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement\n     *   {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n     * - `quantity` must be greater than 0.\n     *\n     * See {_mint}.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _safeMint(\n        address to,\n        uint256 quantity,\n        bytes memory _data\n    ) internal {\n        _mint(to, quantity);\n\n        unchecked {\n            if (to.code.length != 0) {\n                uint256 end = _currentIndex;\n                uint256 index = end - quantity;\n                do {\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\n                        revert TransferToNonERC721ReceiverImplementer();\n                    }\n                } while (index < end);\n                // Reentrancy protection.\n                if (_currentIndex != end) revert();\n            }\n        }\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _mint(address to, uint256 quantity) internal {\n        uint256 startTokenId = _currentIndex;\n        if (to == address(0)) revert MintToZeroAddress();\n        if (quantity == 0) revert MintZeroQuantity();\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are incredibly unrealistic.\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\n        // `tokenId` has a maximum limit of 2**256.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            uint256 tokenId = startTokenId;\n            uint256 end = startTokenId + quantity;\n            do {\n                emit Transfer(address(0), to, tokenId++);\n            } while (tokenId < end);\n\n            _currentIndex = end;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * This function is intended for efficient minting only during contract creation.\n     *\n     * It emits only one {ConsecutiveTransfer} as defined in\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n     * instead of a sequence of {Transfer} event(s).\n     *\n     * Calling this function outside of contract creation WILL make your contract\n     * non-compliant with the ERC721 standard.\n     * For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n     * {ConsecutiveTransfer} event is only permissible during contract creation.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {ConsecutiveTransfer} event.\n     */\n    function _mintERC2309(address to, uint256 quantity) internal {\n        uint256 startTokenId = _currentIndex;\n        if (to == address(0)) revert MintToZeroAddress();\n        if (quantity == 0) revert MintZeroQuantity();\n        if (quantity > MAX_MINT_ERC2309_QUANTITY_LIMIT) revert MintERC2309QuantityExceedsLimit();\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\n\n            _currentIndex = startTokenId + quantity;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Returns the storage slot and value for the approved address of `tokenId`.\n     */\n    function _getApprovedAddress(uint256 tokenId)\n        private\n        view\n        returns (uint256 approvedAddressSlot, address approvedAddress)\n    {\n        mapping(uint256 => address) storage tokenApprovalsPtr = _tokenApprovals;\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId]`.\n        assembly {\n            // Compute the slot.\n            mstore(0x00, tokenId)\n            mstore(0x20, tokenApprovalsPtr.slot)\n            approvedAddressSlot := keccak256(0x00, 0x40)\n            // Load the slot's value from storage.\n            approvedAddress := sload(approvedAddressSlot)\n        }\n    }\n\n    /**\n     * @dev Returns whether the `approvedAddress` is equals to `from` or `msgSender`.\n     */\n    function _isOwnerOrApproved(\n        address approvedAddress,\n        address from,\n        address msgSender\n    ) private pure returns (bool result) {\n        assembly {\n            // Mask `from` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            from := and(from, BITMASK_ADDRESS)\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            msgSender := and(msgSender, BITMASK_ADDRESS)\n            // `msgSender == from || msgSender == approvedAddress`.\n            result := or(eq(msgSender, from), eq(msgSender, approvedAddress))\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner();\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedAddress(tokenId);\n\n        // The nested ifs save around 20+ gas over a compound boolean condition.\n        if (!_isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()))\n            if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\n\n        if (to == address(0)) revert TransferToZeroAddress();\n\n        _beforeTokenTransfers(from, to, tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as tokenId would have to be 2**256.\n        unchecked {\n            // We can directly increment and decrement the balances.\n            --_packedAddressData[from]; // Updates: `balance -= 1`.\n            ++_packedAddressData[to]; // Updates: `balance += 1`.\n\n            // Updates:\n            // - `address` to the next owner.\n            // - `startTimestamp` to the timestamp of transfering.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                to,\n                BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, to, tokenId);\n        _afterTokenTransfers(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Equivalent to `_burn(tokenId, false)`.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        _burn(tokenId, false);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        address from = address(uint160(prevOwnershipPacked));\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedAddress(tokenId);\n\n        if (approvalCheck) {\n            // The nested ifs save around 20+ gas over a compound boolean condition.\n            if (!_isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()))\n                if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\n        }\n\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // Updates:\n            // - `balance -= 1`.\n            // - `numberBurned += 1`.\n            //\n            // We can directly decrement the balance, and increment the number burned.\n            // This is equivalent to `packed -= 1; packed += 1 << BITPOS_NUMBER_BURNED;`.\n            _packedAddressData[from] += (1 << BITPOS_NUMBER_BURNED) - 1;\n\n            // Updates:\n            // - `address` to the last owner.\n            // - `startTimestamp` to the timestamp of burning.\n            // - `burned` to `true`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                from,\n                (BITMASK_BURNED | BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, address(0), tokenId);\n        _afterTokenTransfers(from, address(0), tokenId, 1);\n\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\n        unchecked {\n            _burnCounter++;\n        }\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkContractOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\n            bytes4 retval\n        ) {\n            return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector;\n        } catch (bytes memory reason) {\n            if (reason.length == 0) {\n                revert TransferToNonERC721ReceiverImplementer();\n            } else {\n                assembly {\n                    revert(add(32, reason), mload(reason))\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Directly sets the extra data for the ownership data `index`.\n     */\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal {\n        uint256 packed = _packedOwnerships[index];\n        if (packed == 0) revert OwnershipNotInitializedForExtraData();\n        uint256 extraDataCasted;\n        // Cast `extraData` with assembly to avoid redundant masking.\n        assembly {\n            extraDataCasted := extraData\n        }\n        packed = (packed & BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << BITPOS_EXTRA_DATA);\n        _packedOwnerships[index] = packed;\n    }\n\n    /**\n     * @dev Returns the next extra data for the packed ownership data.\n     * The returned result is shifted into position.\n     */\n    function _nextExtraData(\n        address from,\n        address to,\n        uint256 prevOwnershipPacked\n    ) private view returns (uint256) {\n        uint24 extraData = uint24(prevOwnershipPacked >> BITPOS_EXTRA_DATA);\n        return uint256(_extraData(from, to, extraData)) << BITPOS_EXTRA_DATA;\n    }\n\n    /**\n     * @dev Called during each token transfer to set the 24bit `extraData` field.\n     * Intended to be overridden by the cosumer contract.\n     *\n     * `previousExtraData` - the value of `extraData` before transfer.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _extraData(\n        address from,\n        address to,\n        uint24 previousExtraData\n    ) internal view virtual returns (uint24) {}\n\n    /**\n     * @dev Hook that is called before a set of serially-ordered token ids are about to be transferred.\n     * This includes minting.\n     * And also called before burning one token.\n     *\n     * startTokenId - the first token id to be transferred\n     * quantity - the amount to be transferred\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after a set of serially-ordered token ids have been transferred.\n     * This includes minting.\n     * And also called after one token has been burned.\n     *\n     * startTokenId - the first token id to be transferred\n     * quantity - the amount to be transferred\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` has been minted for `to`.\n     * - When `to` is zero, `tokenId` has been burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _afterTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Returns the message sender (defaults to `msg.sender`).\n     *\n     * If you are writing GSN compatible contracts, you need to override this function.\n     */\n    function _msgSenderERC721A() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function _toString(uint256 value) internal pure returns (string memory ptr) {\n        assembly {\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit),\n            // but we allocate 128 bytes to keep the free memory pointer 32-byte word aliged.\n            // We will need 1 32-byte word to store the length,\n            // and 3 32-byte words to store a maximum of 78 digits. Total: 32 + 3 * 32 = 128.\n            ptr := add(mload(0x40), 128)\n            // Update the free memory pointer to allocate.\n            mstore(0x40, ptr)\n\n            // Cache the end of the memory to calculate the length later.\n            let end := ptr\n\n            // We write the string from the rightmost digit to the leftmost digit.\n            // The following is essentially a do-while loop that also handles the zero case.\n            // Costs a bit more than early returning for the zero case,\n            // but cheaper in terms of deployment and overall runtime costs.\n            for {\n                // Initialize and perform the first pass without check.\n                let temp := value\n                // Move the pointer 1 byte leftwards to point to an empty character slot.\n                ptr := sub(ptr, 1)\n                // Write the character to the pointer. 48 is the ASCII index of '0'.\n                mstore8(ptr, add(48, mod(temp, 10)))\n                temp := div(temp, 10)\n            } temp {\n                // Keep dividing `temp` until zero.\n                temp := div(temp, 10)\n            } {\n                // Body of the for loop.\n                ptr := sub(ptr, 1)\n                mstore8(ptr, add(48, mod(temp, 10)))\n            }\n\n            let length := sub(end, ptr)\n            // Move the pointer 32 bytes leftwards to make room for the length.\n            ptr := sub(ptr, 32)\n            // Store the length.\n            mstore(ptr, length)\n        }\n    }\n}\n"
			},
			"erc721a/contracts/IERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.1.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n/**\n * @dev Interface of an ERC721A compliant contract.\n */\ninterface IERC721A {\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error ApprovalCallerNotOwnerNorApproved();\n\n    /**\n     * The token does not exist.\n     */\n    error ApprovalQueryForNonexistentToken();\n\n    /**\n     * The caller cannot approve to their own address.\n     */\n    error ApproveToCaller();\n\n    /**\n     * Cannot query the balance for the zero address.\n     */\n    error BalanceQueryForZeroAddress();\n\n    /**\n     * Cannot mint to the zero address.\n     */\n    error MintToZeroAddress();\n\n    /**\n     * The quantity of tokens minted must be more than zero.\n     */\n    error MintZeroQuantity();\n\n    /**\n     * The token does not exist.\n     */\n    error OwnerQueryForNonexistentToken();\n\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error TransferCallerNotOwnerNorApproved();\n\n    /**\n     * The token must be owned by `from`.\n     */\n    error TransferFromIncorrectOwner();\n\n    /**\n     * Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\n     */\n    error TransferToNonERC721ReceiverImplementer();\n\n    /**\n     * Cannot transfer to the zero address.\n     */\n    error TransferToZeroAddress();\n\n    /**\n     * The token does not exist.\n     */\n    error URIQueryForNonexistentToken();\n\n    /**\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\n     */\n    error MintERC2309QuantityExceedsLimit();\n\n    /**\n     * The `extraData` cannot be set on an unintialized ownership slot.\n     */\n    error OwnershipNotInitializedForExtraData();\n\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Keeps track of the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n        // Arbitrary data similar to `startTimestamp` that can be set through `_extraData`.\n        uint24 extraData;\n    }\n\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     *\n     * Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // ==============================\n    //            IERC165\n    // ==============================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n\n    // ==============================\n    //            IERC721\n    // ==============================\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    // ==============================\n    //        IERC721Metadata\n    // ==============================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n\n    // ==============================\n    //            IERC2309\n    // ==============================\n\n    /**\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`,\n     * as defined in the ERC2309 standard. See `_mintERC2309` for more details.\n     */\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Day50_ERC721A.sol": {
				"Azuki": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see `_totalMinted`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Day50_ERC721A.sol\":98:342  contract Azuki is ERC721A {... */\n  mstore(0x40, 0x80)\n    /* \"Day50_ERC721A.sol\":128:170  constructor() ERC721A(\"Azuki\", \"AZUKI\") {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":3986:4140  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x417a756b69000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x415a554b49000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":4060:4065  name_ */\n  dup2\n    /* \"erc721a/contracts/ERC721A.sol\":4052:4057  _name */\n  0x02\n    /* \"erc721a/contracts/ERC721A.sol\":4052:4065  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_5\n  swap3\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":4085:4092  symbol_ */\n  dup1\n    /* \"erc721a/contracts/ERC721A.sol\":4075:4082  _symbol */\n  0x03\n    /* \"erc721a/contracts/ERC721A.sol\":4075:4092  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_7\n  swap3\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":4118:4133  _startTokenId() */\n  tag_8\n    /* \"erc721a/contracts/ERC721A.sol\":4118:4131  _startTokenId */\n  shl(0x20, tag_9)\n    /* \"erc721a/contracts/ERC721A.sol\":4118:4133  _startTokenId() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"erc721a/contracts/ERC721A.sol\":4102:4115  _currentIndex */\n  0x00\n    /* \"erc721a/contracts/ERC721A.sol\":4102:4133  _currentIndex = _startTokenId() */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":3986:4140  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"Day50_ERC721A.sol\":98:342  contract Azuki is ERC721A {... */\n  jump(tag_11)\n    /* \"erc721a/contracts/ERC721A.sol\":4276:4366  function _startTokenId() internal view virtual returns (uint256) {... */\ntag_9:\n    /* \"erc721a/contracts/ERC721A.sol\":4332:4339  uint256 */\n  0x00\n    /* \"erc721a/contracts/ERC721A.sol\":4276:4366  function _startTokenId() internal view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"Day50_ERC721A.sol\":98:342  contract Azuki is ERC721A {... */\ntag_6:\n  dup3\n  dup1\n  sload\n  tag_13\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_16\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_15)\ntag_16:\n  dup3\n  0x1f\n  lt\n  tag_17\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_15)\ntag_17:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_15\n  jumpi\n  swap2\n  dup3\n  add\ntag_18:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_19\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_18)\ntag_19:\ntag_15:\n  pop\n  swap1\n  pop\n  tag_20\n  swap2\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n  pop\n  swap1\n  jump\t// out\ntag_21:\ntag_22:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_23\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_22)\ntag_23:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:327   */\ntag_14:\n    /* \"#utility.yul\":51:57   */\n  0x00\n    /* \"#utility.yul\":88:89   */\n  0x02\n    /* \"#utility.yul\":82:86   */\n  dup3\n    /* \"#utility.yul\":78:90   */\n  div\n    /* \"#utility.yul\":68:90   */\n  swap1\n  pop\n    /* \"#utility.yul\":135:136   */\n  0x01\n    /* \"#utility.yul\":129:133   */\n  dup3\n    /* \"#utility.yul\":125:137   */\n  and\n    /* \"#utility.yul\":156:174   */\n  dup1\n    /* \"#utility.yul\":146:227   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":212:216   */\n  0x7f\n    /* \"#utility.yul\":204:210   */\n  dup3\n    /* \"#utility.yul\":200:217   */\n  and\n    /* \"#utility.yul\":190:217   */\n  swap2\n  pop\n    /* \"#utility.yul\":146:227   */\ntag_26:\n    /* \"#utility.yul\":274:276   */\n  0x20\n    /* \"#utility.yul\":266:272   */\n  dup3\n    /* \"#utility.yul\":263:277   */\n  lt\n    /* \"#utility.yul\":243:261   */\n  dup2\n    /* \"#utility.yul\":240:278   */\n  eq\n    /* \"#utility.yul\":237:321   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":293:311   */\n  tag_28\n  tag_29\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":237:321   */\ntag_27:\n    /* \"#utility.yul\":58:327   */\n  pop\n    /* \"#utility.yul\":7:327   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":333:513   */\ntag_29:\n    /* \"#utility.yul\":381:458   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":378:379   */\n  0x00\n    /* \"#utility.yul\":371:459   */\n  mstore\n    /* \"#utility.yul\":478:482   */\n  0x22\n    /* \"#utility.yul\":475:476   */\n  0x04\n    /* \"#utility.yul\":468:483   */\n  mstore\n    /* \"#utility.yul\":502:506   */\n  0x24\n    /* \"#utility.yul\":499:500   */\n  0x00\n    /* \"#utility.yul\":492:507   */\n  revert\n    /* \"Day50_ERC721A.sol\":98:342  contract Azuki is ERC721A {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Day50_ERC721A.sol\":98:342  contract Azuki is ERC721A {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_16\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_12\n      jumpi\n      jump(tag_1)\n    tag_17:\n      dup1\n      0x095ea7b3\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_19:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":5653:6260  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":11161:11259  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":13048:13248  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":12611:12987  function approve(address to, uint256 tokenId) public override {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"erc721a/contracts/ERC721A.sol\":4736:5045  function totalSupply() public view override returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":22055:24794  function transferFrom(... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      stop\n        /* \"erc721a/contracts/ERC721A.sol\":13912:14091  function safeTransferFrom(... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"erc721a/contracts/ERC721A.sol\":10957:11099  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":6319:6540  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":11323:11425  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Day50_ERC721A.sol\":174:340  function mint(uint256 quantity) external payable {... */\n    tag_12:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"erc721a/contracts/ERC721A.sol\":13315:13618  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n    tag_77:\n      stop\n        /* \"erc721a/contracts/ERC721A.sol\":14157:14545  function safeTransferFrom(... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n    tag_82:\n      stop\n        /* \"erc721a/contracts/ERC721A.sol\":11491:11804  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":13684:13846  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":5653:6260  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_24:\n        /* \"erc721a/contracts/ERC721A.sol\":5738:5742  bool */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":6048:6058  0x01ffc9a7 */\n      0x01ffc9a7\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6058  interfaceId == 0x01ffc9a7 */\n      0xe0\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6044  interfaceId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6058  interfaceId == 0x01ffc9a7 */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6134  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_98\n      jumpi\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":6124:6134  0x80ac58cd */\n      0x80ac58cd\n        /* \"erc721a/contracts/ERC721A.sol\":6109:6134  interfaceId == 0x80ac58cd */\n      0xe0\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":6109:6120  interfaceId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":6109:6134  interfaceId == 0x80ac58cd */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6134  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_98:\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6210  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_99\n      jumpi\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":6200:6210  0x5b5e139f */\n      0x5b5e139f\n        /* \"erc721a/contracts/ERC721A.sol\":6185:6210  interfaceId == 0x5b5e139f */\n      0xe0\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":6185:6196  interfaceId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":6185:6210  interfaceId == 0x5b5e139f */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6210  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_99:\n        /* \"erc721a/contracts/ERC721A.sol\":6014:6210  return... */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":5653:6260  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":11161:11259  function name() public view virtual override returns (string memory) {... */\n    tag_29:\n        /* \"erc721a/contracts/ERC721A.sol\":11215:11228  string memory */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":11247:11252  _name */\n      0x02\n        /* \"erc721a/contracts/ERC721A.sol\":11240:11252  return _name */\n      dup1\n      sload\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_103\n      swap1\n      tag_102\n      jump\t// in\n    tag_103:\n      dup1\n      iszero\n      tag_104\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_105\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_104)\n    tag_105:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_106:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_106\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":11161:11259  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":13048:13248  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_36:\n        /* \"erc721a/contracts/ERC721A.sol\":13116:13123  address */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13140:13156  _exists(tokenId) */\n      tag_108\n        /* \"erc721a/contracts/ERC721A.sol\":13148:13155  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":13140:13147  _exists */\n      tag_109\n        /* \"erc721a/contracts/ERC721A.sol\":13140:13156  _exists(tokenId) */\n      jump\t// in\n    tag_108:\n        /* \"erc721a/contracts/ERC721A.sol\":13135:13199  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_110\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":13165:13199  ApprovalQueryForNonexistentToken() */\n      mload(0x40)\n      0xcf4700e400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":13135:13199  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_110:\n        /* \"erc721a/contracts/ERC721A.sol\":13217:13232  _tokenApprovals */\n      0x06\n        /* \"erc721a/contracts/ERC721A.sol\":13217:13241  _tokenApprovals[tokenId] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13233:13240  tokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":13217:13241  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":13210:13241  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":13048:13248  function getApproved(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":12611:12987  function approve(address to, uint256 tokenId) public override {... */\n    tag_43:\n        /* \"erc721a/contracts/ERC721A.sol\":12683:12696  address owner */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":12699:12715  ownerOf(tokenId) */\n      tag_112\n        /* \"erc721a/contracts/ERC721A.sol\":12707:12714  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":12699:12706  ownerOf */\n      tag_61\n        /* \"erc721a/contracts/ERC721A.sol\":12699:12715  ownerOf(tokenId) */\n      jump\t// in\n    tag_112:\n        /* \"erc721a/contracts/ERC721A.sol\":12683:12715  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":12753:12758  owner */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":12730:12758  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":12730:12749  _msgSenderERC721A() */\n      tag_113\n        /* \"erc721a/contracts/ERC721A.sol\":12730:12747  _msgSenderERC721A */\n      tag_114\n        /* \"erc721a/contracts/ERC721A.sol\":12730:12749  _msgSenderERC721A() */\n      jump\t// in\n    tag_113:\n        /* \"erc721a/contracts/ERC721A.sol\":12730:12758  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":12726:12898  if (_msgSenderERC721A() != owner)... */\n      tag_115\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":12777:12821  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_116\n        /* \"erc721a/contracts/ERC721A.sol\":12794:12799  owner */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":12801:12820  _msgSenderERC721A() */\n      tag_117\n        /* \"erc721a/contracts/ERC721A.sol\":12801:12818  _msgSenderERC721A */\n      tag_114\n        /* \"erc721a/contracts/ERC721A.sol\":12801:12820  _msgSenderERC721A() */\n      jump\t// in\n    tag_117:\n        /* \"erc721a/contracts/ERC721A.sol\":12777:12793  isApprovedForAll */\n      tag_95\n        /* \"erc721a/contracts/ERC721A.sol\":12777:12821  isApprovedForAll(owner, _msgSenderERC721A()) */\n      jump\t// in\n    tag_116:\n        /* \"erc721a/contracts/ERC721A.sol\":12772:12898  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_118\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":12848:12883  ApprovalCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0xcfb3b94200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":12772:12898  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n    tag_118:\n        /* \"erc721a/contracts/ERC721A.sol\":12726:12898  if (_msgSenderERC721A() != owner)... */\n    tag_115:\n        /* \"erc721a/contracts/ERC721A.sol\":12935:12937  to */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12923  _tokenApprovals */\n      0x06\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12932  _tokenApprovals[tokenId] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":12924:12931  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12932  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12937  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":12972:12979  tokenId */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":12968:12970  to */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":12952:12980  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":12961:12966  owner */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":12952:12980  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"erc721a/contracts/ERC721A.sol\":12673:12987  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":12611:12987  function approve(address to, uint256 tokenId) public override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":4736:5045  function totalSupply() public view override returns (uint256) {... */\n    tag_46:\n        /* \"erc721a/contracts/ERC721A.sol\":4789:4796  uint256 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":5013:5028  _startTokenId() */\n      tag_120\n        /* \"erc721a/contracts/ERC721A.sol\":5013:5026  _startTokenId */\n      tag_121\n        /* \"erc721a/contracts/ERC721A.sol\":5013:5028  _startTokenId() */\n      jump\t// in\n    tag_120:\n        /* \"erc721a/contracts/ERC721A.sol\":4998:5010  _burnCounter */\n      sload(0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":4982:4995  _currentIndex */\n      sload(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":4982:5010  _currentIndex - _burnCounter */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":4982:5028  _currentIndex - _burnCounter - _startTokenId() */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":4975:5028  return _currentIndex - _burnCounter - _startTokenId() */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":4736:5045  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":22055:24794  function transferFrom(... */\n    tag_53:\n        /* \"erc721a/contracts/ERC721A.sol\":22184:22211  uint256 prevOwnershipPacked */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":22214:22241  _packedOwnershipOf(tokenId) */\n      tag_123\n        /* \"erc721a/contracts/ERC721A.sol\":22233:22240  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":22214:22232  _packedOwnershipOf */\n      tag_124\n        /* \"erc721a/contracts/ERC721A.sol\":22214:22241  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_123:\n        /* \"erc721a/contracts/ERC721A.sol\":22184:22241  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":22297:22301  from */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":22256:22301  address(uint160(prevOwnershipPacked)) != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":22272:22291  prevOwnershipPacked */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":22256:22301  address(uint160(prevOwnershipPacked)) != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":22252:22338  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n      tag_125\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22310:22338  TransferFromIncorrectOwner() */\n      mload(0x40)\n      0xa114810000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":22252:22338  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n    tag_125:\n        /* \"erc721a/contracts/ERC721A.sol\":22350:22377  uint256 approvedAddressSlot */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":22379:22402  address approvedAddress */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":22406:22434  _getApprovedAddress(tokenId) */\n      tag_126\n        /* \"erc721a/contracts/ERC721A.sol\":22426:22433  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":22406:22425  _getApprovedAddress */\n      tag_127\n        /* \"erc721a/contracts/ERC721A.sol\":22406:22434  _getApprovedAddress(tokenId) */\n      jump\t// in\n    tag_126:\n        /* \"erc721a/contracts/ERC721A.sol\":22349:22434  (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedAddress(tokenId) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":22531:22593  _isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()) */\n      tag_128\n        /* \"erc721a/contracts/ERC721A.sol\":22550:22565  approvedAddress */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":22567:22571  from */\n      dup8\n        /* \"erc721a/contracts/ERC721A.sol\":22573:22592  _msgSenderERC721A() */\n      tag_129\n        /* \"erc721a/contracts/ERC721A.sol\":22573:22590  _msgSenderERC721A */\n      tag_114\n        /* \"erc721a/contracts/ERC721A.sol\":22573:22592  _msgSenderERC721A() */\n      jump\t// in\n    tag_129:\n        /* \"erc721a/contracts/ERC721A.sol\":22531:22549  _isOwnerOrApproved */\n      tag_130\n        /* \"erc721a/contracts/ERC721A.sol\":22531:22593  _isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_128:\n        /* \"erc721a/contracts/ERC721A.sol\":22526:22699  if (!_isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_131\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22612:22655  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_132\n        /* \"erc721a/contracts/ERC721A.sol\":22629:22633  from */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":22635:22654  _msgSenderERC721A() */\n      tag_133\n        /* \"erc721a/contracts/ERC721A.sol\":22635:22652  _msgSenderERC721A */\n      tag_114\n        /* \"erc721a/contracts/ERC721A.sol\":22635:22654  _msgSenderERC721A() */\n      jump\t// in\n    tag_133:\n        /* \"erc721a/contracts/ERC721A.sol\":22612:22628  isApprovedForAll */\n      tag_95\n        /* \"erc721a/contracts/ERC721A.sol\":22612:22655  isApprovedForAll(from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_132:\n        /* \"erc721a/contracts/ERC721A.sol\":22607:22699  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n      tag_134\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22664:22699  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0x59c896be00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":22607:22699  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n    tag_134:\n        /* \"erc721a/contracts/ERC721A.sol\":22526:22699  if (!_isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()))... */\n    tag_131:\n        /* \"erc721a/contracts/ERC721A.sol\":22728:22729  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":22714:22730  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":22714:22716  to */\n      dup6\n        /* \"erc721a/contracts/ERC721A.sol\":22714:22730  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":22710:22762  if (to == address(0)) revert TransferToZeroAddress() */\n      iszero\n      tag_135\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22739:22762  TransferToZeroAddress() */\n      mload(0x40)\n      0xea553b3400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":22710:22762  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_135:\n        /* \"erc721a/contracts/ERC721A.sol\":22773:22816  _beforeTokenTransfers(from, to, tokenId, 1) */\n      tag_136\n        /* \"erc721a/contracts/ERC721A.sol\":22795:22799  from */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":22801:22803  to */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":22805:22812  tokenId */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":22814:22815  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":22773:22794  _beforeTokenTransfers */\n      tag_137\n        /* \"erc721a/contracts/ERC721A.sol\":22773:22816  _beforeTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_136:\n        /* \"erc721a/contracts/ERC721A.sol\":22905:22920  approvedAddress */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":22902:23059  if approvedAddress {... */\n      iszero\n      tag_138\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":23043:23044  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":23022:23041  approvedAddressSlot */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":23015:23045  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":22902:23059  if approvedAddress {... */\n    tag_138:\n        /* \"erc721a/contracts/ERC721A.sol\":23429:23447  _packedAddressData */\n      0x05\n        /* \"erc721a/contracts/ERC721A.sol\":23429:23453  _packedAddressData[from] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":23448:23452  from */\n      dup8\n        /* \"erc721a/contracts/ERC721A.sol\":23429:23453  _packedAddressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":23427:23453  --_packedAddressData[from] */\n      dup2\n      sload\n      0x01\n      swap1\n      sub\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":23497:23515  _packedAddressData */\n      0x05\n        /* \"erc721a/contracts/ERC721A.sol\":23497:23519  _packedAddressData[to] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":23516:23518  to */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":23497:23519  _packedAddressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":23495:23519  ++_packedAddressData[to] */\n      dup2\n      sload\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":23812:23954  _packOwnershipData(... */\n      tag_139\n        /* \"erc721a/contracts/ERC721A.sol\":23848:23850  to */\n      dup6\n        /* \"erc721a/contracts/ERC721A.sol\":23895:23940  _nextExtraData(from, to, prevOwnershipPacked) */\n      tag_140\n        /* \"erc721a/contracts/ERC721A.sol\":23910:23914  from */\n      dup9\n        /* \"erc721a/contracts/ERC721A.sol\":23916:23918  to */\n      dup9\n        /* \"erc721a/contracts/ERC721A.sol\":23920:23939  prevOwnershipPacked */\n      dup8\n        /* \"erc721a/contracts/ERC721A.sol\":23895:23909  _nextExtraData */\n      tag_141\n        /* \"erc721a/contracts/ERC721A.sol\":23895:23940  _nextExtraData(from, to, prevOwnershipPacked) */\n      jump\t// in\n    tag_140:\n        /* \"erc721a/contracts/ERC721A.sol\":2046:2054  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"erc721a/contracts/ERC721A.sol\":23868:23940  BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked) */\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":23812:23830  _packOwnershipData */\n      tag_142\n        /* \"erc721a/contracts/ERC721A.sol\":23812:23954  _packOwnershipData(... */\n      jump\t// in\n    tag_139:\n        /* \"erc721a/contracts/ERC721A.sol\":23783:23800  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":23783:23809  _packedOwnerships[tokenId] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":23801:23808  tokenId */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":23783:23809  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":23783:23954  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":24121:24122  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":2046:2054  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"erc721a/contracts/ERC721A.sol\":24071:24090  prevOwnershipPacked */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":24071:24117  prevOwnershipPacked & BITMASK_NEXT_INITIALIZED */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":24071:24122  prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0 */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":24067:24683  if (prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0) {... */\n      iszero\n      tag_143\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":24142:24161  uint256 nextTokenId */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":24174:24175  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":24164:24171  tokenId */\n      dup6\n        /* \"erc721a/contracts/ERC721A.sol\":24164:24175  tokenId + 1 */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":24142:24175  uint256 nextTokenId = tokenId + 1 */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":24329:24330  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":24295:24312  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":24295:24325  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":24313:24324  nextTokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":24295:24325  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":24295:24330  _packedOwnerships[nextTokenId] == 0 */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":24291:24669  if (_packedOwnerships[nextTokenId] == 0) {... */\n      iszero\n      tag_144\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":24431:24444  _currentIndex */\n      sload(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":24416:24427  nextTokenId */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":24416:24444  nextTokenId != _currentIndex */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":24412:24651  if (nextTokenId != _currentIndex) {... */\n      tag_145\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":24609:24628  prevOwnershipPacked */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":24576:24593  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":24576:24606  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":24594:24605  nextTokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":24576:24606  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":24576:24628  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":24412:24651  if (nextTokenId != _currentIndex) {... */\n    tag_145:\n        /* \"erc721a/contracts/ERC721A.sol\":24291:24669  if (_packedOwnerships[nextTokenId] == 0) {... */\n    tag_144:\n        /* \"erc721a/contracts/ERC721A.sol\":24124:24683  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":24067:24683  if (prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_143:\n        /* \"erc721a/contracts/ERC721A.sol\":24727:24734  tokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":24723:24725  to */\n      dup6\n        /* \"erc721a/contracts/ERC721A.sol\":24708:24735  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":24717:24721  from */\n      dup8\n        /* \"erc721a/contracts/ERC721A.sol\":24708:24735  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"erc721a/contracts/ERC721A.sol\":24745:24787  _afterTokenTransfers(from, to, tokenId, 1) */\n      tag_146\n        /* \"erc721a/contracts/ERC721A.sol\":24766:24770  from */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":24772:24774  to */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":24776:24783  tokenId */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":24785:24786  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":24745:24765  _afterTokenTransfers */\n      tag_147\n        /* \"erc721a/contracts/ERC721A.sol\":24745:24787  _afterTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_146:\n        /* \"erc721a/contracts/ERC721A.sol\":22174:24794  {... */\n      pop\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":22055:24794  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":13912:14091  function safeTransferFrom(... */\n    tag_57:\n        /* \"erc721a/contracts/ERC721A.sol\":14045:14084  safeTransferFrom(from, to, tokenId, '') */\n      tag_149\n        /* \"erc721a/contracts/ERC721A.sol\":14062:14066  from */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":14068:14070  to */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":14072:14079  tokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":14045:14084  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":14045:14061  safeTransferFrom */\n      tag_85\n        /* \"erc721a/contracts/ERC721A.sol\":14045:14084  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_149:\n        /* \"erc721a/contracts/ERC721A.sol\":13912:14091  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":10957:11099  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_61:\n        /* \"erc721a/contracts/ERC721A.sol\":11021:11028  address */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":11063:11090  _packedOwnershipOf(tokenId) */\n      tag_151\n        /* \"erc721a/contracts/ERC721A.sol\":11082:11089  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":11063:11081  _packedOwnershipOf */\n      tag_124\n        /* \"erc721a/contracts/ERC721A.sol\":11063:11090  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_151:\n        /* \"erc721a/contracts/ERC721A.sol\":11040:11092  return address(uint160(_packedOwnershipOf(tokenId))) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":10957:11099  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":6319:6540  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_67:\n        /* \"erc721a/contracts/ERC721A.sol\":6383:6390  uint256 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":6423:6424  0 */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":6406:6425  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":6406:6411  owner */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":6406:6425  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":6402:6462  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      iszero\n      tag_153\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":6434:6462  BalanceQueryForZeroAddress() */\n      mload(0x40)\n      0x8f4eb60400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":6402:6462  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_153:\n        /* \"erc721a/contracts/ERC721A.sol\":1022:1035  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"erc721a/contracts/ERC721A.sol\":6479:6497  _packedAddressData */\n      0x05\n        /* \"erc721a/contracts/ERC721A.sol\":6479:6504  _packedAddressData[owner] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":6498:6503  owner */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":6479:6504  _packedAddressData[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":6479:6533  _packedAddressData[owner] & BITMASK_ADDRESS_DATA_ENTRY */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":6472:6533  return _packedAddressData[owner] & BITMASK_ADDRESS_DATA_ENTRY */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":6319:6540  function balanceOf(address owner) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":11323:11425  function symbol() public view virtual override returns (string memory) {... */\n    tag_71:\n        /* \"erc721a/contracts/ERC721A.sol\":11379:11392  string memory */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":11411:11418  _symbol */\n      0x03\n        /* \"erc721a/contracts/ERC721A.sol\":11404:11418  return _symbol */\n      dup1\n      sload\n      tag_155\n      swap1\n      tag_102\n      jump\t// in\n    tag_155:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_156\n      swap1\n      tag_102\n      jump\t// in\n    tag_156:\n      dup1\n      iszero\n      tag_157\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_158\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_157)\n    tag_158:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_159:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_159\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_157:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":11323:11425  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Day50_ERC721A.sol\":174:340  function mint(uint256 quantity) external payable {... */\n    tag_75:\n        /* \"Day50_ERC721A.sol\":304:335  _safeMint(msg.sender, quantity) */\n      tag_161\n        /* \"Day50_ERC721A.sol\":314:324  msg.sender */\n      caller\n        /* \"Day50_ERC721A.sol\":326:334  quantity */\n      dup3\n        /* \"Day50_ERC721A.sol\":304:313  _safeMint */\n      tag_162\n        /* \"Day50_ERC721A.sol\":304:335  _safeMint(msg.sender, quantity) */\n      jump\t// in\n    tag_161:\n        /* \"Day50_ERC721A.sol\":174:340  function mint(uint256 quantity) external payable {... */\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":13315:13618  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_80:\n        /* \"erc721a/contracts/ERC721A.sol\":13425:13444  _msgSenderERC721A() */\n      tag_164\n        /* \"erc721a/contracts/ERC721A.sol\":13425:13442  _msgSenderERC721A */\n      tag_114\n        /* \"erc721a/contracts/ERC721A.sol\":13425:13444  _msgSenderERC721A() */\n      jump\t// in\n    tag_164:\n        /* \"erc721a/contracts/ERC721A.sol\":13413:13444  operator == _msgSenderERC721A() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":13413:13421  operator */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":13413:13444  operator == _msgSenderERC721A() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":13409:13470  if (operator == _msgSenderERC721A()) revert ApproveToCaller() */\n      iszero\n      tag_165\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":13453:13470  ApproveToCaller() */\n      mload(0x40)\n      0xb06307db00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":13409:13470  if (operator == _msgSenderERC721A()) revert ApproveToCaller() */\n    tag_165:\n        /* \"erc721a/contracts/ERC721A.sol\":13533:13541  approved */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13499  _operatorApprovals */\n      0x07\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13520  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13500:13519  _msgSenderERC721A() */\n      tag_166\n        /* \"erc721a/contracts/ERC721A.sol\":13500:13517  _msgSenderERC721A */\n      tag_114\n        /* \"erc721a/contracts/ERC721A.sol\":13500:13519  _msgSenderERC721A() */\n      jump\t// in\n    tag_166:\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13520  _operatorApprovals[_msgSenderERC721A()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13530  _operatorApprovals[_msgSenderERC721A()][operator] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13521:13529  operator */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13530  _operatorApprovals[_msgSenderERC721A()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13541  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":13592:13600  operator */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":13556:13611  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":13571:13590  _msgSenderERC721A() */\n      tag_167\n        /* \"erc721a/contracts/ERC721A.sol\":13571:13588  _msgSenderERC721A */\n      tag_114\n        /* \"erc721a/contracts/ERC721A.sol\":13571:13590  _msgSenderERC721A() */\n      jump\t// in\n    tag_167:\n        /* \"erc721a/contracts/ERC721A.sol\":13556:13611  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"erc721a/contracts/ERC721A.sol\":13602:13610  approved */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":13556:13611  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      tag_168\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"erc721a/contracts/ERC721A.sol\":13315:13618  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":14157:14545  function safeTransferFrom(... */\n    tag_85:\n        /* \"erc721a/contracts/ERC721A.sol\":14318:14349  transferFrom(from, to, tokenId) */\n      tag_170\n        /* \"erc721a/contracts/ERC721A.sol\":14331:14335  from */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14337:14339  to */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14341:14348  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14318:14330  transferFrom */\n      tag_53\n        /* \"erc721a/contracts/ERC721A.sol\":14318:14349  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_170:\n        /* \"erc721a/contracts/ERC721A.sol\":14381:14382  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":14363:14365  to */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":14363:14377  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"erc721a/contracts/ERC721A.sol\":14363:14382  to.code.length != 0 */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":14359:14539  if (to.code.length != 0)... */\n      tag_171\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":14401:14457  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_172\n        /* \"erc721a/contracts/ERC721A.sol\":14432:14436  from */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14438:14440  to */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14442:14449  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14451:14456  _data */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14401:14431  _checkContractOnERC721Received */\n      tag_173\n        /* \"erc721a/contracts/ERC721A.sol\":14401:14457  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_172:\n        /* \"erc721a/contracts/ERC721A.sol\":14396:14539  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_174\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":14484:14524  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":14396:14539  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_174:\n        /* \"erc721a/contracts/ERC721A.sol\":14359:14539  if (to.code.length != 0)... */\n    tag_171:\n        /* \"erc721a/contracts/ERC721A.sol\":14157:14545  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":11491:11804  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_89:\n        /* \"erc721a/contracts/ERC721A.sol\":11564:11577  string memory */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":11594:11610  _exists(tokenId) */\n      tag_176\n        /* \"erc721a/contracts/ERC721A.sol\":11602:11609  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":11594:11601  _exists */\n      tag_109\n        /* \"erc721a/contracts/ERC721A.sol\":11594:11610  _exists(tokenId) */\n      jump\t// in\n    tag_176:\n        /* \"erc721a/contracts/ERC721A.sol\":11589:11648  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n      tag_177\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":11619:11648  URIQueryForNonexistentToken() */\n      mload(0x40)\n      0xa14c4b5000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":11589:11648  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n    tag_177:\n        /* \"erc721a/contracts/ERC721A.sol\":11659:11680  string memory baseURI */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":11683:11693  _baseURI() */\n      tag_178\n        /* \"erc721a/contracts/ERC721A.sol\":11683:11691  _baseURI */\n      tag_179\n        /* \"erc721a/contracts/ERC721A.sol\":11683:11693  _baseURI() */\n      jump\t// in\n    tag_178:\n        /* \"erc721a/contracts/ERC721A.sol\":11659:11693  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":11735:11736  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":11716:11723  baseURI */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":11710:11731  bytes(baseURI).length */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":11710:11736  bytes(baseURI).length != 0 */\n      eq\n      iszero\n        /* \"erc721a/contracts/ERC721A.sol\":11710:11797  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      tag_180\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_181)\n    tag_180:\n        /* \"erc721a/contracts/ERC721A.sol\":11763:11770  baseURI */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":11772:11790  _toString(tokenId) */\n      tag_182\n        /* \"erc721a/contracts/ERC721A.sol\":11782:11789  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":11772:11781  _toString */\n      tag_183\n        /* \"erc721a/contracts/ERC721A.sol\":11772:11790  _toString(tokenId) */\n      jump\t// in\n    tag_182:\n        /* \"erc721a/contracts/ERC721A.sol\":11746:11791  abi.encodePacked(baseURI, _toString(tokenId)) */\n      add(0x20, mload(0x40))\n      tag_184\n      swap3\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":11710:11797  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n    tag_181:\n        /* \"erc721a/contracts/ERC721A.sol\":11703:11797  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      swap2\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":11491:11804  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":13684:13846  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_95:\n        /* \"erc721a/contracts/ERC721A.sol\":13781:13785  bool */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13822  _operatorApprovals */\n      0x07\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13829  _operatorApprovals[owner] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13823:13828  owner */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13829  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13839  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13830:13838  operator */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13839  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":13797:13839  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":13684:13846  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":14791:15059  function _exists(uint256 tokenId) internal view returns (bool) {... */\n    tag_109:\n        /* \"erc721a/contracts/ERC721A.sol\":14848:14852  bool */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":14902:14909  tokenId */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":14883:14898  _startTokenId() */\n      tag_188\n        /* \"erc721a/contracts/ERC721A.sol\":14883:14896  _startTokenId */\n      tag_121\n        /* \"erc721a/contracts/ERC721A.sol\":14883:14898  _startTokenId() */\n      jump\t// in\n    tag_188:\n        /* \"erc721a/contracts/ERC721A.sol\":14883:14909  _startTokenId() <= tokenId */\n      gt\n      iszero\n        /* \"erc721a/contracts/ERC721A.sol\":14883:14948  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_189\n      jumpi\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":14935:14948  _currentIndex */\n      sload(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":14925:14932  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":14925:14948  tokenId < _currentIndex */\n      lt\n        /* \"erc721a/contracts/ERC721A.sol\":14883:14948  _startTokenId() <= tokenId &&... */\n    tag_189:\n        /* \"erc721a/contracts/ERC721A.sol\":14883:15033  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_190\n      jumpi\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":15032:15033  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":1774:1782  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15002  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15011  _packedOwnerships[tokenId] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":15003:15010  tokenId */\n      dup6\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15011  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15028  _packedOwnerships[tokenId] & BITMASK_BURNED */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15033  _packedOwnerships[tokenId] & BITMASK_BURNED == 0 */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":14883:15033  _startTokenId() <= tokenId &&... */\n    tag_190:\n        /* \"erc721a/contracts/ERC721A.sol\":14864:15033  return... */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":14791:15059  function _exists(uint256 tokenId) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":32874:32977  function _msgSenderERC721A() internal view virtual returns (address) {... */\n    tag_114:\n        /* \"erc721a/contracts/ERC721A.sol\":32934:32941  address */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n        /* \"erc721a/contracts/ERC721A.sol\":32953:32970  return msg.sender */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":32874:32977  function _msgSenderERC721A() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":4276:4366  function _startTokenId() internal view virtual returns (uint256) {... */\n    tag_121:\n        /* \"erc721a/contracts/ERC721A.sol\":4332:4339  uint256 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":4276:4366  function _startTokenId() internal view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":7949:9054  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {... */\n    tag_124:\n        /* \"erc721a/contracts/ERC721A.sol\":8016:8023  uint256 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":8035:8047  uint256 curr */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":8050:8057  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":8035:8057  uint256 curr = tokenId */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":8115:8119  curr */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":8096:8111  _startTokenId() */\n      tag_194\n        /* \"erc721a/contracts/ERC721A.sol\":8096:8109  _startTokenId */\n      tag_121\n        /* \"erc721a/contracts/ERC721A.sol\":8096:8111  _startTokenId() */\n      jump\t// in\n    tag_194:\n        /* \"erc721a/contracts/ERC721A.sol\":8096:8119  _startTokenId() <= curr */\n      gt\n        /* \"erc721a/contracts/ERC721A.sol\":8092:8990  if (_startTokenId() <= curr)... */\n      tag_195\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":8148:8161  _currentIndex */\n      sload(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":8141:8145  curr */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":8141:8161  curr < _currentIndex */\n      lt\n        /* \"erc721a/contracts/ERC721A.sol\":8137:8990  if (curr < _currentIndex) {... */\n      iszero\n      tag_196\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":8185:8199  uint256 packed */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":8202:8219  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":8202:8225  _packedOwnerships[curr] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":8220:8224  curr */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":8202:8225  _packedOwnerships[curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":8185:8225  uint256 packed = _packedOwnerships[curr] */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":8316:8317  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":1774:1782  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"erc721a/contracts/ERC721A.sol\":8289:8295  packed */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":8289:8312  packed & BITMASK_BURNED */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":8289:8317  packed & BITMASK_BURNED == 0 */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":8285:8972  if (packed & BITMASK_BURNED == 0) {... */\n      iszero\n      tag_197\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":8800:8911  while (packed == 0) {... */\n    tag_198:\n        /* \"erc721a/contracts/ERC721A.sol\":8817:8818  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":8807:8813  packed */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":8807:8818  packed == 0 */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":8800:8911  while (packed == 0) {... */\n      iszero\n      tag_199\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":8859:8876  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":8859:8884  _packedOwnerships[--curr] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":8877:8883  --curr */\n      dup4\n      0x01\n      swap1\n      sub\n      swap4\n      pop\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":8859:8884  _packedOwnerships[--curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":8850:8884  packed = _packedOwnerships[--curr] */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":8800:8911  while (packed == 0) {... */\n      jump(tag_198)\n    tag_199:\n        /* \"erc721a/contracts/ERC721A.sol\":8943:8949  packed */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":8936:8949  return packed */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_193)\n        /* \"erc721a/contracts/ERC721A.sol\":8285:8972  if (packed & BITMASK_BURNED == 0) {... */\n    tag_197:\n        /* \"erc721a/contracts/ERC721A.sol\":8163:8990  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":8137:8990  if (curr < _currentIndex) {... */\n    tag_196:\n        /* \"erc721a/contracts/ERC721A.sol\":8092:8990  if (_startTokenId() <= curr)... */\n    tag_195:\n        /* \"erc721a/contracts/ERC721A.sol\":9016:9047  OwnerQueryForNonexistentToken() */\n      mload(0x40)\n      0xdf2d9b4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":7949:9054  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {... */\n    tag_193:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":20436:21073  function _getApprovedAddress(uint256 tokenId)... */\n    tag_127:\n        /* \"erc721a/contracts/ERC721A.sol\":20528:20555  uint256 approvedAddressSlot */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":20557:20580  address approvedAddress */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":20596:20649  mapping(uint256 => address) storage tokenApprovalsPtr */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":20652:20667  _tokenApprovals */\n      0x06\n        /* \"erc721a/contracts/ERC721A.sol\":20596:20667  mapping(uint256 => address) storage tokenApprovalsPtr = _tokenApprovals */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":20834:20841  tokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":20828:20832  0x00 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":20821:20842  mstore(0x00, tokenId) */\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":20868:20890  tokenApprovalsPtr.slot */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":20862:20866  0x20 */\n      0x20\n        /* \"erc721a/contracts/ERC721A.sol\":20855:20891  mstore(0x20, tokenApprovalsPtr.slot) */\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":20943:20947  0x40 */\n      0x40\n        /* \"erc721a/contracts/ERC721A.sol\":20937:20941  0x00 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":20927:20948  keccak256(0x00, 0x40) */\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":20904:20948  approvedAddressSlot := keccak256(0x00, 0x40) */\n      swap3\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":21037:21056  approvedAddressSlot */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":21031:21057  sload(approvedAddressSlot) */\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":21012:21057  approvedAddress := sload(approvedAddressSlot) */\n      swap2\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":20774:21067  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":20436:21073  function _getApprovedAddress(uint256 tokenId)... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":21181:21813  function _isOwnerOrApproved(... */\n    tag_130:\n        /* \"erc721a/contracts/ERC721A.sol\":21319:21330  bool result */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":21478:21493  BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"erc721a/contracts/ERC721A.sol\":21472:21476  from */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":21468:21494  and(from, BITMASK_ADDRESS) */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":21460:21494  from := and(from, BITMASK_ADDRESS) */\n      swap3\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":21635:21650  BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"erc721a/contracts/ERC721A.sol\":21624:21633  msgSender */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":21620:21651  and(msgSender, BITMASK_ADDRESS) */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":21607:21651  msgSender := and(msgSender, BITMASK_ADDRESS) */\n      swap2\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":21780:21795  approvedAddress */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":21769:21778  msgSender */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":21766:21796  eq(msgSender, approvedAddress) */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":21759:21763  from */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":21748:21757  msgSender */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":21745:21764  eq(msgSender, from) */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":21742:21797  or(eq(msgSender, from), eq(msgSender, approvedAddress)) */\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":21732:21797  result := or(eq(msgSender, from), eq(msgSender, approvedAddress)) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":21181:21813  function _isOwnerOrApproved(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":31742:31896  function _beforeTokenTransfers(... */\n    tag_137:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":30099:30401  function _nextExtraData(... */\n    tag_141:\n        /* \"erc721a/contracts/ERC721A.sol\":30230:30237  uint256 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":30249:30265  uint24 extraData */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":2166:2169  232 */\n      0xe8\n        /* \"erc721a/contracts/ERC721A.sol\":30275:30294  prevOwnershipPacked */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":30275:30315  prevOwnershipPacked >> BITPOS_EXTRA_DATA */\n      swap1\n      shr\n        /* \"erc721a/contracts/ERC721A.sol\":30249:30316  uint24 extraData = uint24(prevOwnershipPacked >> BITPOS_EXTRA_DATA) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":2166:2169  232 */\n      0xe8\n        /* \"erc721a/contracts/ERC721A.sol\":30341:30372  _extraData(from, to, extraData) */\n      tag_204\n        /* \"erc721a/contracts/ERC721A.sol\":30352:30356  from */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":30358:30360  to */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":30362:30371  extraData */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":30341:30351  _extraData */\n      tag_205\n        /* \"erc721a/contracts/ERC721A.sol\":30341:30372  _extraData(from, to, extraData) */\n      jump\t// in\n    tag_204:\n        /* \"erc721a/contracts/ERC721A.sol\":30333:30373  uint256(_extraData(from, to, extraData)) */\n      0xffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":30333:30394  uint256(_extraData(from, to, extraData)) << BITPOS_EXTRA_DATA */\n      swap1\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":30326:30394  return uint256(_extraData(from, to, extraData)) << BITPOS_EXTRA_DATA */\n      swap2\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":30099:30401  function _nextExtraData(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":10460:10900  function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {... */\n    tag_142:\n        /* \"erc721a/contracts/ERC721A.sol\":10540:10554  uint256 result */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":10705:10720  BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"erc721a/contracts/ERC721A.sol\":10698:10703  owner */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":10694:10721  and(owner, BITMASK_ADDRESS) */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":10685:10721  owner := and(owner, BITMASK_ADDRESS) */\n      swap3\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":10877:10882  flags */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":10863:10874  timestamp() */\n      timestamp\n        /* \"erc721a/contracts/ERC721A.sol\":10839:10861  BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"erc721a/contracts/ERC721A.sol\":10835:10875  shl(BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":10832:10883  or(shl(BITPOS_START_TIMESTAMP, timestamp()), flags) */\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":10825:10830  owner */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":10822:10884  or(owner, or(shl(BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":10812:10884  result := or(owner, or(shl(BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":10460:10900  function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":32537:32690  function _afterTokenTransfers(... */\n    tag_147:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":15138:15240  function _safeMint(address to, uint256 quantity) internal {... */\n    tag_162:\n        /* \"erc721a/contracts/ERC721A.sol\":15206:15233  _safeMint(to, quantity, '') */\n      tag_209\n        /* \"erc721a/contracts/ERC721A.sol\":15216:15218  to */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":15220:15228  quantity */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":15206:15233  _safeMint(to, quantity, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":15206:15215  _safeMint */\n      tag_210\n        /* \"erc721a/contracts/ERC721A.sol\":15206:15233  _safeMint(to, quantity, '') */\n      jump\t// in\n    tag_209:\n        /* \"erc721a/contracts/ERC721A.sol\":15138:15240  function _safeMint(address to, uint256 quantity) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":28649:29346  function _checkContractOnERC721Received(... */\n    tag_173:\n        /* \"erc721a/contracts/ERC721A.sol\":28807:28811  bool */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":28852:28854  to */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":28827:28872  ERC721A__IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"erc721a/contracts/ERC721A.sol\":28873:28892  _msgSenderERC721A() */\n      tag_212\n        /* \"erc721a/contracts/ERC721A.sol\":28873:28890  _msgSenderERC721A */\n      tag_114\n        /* \"erc721a/contracts/ERC721A.sol\":28873:28892  _msgSenderERC721A() */\n      jump\t// in\n    tag_212:\n        /* \"erc721a/contracts/ERC721A.sol\":28894:28898  from */\n      dup8\n        /* \"erc721a/contracts/ERC721A.sol\":28900:28907  tokenId */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":28909:28914  _data */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":28827:28915  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_213:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_215\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_215:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_216\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_217\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      0x01\n    tag_216:\n        /* \"erc721a/contracts/ERC721A.sol\":28823:29340  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_219\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_224\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_223)\n    tag_224:\n      0x60\n      swap2\n      pop\n    tag_223:\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":29122:29123  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":29105:29111  reason */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":29105:29118  reason.length */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":29105:29123  reason.length == 0 */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":29101:29330  if (reason.length == 0) {... */\n      iszero\n      tag_225\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":29150:29190  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":29101:29330  if (reason.length == 0) {... */\n    tag_225:\n        /* \"erc721a/contracts/ERC721A.sol\":29290:29296  reason */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":29284:29297  mload(reason) */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":29275:29281  reason */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":29271:29273  32 */\n      0x20\n        /* \"erc721a/contracts/ERC721A.sol\":29267:29282  add(32, reason) */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":29260:29298  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":28823:29340  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_219:\n        /* \"erc721a/contracts/ERC721A.sol\":28993:29047  ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"erc721a/contracts/ERC721A.sol\":28983:29047  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":28983:28989  retval */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":28983:29047  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":28976:29047  return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      swap2\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":28649:29346  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":12049:12141  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_179:\n        /* \"erc721a/contracts/ERC721A.sol\":12100:12113  string memory */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":12125:12134  return '' */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":12049:12141  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":33078:34998  function _toString(uint256 value) internal pure returns (string memory ptr) {... */\n    tag_183:\n        /* \"erc721a/contracts/ERC721A.sol\":33135:33152  string memory ptr */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":33548:33551  128 */\n      0x80\n        /* \"erc721a/contracts/ERC721A.sol\":33541:33545  0x40 */\n      0x40\n        /* \"erc721a/contracts/ERC721A.sol\":33535:33546  mload(0x40) */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":33531:33552  add(mload(0x40), 128) */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":33524:33552  ptr := add(mload(0x40), 128) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":33637:33640  ptr */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":33631:33635  0x40 */\n      0x40\n        /* \"erc721a/contracts/ERC721A.sol\":33624:33641  mstore(0x40, ptr) */\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":33740:33743  ptr */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":34188:34193  value */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":34316:34317  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":34311:34314  ptr */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":34307:34318  sub(ptr, 1) */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":34300:34318  ptr := sub(ptr, 1) */\n      swap3\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":34451:34453  10 */\n      0x0a\n        /* \"erc721a/contracts/ERC721A.sol\":34445:34449  temp */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":34441:34454  mod(temp, 10) */\n      mod\n        /* \"erc721a/contracts/ERC721A.sol\":34437:34439  48 */\n      0x30\n        /* \"erc721a/contracts/ERC721A.sol\":34433:34455  add(48, mod(temp, 10)) */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":34428:34431  ptr */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":34420:34456  mstore8(ptr, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"erc721a/contracts/ERC721A.sol\":34491:34493  10 */\n      0x0a\n        /* \"erc721a/contracts/ERC721A.sol\":34485:34489  temp */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":34481:34494  div(temp, 10) */\n      div\n        /* \"erc721a/contracts/ERC721A.sol\":34473:34494  temp := div(temp, 10) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":34082:34764  for {... */\n    tag_230:\n        /* \"erc721a/contracts/ERC721A.sol\":34509:34513  temp */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":34082:34764  for {... */\n      iszero\n      tag_232\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":34695:34696  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":34690:34693  ptr */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":34686:34697  sub(ptr, 1) */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":34679:34697  ptr := sub(ptr, 1) */\n      swap3\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":34745:34747  10 */\n      0x0a\n        /* \"erc721a/contracts/ERC721A.sol\":34739:34743  temp */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":34735:34748  mod(temp, 10) */\n      mod\n        /* \"erc721a/contracts/ERC721A.sol\":34731:34733  48 */\n      0x30\n        /* \"erc721a/contracts/ERC721A.sol\":34727:34749  add(48, mod(temp, 10)) */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":34722:34725  ptr */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":34714:34750  mstore8(ptr, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"erc721a/contracts/ERC721A.sol\":34602:34604  10 */\n      0x0a\n        /* \"erc721a/contracts/ERC721A.sol\":34596:34600  temp */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":34592:34605  div(temp, 10) */\n      div\n        /* \"erc721a/contracts/ERC721A.sol\":34584:34605  temp := div(temp, 10) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":34082:34764  for {... */\n      jump(tag_230)\n    tag_232:\n        /* \"erc721a/contracts/ERC721A.sol\":34086:34508  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":34801:34804  ptr */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":34796:34799  end */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":34792:34805  sub(end, ptr) */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":34914:34916  32 */\n      0x20\n        /* \"erc721a/contracts/ERC721A.sol\":34909:34912  ptr */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":34905:34917  sub(ptr, 32) */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":34898:34917  ptr := sub(ptr, 32) */\n      swap3\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":34975:34981  length */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":34970:34973  ptr */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":34963:34982  mstore(ptr, length) */\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":33173:34992  {... */\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":33078:34998  function _toString(uint256 value) internal pure returns (string memory ptr) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":30961:31104  function _extraData(... */\n    tag_205:\n        /* \"erc721a/contracts/ERC721A.sol\":31094:31100  uint24 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":30961:31104  function _extraData(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":15641:16302  function _safeMint(... */\n    tag_210:\n        /* \"erc721a/contracts/ERC721A.sol\":15759:15778  _mint(to, quantity) */\n      tag_235\n        /* \"erc721a/contracts/ERC721A.sol\":15765:15767  to */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":15769:15777  quantity */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":15759:15764  _mint */\n      tag_236\n        /* \"erc721a/contracts/ERC721A.sol\":15759:15778  _mint(to, quantity) */\n      jump\t// in\n    tag_235:\n        /* \"erc721a/contracts/ERC721A.sol\":15835:15836  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":15817:15819  to */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":15817:15831  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"erc721a/contracts/ERC721A.sol\":15817:15836  to.code.length != 0 */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":15813:16286  if (to.code.length != 0) {... */\n      tag_237\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":15856:15867  uint256 end */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":15870:15883  _currentIndex */\n      dup1\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":15856:15883  uint256 end = _currentIndex */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":15901:15914  uint256 index */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":15923:15931  quantity */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":15917:15920  end */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":15917:15931  end - quantity */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":15901:15931  uint256 index = end - quantity */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":15949:16178  do {... */\n    tag_238:\n        /* \"erc721a/contracts/ERC721A.sol\":15979:16041  _checkContractOnERC721Received(address(0), to, index++, _data) */\n      tag_241\n        /* \"erc721a/contracts/ERC721A.sol\":16018:16019  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":16022:16024  to */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":16026:16033  index++ */\n      dup4\n      dup1\n      0x01\n      add\n      swap5\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":16035:16040  _data */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":15979:16009  _checkContractOnERC721Received */\n      tag_173\n        /* \"erc721a/contracts/ERC721A.sol\":15979:16041  _checkContractOnERC721Received(address(0), to, index++, _data) */\n      jump\t// in\n    tag_241:\n        /* \"erc721a/contracts/ERC721A.sol\":15974:16139  if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {... */\n      tag_242\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":16076:16116  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":15974:16139  if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {... */\n    tag_242:\n        /* \"erc721a/contracts/ERC721A.sol\":16173:16176  end */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":16165:16170  index */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":16165:16176  index < end */\n      lt\n        /* \"erc721a/contracts/ERC721A.sol\":15949:16178  do {... */\n      tag_238\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":16258:16261  end */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":16241:16254  _currentIndex */\n      sload(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":16241:16261  _currentIndex != end */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":16237:16271  if (_currentIndex != end) revert() */\n      tag_243\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":16263:16271  revert() */\n      0x00\n      dup1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":16237:16271  if (_currentIndex != end) revert() */\n    tag_243:\n        /* \"erc721a/contracts/ERC721A.sol\":15838:16286  {... */\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":15813:16286  if (to.code.length != 0) {... */\n    tag_237:\n        /* \"erc721a/contracts/ERC721A.sol\":15641:16302  function _safeMint(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":16563:18055  function _mint(address to, uint256 quantity) internal {... */\n    tag_236:\n        /* \"erc721a/contracts/ERC721A.sol\":16627:16647  uint256 startTokenId */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":16650:16663  _currentIndex */\n      dup1\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":16627:16663  uint256 startTokenId = _currentIndex */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":16691:16692  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":16677:16693  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":16677:16679  to */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":16677:16693  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":16673:16721  if (to == address(0)) revert MintToZeroAddress() */\n      iszero\n      tag_245\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":16702:16721  MintToZeroAddress() */\n      mload(0x40)\n      0x2e07630000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":16673:16721  if (to == address(0)) revert MintToZeroAddress() */\n    tag_245:\n        /* \"erc721a/contracts/ERC721A.sol\":16747:16748  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":16735:16743  quantity */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":16735:16748  quantity == 0 */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":16731:16775  if (quantity == 0) revert MintZeroQuantity() */\n      iszero\n      tag_246\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":16757:16775  MintZeroQuantity() */\n      mload(0x40)\n      0xb562e8dd00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":16731:16775  if (quantity == 0) revert MintZeroQuantity() */\n    tag_246:\n        /* \"erc721a/contracts/ERC721A.sol\":16786:16847  _beforeTokenTransfers(address(0), to, startTokenId, quantity) */\n      tag_247\n        /* \"erc721a/contracts/ERC721A.sol\":16816:16817  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":16820:16822  to */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":16824:16836  startTokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":16838:16846  quantity */\n      dup6\n        /* \"erc721a/contracts/ERC721A.sol\":16786:16807  _beforeTokenTransfers */\n      tag_137\n        /* \"erc721a/contracts/ERC721A.sol\":16786:16847  _beforeTokenTransfers(address(0), to, startTokenId, quantity) */\n      jump\t// in\n    tag_247:\n        /* \"erc721a/contracts/ERC721A.sol\":17318:17319  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":1156:1158  64 */\n      0x40\n        /* \"erc721a/contracts/ERC721A.sol\":17289:17290  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":17289:17314  1 << BITPOS_NUMBER_MINTED */\n      swap1\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":17288:17319  (1 << BITPOS_NUMBER_MINTED) | 1 */\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":17276:17284  quantity */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":17276:17320  quantity * ((1 << BITPOS_NUMBER_MINTED) | 1) */\n      mul\n        /* \"erc721a/contracts/ERC721A.sol\":17250:17268  _packedAddressData */\n      0x05\n        /* \"erc721a/contracts/ERC721A.sol\":17250:17272  _packedAddressData[to] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":17269:17271  to */\n      dup6\n        /* \"erc721a/contracts/ERC721A.sol\":17250:17272  _packedAddressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":17250:17320  _packedAddressData[to] += quantity * ((1 << BITPOS_NUMBER_MINTED) | 1) */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":17590:17726  _packOwnershipData(... */\n      tag_248\n        /* \"erc721a/contracts/ERC721A.sol\":17626:17628  to */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":17679:17712  _nextExtraData(address(0), to, 0) */\n      tag_249\n        /* \"erc721a/contracts/ERC721A.sol\":17702:17703  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":17706:17708  to */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":17710:17711  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":17679:17693  _nextExtraData */\n      tag_141\n        /* \"erc721a/contracts/ERC721A.sol\":17679:17712  _nextExtraData(address(0), to, 0) */\n      jump\t// in\n    tag_249:\n        /* \"erc721a/contracts/ERC721A.sol\":17646:17676  _nextInitializedFlag(quantity) */\n      tag_250\n        /* \"erc721a/contracts/ERC721A.sol\":17667:17675  quantity */\n      dup6\n        /* \"erc721a/contracts/ERC721A.sol\":17646:17666  _nextInitializedFlag */\n      tag_251\n        /* \"erc721a/contracts/ERC721A.sol\":17646:17676  _nextInitializedFlag(quantity) */\n      jump\t// in\n    tag_250:\n        /* \"erc721a/contracts/ERC721A.sol\":17646:17712  _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0) */\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":17590:17608  _packOwnershipData */\n      tag_142\n        /* \"erc721a/contracts/ERC721A.sol\":17590:17726  _packOwnershipData(... */\n      jump\t// in\n    tag_248:\n        /* \"erc721a/contracts/ERC721A.sol\":17556:17573  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":17556:17587  _packedOwnerships[startTokenId] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":17574:17586  startTokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":17556:17587  _packedOwnerships[startTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":17556:17726  _packedOwnerships[startTokenId] = _packOwnershipData(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":17741:17756  uint256 tokenId */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":17759:17771  startTokenId */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":17741:17771  uint256 tokenId = startTokenId */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":17785:17796  uint256 end */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":17814:17822  quantity */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":17799:17811  startTokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":17799:17822  startTokenId + quantity */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":17785:17822  uint256 end = startTokenId + quantity */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":17836:17935  do {... */\n    tag_252:\n        /* \"erc721a/contracts/ERC721A.sol\":17887:17896  tokenId++ */\n      dup2\n      dup1\n      0x01\n      add\n      swap3\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":17883:17885  to */\n      dup6\n        /* \"erc721a/contracts/ERC721A.sol\":17862:17897  Transfer(address(0), to, tokenId++) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":17879:17880  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":17862:17897  Transfer(address(0), to, tokenId++) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"erc721a/contracts/ERC721A.sol\":17930:17933  end */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":17920:17927  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":17920:17933  tokenId < end */\n      lt\n        /* \"erc721a/contracts/ERC721A.sol\":17836:17935  do {... */\n      tag_252\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":17965:17968  end */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":17949:17962  _currentIndex */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":17949:17968  _currentIndex = end */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":17030:17979  unchecked {... */\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":17988:18048  _afterTokenTransfers(address(0), to, startTokenId, quantity) */\n      tag_255\n        /* \"erc721a/contracts/ERC721A.sol\":18017:18018  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":18021:18023  to */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":18025:18037  startTokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":18039:18047  quantity */\n      dup6\n        /* \"erc721a/contracts/ERC721A.sol\":17988:18008  _afterTokenTransfers */\n      tag_147\n        /* \"erc721a/contracts/ERC721A.sol\":17988:18048  _afterTokenTransfers(address(0), to, startTokenId, quantity) */\n      jump\t// in\n    tag_255:\n        /* \"erc721a/contracts/ERC721A.sol\":16617:18055  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":16563:18055  function _mint(address to, uint256 quantity) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":12238:12554  function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {... */\n    tag_251:\n        /* \"erc721a/contracts/ERC721A.sol\":12308:12322  uint256 result */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":12535:12536  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":12525:12533  quantity */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":12522:12537  eq(quantity, 1) */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":12497:12520  BITPOS_NEXT_INITIALIZED */\n      0xe1\n        /* \"erc721a/contracts/ERC721A.sol\":12493:12538  shl(BITPOS_NEXT_INITIALIZED, eq(quantity, 1)) */\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":12483:12538  result := shl(BITPOS_NEXT_INITIALIZED, eq(quantity, 1)) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":12238:12554  function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:417   */\n    tag_258:\n        /* \"#utility.yul\":84:89   */\n      0x00\n        /* \"#utility.yul\":109:174   */\n      tag_260\n        /* \"#utility.yul\":125:173   */\n      tag_261\n        /* \"#utility.yul\":166:172   */\n      dup5\n        /* \"#utility.yul\":125:173   */\n      tag_262\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":109:174   */\n      tag_263\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":100:174   */\n      swap1\n      pop\n        /* \"#utility.yul\":197:203   */\n      dup3\n        /* \"#utility.yul\":190:195   */\n      dup2\n        /* \"#utility.yul\":183:204   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x20\n        /* \"#utility.yul\":228:233   */\n      dup2\n        /* \"#utility.yul\":224:240   */\n      add\n        /* \"#utility.yul\":273:276   */\n      dup5\n        /* \"#utility.yul\":264:270   */\n      dup5\n        /* \"#utility.yul\":259:262   */\n      dup5\n        /* \"#utility.yul\":255:271   */\n      add\n        /* \"#utility.yul\":252:277   */\n      gt\n        /* \"#utility.yul\":249:361   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":280:359   */\n      tag_265\n      tag_266\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":249:361   */\n    tag_264:\n        /* \"#utility.yul\":370:411   */\n      tag_267\n        /* \"#utility.yul\":404:410   */\n      dup5\n        /* \"#utility.yul\":399:402   */\n      dup3\n        /* \"#utility.yul\":394:397   */\n      dup6\n        /* \"#utility.yul\":370:411   */\n      tag_268\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":90:417   */\n      pop\n        /* \"#utility.yul\":7:417   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":423:562   */\n    tag_269:\n        /* \"#utility.yul\":469:474   */\n      0x00\n        /* \"#utility.yul\":507:513   */\n      dup2\n        /* \"#utility.yul\":494:514   */\n      calldataload\n        /* \"#utility.yul\":485:514   */\n      swap1\n      pop\n        /* \"#utility.yul\":523:556   */\n      tag_271\n        /* \"#utility.yul\":550:555   */\n      dup2\n        /* \"#utility.yul\":523:556   */\n      tag_272\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":423:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:701   */\n    tag_273:\n        /* \"#utility.yul\":611:616   */\n      0x00\n        /* \"#utility.yul\":649:655   */\n      dup2\n        /* \"#utility.yul\":636:656   */\n      calldataload\n        /* \"#utility.yul\":627:656   */\n      swap1\n      pop\n        /* \"#utility.yul\":665:695   */\n      tag_275\n        /* \"#utility.yul\":689:694   */\n      dup2\n        /* \"#utility.yul\":665:695   */\n      tag_276\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":568:701   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":707:844   */\n    tag_277:\n        /* \"#utility.yul\":752:757   */\n      0x00\n        /* \"#utility.yul\":790:796   */\n      dup2\n        /* \"#utility.yul\":777:797   */\n      calldataload\n        /* \"#utility.yul\":768:797   */\n      swap1\n      pop\n        /* \"#utility.yul\":806:838   */\n      tag_279\n        /* \"#utility.yul\":832:837   */\n      dup2\n        /* \"#utility.yul\":806:838   */\n      tag_280\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":707:844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":850:991   */\n    tag_281:\n        /* \"#utility.yul\":906:911   */\n      0x00\n        /* \"#utility.yul\":937:943   */\n      dup2\n        /* \"#utility.yul\":931:944   */\n      mload\n        /* \"#utility.yul\":922:944   */\n      swap1\n      pop\n        /* \"#utility.yul\":953:985   */\n      tag_283\n        /* \"#utility.yul\":979:984   */\n      dup2\n        /* \"#utility.yul\":953:985   */\n      tag_280\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":850:991   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1010:1348   */\n    tag_284:\n        /* \"#utility.yul\":1065:1070   */\n      0x00\n        /* \"#utility.yul\":1114:1117   */\n      dup3\n        /* \"#utility.yul\":1107:1111   */\n      0x1f\n        /* \"#utility.yul\":1099:1105   */\n      dup4\n        /* \"#utility.yul\":1095:1112   */\n      add\n        /* \"#utility.yul\":1091:1118   */\n      slt\n        /* \"#utility.yul\":1081:1203   */\n      tag_286\n      jumpi\n        /* \"#utility.yul\":1122:1201   */\n      tag_287\n      tag_288\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":1081:1203   */\n    tag_286:\n        /* \"#utility.yul\":1239:1245   */\n      dup2\n        /* \"#utility.yul\":1226:1246   */\n      calldataload\n        /* \"#utility.yul\":1264:1342   */\n      tag_289\n        /* \"#utility.yul\":1338:1341   */\n      dup5\n        /* \"#utility.yul\":1330:1336   */\n      dup3\n        /* \"#utility.yul\":1323:1327   */\n      0x20\n        /* \"#utility.yul\":1315:1321   */\n      dup7\n        /* \"#utility.yul\":1311:1328   */\n      add\n        /* \"#utility.yul\":1264:1342   */\n      tag_258\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":1255:1342   */\n      swap2\n      pop\n        /* \"#utility.yul\":1071:1348   */\n      pop\n        /* \"#utility.yul\":1010:1348   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1354:1493   */\n    tag_290:\n        /* \"#utility.yul\":1400:1405   */\n      0x00\n        /* \"#utility.yul\":1438:1444   */\n      dup2\n        /* \"#utility.yul\":1425:1445   */\n      calldataload\n        /* \"#utility.yul\":1416:1445   */\n      swap1\n      pop\n        /* \"#utility.yul\":1454:1487   */\n      tag_292\n        /* \"#utility.yul\":1481:1486   */\n      dup2\n        /* \"#utility.yul\":1454:1487   */\n      tag_293\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":1354:1493   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1499:1828   */\n    tag_66:\n        /* \"#utility.yul\":1558:1564   */\n      0x00\n        /* \"#utility.yul\":1607:1609   */\n      0x20\n        /* \"#utility.yul\":1595:1604   */\n      dup3\n        /* \"#utility.yul\":1586:1593   */\n      dup5\n        /* \"#utility.yul\":1582:1605   */\n      sub\n        /* \"#utility.yul\":1578:1610   */\n      slt\n        /* \"#utility.yul\":1575:1694   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":1613:1692   */\n      tag_296\n      tag_297\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":1575:1694   */\n    tag_295:\n        /* \"#utility.yul\":1733:1734   */\n      0x00\n        /* \"#utility.yul\":1758:1811   */\n      tag_298\n        /* \"#utility.yul\":1803:1810   */\n      dup5\n        /* \"#utility.yul\":1794:1800   */\n      dup3\n        /* \"#utility.yul\":1783:1792   */\n      dup6\n        /* \"#utility.yul\":1779:1801   */\n      add\n        /* \"#utility.yul\":1758:1811   */\n      tag_269\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":1748:1811   */\n      swap2\n      pop\n        /* \"#utility.yul\":1704:1821   */\n      pop\n        /* \"#utility.yul\":1499:1828   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1834:2308   */\n    tag_94:\n        /* \"#utility.yul\":1902:1908   */\n      0x00\n        /* \"#utility.yul\":1910:1916   */\n      dup1\n        /* \"#utility.yul\":1959:1961   */\n      0x40\n        /* \"#utility.yul\":1947:1956   */\n      dup4\n        /* \"#utility.yul\":1938:1945   */\n      dup6\n        /* \"#utility.yul\":1934:1957   */\n      sub\n        /* \"#utility.yul\":1930:1962   */\n      slt\n        /* \"#utility.yul\":1927:2046   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":1965:2044   */\n      tag_301\n      tag_297\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":1927:2046   */\n    tag_300:\n        /* \"#utility.yul\":2085:2086   */\n      0x00\n        /* \"#utility.yul\":2110:2163   */\n      tag_302\n        /* \"#utility.yul\":2155:2162   */\n      dup6\n        /* \"#utility.yul\":2146:2152   */\n      dup3\n        /* \"#utility.yul\":2135:2144   */\n      dup7\n        /* \"#utility.yul\":2131:2153   */\n      add\n        /* \"#utility.yul\":2110:2163   */\n      tag_269\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":2100:2163   */\n      swap3\n      pop\n        /* \"#utility.yul\":2056:2173   */\n      pop\n        /* \"#utility.yul\":2212:2214   */\n      0x20\n        /* \"#utility.yul\":2238:2291   */\n      tag_303\n        /* \"#utility.yul\":2283:2290   */\n      dup6\n        /* \"#utility.yul\":2274:2280   */\n      dup3\n        /* \"#utility.yul\":2263:2272   */\n      dup7\n        /* \"#utility.yul\":2259:2281   */\n      add\n        /* \"#utility.yul\":2238:2291   */\n      tag_269\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":2228:2291   */\n      swap2\n      pop\n        /* \"#utility.yul\":2183:2301   */\n      pop\n        /* \"#utility.yul\":1834:2308   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2314:2933   */\n    tag_52:\n        /* \"#utility.yul\":2391:2397   */\n      0x00\n        /* \"#utility.yul\":2399:2405   */\n      dup1\n        /* \"#utility.yul\":2407:2413   */\n      0x00\n        /* \"#utility.yul\":2456:2458   */\n      0x60\n        /* \"#utility.yul\":2444:2453   */\n      dup5\n        /* \"#utility.yul\":2435:2442   */\n      dup7\n        /* \"#utility.yul\":2431:2454   */\n      sub\n        /* \"#utility.yul\":2427:2459   */\n      slt\n        /* \"#utility.yul\":2424:2543   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":2462:2541   */\n      tag_306\n      tag_297\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":2424:2543   */\n    tag_305:\n        /* \"#utility.yul\":2582:2583   */\n      0x00\n        /* \"#utility.yul\":2607:2660   */\n      tag_307\n        /* \"#utility.yul\":2652:2659   */\n      dup7\n        /* \"#utility.yul\":2643:2649   */\n      dup3\n        /* \"#utility.yul\":2632:2641   */\n      dup8\n        /* \"#utility.yul\":2628:2650   */\n      add\n        /* \"#utility.yul\":2607:2660   */\n      tag_269\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":2597:2660   */\n      swap4\n      pop\n        /* \"#utility.yul\":2553:2670   */\n      pop\n        /* \"#utility.yul\":2709:2711   */\n      0x20\n        /* \"#utility.yul\":2735:2788   */\n      tag_308\n        /* \"#utility.yul\":2780:2787   */\n      dup7\n        /* \"#utility.yul\":2771:2777   */\n      dup3\n        /* \"#utility.yul\":2760:2769   */\n      dup8\n        /* \"#utility.yul\":2756:2778   */\n      add\n        /* \"#utility.yul\":2735:2788   */\n      tag_269\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":2725:2788   */\n      swap3\n      pop\n        /* \"#utility.yul\":2680:2798   */\n      pop\n        /* \"#utility.yul\":2837:2839   */\n      0x40\n        /* \"#utility.yul\":2863:2916   */\n      tag_309\n        /* \"#utility.yul\":2908:2915   */\n      dup7\n        /* \"#utility.yul\":2899:2905   */\n      dup3\n        /* \"#utility.yul\":2888:2897   */\n      dup8\n        /* \"#utility.yul\":2884:2906   */\n      add\n        /* \"#utility.yul\":2863:2916   */\n      tag_290\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":2853:2916   */\n      swap2\n      pop\n        /* \"#utility.yul\":2808:2926   */\n      pop\n        /* \"#utility.yul\":2314:2933   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2939:3882   */\n    tag_84:\n        /* \"#utility.yul\":3034:3040   */\n      0x00\n        /* \"#utility.yul\":3042:3048   */\n      dup1\n        /* \"#utility.yul\":3050:3056   */\n      0x00\n        /* \"#utility.yul\":3058:3064   */\n      dup1\n        /* \"#utility.yul\":3107:3110   */\n      0x80\n        /* \"#utility.yul\":3095:3104   */\n      dup6\n        /* \"#utility.yul\":3086:3093   */\n      dup8\n        /* \"#utility.yul\":3082:3105   */\n      sub\n        /* \"#utility.yul\":3078:3111   */\n      slt\n        /* \"#utility.yul\":3075:3195   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":3114:3193   */\n      tag_312\n      tag_297\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":3075:3195   */\n    tag_311:\n        /* \"#utility.yul\":3234:3235   */\n      0x00\n        /* \"#utility.yul\":3259:3312   */\n      tag_313\n        /* \"#utility.yul\":3304:3311   */\n      dup8\n        /* \"#utility.yul\":3295:3301   */\n      dup3\n        /* \"#utility.yul\":3284:3293   */\n      dup9\n        /* \"#utility.yul\":3280:3302   */\n      add\n        /* \"#utility.yul\":3259:3312   */\n      tag_269\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":3249:3312   */\n      swap5\n      pop\n        /* \"#utility.yul\":3205:3322   */\n      pop\n        /* \"#utility.yul\":3361:3363   */\n      0x20\n        /* \"#utility.yul\":3387:3440   */\n      tag_314\n        /* \"#utility.yul\":3432:3439   */\n      dup8\n        /* \"#utility.yul\":3423:3429   */\n      dup3\n        /* \"#utility.yul\":3412:3421   */\n      dup9\n        /* \"#utility.yul\":3408:3430   */\n      add\n        /* \"#utility.yul\":3387:3440   */\n      tag_269\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":3377:3440   */\n      swap4\n      pop\n        /* \"#utility.yul\":3332:3450   */\n      pop\n        /* \"#utility.yul\":3489:3491   */\n      0x40\n        /* \"#utility.yul\":3515:3568   */\n      tag_315\n        /* \"#utility.yul\":3560:3567   */\n      dup8\n        /* \"#utility.yul\":3551:3557   */\n      dup3\n        /* \"#utility.yul\":3540:3549   */\n      dup9\n        /* \"#utility.yul\":3536:3558   */\n      add\n        /* \"#utility.yul\":3515:3568   */\n      tag_290\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":3505:3568   */\n      swap3\n      pop\n        /* \"#utility.yul\":3460:3578   */\n      pop\n        /* \"#utility.yul\":3645:3647   */\n      0x60\n        /* \"#utility.yul\":3634:3643   */\n      dup6\n        /* \"#utility.yul\":3630:3648   */\n      add\n        /* \"#utility.yul\":3617:3649   */\n      calldataload\n        /* \"#utility.yul\":3676:3694   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3668:3674   */\n      dup2\n        /* \"#utility.yul\":3665:3695   */\n      gt\n        /* \"#utility.yul\":3662:3779   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":3698:3777   */\n      tag_317\n      tag_318\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":3662:3779   */\n    tag_316:\n        /* \"#utility.yul\":3803:3865   */\n      tag_319\n        /* \"#utility.yul\":3857:3864   */\n      dup8\n        /* \"#utility.yul\":3848:3854   */\n      dup3\n        /* \"#utility.yul\":3837:3846   */\n      dup9\n        /* \"#utility.yul\":3833:3855   */\n      add\n        /* \"#utility.yul\":3803:3865   */\n      tag_284\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":3793:3865   */\n      swap2\n      pop\n        /* \"#utility.yul\":3588:3875   */\n      pop\n        /* \"#utility.yul\":2939:3882   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3888:4356   */\n    tag_79:\n        /* \"#utility.yul\":3953:3959   */\n      0x00\n        /* \"#utility.yul\":3961:3967   */\n      dup1\n        /* \"#utility.yul\":4010:4012   */\n      0x40\n        /* \"#utility.yul\":3998:4007   */\n      dup4\n        /* \"#utility.yul\":3989:3996   */\n      dup6\n        /* \"#utility.yul\":3985:4008   */\n      sub\n        /* \"#utility.yul\":3981:4013   */\n      slt\n        /* \"#utility.yul\":3978:4097   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":4016:4095   */\n      tag_322\n      tag_297\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":3978:4097   */\n    tag_321:\n        /* \"#utility.yul\":4136:4137   */\n      0x00\n        /* \"#utility.yul\":4161:4214   */\n      tag_323\n        /* \"#utility.yul\":4206:4213   */\n      dup6\n        /* \"#utility.yul\":4197:4203   */\n      dup3\n        /* \"#utility.yul\":4186:4195   */\n      dup7\n        /* \"#utility.yul\":4182:4204   */\n      add\n        /* \"#utility.yul\":4161:4214   */\n      tag_269\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":4151:4214   */\n      swap3\n      pop\n        /* \"#utility.yul\":4107:4224   */\n      pop\n        /* \"#utility.yul\":4263:4265   */\n      0x20\n        /* \"#utility.yul\":4289:4339   */\n      tag_324\n        /* \"#utility.yul\":4331:4338   */\n      dup6\n        /* \"#utility.yul\":4322:4328   */\n      dup3\n        /* \"#utility.yul\":4311:4320   */\n      dup7\n        /* \"#utility.yul\":4307:4329   */\n      add\n        /* \"#utility.yul\":4289:4339   */\n      tag_273\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":4279:4339   */\n      swap2\n      pop\n        /* \"#utility.yul\":4234:4349   */\n      pop\n        /* \"#utility.yul\":3888:4356   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4362:4836   */\n    tag_42:\n        /* \"#utility.yul\":4430:4436   */\n      0x00\n        /* \"#utility.yul\":4438:4444   */\n      dup1\n        /* \"#utility.yul\":4487:4489   */\n      0x40\n        /* \"#utility.yul\":4475:4484   */\n      dup4\n        /* \"#utility.yul\":4466:4473   */\n      dup6\n        /* \"#utility.yul\":4462:4485   */\n      sub\n        /* \"#utility.yul\":4458:4490   */\n      slt\n        /* \"#utility.yul\":4455:4574   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":4493:4572   */\n      tag_327\n      tag_297\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":4455:4574   */\n    tag_326:\n        /* \"#utility.yul\":4613:4614   */\n      0x00\n        /* \"#utility.yul\":4638:4691   */\n      tag_328\n        /* \"#utility.yul\":4683:4690   */\n      dup6\n        /* \"#utility.yul\":4674:4680   */\n      dup3\n        /* \"#utility.yul\":4663:4672   */\n      dup7\n        /* \"#utility.yul\":4659:4681   */\n      add\n        /* \"#utility.yul\":4638:4691   */\n      tag_269\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":4628:4691   */\n      swap3\n      pop\n        /* \"#utility.yul\":4584:4701   */\n      pop\n        /* \"#utility.yul\":4740:4742   */\n      0x20\n        /* \"#utility.yul\":4766:4819   */\n      tag_329\n        /* \"#utility.yul\":4811:4818   */\n      dup6\n        /* \"#utility.yul\":4802:4808   */\n      dup3\n        /* \"#utility.yul\":4791:4800   */\n      dup7\n        /* \"#utility.yul\":4787:4809   */\n      add\n        /* \"#utility.yul\":4766:4819   */\n      tag_290\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":4756:4819   */\n      swap2\n      pop\n        /* \"#utility.yul\":4711:4829   */\n      pop\n        /* \"#utility.yul\":4362:4836   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4842:5169   */\n    tag_23:\n        /* \"#utility.yul\":4900:4906   */\n      0x00\n        /* \"#utility.yul\":4949:4951   */\n      0x20\n        /* \"#utility.yul\":4937:4946   */\n      dup3\n        /* \"#utility.yul\":4928:4935   */\n      dup5\n        /* \"#utility.yul\":4924:4947   */\n      sub\n        /* \"#utility.yul\":4920:4952   */\n      slt\n        /* \"#utility.yul\":4917:5036   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":4955:5034   */\n      tag_332\n      tag_297\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":4917:5036   */\n    tag_331:\n        /* \"#utility.yul\":5075:5076   */\n      0x00\n        /* \"#utility.yul\":5100:5152   */\n      tag_333\n        /* \"#utility.yul\":5144:5151   */\n      dup5\n        /* \"#utility.yul\":5135:5141   */\n      dup3\n        /* \"#utility.yul\":5124:5133   */\n      dup6\n        /* \"#utility.yul\":5120:5142   */\n      add\n        /* \"#utility.yul\":5100:5152   */\n      tag_277\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":5090:5152   */\n      swap2\n      pop\n        /* \"#utility.yul\":5046:5162   */\n      pop\n        /* \"#utility.yul\":4842:5169   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5175:5524   */\n    tag_218:\n        /* \"#utility.yul\":5244:5250   */\n      0x00\n        /* \"#utility.yul\":5293:5295   */\n      0x20\n        /* \"#utility.yul\":5281:5290   */\n      dup3\n        /* \"#utility.yul\":5272:5279   */\n      dup5\n        /* \"#utility.yul\":5268:5291   */\n      sub\n        /* \"#utility.yul\":5264:5296   */\n      slt\n        /* \"#utility.yul\":5261:5380   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":5299:5378   */\n      tag_336\n      tag_297\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":5261:5380   */\n    tag_335:\n        /* \"#utility.yul\":5419:5420   */\n      0x00\n        /* \"#utility.yul\":5444:5507   */\n      tag_337\n        /* \"#utility.yul\":5499:5506   */\n      dup5\n        /* \"#utility.yul\":5490:5496   */\n      dup3\n        /* \"#utility.yul\":5479:5488   */\n      dup6\n        /* \"#utility.yul\":5475:5497   */\n      add\n        /* \"#utility.yul\":5444:5507   */\n      tag_281\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":5434:5507   */\n      swap2\n      pop\n        /* \"#utility.yul\":5390:5517   */\n      pop\n        /* \"#utility.yul\":5175:5524   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5530:5859   */\n    tag_35:\n        /* \"#utility.yul\":5589:5595   */\n      0x00\n        /* \"#utility.yul\":5638:5640   */\n      0x20\n        /* \"#utility.yul\":5626:5635   */\n      dup3\n        /* \"#utility.yul\":5617:5624   */\n      dup5\n        /* \"#utility.yul\":5613:5636   */\n      sub\n        /* \"#utility.yul\":5609:5641   */\n      slt\n        /* \"#utility.yul\":5606:5725   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":5644:5723   */\n      tag_340\n      tag_297\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":5606:5725   */\n    tag_339:\n        /* \"#utility.yul\":5764:5765   */\n      0x00\n        /* \"#utility.yul\":5789:5842   */\n      tag_341\n        /* \"#utility.yul\":5834:5841   */\n      dup5\n        /* \"#utility.yul\":5825:5831   */\n      dup3\n        /* \"#utility.yul\":5814:5823   */\n      dup6\n        /* \"#utility.yul\":5810:5832   */\n      add\n        /* \"#utility.yul\":5789:5842   */\n      tag_290\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":5779:5842   */\n      swap2\n      pop\n        /* \"#utility.yul\":5735:5852   */\n      pop\n        /* \"#utility.yul\":5530:5859   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5865:5983   */\n    tag_342:\n        /* \"#utility.yul\":5952:5976   */\n      tag_344\n        /* \"#utility.yul\":5970:5975   */\n      dup2\n        /* \"#utility.yul\":5952:5976   */\n      tag_345\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":5947:5950   */\n      dup3\n        /* \"#utility.yul\":5940:5977   */\n      mstore\n        /* \"#utility.yul\":5865:5983   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5989:6098   */\n    tag_346:\n        /* \"#utility.yul\":6070:6091   */\n      tag_348\n        /* \"#utility.yul\":6085:6090   */\n      dup2\n        /* \"#utility.yul\":6070:6091   */\n      tag_349\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":6065:6068   */\n      dup3\n        /* \"#utility.yul\":6058:6092   */\n      mstore\n        /* \"#utility.yul\":5989:6098   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6104:6464   */\n    tag_350:\n        /* \"#utility.yul\":6190:6193   */\n      0x00\n        /* \"#utility.yul\":6218:6256   */\n      tag_352\n        /* \"#utility.yul\":6250:6255   */\n      dup3\n        /* \"#utility.yul\":6218:6256   */\n      tag_353\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":6272:6342   */\n      tag_354\n        /* \"#utility.yul\":6335:6341   */\n      dup2\n        /* \"#utility.yul\":6330:6333   */\n      dup6\n        /* \"#utility.yul\":6272:6342   */\n      tag_355\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":6265:6342   */\n      swap4\n      pop\n        /* \"#utility.yul\":6351:6403   */\n      tag_356\n        /* \"#utility.yul\":6396:6402   */\n      dup2\n        /* \"#utility.yul\":6391:6394   */\n      dup6\n        /* \"#utility.yul\":6384:6388   */\n      0x20\n        /* \"#utility.yul\":6377:6382   */\n      dup7\n        /* \"#utility.yul\":6373:6389   */\n      add\n        /* \"#utility.yul\":6351:6403   */\n      tag_357\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":6428:6457   */\n      tag_358\n        /* \"#utility.yul\":6450:6456   */\n      dup2\n        /* \"#utility.yul\":6428:6457   */\n      tag_359\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":6423:6426   */\n      dup5\n        /* \"#utility.yul\":6419:6458   */\n      add\n        /* \"#utility.yul\":6412:6458   */\n      swap2\n      pop\n        /* \"#utility.yul\":6194:6464   */\n      pop\n        /* \"#utility.yul\":6104:6464   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6470:6834   */\n    tag_360:\n        /* \"#utility.yul\":6558:6561   */\n      0x00\n        /* \"#utility.yul\":6586:6625   */\n      tag_362\n        /* \"#utility.yul\":6619:6624   */\n      dup3\n        /* \"#utility.yul\":6586:6625   */\n      tag_363\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":6641:6712   */\n      tag_364\n        /* \"#utility.yul\":6705:6711   */\n      dup2\n        /* \"#utility.yul\":6700:6703   */\n      dup6\n        /* \"#utility.yul\":6641:6712   */\n      tag_365\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":6634:6712   */\n      swap4\n      pop\n        /* \"#utility.yul\":6721:6773   */\n      tag_366\n        /* \"#utility.yul\":6766:6772   */\n      dup2\n        /* \"#utility.yul\":6761:6764   */\n      dup6\n        /* \"#utility.yul\":6754:6758   */\n      0x20\n        /* \"#utility.yul\":6747:6752   */\n      dup7\n        /* \"#utility.yul\":6743:6759   */\n      add\n        /* \"#utility.yul\":6721:6773   */\n      tag_357\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":6798:6827   */\n      tag_367\n        /* \"#utility.yul\":6820:6826   */\n      dup2\n        /* \"#utility.yul\":6798:6827   */\n      tag_359\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":6793:6796   */\n      dup5\n        /* \"#utility.yul\":6789:6828   */\n      add\n        /* \"#utility.yul\":6782:6828   */\n      swap2\n      pop\n        /* \"#utility.yul\":6562:6834   */\n      pop\n        /* \"#utility.yul\":6470:6834   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6840:7217   */\n    tag_368:\n        /* \"#utility.yul\":6946:6949   */\n      0x00\n        /* \"#utility.yul\":6974:7013   */\n      tag_370\n        /* \"#utility.yul\":7007:7012   */\n      dup3\n        /* \"#utility.yul\":6974:7013   */\n      tag_363\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":7029:7118   */\n      tag_371\n        /* \"#utility.yul\":7111:7117   */\n      dup2\n        /* \"#utility.yul\":7106:7109   */\n      dup6\n        /* \"#utility.yul\":7029:7118   */\n      tag_372\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":7022:7118   */\n      swap4\n      pop\n        /* \"#utility.yul\":7127:7179   */\n      tag_373\n        /* \"#utility.yul\":7172:7178   */\n      dup2\n        /* \"#utility.yul\":7167:7170   */\n      dup6\n        /* \"#utility.yul\":7160:7164   */\n      0x20\n        /* \"#utility.yul\":7153:7158   */\n      dup7\n        /* \"#utility.yul\":7149:7165   */\n      add\n        /* \"#utility.yul\":7127:7179   */\n      tag_357\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":7204:7210   */\n      dup1\n        /* \"#utility.yul\":7199:7202   */\n      dup5\n        /* \"#utility.yul\":7195:7211   */\n      add\n        /* \"#utility.yul\":7188:7211   */\n      swap2\n      pop\n        /* \"#utility.yul\":6950:7217   */\n      pop\n        /* \"#utility.yul\":6840:7217   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7223:7341   */\n    tag_374:\n        /* \"#utility.yul\":7310:7334   */\n      tag_376\n        /* \"#utility.yul\":7328:7333   */\n      dup2\n        /* \"#utility.yul\":7310:7334   */\n      tag_377\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":7305:7308   */\n      dup3\n        /* \"#utility.yul\":7298:7335   */\n      mstore\n        /* \"#utility.yul\":7223:7341   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7347:7782   */\n    tag_185:\n        /* \"#utility.yul\":7527:7530   */\n      0x00\n        /* \"#utility.yul\":7549:7644   */\n      tag_379\n        /* \"#utility.yul\":7640:7643   */\n      dup3\n        /* \"#utility.yul\":7631:7637   */\n      dup6\n        /* \"#utility.yul\":7549:7644   */\n      tag_368\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":7542:7644   */\n      swap2\n      pop\n        /* \"#utility.yul\":7661:7756   */\n      tag_380\n        /* \"#utility.yul\":7752:7755   */\n      dup3\n        /* \"#utility.yul\":7743:7749   */\n      dup5\n        /* \"#utility.yul\":7661:7756   */\n      tag_368\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":7654:7756   */\n      swap2\n      pop\n        /* \"#utility.yul\":7773:7776   */\n      dup2\n        /* \"#utility.yul\":7766:7776   */\n      swap1\n      pop\n        /* \"#utility.yul\":7347:7782   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7788:8010   */\n    tag_38:\n        /* \"#utility.yul\":7881:7885   */\n      0x00\n        /* \"#utility.yul\":7919:7921   */\n      0x20\n        /* \"#utility.yul\":7908:7917   */\n      dup3\n        /* \"#utility.yul\":7904:7922   */\n      add\n        /* \"#utility.yul\":7896:7922   */\n      swap1\n      pop\n        /* \"#utility.yul\":7932:8003   */\n      tag_382\n        /* \"#utility.yul\":8000:8001   */\n      0x00\n        /* \"#utility.yul\":7989:7998   */\n      dup4\n        /* \"#utility.yul\":7985:8002   */\n      add\n        /* \"#utility.yul\":7976:7982   */\n      dup5\n        /* \"#utility.yul\":7932:8003   */\n      tag_342\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":7788:8010   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8016:8656   */\n    tag_214:\n        /* \"#utility.yul\":8211:8215   */\n      0x00\n        /* \"#utility.yul\":8249:8252   */\n      0x80\n        /* \"#utility.yul\":8238:8247   */\n      dup3\n        /* \"#utility.yul\":8234:8253   */\n      add\n        /* \"#utility.yul\":8226:8253   */\n      swap1\n      pop\n        /* \"#utility.yul\":8263:8334   */\n      tag_384\n        /* \"#utility.yul\":8331:8332   */\n      0x00\n        /* \"#utility.yul\":8320:8329   */\n      dup4\n        /* \"#utility.yul\":8316:8333   */\n      add\n        /* \"#utility.yul\":8307:8313   */\n      dup8\n        /* \"#utility.yul\":8263:8334   */\n      tag_342\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":8344:8416   */\n      tag_385\n        /* \"#utility.yul\":8412:8414   */\n      0x20\n        /* \"#utility.yul\":8401:8410   */\n      dup4\n        /* \"#utility.yul\":8397:8415   */\n      add\n        /* \"#utility.yul\":8388:8394   */\n      dup7\n        /* \"#utility.yul\":8344:8416   */\n      tag_342\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":8426:8498   */\n      tag_386\n        /* \"#utility.yul\":8494:8496   */\n      0x40\n        /* \"#utility.yul\":8483:8492   */\n      dup4\n        /* \"#utility.yul\":8479:8497   */\n      add\n        /* \"#utility.yul\":8470:8476   */\n      dup6\n        /* \"#utility.yul\":8426:8498   */\n      tag_374\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":8545:8554   */\n      dup2\n        /* \"#utility.yul\":8539:8543   */\n      dup2\n        /* \"#utility.yul\":8535:8555   */\n      sub\n        /* \"#utility.yul\":8530:8532   */\n      0x60\n        /* \"#utility.yul\":8519:8528   */\n      dup4\n        /* \"#utility.yul\":8515:8533   */\n      add\n        /* \"#utility.yul\":8508:8556   */\n      mstore\n        /* \"#utility.yul\":8573:8649   */\n      tag_387\n        /* \"#utility.yul\":8644:8648   */\n      dup2\n        /* \"#utility.yul\":8635:8641   */\n      dup5\n        /* \"#utility.yul\":8573:8649   */\n      tag_350\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":8565:8649   */\n      swap1\n      pop\n        /* \"#utility.yul\":8016:8656   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8662:8872   */\n    tag_26:\n        /* \"#utility.yul\":8749:8753   */\n      0x00\n        /* \"#utility.yul\":8787:8789   */\n      0x20\n        /* \"#utility.yul\":8776:8785   */\n      dup3\n        /* \"#utility.yul\":8772:8790   */\n      add\n        /* \"#utility.yul\":8764:8790   */\n      swap1\n      pop\n        /* \"#utility.yul\":8800:8865   */\n      tag_389\n        /* \"#utility.yul\":8862:8863   */\n      0x00\n        /* \"#utility.yul\":8851:8860   */\n      dup4\n        /* \"#utility.yul\":8847:8864   */\n      add\n        /* \"#utility.yul\":8838:8844   */\n      dup5\n        /* \"#utility.yul\":8800:8865   */\n      tag_346\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":8662:8872   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8878:9191   */\n    tag_31:\n        /* \"#utility.yul\":8991:8995   */\n      0x00\n        /* \"#utility.yul\":9029:9031   */\n      0x20\n        /* \"#utility.yul\":9018:9027   */\n      dup3\n        /* \"#utility.yul\":9014:9032   */\n      add\n        /* \"#utility.yul\":9006:9032   */\n      swap1\n      pop\n        /* \"#utility.yul\":9078:9087   */\n      dup2\n        /* \"#utility.yul\":9072:9076   */\n      dup2\n        /* \"#utility.yul\":9068:9088   */\n      sub\n        /* \"#utility.yul\":9064:9065   */\n      0x00\n        /* \"#utility.yul\":9053:9062   */\n      dup4\n        /* \"#utility.yul\":9049:9066   */\n      add\n        /* \"#utility.yul\":9042:9089   */\n      mstore\n        /* \"#utility.yul\":9106:9184   */\n      tag_391\n        /* \"#utility.yul\":9179:9183   */\n      dup2\n        /* \"#utility.yul\":9170:9176   */\n      dup5\n        /* \"#utility.yul\":9106:9184   */\n      tag_360\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":9098:9184   */\n      swap1\n      pop\n        /* \"#utility.yul\":8878:9191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9197:9419   */\n    tag_48:\n        /* \"#utility.yul\":9290:9294   */\n      0x00\n        /* \"#utility.yul\":9328:9330   */\n      0x20\n        /* \"#utility.yul\":9317:9326   */\n      dup3\n        /* \"#utility.yul\":9313:9331   */\n      add\n        /* \"#utility.yul\":9305:9331   */\n      swap1\n      pop\n        /* \"#utility.yul\":9341:9412   */\n      tag_393\n        /* \"#utility.yul\":9409:9410   */\n      0x00\n        /* \"#utility.yul\":9398:9407   */\n      dup4\n        /* \"#utility.yul\":9394:9411   */\n      add\n        /* \"#utility.yul\":9385:9391   */\n      dup5\n        /* \"#utility.yul\":9341:9412   */\n      tag_374\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":9197:9419   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9425:9554   */\n    tag_263:\n        /* \"#utility.yul\":9459:9465   */\n      0x00\n        /* \"#utility.yul\":9486:9506   */\n      tag_395\n      tag_396\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":9476:9506   */\n      swap1\n      pop\n        /* \"#utility.yul\":9515:9548   */\n      tag_397\n        /* \"#utility.yul\":9543:9547   */\n      dup3\n        /* \"#utility.yul\":9535:9541   */\n      dup3\n        /* \"#utility.yul\":9515:9548   */\n      tag_398\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":9425:9554   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9560:9635   */\n    tag_396:\n        /* \"#utility.yul\":9593:9599   */\n      0x00\n        /* \"#utility.yul\":9626:9628   */\n      0x40\n        /* \"#utility.yul\":9620:9629   */\n      mload\n        /* \"#utility.yul\":9610:9629   */\n      swap1\n      pop\n        /* \"#utility.yul\":9560:9635   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":9641:9948   */\n    tag_262:\n        /* \"#utility.yul\":9702:9706   */\n      0x00\n        /* \"#utility.yul\":9792:9810   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9784:9790   */\n      dup3\n        /* \"#utility.yul\":9781:9811   */\n      gt\n        /* \"#utility.yul\":9778:9834   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":9814:9832   */\n      tag_402\n      tag_403\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":9778:9834   */\n    tag_401:\n        /* \"#utility.yul\":9852:9881   */\n      tag_404\n        /* \"#utility.yul\":9874:9880   */\n      dup3\n        /* \"#utility.yul\":9852:9881   */\n      tag_359\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":9844:9881   */\n      swap1\n      pop\n        /* \"#utility.yul\":9936:9940   */\n      0x20\n        /* \"#utility.yul\":9930:9934   */\n      dup2\n        /* \"#utility.yul\":9926:9941   */\n      add\n        /* \"#utility.yul\":9918:9941   */\n      swap1\n      pop\n        /* \"#utility.yul\":9641:9948   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9954:10052   */\n    tag_353:\n        /* \"#utility.yul\":10005:10011   */\n      0x00\n        /* \"#utility.yul\":10039:10044   */\n      dup2\n        /* \"#utility.yul\":10033:10045   */\n      mload\n        /* \"#utility.yul\":10023:10045   */\n      swap1\n      pop\n        /* \"#utility.yul\":9954:10052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10058:10157   */\n    tag_363:\n        /* \"#utility.yul\":10110:10116   */\n      0x00\n        /* \"#utility.yul\":10144:10149   */\n      dup2\n        /* \"#utility.yul\":10138:10150   */\n      mload\n        /* \"#utility.yul\":10128:10150   */\n      swap1\n      pop\n        /* \"#utility.yul\":10058:10157   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10163:10331   */\n    tag_355:\n        /* \"#utility.yul\":10246:10257   */\n      0x00\n        /* \"#utility.yul\":10280:10286   */\n      dup3\n        /* \"#utility.yul\":10275:10278   */\n      dup3\n        /* \"#utility.yul\":10268:10287   */\n      mstore\n        /* \"#utility.yul\":10320:10324   */\n      0x20\n        /* \"#utility.yul\":10315:10318   */\n      dup3\n        /* \"#utility.yul\":10311:10325   */\n      add\n        /* \"#utility.yul\":10296:10325   */\n      swap1\n      pop\n        /* \"#utility.yul\":10163:10331   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10337:10506   */\n    tag_365:\n        /* \"#utility.yul\":10421:10432   */\n      0x00\n        /* \"#utility.yul\":10455:10461   */\n      dup3\n        /* \"#utility.yul\":10450:10453   */\n      dup3\n        /* \"#utility.yul\":10443:10462   */\n      mstore\n        /* \"#utility.yul\":10495:10499   */\n      0x20\n        /* \"#utility.yul\":10490:10493   */\n      dup3\n        /* \"#utility.yul\":10486:10500   */\n      add\n        /* \"#utility.yul\":10471:10500   */\n      swap1\n      pop\n        /* \"#utility.yul\":10337:10506   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10512:10660   */\n    tag_372:\n        /* \"#utility.yul\":10614:10625   */\n      0x00\n        /* \"#utility.yul\":10651:10654   */\n      dup2\n        /* \"#utility.yul\":10636:10654   */\n      swap1\n      pop\n        /* \"#utility.yul\":10512:10660   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10666:10762   */\n    tag_345:\n        /* \"#utility.yul\":10703:10710   */\n      0x00\n        /* \"#utility.yul\":10732:10756   */\n      tag_411\n        /* \"#utility.yul\":10750:10755   */\n      dup3\n        /* \"#utility.yul\":10732:10756   */\n      tag_412\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":10721:10756   */\n      swap1\n      pop\n        /* \"#utility.yul\":10666:10762   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10768:10858   */\n    tag_349:\n        /* \"#utility.yul\":10802:10809   */\n      0x00\n        /* \"#utility.yul\":10845:10850   */\n      dup2\n        /* \"#utility.yul\":10838:10851   */\n      iszero\n        /* \"#utility.yul\":10831:10852   */\n      iszero\n        /* \"#utility.yul\":10820:10852   */\n      swap1\n      pop\n        /* \"#utility.yul\":10768:10858   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10864:11013   */\n    tag_414:\n        /* \"#utility.yul\":10900:10907   */\n      0x00\n        /* \"#utility.yul\":10940:11006   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10933:10938   */\n      dup3\n        /* \"#utility.yul\":10929:11007   */\n      and\n        /* \"#utility.yul\":10918:11007   */\n      swap1\n      pop\n        /* \"#utility.yul\":10864:11013   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11019:11145   */\n    tag_412:\n        /* \"#utility.yul\":11056:11063   */\n      0x00\n        /* \"#utility.yul\":11096:11138   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11089:11094   */\n      dup3\n        /* \"#utility.yul\":11085:11139   */\n      and\n        /* \"#utility.yul\":11074:11139   */\n      swap1\n      pop\n        /* \"#utility.yul\":11019:11145   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11151:11228   */\n    tag_377:\n        /* \"#utility.yul\":11188:11195   */\n      0x00\n        /* \"#utility.yul\":11217:11222   */\n      dup2\n        /* \"#utility.yul\":11206:11222   */\n      swap1\n      pop\n        /* \"#utility.yul\":11151:11228   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11234:11388   */\n    tag_268:\n        /* \"#utility.yul\":11318:11324   */\n      dup3\n        /* \"#utility.yul\":11313:11316   */\n      dup2\n        /* \"#utility.yul\":11308:11311   */\n      dup4\n        /* \"#utility.yul\":11295:11325   */\n      calldatacopy\n        /* \"#utility.yul\":11380:11381   */\n      0x00\n        /* \"#utility.yul\":11371:11377   */\n      dup4\n        /* \"#utility.yul\":11366:11369   */\n      dup4\n        /* \"#utility.yul\":11362:11378   */\n      add\n        /* \"#utility.yul\":11355:11382   */\n      mstore\n        /* \"#utility.yul\":11234:11388   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11394:11701   */\n    tag_357:\n        /* \"#utility.yul\":11462:11463   */\n      0x00\n        /* \"#utility.yul\":11472:11585   */\n    tag_420:\n        /* \"#utility.yul\":11486:11492   */\n      dup4\n        /* \"#utility.yul\":11483:11484   */\n      dup2\n        /* \"#utility.yul\":11480:11493   */\n      lt\n        /* \"#utility.yul\":11472:11585   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":11571:11572   */\n      dup1\n        /* \"#utility.yul\":11566:11569   */\n      dup3\n        /* \"#utility.yul\":11562:11573   */\n      add\n        /* \"#utility.yul\":11556:11574   */\n      mload\n        /* \"#utility.yul\":11552:11553   */\n      dup2\n        /* \"#utility.yul\":11547:11550   */\n      dup5\n        /* \"#utility.yul\":11543:11554   */\n      add\n        /* \"#utility.yul\":11536:11575   */\n      mstore\n        /* \"#utility.yul\":11508:11510   */\n      0x20\n        /* \"#utility.yul\":11505:11506   */\n      dup2\n        /* \"#utility.yul\":11501:11511   */\n      add\n        /* \"#utility.yul\":11496:11511   */\n      swap1\n      pop\n        /* \"#utility.yul\":11472:11585   */\n      jump(tag_420)\n    tag_422:\n        /* \"#utility.yul\":11603:11609   */\n      dup4\n        /* \"#utility.yul\":11600:11601   */\n      dup2\n        /* \"#utility.yul\":11597:11610   */\n      gt\n        /* \"#utility.yul\":11594:11695   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":11683:11684   */\n      0x00\n        /* \"#utility.yul\":11674:11680   */\n      dup5\n        /* \"#utility.yul\":11669:11672   */\n      dup5\n        /* \"#utility.yul\":11665:11681   */\n      add\n        /* \"#utility.yul\":11658:11685   */\n      mstore\n        /* \"#utility.yul\":11594:11695   */\n    tag_423:\n        /* \"#utility.yul\":11443:11701   */\n      pop\n        /* \"#utility.yul\":11394:11701   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11707:12027   */\n    tag_102:\n        /* \"#utility.yul\":11751:11757   */\n      0x00\n        /* \"#utility.yul\":11788:11789   */\n      0x02\n        /* \"#utility.yul\":11782:11786   */\n      dup3\n        /* \"#utility.yul\":11778:11790   */\n      div\n        /* \"#utility.yul\":11768:11790   */\n      swap1\n      pop\n        /* \"#utility.yul\":11835:11836   */\n      0x01\n        /* \"#utility.yul\":11829:11833   */\n      dup3\n        /* \"#utility.yul\":11825:11837   */\n      and\n        /* \"#utility.yul\":11856:11874   */\n      dup1\n        /* \"#utility.yul\":11846:11927   */\n      tag_425\n      jumpi\n        /* \"#utility.yul\":11912:11916   */\n      0x7f\n        /* \"#utility.yul\":11904:11910   */\n      dup3\n        /* \"#utility.yul\":11900:11917   */\n      and\n        /* \"#utility.yul\":11890:11917   */\n      swap2\n      pop\n        /* \"#utility.yul\":11846:11927   */\n    tag_425:\n        /* \"#utility.yul\":11974:11976   */\n      0x20\n        /* \"#utility.yul\":11966:11972   */\n      dup3\n        /* \"#utility.yul\":11963:11977   */\n      lt\n        /* \"#utility.yul\":11943:11961   */\n      dup2\n        /* \"#utility.yul\":11940:11978   */\n      eq\n        /* \"#utility.yul\":11937:12021   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":11993:12011   */\n      tag_427\n      tag_428\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":11937:12021   */\n    tag_426:\n        /* \"#utility.yul\":11758:12027   */\n      pop\n        /* \"#utility.yul\":11707:12027   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12033:12314   */\n    tag_398:\n        /* \"#utility.yul\":12116:12143   */\n      tag_430\n        /* \"#utility.yul\":12138:12142   */\n      dup3\n        /* \"#utility.yul\":12116:12143   */\n      tag_359\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":12108:12114   */\n      dup2\n        /* \"#utility.yul\":12104:12144   */\n      add\n        /* \"#utility.yul\":12246:12252   */\n      dup2\n        /* \"#utility.yul\":12234:12244   */\n      dup2\n        /* \"#utility.yul\":12231:12253   */\n      lt\n        /* \"#utility.yul\":12210:12228   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12198:12208   */\n      dup3\n        /* \"#utility.yul\":12195:12229   */\n      gt\n        /* \"#utility.yul\":12192:12254   */\n      or\n        /* \"#utility.yul\":12189:12277   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":12257:12275   */\n      tag_432\n      tag_403\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":12189:12277   */\n    tag_431:\n        /* \"#utility.yul\":12297:12307   */\n      dup1\n        /* \"#utility.yul\":12293:12295   */\n      0x40\n        /* \"#utility.yul\":12286:12308   */\n      mstore\n        /* \"#utility.yul\":12076:12314   */\n      pop\n        /* \"#utility.yul\":12033:12314   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12320:12500   */\n    tag_428:\n        /* \"#utility.yul\":12368:12445   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12365:12366   */\n      0x00\n        /* \"#utility.yul\":12358:12446   */\n      mstore\n        /* \"#utility.yul\":12465:12469   */\n      0x22\n        /* \"#utility.yul\":12462:12463   */\n      0x04\n        /* \"#utility.yul\":12455:12470   */\n      mstore\n        /* \"#utility.yul\":12489:12493   */\n      0x24\n        /* \"#utility.yul\":12486:12487   */\n      0x00\n        /* \"#utility.yul\":12479:12494   */\n      revert\n        /* \"#utility.yul\":12506:12686   */\n    tag_403:\n        /* \"#utility.yul\":12554:12631   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12551:12552   */\n      0x00\n        /* \"#utility.yul\":12544:12632   */\n      mstore\n        /* \"#utility.yul\":12651:12655   */\n      0x41\n        /* \"#utility.yul\":12648:12649   */\n      0x04\n        /* \"#utility.yul\":12641:12656   */\n      mstore\n        /* \"#utility.yul\":12675:12679   */\n      0x24\n        /* \"#utility.yul\":12672:12673   */\n      0x00\n        /* \"#utility.yul\":12665:12680   */\n      revert\n        /* \"#utility.yul\":12692:12809   */\n    tag_288:\n        /* \"#utility.yul\":12801:12802   */\n      0x00\n        /* \"#utility.yul\":12798:12799   */\n      dup1\n        /* \"#utility.yul\":12791:12803   */\n      revert\n        /* \"#utility.yul\":12815:12932   */\n    tag_266:\n        /* \"#utility.yul\":12924:12925   */\n      0x00\n        /* \"#utility.yul\":12921:12922   */\n      dup1\n        /* \"#utility.yul\":12914:12926   */\n      revert\n        /* \"#utility.yul\":12938:13055   */\n    tag_318:\n        /* \"#utility.yul\":13047:13048   */\n      0x00\n        /* \"#utility.yul\":13044:13045   */\n      dup1\n        /* \"#utility.yul\":13037:13049   */\n      revert\n        /* \"#utility.yul\":13061:13178   */\n    tag_297:\n        /* \"#utility.yul\":13170:13171   */\n      0x00\n        /* \"#utility.yul\":13167:13168   */\n      dup1\n        /* \"#utility.yul\":13160:13172   */\n      revert\n        /* \"#utility.yul\":13184:13286   */\n    tag_359:\n        /* \"#utility.yul\":13225:13231   */\n      0x00\n        /* \"#utility.yul\":13276:13278   */\n      0x1f\n        /* \"#utility.yul\":13272:13279   */\n      not\n        /* \"#utility.yul\":13267:13269   */\n      0x1f\n        /* \"#utility.yul\":13260:13265   */\n      dup4\n        /* \"#utility.yul\":13256:13270   */\n      add\n        /* \"#utility.yul\":13252:13280   */\n      and\n        /* \"#utility.yul\":13242:13280   */\n      swap1\n      pop\n        /* \"#utility.yul\":13184:13286   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13292:13414   */\n    tag_272:\n        /* \"#utility.yul\":13365:13389   */\n      tag_441\n        /* \"#utility.yul\":13383:13388   */\n      dup2\n        /* \"#utility.yul\":13365:13389   */\n      tag_345\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":13358:13363   */\n      dup2\n        /* \"#utility.yul\":13355:13390   */\n      eq\n        /* \"#utility.yul\":13345:13408   */\n      tag_442\n      jumpi\n        /* \"#utility.yul\":13404:13405   */\n      0x00\n        /* \"#utility.yul\":13401:13402   */\n      dup1\n        /* \"#utility.yul\":13394:13406   */\n      revert\n        /* \"#utility.yul\":13345:13408   */\n    tag_442:\n        /* \"#utility.yul\":13292:13414   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13420:13536   */\n    tag_276:\n        /* \"#utility.yul\":13490:13511   */\n      tag_444\n        /* \"#utility.yul\":13505:13510   */\n      dup2\n        /* \"#utility.yul\":13490:13511   */\n      tag_349\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":13483:13488   */\n      dup2\n        /* \"#utility.yul\":13480:13512   */\n      eq\n        /* \"#utility.yul\":13470:13530   */\n      tag_445\n      jumpi\n        /* \"#utility.yul\":13526:13527   */\n      0x00\n        /* \"#utility.yul\":13523:13524   */\n      dup1\n        /* \"#utility.yul\":13516:13528   */\n      revert\n        /* \"#utility.yul\":13470:13530   */\n    tag_445:\n        /* \"#utility.yul\":13420:13536   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13542:13662   */\n    tag_280:\n        /* \"#utility.yul\":13614:13637   */\n      tag_447\n        /* \"#utility.yul\":13631:13636   */\n      dup2\n        /* \"#utility.yul\":13614:13637   */\n      tag_414\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":13607:13612   */\n      dup2\n        /* \"#utility.yul\":13604:13638   */\n      eq\n        /* \"#utility.yul\":13594:13656   */\n      tag_448\n      jumpi\n        /* \"#utility.yul\":13652:13653   */\n      0x00\n        /* \"#utility.yul\":13649:13650   */\n      dup1\n        /* \"#utility.yul\":13642:13654   */\n      revert\n        /* \"#utility.yul\":13594:13656   */\n    tag_448:\n        /* \"#utility.yul\":13542:13662   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13668:13790   */\n    tag_293:\n        /* \"#utility.yul\":13741:13765   */\n      tag_450\n        /* \"#utility.yul\":13759:13764   */\n      dup2\n        /* \"#utility.yul\":13741:13765   */\n      tag_377\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":13734:13739   */\n      dup2\n        /* \"#utility.yul\":13731:13766   */\n      eq\n        /* \"#utility.yul\":13721:13784   */\n      tag_451\n      jumpi\n        /* \"#utility.yul\":13780:13781   */\n      0x00\n        /* \"#utility.yul\":13777:13778   */\n      dup1\n        /* \"#utility.yul\":13770:13782   */\n      revert\n        /* \"#utility.yul\":13721:13784   */\n    tag_451:\n        /* \"#utility.yul\":13668:13790   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d1d5fbf681d4525c216ecb284c0ab2f758db70a21475536f2e912acd42b617ff64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_156": {
									"entryPoint": null,
									"id": 156,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_165": {
									"entryPoint": 206,
									"id": 165,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 441,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:516:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:269:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "68:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "82:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "88:1:3",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "78:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "68:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "99:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "129:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "135:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "125:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "125:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "103:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "176:51:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "190:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "204:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "212:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "200:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "200:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "190:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "156:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "149:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "149:26:3"
															},
															"nodeType": "YulIf",
															"src": "146:81:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:42:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "293:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "243:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "266:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "274:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "263:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "263:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "240:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "240:38:3"
															},
															"nodeType": "YulIf",
															"src": "237:84:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "42:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "51:6:3",
														"type": ""
													}
												],
												"src": "7:320:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "361:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "378:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "381:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "371:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "371:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "371:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "475:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "478:4:3",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "468:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "468:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "468:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "499:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "502:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "492:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "492:15:3"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "333:180:3"
											}
										]
									},
									"contents": "{\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040518060400160405280600581526020017f417a756b690000000000000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f415a554b49000000000000000000000000000000000000000000000000000000815250816002908051906020019062000096929190620000d3565b508060039080519060200190620000af929190620000d3565b50620000c0620000ce60201b60201c565b6000819055505050620001e8565b600090565b828054620000e19062000183565b90600052602060002090601f01602090048101928262000105576000855562000151565b82601f106200012057805160ff191683800117855562000151565b8280016001018555821562000151579182015b828111156200015057825182559160200191906001019062000133565b5b50905062000160919062000164565b5090565b5b808211156200017f57600081600090555060010162000165565b5090565b600060028204905060018216806200019c57607f821691505b60208210811415620001b357620001b2620001b9565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b611c9f80620001f86000396000f3fe6080604052600436106100e85760003560e01c80636352211e1161008a578063a22cb46511610059578063a22cb465146102f9578063b88d4fde14610322578063c87b56dd1461034b578063e985e9c514610388576100e8565b80636352211e1461023857806370a082311461027557806395d89b41146102b2578063a0712d68146102dd576100e8565b8063095ea7b3116100c6578063095ea7b31461019257806318160ddd146101bb57806323b872dd146101e657806342842e0e1461020f576100e8565b806301ffc9a7146100ed57806306fdde031461012a578063081812fc14610155575b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f919061179e565b6103c5565b6040516101219190611980565b60405180910390f35b34801561013657600080fd5b5061013f610457565b60405161014c919061199b565b60405180910390f35b34801561016157600080fd5b5061017c600480360381019061017791906117f8565b6104e9565b6040516101899190611919565b60405180910390f35b34801561019e57600080fd5b506101b960048036038101906101b4919061175e565b610565565b005b3480156101c757600080fd5b506101d06106a6565b6040516101dd91906119bd565b60405180910390f35b3480156101f257600080fd5b5061020d60048036038101906102089190611648565b6106bd565b005b34801561021b57600080fd5b5061023660048036038101906102319190611648565b6109e2565b005b34801561024457600080fd5b5061025f600480360381019061025a91906117f8565b610a02565b60405161026c9190611919565b60405180910390f35b34801561028157600080fd5b5061029c600480360381019061029791906115db565b610a14565b6040516102a991906119bd565b60405180910390f35b3480156102be57600080fd5b506102c7610acd565b6040516102d4919061199b565b60405180910390f35b6102f760048036038101906102f291906117f8565b610b5f565b005b34801561030557600080fd5b50610320600480360381019061031b919061171e565b610b6c565b005b34801561032e57600080fd5b506103496004803603810190610344919061169b565b610ce4565b005b34801561035757600080fd5b50610372600480360381019061036d91906117f8565b610d57565b60405161037f919061199b565b60405180910390f35b34801561039457600080fd5b506103af60048036038101906103aa9190611608565b610df6565b6040516103bc9190611980565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061042057506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104505750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606002805461046690611b27565b80601f016020809104026020016040519081016040528092919081815260200182805461049290611b27565b80156104df5780601f106104b4576101008083540402835291602001916104df565b820191906000526020600020905b8154815290600101906020018083116104c257829003601f168201915b5050505050905090565b60006104f482610e8a565b61052a576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061057082610a02565b90508073ffffffffffffffffffffffffffffffffffffffff16610591610ee9565b73ffffffffffffffffffffffffffffffffffffffff16146105f4576105bd816105b8610ee9565b610df6565b6105f3576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826006600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60006106b0610ef1565b6001546000540303905090565b60006106c882610ef6565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461072f576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008061073b84610fc4565b91509150610751818761074c610ee9565b610fe6565b61079d5761076686610761610ee9565b610df6565b61079c576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610804576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610811868686600161102a565b801561081c57600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154600101919050819055506108ea856108c6888887611030565b7c020000000000000000000000000000000000000000000000000000000017611058565b600460008681526020019081526020016000208190555060007c02000000000000000000000000000000000000000000000000000000008416141561097257600060018501905060006004600083815260200190815260200160002054141561097057600054811461096f578360046000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46109da8686866001611083565b505050505050565b6109fd83838360405180602001604052806000815250610ce4565b505050565b6000610a0d82610ef6565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a7c576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b606060038054610adc90611b27565b80601f0160208091040260200160405190810160405280929190818152602001828054610b0890611b27565b8015610b555780601f10610b2a57610100808354040283529160200191610b55565b820191906000526020600020905b815481529060010190602001808311610b3857829003601f168201915b5050505050905090565b610b693382611089565b50565b610b74610ee9565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610bd9576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060076000610be6610ee9565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610c93610ee9565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610cd89190611980565b60405180910390a35050565b610cef8484846106bd565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610d5157610d1a848484846110a7565b610d50576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6060610d6282610e8a565b610d98576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610da2611207565b9050600081511415610dc35760405180602001604052806000815250610dee565b80610dcd8461121e565b604051602001610dde9291906118f5565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081610e95610ef1565b11158015610ea4575060005482105b8015610ee2575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b600033905090565b600090565b60008082905080610f05610ef1565b11610f8d57600054811015610f8c5760006004600083815260200190815260200160002054905060007c010000000000000000000000000000000000000000000000000000000082161415610f8a575b6000811415610f80576004600083600190039350838152602001908152602001600020549050610f55565b8092505050610fbf565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000806000600690508360005280602052604060002092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e8611047868684611278565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b6110a3828260405180602001604052806000815250611281565b5050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a026110cd610ee9565b8786866040518563ffffffff1660e01b81526004016110ef9493929190611934565b602060405180830381600087803b15801561110957600080fd5b505af192505050801561113a57506040513d601f19601f8201168201806040525081019061113791906117cb565b60015b6111b4573d806000811461116a576040519150601f19603f3d011682016040523d82523d6000602084013e61116f565b606091505b506000815114156111ac576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b60606080604051019050806040528082600183039250600a81066030018353600a810490505b801561126457600183039250600a81066030018353600a81049050611244565b508181036020830392508083525050919050565b60009392505050565b61128b838361131e565b60008373ffffffffffffffffffffffffffffffffffffffff163b1461131957600080549050600083820390505b6112cb60008683806001019450866110a7565b611301576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8181106112b857816000541461131657600080fd5b50505b505050565b600080549050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561138b576040517f2e07630000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008214156113c6576040517fb562e8dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6113d3600084838561102a565b600160406001901b178202600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555061144a8361143b6000866000611030565b611444856114f2565b17611058565b60046000838152602001908152602001600020819055506000819050600083830190505b818060010192508573ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a480821061146e578060008190555050506114ed6000848385611083565b505050565b60006001821460e11b9050919050565b6000611515611510846119fd565b6119d8565b90508281526020810184848401111561153157611530611bed565b5b61153c848285611ae5565b509392505050565b60008135905061155381611c0d565b92915050565b60008135905061156881611c24565b92915050565b60008135905061157d81611c3b565b92915050565b60008151905061159281611c3b565b92915050565b600082601f8301126115ad576115ac611be8565b5b81356115bd848260208601611502565b91505092915050565b6000813590506115d581611c52565b92915050565b6000602082840312156115f1576115f0611bf7565b5b60006115ff84828501611544565b91505092915050565b6000806040838503121561161f5761161e611bf7565b5b600061162d85828601611544565b925050602061163e85828601611544565b9150509250929050565b60008060006060848603121561166157611660611bf7565b5b600061166f86828701611544565b935050602061168086828701611544565b9250506040611691868287016115c6565b9150509250925092565b600080600080608085870312156116b5576116b4611bf7565b5b60006116c387828801611544565b94505060206116d487828801611544565b93505060406116e5878288016115c6565b925050606085013567ffffffffffffffff81111561170657611705611bf2565b5b61171287828801611598565b91505092959194509250565b6000806040838503121561173557611734611bf7565b5b600061174385828601611544565b925050602061175485828601611559565b9150509250929050565b6000806040838503121561177557611774611bf7565b5b600061178385828601611544565b9250506020611794858286016115c6565b9150509250929050565b6000602082840312156117b4576117b3611bf7565b5b60006117c28482850161156e565b91505092915050565b6000602082840312156117e1576117e0611bf7565b5b60006117ef84828501611583565b91505092915050565b60006020828403121561180e5761180d611bf7565b5b600061181c848285016115c6565b91505092915050565b61182e81611a71565b82525050565b61183d81611a83565b82525050565b600061184e82611a2e565b6118588185611a44565b9350611868818560208601611af4565b61187181611bfc565b840191505092915050565b600061188782611a39565b6118918185611a55565b93506118a1818560208601611af4565b6118aa81611bfc565b840191505092915050565b60006118c082611a39565b6118ca8185611a66565b93506118da818560208601611af4565b80840191505092915050565b6118ef81611adb565b82525050565b600061190182856118b5565b915061190d82846118b5565b91508190509392505050565b600060208201905061192e6000830184611825565b92915050565b60006080820190506119496000830187611825565b6119566020830186611825565b61196360408301856118e6565b81810360608301526119758184611843565b905095945050505050565b60006020820190506119956000830184611834565b92915050565b600060208201905081810360008301526119b5818461187c565b905092915050565b60006020820190506119d260008301846118e6565b92915050565b60006119e26119f3565b90506119ee8282611b59565b919050565b6000604051905090565b600067ffffffffffffffff821115611a1857611a17611bb9565b5b611a2182611bfc565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611a7c82611abb565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611b12578082015181840152602081019050611af7565b83811115611b21576000848401525b50505050565b60006002820490506001821680611b3f57607f821691505b60208210811415611b5357611b52611b8a565b5b50919050565b611b6282611bfc565b810181811067ffffffffffffffff82111715611b8157611b80611bb9565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b611c1681611a71565b8114611c2157600080fd5b50565b611c2d81611a83565b8114611c3857600080fd5b50565b611c4481611a8f565b8114611c4f57600080fd5b50565b611c5b81611adb565b8114611c6657600080fd5b5056fea2646970667358221220d1d5fbf681d4525c216ecb284c0ab2f758db70a21475536f2e912acd42b617ff64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x417A756B69000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x415A554B49000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x96 SWAP3 SWAP2 SWAP1 PUSH3 0xD3 JUMP JUMPDEST POP DUP1 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xAF SWAP3 SWAP2 SWAP1 PUSH3 0xD3 JUMP JUMPDEST POP PUSH3 0xC0 PUSH3 0xCE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x1E8 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xE1 SWAP1 PUSH3 0x183 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x105 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x151 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x120 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x151 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x151 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x150 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x133 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x160 SWAP2 SWAP1 PUSH3 0x164 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x17F JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x165 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x19C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x1B3 JUMPI PUSH3 0x1B2 PUSH3 0x1B9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1C9F DUP1 PUSH3 0x1F8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x388 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x2DD JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x20F JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x155 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x179E JUMP JUMPDEST PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x457 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x17F8 JUMP JUMPDEST PUSH2 0x4E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1919 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST PUSH2 0x565 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x6A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x19BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x1648 JUMP JUMPDEST PUSH2 0x6BD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x236 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x1648 JUMP JUMPDEST PUSH2 0x9E2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x17F8 JUMP JUMPDEST PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x1919 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x15DB JUMP JUMPDEST PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x19BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C7 PUSH2 0xACD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x17F8 JUMP JUMPDEST PUSH2 0xB5F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x320 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x171E JUMP JUMPDEST PUSH2 0xB6C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x169B JUMP JUMPDEST PUSH2 0xCE4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x372 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x17F8 JUMP JUMPDEST PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x1608 JUMP JUMPDEST PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x420 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x450 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x466 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x492 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4DF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4DF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F4 DUP3 PUSH2 0xE8A JUMP JUMPDEST PUSH2 0x52A JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x570 DUP3 PUSH2 0xA02 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x591 PUSH2 0xEE9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5F4 JUMPI PUSH2 0x5BD DUP2 PUSH2 0x5B8 PUSH2 0xEE9 JUMP JUMPDEST PUSH2 0xDF6 JUMP JUMPDEST PUSH2 0x5F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B0 PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C8 DUP3 PUSH2 0xEF6 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x72F JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x73B DUP5 PUSH2 0xFC4 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x751 DUP2 DUP8 PUSH2 0x74C PUSH2 0xEE9 JUMP JUMPDEST PUSH2 0xFE6 JUMP JUMPDEST PUSH2 0x79D JUMPI PUSH2 0x766 DUP7 PUSH2 0x761 PUSH2 0xEE9 JUMP JUMPDEST PUSH2 0xDF6 JUMP JUMPDEST PUSH2 0x79C JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x804 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x811 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0x102A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x81C JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x8EA DUP6 PUSH2 0x8C6 DUP9 DUP9 DUP8 PUSH2 0x1030 JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH2 0x1058 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND EQ ISZERO PUSH2 0x972 JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x970 JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x96F JUMPI DUP4 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x9DA DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0x1083 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9FD DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xCE4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA0D DUP3 PUSH2 0xEF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA7C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0xADC SWAP1 PUSH2 0x1B27 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB08 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB55 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB2A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB55 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB38 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB69 CALLER DUP3 PUSH2 0x1089 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xB74 PUSH2 0xEE9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06307DB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0xBE6 PUSH2 0xEE9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC93 PUSH2 0xEE9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCD8 SWAP2 SWAP1 PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xCEF DUP5 DUP5 DUP5 PUSH2 0x6BD JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0xD51 JUMPI PUSH2 0xD1A DUP5 DUP5 DUP5 DUP5 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0xD50 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD62 DUP3 PUSH2 0xE8A JUMP JUMPDEST PUSH2 0xD98 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDA2 PUSH2 0x1207 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0xDC3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xDEE JUMP JUMPDEST DUP1 PUSH2 0xDCD DUP5 PUSH2 0x121E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDDE SWAP3 SWAP2 SWAP1 PUSH2 0x18F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xE95 PUSH2 0xEF1 JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xEA4 JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0xEE2 JUMPI POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP DUP1 PUSH2 0xF05 PUSH2 0xEF1 JUMP JUMPDEST GT PUSH2 0xF8D JUMPI PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0xF8C JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND EQ ISZERO PUSH2 0xF8A JUMPI JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xF80 JUMPI PUSH1 0x4 PUSH1 0x0 DUP4 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0xF55 JUMP JUMPDEST DUP1 SWAP3 POP POP POP PUSH2 0xFBF JUMP JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 SWAP1 POP DUP4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 POP DUP3 SLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 POP DUP4 DUP3 EQ DUP4 DUP4 EQ OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE8 DUP4 SWAP1 SHR SWAP1 POP PUSH1 0xE8 PUSH2 0x1047 DUP7 DUP7 DUP5 PUSH2 0x1278 JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 SHL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP DUP2 TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x10A3 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1281 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x10CD PUSH2 0xEE9 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10EF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1934 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x113A JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1137 SWAP2 SWAP1 PUSH2 0x17CB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x11B4 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x116A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x116F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x11AC JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x80 PUSH1 0x40 MLOAD ADD SWAP1 POP DUP1 PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP JUMPDEST DUP1 ISZERO PUSH2 0x1264 JUMPI PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP PUSH2 0x1244 JUMP JUMPDEST POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 SUB SWAP3 POP DUP1 DUP4 MSTORE POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x128B DUP4 DUP4 PUSH2 0x131E JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0x1319 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 DUP4 DUP3 SUB SWAP1 POP JUMPDEST PUSH2 0x12CB PUSH1 0x0 DUP7 DUP4 DUP1 PUSH1 0x1 ADD SWAP5 POP DUP7 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0x1301 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x12B8 JUMPI DUP2 PUSH1 0x0 SLOAD EQ PUSH2 0x1316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x138B JUMPI PUSH1 0x40 MLOAD PUSH32 0x2E07630000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x13C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB562E8DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13D3 PUSH1 0x0 DUP5 DUP4 DUP6 PUSH2 0x102A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x40 PUSH1 0x1 SWAP1 SHL OR DUP3 MUL PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x144A DUP4 PUSH2 0x143B PUSH1 0x0 DUP7 PUSH1 0x0 PUSH2 0x1030 JUMP JUMPDEST PUSH2 0x1444 DUP6 PUSH2 0x14F2 JUMP JUMPDEST OR PUSH2 0x1058 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP4 DUP4 ADD SWAP1 POP JUMPDEST DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 DUP3 LT PUSH2 0x146E JUMPI DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x14ED PUSH1 0x0 DUP5 DUP4 DUP6 PUSH2 0x1083 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH1 0xE1 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1515 PUSH2 0x1510 DUP5 PUSH2 0x19FD JUMP JUMPDEST PUSH2 0x19D8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1531 JUMPI PUSH2 0x1530 PUSH2 0x1BED JUMP JUMPDEST JUMPDEST PUSH2 0x153C DUP5 DUP3 DUP6 PUSH2 0x1AE5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1553 DUP2 PUSH2 0x1C0D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1568 DUP2 PUSH2 0x1C24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x157D DUP2 PUSH2 0x1C3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1592 DUP2 PUSH2 0x1C3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15AD JUMPI PUSH2 0x15AC PUSH2 0x1BE8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x15BD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1502 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15D5 DUP2 PUSH2 0x1C52 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15F1 JUMPI PUSH2 0x15F0 PUSH2 0x1BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15FF DUP5 DUP3 DUP6 ADD PUSH2 0x1544 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x161F JUMPI PUSH2 0x161E PUSH2 0x1BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x162D DUP6 DUP3 DUP7 ADD PUSH2 0x1544 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x163E DUP6 DUP3 DUP7 ADD PUSH2 0x1544 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1661 JUMPI PUSH2 0x1660 PUSH2 0x1BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x166F DUP7 DUP3 DUP8 ADD PUSH2 0x1544 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1680 DUP7 DUP3 DUP8 ADD PUSH2 0x1544 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1691 DUP7 DUP3 DUP8 ADD PUSH2 0x15C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x16B5 JUMPI PUSH2 0x16B4 PUSH2 0x1BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16C3 DUP8 DUP3 DUP9 ADD PUSH2 0x1544 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x16D4 DUP8 DUP3 DUP9 ADD PUSH2 0x1544 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x16E5 DUP8 DUP3 DUP9 ADD PUSH2 0x15C6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1706 JUMPI PUSH2 0x1705 PUSH2 0x1BF2 JUMP JUMPDEST JUMPDEST PUSH2 0x1712 DUP8 DUP3 DUP9 ADD PUSH2 0x1598 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1735 JUMPI PUSH2 0x1734 PUSH2 0x1BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1743 DUP6 DUP3 DUP7 ADD PUSH2 0x1544 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1754 DUP6 DUP3 DUP7 ADD PUSH2 0x1559 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1775 JUMPI PUSH2 0x1774 PUSH2 0x1BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1783 DUP6 DUP3 DUP7 ADD PUSH2 0x1544 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1794 DUP6 DUP3 DUP7 ADD PUSH2 0x15C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17B4 JUMPI PUSH2 0x17B3 PUSH2 0x1BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17C2 DUP5 DUP3 DUP6 ADD PUSH2 0x156E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17E1 JUMPI PUSH2 0x17E0 PUSH2 0x1BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17EF DUP5 DUP3 DUP6 ADD PUSH2 0x1583 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x180E JUMPI PUSH2 0x180D PUSH2 0x1BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x181C DUP5 DUP3 DUP6 ADD PUSH2 0x15C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x182E DUP2 PUSH2 0x1A71 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x183D DUP2 PUSH2 0x1A83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x184E DUP3 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0x1858 DUP2 DUP6 PUSH2 0x1A44 JUMP JUMPDEST SWAP4 POP PUSH2 0x1868 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1AF4 JUMP JUMPDEST PUSH2 0x1871 DUP2 PUSH2 0x1BFC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1887 DUP3 PUSH2 0x1A39 JUMP JUMPDEST PUSH2 0x1891 DUP2 DUP6 PUSH2 0x1A55 JUMP JUMPDEST SWAP4 POP PUSH2 0x18A1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1AF4 JUMP JUMPDEST PUSH2 0x18AA DUP2 PUSH2 0x1BFC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18C0 DUP3 PUSH2 0x1A39 JUMP JUMPDEST PUSH2 0x18CA DUP2 DUP6 PUSH2 0x1A66 JUMP JUMPDEST SWAP4 POP PUSH2 0x18DA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1AF4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18EF DUP2 PUSH2 0x1ADB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1901 DUP3 DUP6 PUSH2 0x18B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x190D DUP3 DUP5 PUSH2 0x18B5 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x192E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1825 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1949 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1825 JUMP JUMPDEST PUSH2 0x1956 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1825 JUMP JUMPDEST PUSH2 0x1963 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x18E6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1975 DUP2 DUP5 PUSH2 0x1843 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1995 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1834 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19B5 DUP2 DUP5 PUSH2 0x187C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19D2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E2 PUSH2 0x19F3 JUMP JUMPDEST SWAP1 POP PUSH2 0x19EE DUP3 DUP3 PUSH2 0x1B59 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1A18 JUMPI PUSH2 0x1A17 PUSH2 0x1BB9 JUMP JUMPDEST JUMPDEST PUSH2 0x1A21 DUP3 PUSH2 0x1BFC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A7C DUP3 PUSH2 0x1ABB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B12 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1AF7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1B21 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1B3F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1B53 JUMPI PUSH2 0x1B52 PUSH2 0x1B8A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B62 DUP3 PUSH2 0x1BFC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1B81 JUMPI PUSH2 0x1B80 PUSH2 0x1BB9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C16 DUP2 PUSH2 0x1A71 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1C2D DUP2 PUSH2 0x1A83 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1C44 DUP2 PUSH2 0x1A8F JUMP JUMPDEST DUP2 EQ PUSH2 0x1C4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1C5B DUP2 PUSH2 0x1ADB JUMP JUMPDEST DUP2 EQ PUSH2 0x1C66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 0xD5 0xFB 0xF6 DUP2 0xD4 MSTORE 0x5C 0x21 PUSH15 0xCB284C0AB2F758DB70A21475536F2E SWAP2 0x2A 0xCD TIMESTAMP 0xB6 OR SELFDESTRUCT PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "98:244:0:-:0;;;128:42;;;;;;;;;;3986:154:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4060:5;4052;:13;;;;;;;;;;;;:::i;:::-;;4085:7;4075;:17;;;;;;;;;;;;:::i;:::-;;4118:15;:13;;;:15;;:::i;:::-;4102:13;:31;;;;3986:154;;98:244:0;;4276:90:1;4332:7;4276:90;:::o;98:244:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:320:3:-;51:6;88:1;82:4;78:12;68:22;;135:1;129:4;125:12;156:18;146:81;;212:4;204:6;200:17;190:27;;146:81;274:2;266:6;263:14;243:18;240:38;237:84;;;293:18;;:::i;:::-;237:84;58:269;7:320;;;:::o;333:180::-;381:77;378:1;371:88;478:4;475:1;468:15;502:4;499:1;492:15;98:244:0;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_1643": {
									"entryPoint": 4227,
									"id": 1643,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_617": {
									"entryPoint": 4615,
									"id": 617,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1630": {
									"entryPoint": 4138,
									"id": 1630,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_1527": {
									"entryPoint": 4263,
									"id": 1527,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_828": {
									"entryPoint": 3722,
									"id": 828,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_1617": {
									"entryPoint": 4728,
									"id": 1617,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedAddress_1149": {
									"entryPoint": 4036,
									"id": 1149,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isOwnerOrApproved_1163": {
									"entryPoint": 4070,
									"id": 1163,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_1019": {
									"entryPoint": 4894,
									"id": 1019,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSenderERC721A_1653": {
									"entryPoint": 3817,
									"id": 1653,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_1604": {
									"entryPoint": 4144,
									"id": 1604,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_nextInitializedFlag_627": {
									"entryPoint": 5362,
									"id": 627,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_packOwnershipData_525": {
									"entryPoint": 4184,
									"id": 525,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_405": {
									"entryPoint": 3830,
									"id": 405,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_843": {
									"entryPoint": 4233,
									"id": 843,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_905": {
									"entryPoint": 4737,
									"id": 905,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_startTokenId_165": {
									"entryPoint": 3825,
									"id": 165,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_toString_1663": {
									"entryPoint": 4638,
									"id": 1663,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@approve_671": {
									"entryPoint": 1381,
									"id": 671,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_260": {
									"entryPoint": 2580,
									"id": 260,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_693": {
									"entryPoint": 1257,
									"id": 693,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_745": {
									"entryPoint": 3574,
									"id": 745,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_24": {
									"entryPoint": 2911,
									"id": 24,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_555": {
									"entryPoint": 1111,
									"id": 555,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_545": {
									"entryPoint": 2562,
									"id": 545,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_764": {
									"entryPoint": 2530,
									"id": 764,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_802": {
									"entryPoint": 3300,
									"id": 802,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_727": {
									"entryPoint": 2924,
									"id": 727,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_234": {
									"entryPoint": 965,
									"id": 234,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_565": {
									"entryPoint": 2765,
									"id": 565,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_608": {
									"entryPoint": 3415,
									"id": 608,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_190": {
									"entryPoint": 1702,
									"id": 190,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1308": {
									"entryPoint": 1725,
									"id": 1308,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 5378,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 5507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 5528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 5787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6389,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6452,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6643,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 6653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 6702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 6885,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 6900,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7050,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7097,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7144,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7149,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7154,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7159,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 7181,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13793:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "90:327:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "100:74:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "166:6:3"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "125:40:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:48:3"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "109:15:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "109:65:3"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "100:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "190:5:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "197:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "183:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "183:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "183:21:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "213:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "228:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "224:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:16:3"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "217:3:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "278:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "280:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "280:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "280:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "259:3:3"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "264:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "255:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "255:16:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "273:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "252:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:25:3"
															},
															"nodeType": "YulIf",
															"src": "249:112:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "394:3:3"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "399:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "404:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "370:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "370:41:3"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "63:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "76:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "84:5:3",
														"type": ""
													}
												],
												"src": "7:410:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "485:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "507:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "494:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "485:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "523:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "453:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "461:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:3",
														"type": ""
													}
												],
												"src": "423:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "617:84:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "627:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "649:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "636:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "636:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "665:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "665:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "665:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "603:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:3",
														"type": ""
													}
												],
												"src": "568:133:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "758:86:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "768:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "790:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "777:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "777:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "768:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "832:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "806:25:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "806:32:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "806:32:3"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "736:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "744:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "752:5:3",
														"type": ""
													}
												],
												"src": "707:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "912:79:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "922:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "937:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "931:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "931:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "922:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "979:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "953:25:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "953:32:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "953:32:3"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "890:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "898:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "906:5:3",
														"type": ""
													}
												],
												"src": "850:141:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1071:277:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1120:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1122:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1122:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1122:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1099:6:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1107:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1095:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1095:17:3"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1114:3:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1091:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1091:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1084:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1084:35:3"
															},
															"nodeType": "YulIf",
															"src": "1081:122:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1212:34:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1239:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1226:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1226:20:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1216:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1255:87:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1315:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1323:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1311:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1311:17:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1330:6:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1338:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1264:46:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1264:78:3"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1255:5:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1049:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1057:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1065:5:3",
														"type": ""
													}
												],
												"src": "1010:338:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1406:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1416:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1438:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1425:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1425:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1416:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1481:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1454:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1454:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1454:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1384:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1392:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1400:5:3",
														"type": ""
													}
												],
												"src": "1354:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1565:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1611:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1613:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1613:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1613:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1586:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1595:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1582:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1582:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1607:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1578:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1578:32:3"
															},
															"nodeType": "YulIf",
															"src": "1575:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1704:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1719:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1733:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1723:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1748:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1783:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1794:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1779:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1779:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1803:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1758:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1758:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1748:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1535:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1546:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1558:6:3",
														"type": ""
													}
												],
												"src": "1499:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1917:391:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1963:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1965:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1965:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1938:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1947:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1934:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1934:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1959:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1930:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1930:32:3"
															},
															"nodeType": "YulIf",
															"src": "1927:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2056:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2071:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2085:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2075:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2100:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2135:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2146:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2131:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2131:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2155:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2110:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2110:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2100:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2183:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2198:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2212:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2202:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2228:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2263:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2274:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2259:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2259:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2283:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2238:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2238:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2228:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1879:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1890:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1902:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1910:6:3",
														"type": ""
													}
												],
												"src": "1834:474:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2414:519:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2460:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2462:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2462:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2462:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2435:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2444:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2431:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2431:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2456:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2427:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2427:32:3"
															},
															"nodeType": "YulIf",
															"src": "2424:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2553:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2568:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2582:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2572:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2597:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2632:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2643:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2628:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2628:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2652:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2607:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2607:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2597:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2680:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2695:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2709:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2699:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2725:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2760:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2771:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2756:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2756:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2780:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2735:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2735:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2725:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2808:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2823:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2837:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2827:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2853:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2888:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2899:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2884:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2884:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2908:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2863:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2863:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2853:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2368:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2379:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2391:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2399:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2407:6:3",
														"type": ""
													}
												],
												"src": "2314:619:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3065:817:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3112:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3114:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3114:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3114:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3086:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3095:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3082:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3082:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3107:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3078:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3078:33:3"
															},
															"nodeType": "YulIf",
															"src": "3075:120:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "3205:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3220:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3234:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3224:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3249:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3284:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3295:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3280:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3280:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3304:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3259:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3259:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3249:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3332:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3347:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3361:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3351:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3377:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3412:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3423:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3408:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3408:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3432:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3387:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3387:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3377:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3460:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3475:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3489:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3479:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3505:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3540:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3551:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3536:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3536:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3560:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3515:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3515:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3505:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3588:287:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3603:46:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3634:9:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3645:2:3",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3630:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3630:18:3"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3617:12:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3617:32:3"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3607:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3696:83:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3698:77:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3698:79:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3698:79:3"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3668:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3676:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3665:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3665:30:3"
																	},
																	"nodeType": "YulIf",
																	"src": "3662:117:3"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3793:72:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3837:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3848:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3833:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3833:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3857:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3803:29:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3803:62:3"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "3793:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3011:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3022:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3034:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3042:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3050:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3058:6:3",
														"type": ""
													}
												],
												"src": "2939:943:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3968:388:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4014:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4016:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4016:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4016:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3989:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3998:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3985:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3985:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4010:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3981:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:32:3"
															},
															"nodeType": "YulIf",
															"src": "3978:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "4107:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4122:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4136:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4126:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4151:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4186:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4197:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4182:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4182:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4206:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4161:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4161:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4151:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4234:115:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4249:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4263:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4253:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4279:60:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4311:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4322:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4307:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4307:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4331:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4289:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4289:50:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4279:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3930:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3941:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3953:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3961:6:3",
														"type": ""
													}
												],
												"src": "3888:468:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4445:391:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4491:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4493:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4493:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4493:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4466:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4475:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4462:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4462:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4487:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4458:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4458:32:3"
															},
															"nodeType": "YulIf",
															"src": "4455:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "4584:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4599:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4613:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4603:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4628:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4663:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4674:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4659:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4659:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4683:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4638:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4638:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4628:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4711:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4726:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4740:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4730:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4756:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4791:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4802:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4787:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4787:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4811:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4766:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4766:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4756:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4407:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4418:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4430:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4438:6:3",
														"type": ""
													}
												],
												"src": "4362:474:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4907:262:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4953:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4955:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4955:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4955:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4928:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4937:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4924:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4924:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4949:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4920:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4920:32:3"
															},
															"nodeType": "YulIf",
															"src": "4917:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "5046:116:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5061:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5075:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5065:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5090:62:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5124:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5135:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5120:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5120:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5144:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "5100:19:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5100:52:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5090:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4877:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4888:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4900:6:3",
														"type": ""
													}
												],
												"src": "4842:327:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5251:273:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5297:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5299:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5299:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5299:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5272:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5281:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5268:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5268:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5293:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5264:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5264:32:3"
															},
															"nodeType": "YulIf",
															"src": "5261:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "5390:127:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5405:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5419:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5409:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5434:73:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5479:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5490:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5475:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5475:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5499:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5444:30:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5444:63:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5434:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5221:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5232:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5244:6:3",
														"type": ""
													}
												],
												"src": "5175:349:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5596:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5642:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5644:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5644:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5644:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5617:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5626:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5613:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5613:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5638:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5609:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5609:32:3"
															},
															"nodeType": "YulIf",
															"src": "5606:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "5735:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5750:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5764:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5754:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5779:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5814:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5825:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5810:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5810:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5834:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5789:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5789:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5779:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5566:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5577:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5589:6:3",
														"type": ""
													}
												],
												"src": "5530:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5930:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5947:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5970:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5952:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5952:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5940:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5940:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5940:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5918:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5925:3:3",
														"type": ""
													}
												],
												"src": "5865:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6048:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6065:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6085:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6070:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6070:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6058:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6058:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6058:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6036:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6043:3:3",
														"type": ""
													}
												],
												"src": "5989:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6194:270:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6204:52:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6250:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6218:31:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6218:38:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6208:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6265:77:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6330:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6335:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6272:57:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6272:70:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6265:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6377:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6384:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6373:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6373:16:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6391:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6396:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6351:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6351:52:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6351:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6412:46:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6423:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6450:6:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "6428:21:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6428:29:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6419:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6419:39:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6412:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6175:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6182:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6190:3:3",
														"type": ""
													}
												],
												"src": "6104:360:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6562:272:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6572:53:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6619:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6586:32:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6586:39:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6576:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6634:78:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6700:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6705:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6641:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6641:71:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6634:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6747:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6754:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6743:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6743:16:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6761:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6766:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6721:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6721:52:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6721:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6782:46:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6793:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6820:6:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "6798:21:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6798:29:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6789:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6789:39:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6782:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6543:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6550:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6558:3:3",
														"type": ""
													}
												],
												"src": "6470:364:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6950:267:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6960:53:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7007:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6974:32:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6974:39:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6964:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7022:96:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7106:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7111:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7029:76:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7029:89:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7022:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7153:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7160:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7149:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7149:16:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7167:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7172:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7127:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7127:52:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7127:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7188:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7199:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7204:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7195:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7195:16:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7188:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6931:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6938:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6946:3:3",
														"type": ""
													}
												],
												"src": "6840:377:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7288:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7305:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7328:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7310:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7310:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7298:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7298:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7298:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7276:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7283:3:3",
														"type": ""
													}
												],
												"src": "7223:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7531:251:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7542:102:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7631:6:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7640:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7549:81:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7549:95:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7542:3:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7654:102:3",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7743:6:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7752:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7661:81:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7661:95:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7654:3:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7766:10:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7773:3:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7766:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7502:3:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7508:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7516:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7527:3:3",
														"type": ""
													}
												],
												"src": "7347:435:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7886:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7896:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7908:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7919:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7904:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7904:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7896:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7976:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7989:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8000:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7985:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7985:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7932:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7932:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7932:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7858:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7870:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7881:4:3",
														"type": ""
													}
												],
												"src": "7788:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8216:440:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8226:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8238:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8249:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8234:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8234:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8226:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8307:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8320:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8331:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8316:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8316:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8263:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8263:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8263:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8388:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8401:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8412:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8397:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8397:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8344:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8344:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8344:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8470:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8483:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8494:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8479:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8479:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8426:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8426:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8426:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8519:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8530:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8515:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8515:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8539:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8545:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8535:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8535:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8508:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8508:48:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8508:48:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8565:84:3",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8635:6:3"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8644:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8573:61:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8573:76:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8565:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8164:9:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8176:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8184:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8192:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8200:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8211:4:3",
														"type": ""
													}
												],
												"src": "8016:640:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8754:118:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8764:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8776:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8787:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8772:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8772:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8764:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8838:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8851:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8862:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8847:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8847:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8800:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8800:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8800:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8726:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8738:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8749:4:3",
														"type": ""
													}
												],
												"src": "8662:210:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8996:195:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9006:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9018:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9029:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9014:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9014:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9006:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9053:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9064:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9049:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9049:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9072:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9078:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9068:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9068:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9042:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9042:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9042:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9098:86:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9170:6:3"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9179:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9106:63:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9106:78:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9098:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8968:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8980:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8991:4:3",
														"type": ""
													}
												],
												"src": "8878:313:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9295:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9305:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9317:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9328:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9313:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9313:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9305:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9385:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9398:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9409:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9394:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9394:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9341:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9341:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9341:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9267:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9279:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9290:4:3",
														"type": ""
													}
												],
												"src": "9197:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9466:88:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9476:30:3",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "9486:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9486:20:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "9476:6:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "9535:6:3"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "9543:4:3"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "9515:19:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9515:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9515:33:3"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9450:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9459:6:3",
														"type": ""
													}
												],
												"src": "9425:129:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9600:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9610:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9626:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9620:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9620:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "9610:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9593:6:3",
														"type": ""
													}
												],
												"src": "9560:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9707:241:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9812:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "9814:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9814:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9814:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9784:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9792:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9781:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9781:30:3"
															},
															"nodeType": "YulIf",
															"src": "9778:56:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9844:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9874:6:3"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "9852:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9852:29:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9844:4:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9918:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "9930:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9936:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9926:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9926:15:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9918:4:3"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9691:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9702:4:3",
														"type": ""
													}
												],
												"src": "9641:307:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10012:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10023:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10039:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10033:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10033:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10023:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9995:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10005:6:3",
														"type": ""
													}
												],
												"src": "9954:98:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10117:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10128:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10144:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10138:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10138:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10128:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10100:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10110:6:3",
														"type": ""
													}
												],
												"src": "10058:99:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10258:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10275:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10280:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10268:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10268:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10268:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10296:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10315:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10320:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10311:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10311:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10296:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10230:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10235:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10246:11:3",
														"type": ""
													}
												],
												"src": "10163:168:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10433:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10450:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10455:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10443:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10443:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10443:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10471:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10490:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10495:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10486:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10486:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10471:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10405:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10410:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10421:11:3",
														"type": ""
													}
												],
												"src": "10337:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10626:34:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10636:18:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10651:3:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10636:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10598:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10603:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10614:11:3",
														"type": ""
													}
												],
												"src": "10512:148:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10711:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10721:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10750:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10732:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10732:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10721:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10693:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10703:7:3",
														"type": ""
													}
												],
												"src": "10666:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10810:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10820:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10845:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10838:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10838:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10831:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10831:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10820:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10792:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10802:7:3",
														"type": ""
													}
												],
												"src": "10768:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10908:105:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10918:89:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10933:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10940:66:3",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10929:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10929:78:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10918:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10890:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10900:7:3",
														"type": ""
													}
												],
												"src": "10864:149:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11064:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11074:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11089:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11096:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11085:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11085:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11074:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11046:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11056:7:3",
														"type": ""
													}
												],
												"src": "11019:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11196:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11206:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11217:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11206:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11178:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11188:7:3",
														"type": ""
													}
												],
												"src": "11151:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11285:103:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "11308:3:3"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "11313:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11318:6:3"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "11295:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11295:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11295:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "11366:3:3"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11371:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11362:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11362:16:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11380:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11355:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11355:27:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11355:27:3"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "11267:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "11272:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11277:6:3",
														"type": ""
													}
												],
												"src": "11234:154:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11443:258:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11453:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11462:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "11457:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11522:63:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11547:3:3"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "11552:1:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11543:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11543:11:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "11566:3:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "11571:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "11562:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11562:11:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "11556:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11556:18:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11536:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11536:39:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11536:39:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11483:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11486:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11480:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11480:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11494:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11496:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "11505:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11508:2:3",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11501:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11501:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "11496:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11476:3:3",
																"statements": []
															},
															"src": "11472:113:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11619:76:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11669:3:3"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "11674:6:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11665:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11665:16:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11683:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11658:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11658:27:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11658:27:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11600:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11603:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11597:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11597:13:3"
															},
															"nodeType": "YulIf",
															"src": "11594:101:3"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "11425:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "11430:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11435:6:3",
														"type": ""
													}
												],
												"src": "11394:307:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11758:269:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11768:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11782:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11788:1:3",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11778:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11778:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11768:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11799:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11829:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11835:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11825:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11825:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "11803:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11876:51:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11890:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "11904:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11912:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "11900:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11900:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11890:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11856:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11849:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11849:26:3"
															},
															"nodeType": "YulIf",
															"src": "11846:81:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11979:42:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "11993:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11993:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11993:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11943:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11966:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11974:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "11963:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11963:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11940:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11940:38:3"
															},
															"nodeType": "YulIf",
															"src": "11937:84:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "11742:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11751:6:3",
														"type": ""
													}
												],
												"src": "11707:320:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12076:238:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12086:58:3",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "12108:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "12138:4:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "12116:21:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12116:27:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12104:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12104:40:3"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "12090:10:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12255:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "12257:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12257:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12257:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "12198:10:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12210:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12195:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12195:34:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "12234:10:3"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12246:6:3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "12231:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12231:22:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "12192:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12192:62:3"
															},
															"nodeType": "YulIf",
															"src": "12189:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12293:2:3",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "12297:10:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12286:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12286:22:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12286:22:3"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12062:6:3",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "12070:4:3",
														"type": ""
													}
												],
												"src": "12033:281:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12348:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12365:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12368:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12358:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12358:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12358:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12462:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12465:4:3",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12455:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12455:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12455:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12486:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12489:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12479:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12479:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12479:15:3"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "12320:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12534:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12551:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12554:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12544:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12544:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12544:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12648:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12651:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12641:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12641:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12641:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12672:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12675:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12665:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12665:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12665:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "12506:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12781:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12798:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12801:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12791:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12791:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12791:12:3"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "12692:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12904:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12921:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12924:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12914:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12914:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12914:12:3"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "12815:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13027:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13044:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13047:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13037:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13037:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13037:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "12938:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13150:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13167:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13170:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13160:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13160:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13160:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "13061:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13232:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13242:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13260:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13267:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13256:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13256:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13276:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "13272:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13272:7:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13252:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13252:28:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "13242:6:3"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13215:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "13225:6:3",
														"type": ""
													}
												],
												"src": "13184:102:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13335:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13392:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13401:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13404:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13394:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13394:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13394:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13358:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13383:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "13365:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13365:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13355:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13355:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13348:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13348:43:3"
															},
															"nodeType": "YulIf",
															"src": "13345:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13328:5:3",
														"type": ""
													}
												],
												"src": "13292:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13460:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13514:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13523:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13526:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13516:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13516:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13516:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13483:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13505:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "13490:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13490:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13480:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13480:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13473:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13473:40:3"
															},
															"nodeType": "YulIf",
															"src": "13470:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13453:5:3",
														"type": ""
													}
												],
												"src": "13420:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13584:78:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13640:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13649:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13652:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13642:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13642:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13642:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13607:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13631:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "13614:16:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13614:23:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13604:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13604:34:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13597:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13597:42:3"
															},
															"nodeType": "YulIf",
															"src": "13594:62:3"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13577:5:3",
														"type": ""
													}
												],
												"src": "13542:120:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13711:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13768:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13777:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13780:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13770:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13770:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13770:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13734:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13759:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "13741:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13741:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13731:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13731:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13724:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13724:43:3"
															},
															"nodeType": "YulIf",
															"src": "13721:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13704:5:3",
														"type": ""
													}
												],
												"src": "13668:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100e85760003560e01c80636352211e1161008a578063a22cb46511610059578063a22cb465146102f9578063b88d4fde14610322578063c87b56dd1461034b578063e985e9c514610388576100e8565b80636352211e1461023857806370a082311461027557806395d89b41146102b2578063a0712d68146102dd576100e8565b8063095ea7b3116100c6578063095ea7b31461019257806318160ddd146101bb57806323b872dd146101e657806342842e0e1461020f576100e8565b806301ffc9a7146100ed57806306fdde031461012a578063081812fc14610155575b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f919061179e565b6103c5565b6040516101219190611980565b60405180910390f35b34801561013657600080fd5b5061013f610457565b60405161014c919061199b565b60405180910390f35b34801561016157600080fd5b5061017c600480360381019061017791906117f8565b6104e9565b6040516101899190611919565b60405180910390f35b34801561019e57600080fd5b506101b960048036038101906101b4919061175e565b610565565b005b3480156101c757600080fd5b506101d06106a6565b6040516101dd91906119bd565b60405180910390f35b3480156101f257600080fd5b5061020d60048036038101906102089190611648565b6106bd565b005b34801561021b57600080fd5b5061023660048036038101906102319190611648565b6109e2565b005b34801561024457600080fd5b5061025f600480360381019061025a91906117f8565b610a02565b60405161026c9190611919565b60405180910390f35b34801561028157600080fd5b5061029c600480360381019061029791906115db565b610a14565b6040516102a991906119bd565b60405180910390f35b3480156102be57600080fd5b506102c7610acd565b6040516102d4919061199b565b60405180910390f35b6102f760048036038101906102f291906117f8565b610b5f565b005b34801561030557600080fd5b50610320600480360381019061031b919061171e565b610b6c565b005b34801561032e57600080fd5b506103496004803603810190610344919061169b565b610ce4565b005b34801561035757600080fd5b50610372600480360381019061036d91906117f8565b610d57565b60405161037f919061199b565b60405180910390f35b34801561039457600080fd5b506103af60048036038101906103aa9190611608565b610df6565b6040516103bc9190611980565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061042057506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104505750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606002805461046690611b27565b80601f016020809104026020016040519081016040528092919081815260200182805461049290611b27565b80156104df5780601f106104b4576101008083540402835291602001916104df565b820191906000526020600020905b8154815290600101906020018083116104c257829003601f168201915b5050505050905090565b60006104f482610e8a565b61052a576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061057082610a02565b90508073ffffffffffffffffffffffffffffffffffffffff16610591610ee9565b73ffffffffffffffffffffffffffffffffffffffff16146105f4576105bd816105b8610ee9565b610df6565b6105f3576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826006600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60006106b0610ef1565b6001546000540303905090565b60006106c882610ef6565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461072f576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008061073b84610fc4565b91509150610751818761074c610ee9565b610fe6565b61079d5761076686610761610ee9565b610df6565b61079c576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610804576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610811868686600161102a565b801561081c57600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154600101919050819055506108ea856108c6888887611030565b7c020000000000000000000000000000000000000000000000000000000017611058565b600460008681526020019081526020016000208190555060007c02000000000000000000000000000000000000000000000000000000008416141561097257600060018501905060006004600083815260200190815260200160002054141561097057600054811461096f578360046000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46109da8686866001611083565b505050505050565b6109fd83838360405180602001604052806000815250610ce4565b505050565b6000610a0d82610ef6565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a7c576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b606060038054610adc90611b27565b80601f0160208091040260200160405190810160405280929190818152602001828054610b0890611b27565b8015610b555780601f10610b2a57610100808354040283529160200191610b55565b820191906000526020600020905b815481529060010190602001808311610b3857829003601f168201915b5050505050905090565b610b693382611089565b50565b610b74610ee9565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610bd9576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060076000610be6610ee9565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610c93610ee9565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610cd89190611980565b60405180910390a35050565b610cef8484846106bd565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610d5157610d1a848484846110a7565b610d50576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6060610d6282610e8a565b610d98576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610da2611207565b9050600081511415610dc35760405180602001604052806000815250610dee565b80610dcd8461121e565b604051602001610dde9291906118f5565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081610e95610ef1565b11158015610ea4575060005482105b8015610ee2575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b600033905090565b600090565b60008082905080610f05610ef1565b11610f8d57600054811015610f8c5760006004600083815260200190815260200160002054905060007c010000000000000000000000000000000000000000000000000000000082161415610f8a575b6000811415610f80576004600083600190039350838152602001908152602001600020549050610f55565b8092505050610fbf565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000806000600690508360005280602052604060002092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e8611047868684611278565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b6110a3828260405180602001604052806000815250611281565b5050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a026110cd610ee9565b8786866040518563ffffffff1660e01b81526004016110ef9493929190611934565b602060405180830381600087803b15801561110957600080fd5b505af192505050801561113a57506040513d601f19601f8201168201806040525081019061113791906117cb565b60015b6111b4573d806000811461116a576040519150601f19603f3d011682016040523d82523d6000602084013e61116f565b606091505b506000815114156111ac576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b60606080604051019050806040528082600183039250600a81066030018353600a810490505b801561126457600183039250600a81066030018353600a81049050611244565b508181036020830392508083525050919050565b60009392505050565b61128b838361131e565b60008373ffffffffffffffffffffffffffffffffffffffff163b1461131957600080549050600083820390505b6112cb60008683806001019450866110a7565b611301576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8181106112b857816000541461131657600080fd5b50505b505050565b600080549050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561138b576040517f2e07630000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008214156113c6576040517fb562e8dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6113d3600084838561102a565b600160406001901b178202600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555061144a8361143b6000866000611030565b611444856114f2565b17611058565b60046000838152602001908152602001600020819055506000819050600083830190505b818060010192508573ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a480821061146e578060008190555050506114ed6000848385611083565b505050565b60006001821460e11b9050919050565b6000611515611510846119fd565b6119d8565b90508281526020810184848401111561153157611530611bed565b5b61153c848285611ae5565b509392505050565b60008135905061155381611c0d565b92915050565b60008135905061156881611c24565b92915050565b60008135905061157d81611c3b565b92915050565b60008151905061159281611c3b565b92915050565b600082601f8301126115ad576115ac611be8565b5b81356115bd848260208601611502565b91505092915050565b6000813590506115d581611c52565b92915050565b6000602082840312156115f1576115f0611bf7565b5b60006115ff84828501611544565b91505092915050565b6000806040838503121561161f5761161e611bf7565b5b600061162d85828601611544565b925050602061163e85828601611544565b9150509250929050565b60008060006060848603121561166157611660611bf7565b5b600061166f86828701611544565b935050602061168086828701611544565b9250506040611691868287016115c6565b9150509250925092565b600080600080608085870312156116b5576116b4611bf7565b5b60006116c387828801611544565b94505060206116d487828801611544565b93505060406116e5878288016115c6565b925050606085013567ffffffffffffffff81111561170657611705611bf2565b5b61171287828801611598565b91505092959194509250565b6000806040838503121561173557611734611bf7565b5b600061174385828601611544565b925050602061175485828601611559565b9150509250929050565b6000806040838503121561177557611774611bf7565b5b600061178385828601611544565b9250506020611794858286016115c6565b9150509250929050565b6000602082840312156117b4576117b3611bf7565b5b60006117c28482850161156e565b91505092915050565b6000602082840312156117e1576117e0611bf7565b5b60006117ef84828501611583565b91505092915050565b60006020828403121561180e5761180d611bf7565b5b600061181c848285016115c6565b91505092915050565b61182e81611a71565b82525050565b61183d81611a83565b82525050565b600061184e82611a2e565b6118588185611a44565b9350611868818560208601611af4565b61187181611bfc565b840191505092915050565b600061188782611a39565b6118918185611a55565b93506118a1818560208601611af4565b6118aa81611bfc565b840191505092915050565b60006118c082611a39565b6118ca8185611a66565b93506118da818560208601611af4565b80840191505092915050565b6118ef81611adb565b82525050565b600061190182856118b5565b915061190d82846118b5565b91508190509392505050565b600060208201905061192e6000830184611825565b92915050565b60006080820190506119496000830187611825565b6119566020830186611825565b61196360408301856118e6565b81810360608301526119758184611843565b905095945050505050565b60006020820190506119956000830184611834565b92915050565b600060208201905081810360008301526119b5818461187c565b905092915050565b60006020820190506119d260008301846118e6565b92915050565b60006119e26119f3565b90506119ee8282611b59565b919050565b6000604051905090565b600067ffffffffffffffff821115611a1857611a17611bb9565b5b611a2182611bfc565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611a7c82611abb565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611b12578082015181840152602081019050611af7565b83811115611b21576000848401525b50505050565b60006002820490506001821680611b3f57607f821691505b60208210811415611b5357611b52611b8a565b5b50919050565b611b6282611bfc565b810181811067ffffffffffffffff82111715611b8157611b80611bb9565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b611c1681611a71565b8114611c2157600080fd5b50565b611c2d81611a83565b8114611c3857600080fd5b50565b611c4481611a8f565b8114611c4f57600080fd5b50565b611c5b81611adb565b8114611c6657600080fd5b5056fea2646970667358221220d1d5fbf681d4525c216ecb284c0ab2f758db70a21475536f2e912acd42b617ff64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x388 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x2DD JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x20F JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x155 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x179E JUMP JUMPDEST PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x457 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x17F8 JUMP JUMPDEST PUSH2 0x4E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1919 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST PUSH2 0x565 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x6A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x19BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x1648 JUMP JUMPDEST PUSH2 0x6BD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x236 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x1648 JUMP JUMPDEST PUSH2 0x9E2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x17F8 JUMP JUMPDEST PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x1919 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x15DB JUMP JUMPDEST PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x19BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C7 PUSH2 0xACD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x17F8 JUMP JUMPDEST PUSH2 0xB5F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x320 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x171E JUMP JUMPDEST PUSH2 0xB6C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x169B JUMP JUMPDEST PUSH2 0xCE4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x372 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x17F8 JUMP JUMPDEST PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x1608 JUMP JUMPDEST PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x420 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x450 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x466 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x492 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4DF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4DF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F4 DUP3 PUSH2 0xE8A JUMP JUMPDEST PUSH2 0x52A JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x570 DUP3 PUSH2 0xA02 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x591 PUSH2 0xEE9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5F4 JUMPI PUSH2 0x5BD DUP2 PUSH2 0x5B8 PUSH2 0xEE9 JUMP JUMPDEST PUSH2 0xDF6 JUMP JUMPDEST PUSH2 0x5F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B0 PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C8 DUP3 PUSH2 0xEF6 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x72F JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x73B DUP5 PUSH2 0xFC4 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x751 DUP2 DUP8 PUSH2 0x74C PUSH2 0xEE9 JUMP JUMPDEST PUSH2 0xFE6 JUMP JUMPDEST PUSH2 0x79D JUMPI PUSH2 0x766 DUP7 PUSH2 0x761 PUSH2 0xEE9 JUMP JUMPDEST PUSH2 0xDF6 JUMP JUMPDEST PUSH2 0x79C JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x804 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x811 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0x102A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x81C JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x8EA DUP6 PUSH2 0x8C6 DUP9 DUP9 DUP8 PUSH2 0x1030 JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH2 0x1058 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND EQ ISZERO PUSH2 0x972 JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x970 JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x96F JUMPI DUP4 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x9DA DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0x1083 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9FD DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xCE4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA0D DUP3 PUSH2 0xEF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA7C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0xADC SWAP1 PUSH2 0x1B27 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB08 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB55 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB2A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB55 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB38 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB69 CALLER DUP3 PUSH2 0x1089 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xB74 PUSH2 0xEE9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06307DB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0xBE6 PUSH2 0xEE9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC93 PUSH2 0xEE9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCD8 SWAP2 SWAP1 PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xCEF DUP5 DUP5 DUP5 PUSH2 0x6BD JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0xD51 JUMPI PUSH2 0xD1A DUP5 DUP5 DUP5 DUP5 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0xD50 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD62 DUP3 PUSH2 0xE8A JUMP JUMPDEST PUSH2 0xD98 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDA2 PUSH2 0x1207 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0xDC3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xDEE JUMP JUMPDEST DUP1 PUSH2 0xDCD DUP5 PUSH2 0x121E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDDE SWAP3 SWAP2 SWAP1 PUSH2 0x18F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xE95 PUSH2 0xEF1 JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xEA4 JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0xEE2 JUMPI POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP DUP1 PUSH2 0xF05 PUSH2 0xEF1 JUMP JUMPDEST GT PUSH2 0xF8D JUMPI PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0xF8C JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND EQ ISZERO PUSH2 0xF8A JUMPI JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xF80 JUMPI PUSH1 0x4 PUSH1 0x0 DUP4 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0xF55 JUMP JUMPDEST DUP1 SWAP3 POP POP POP PUSH2 0xFBF JUMP JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 SWAP1 POP DUP4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 POP DUP3 SLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 POP DUP4 DUP3 EQ DUP4 DUP4 EQ OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE8 DUP4 SWAP1 SHR SWAP1 POP PUSH1 0xE8 PUSH2 0x1047 DUP7 DUP7 DUP5 PUSH2 0x1278 JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 SHL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP DUP2 TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x10A3 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1281 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x10CD PUSH2 0xEE9 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10EF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1934 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x113A JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1137 SWAP2 SWAP1 PUSH2 0x17CB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x11B4 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x116A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x116F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x11AC JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x80 PUSH1 0x40 MLOAD ADD SWAP1 POP DUP1 PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP JUMPDEST DUP1 ISZERO PUSH2 0x1264 JUMPI PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP PUSH2 0x1244 JUMP JUMPDEST POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 SUB SWAP3 POP DUP1 DUP4 MSTORE POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x128B DUP4 DUP4 PUSH2 0x131E JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0x1319 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 DUP4 DUP3 SUB SWAP1 POP JUMPDEST PUSH2 0x12CB PUSH1 0x0 DUP7 DUP4 DUP1 PUSH1 0x1 ADD SWAP5 POP DUP7 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0x1301 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x12B8 JUMPI DUP2 PUSH1 0x0 SLOAD EQ PUSH2 0x1316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x138B JUMPI PUSH1 0x40 MLOAD PUSH32 0x2E07630000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x13C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB562E8DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13D3 PUSH1 0x0 DUP5 DUP4 DUP6 PUSH2 0x102A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x40 PUSH1 0x1 SWAP1 SHL OR DUP3 MUL PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x144A DUP4 PUSH2 0x143B PUSH1 0x0 DUP7 PUSH1 0x0 PUSH2 0x1030 JUMP JUMPDEST PUSH2 0x1444 DUP6 PUSH2 0x14F2 JUMP JUMPDEST OR PUSH2 0x1058 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP4 DUP4 ADD SWAP1 POP JUMPDEST DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 DUP3 LT PUSH2 0x146E JUMPI DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x14ED PUSH1 0x0 DUP5 DUP4 DUP6 PUSH2 0x1083 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH1 0xE1 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1515 PUSH2 0x1510 DUP5 PUSH2 0x19FD JUMP JUMPDEST PUSH2 0x19D8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1531 JUMPI PUSH2 0x1530 PUSH2 0x1BED JUMP JUMPDEST JUMPDEST PUSH2 0x153C DUP5 DUP3 DUP6 PUSH2 0x1AE5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1553 DUP2 PUSH2 0x1C0D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1568 DUP2 PUSH2 0x1C24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x157D DUP2 PUSH2 0x1C3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1592 DUP2 PUSH2 0x1C3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15AD JUMPI PUSH2 0x15AC PUSH2 0x1BE8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x15BD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1502 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15D5 DUP2 PUSH2 0x1C52 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15F1 JUMPI PUSH2 0x15F0 PUSH2 0x1BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15FF DUP5 DUP3 DUP6 ADD PUSH2 0x1544 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x161F JUMPI PUSH2 0x161E PUSH2 0x1BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x162D DUP6 DUP3 DUP7 ADD PUSH2 0x1544 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x163E DUP6 DUP3 DUP7 ADD PUSH2 0x1544 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1661 JUMPI PUSH2 0x1660 PUSH2 0x1BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x166F DUP7 DUP3 DUP8 ADD PUSH2 0x1544 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1680 DUP7 DUP3 DUP8 ADD PUSH2 0x1544 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1691 DUP7 DUP3 DUP8 ADD PUSH2 0x15C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x16B5 JUMPI PUSH2 0x16B4 PUSH2 0x1BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16C3 DUP8 DUP3 DUP9 ADD PUSH2 0x1544 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x16D4 DUP8 DUP3 DUP9 ADD PUSH2 0x1544 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x16E5 DUP8 DUP3 DUP9 ADD PUSH2 0x15C6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1706 JUMPI PUSH2 0x1705 PUSH2 0x1BF2 JUMP JUMPDEST JUMPDEST PUSH2 0x1712 DUP8 DUP3 DUP9 ADD PUSH2 0x1598 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1735 JUMPI PUSH2 0x1734 PUSH2 0x1BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1743 DUP6 DUP3 DUP7 ADD PUSH2 0x1544 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1754 DUP6 DUP3 DUP7 ADD PUSH2 0x1559 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1775 JUMPI PUSH2 0x1774 PUSH2 0x1BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1783 DUP6 DUP3 DUP7 ADD PUSH2 0x1544 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1794 DUP6 DUP3 DUP7 ADD PUSH2 0x15C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17B4 JUMPI PUSH2 0x17B3 PUSH2 0x1BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17C2 DUP5 DUP3 DUP6 ADD PUSH2 0x156E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17E1 JUMPI PUSH2 0x17E0 PUSH2 0x1BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17EF DUP5 DUP3 DUP6 ADD PUSH2 0x1583 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x180E JUMPI PUSH2 0x180D PUSH2 0x1BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x181C DUP5 DUP3 DUP6 ADD PUSH2 0x15C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x182E DUP2 PUSH2 0x1A71 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x183D DUP2 PUSH2 0x1A83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x184E DUP3 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0x1858 DUP2 DUP6 PUSH2 0x1A44 JUMP JUMPDEST SWAP4 POP PUSH2 0x1868 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1AF4 JUMP JUMPDEST PUSH2 0x1871 DUP2 PUSH2 0x1BFC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1887 DUP3 PUSH2 0x1A39 JUMP JUMPDEST PUSH2 0x1891 DUP2 DUP6 PUSH2 0x1A55 JUMP JUMPDEST SWAP4 POP PUSH2 0x18A1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1AF4 JUMP JUMPDEST PUSH2 0x18AA DUP2 PUSH2 0x1BFC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18C0 DUP3 PUSH2 0x1A39 JUMP JUMPDEST PUSH2 0x18CA DUP2 DUP6 PUSH2 0x1A66 JUMP JUMPDEST SWAP4 POP PUSH2 0x18DA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1AF4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18EF DUP2 PUSH2 0x1ADB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1901 DUP3 DUP6 PUSH2 0x18B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x190D DUP3 DUP5 PUSH2 0x18B5 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x192E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1825 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1949 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1825 JUMP JUMPDEST PUSH2 0x1956 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1825 JUMP JUMPDEST PUSH2 0x1963 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x18E6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1975 DUP2 DUP5 PUSH2 0x1843 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1995 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1834 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19B5 DUP2 DUP5 PUSH2 0x187C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19D2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E2 PUSH2 0x19F3 JUMP JUMPDEST SWAP1 POP PUSH2 0x19EE DUP3 DUP3 PUSH2 0x1B59 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1A18 JUMPI PUSH2 0x1A17 PUSH2 0x1BB9 JUMP JUMPDEST JUMPDEST PUSH2 0x1A21 DUP3 PUSH2 0x1BFC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A7C DUP3 PUSH2 0x1ABB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B12 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1AF7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1B21 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1B3F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1B53 JUMPI PUSH2 0x1B52 PUSH2 0x1B8A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B62 DUP3 PUSH2 0x1BFC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1B81 JUMPI PUSH2 0x1B80 PUSH2 0x1BB9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C16 DUP2 PUSH2 0x1A71 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1C2D DUP2 PUSH2 0x1A83 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1C44 DUP2 PUSH2 0x1A8F JUMP JUMPDEST DUP2 EQ PUSH2 0x1C4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1C5B DUP2 PUSH2 0x1ADB JUMP JUMPDEST DUP2 EQ PUSH2 0x1C66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 0xD5 0xFB 0xF6 DUP2 0xD4 MSTORE 0x5C 0x21 PUSH15 0xCB284C0AB2F758DB70A21475536F2E SWAP2 0x2A 0xCD TIMESTAMP 0xB6 OR SELFDESTRUCT PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "98:244:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5653:607:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11161:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13048:200;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12611:376;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4736:309;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22055:2739;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13912:179;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10957:142;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6319:221;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11323:102;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;174:166:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13315:303:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14157:388;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11491:313;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13684:162;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5653:607;5738:4;6048:10;6033:25;;:11;:25;;;;:101;;;;6124:10;6109:25;;:11;:25;;;;6033:101;:177;;;;6200:10;6185:25;;:11;:25;;;;6033:177;6014:196;;5653:607;;;:::o;11161:98::-;11215:13;11247:5;11240:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11161:98;:::o;13048:200::-;13116:7;13140:16;13148:7;13140;:16::i;:::-;13135:64;;13165:34;;;;;;;;;;;;;;13135:64;13217:15;:24;13233:7;13217:24;;;;;;;;;;;;;;;;;;;;;13210:31;;13048:200;;;:::o;12611:376::-;12683:13;12699:16;12707:7;12699;:16::i;:::-;12683:32;;12753:5;12730:28;;:19;:17;:19::i;:::-;:28;;;12726:172;;12777:44;12794:5;12801:19;:17;:19::i;:::-;12777:16;:44::i;:::-;12772:126;;12848:35;;;;;;;;;;;;;;12772:126;12726:172;12935:2;12908:15;:24;12924:7;12908:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12972:7;12968:2;12952:28;;12961:5;12952:28;;;;;;;;;;;;12673:314;12611:376;;:::o;4736:309::-;4789:7;5013:15;:13;:15::i;:::-;4998:12;;4982:13;;:28;:46;4975:53;;4736:309;:::o;22055:2739::-;22184:27;22214;22233:7;22214:18;:27::i;:::-;22184:57;;22297:4;22256:45;;22272:19;22256:45;;;22252:86;;22310:28;;;;;;;;;;;;;;22252:86;22350:27;22379:23;22406:28;22426:7;22406:19;:28::i;:::-;22349:85;;;;22531:62;22550:15;22567:4;22573:19;:17;:19::i;:::-;22531:18;:62::i;:::-;22526:173;;22612:43;22629:4;22635:19;:17;:19::i;:::-;22612:16;:43::i;:::-;22607:92;;22664:35;;;;;;;;;;;;;;22607:92;22526:173;22728:1;22714:16;;:2;:16;;;22710:52;;;22739:23;;;;;;;;;;;;;;22710:52;22773:43;22795:4;22801:2;22805:7;22814:1;22773:21;:43::i;:::-;22905:15;22902:157;;;23043:1;23022:19;23015:30;22902:157;23429:18;:24;23448:4;23429:24;;;;;;;;;;;;;;;;23427:26;;;;;;;;;;;;23497:18;:22;23516:2;23497:22;;;;;;;;;;;;;;;;23495:24;;;;;;;;;;;23812:142;23848:2;23895:45;23910:4;23916:2;23920:19;23895:14;:45::i;:::-;2046:8;23868:72;23812:18;:142::i;:::-;23783:17;:26;23801:7;23783:26;;;;;;;;;;;:171;;;;24121:1;2046:8;24071:19;:46;:51;24067:616;;;24142:19;24174:1;24164:7;:11;24142:33;;24329:1;24295:17;:30;24313:11;24295:30;;;;;;;;;;;;:35;24291:378;;;24431:13;;24416:11;:28;24412:239;;24609:19;24576:17;:30;24594:11;24576:30;;;;;;;;;;;:52;;;;24412:239;24291:378;24124:559;24067:616;24727:7;24723:2;24708:27;;24717:4;24708:27;;;;;;;;;;;;24745:42;24766:4;24772:2;24776:7;24785:1;24745:20;:42::i;:::-;22174:2620;;;22055:2739;;;:::o;13912:179::-;14045:39;14062:4;14068:2;14072:7;14045:39;;;;;;;;;;;;:16;:39::i;:::-;13912:179;;;:::o;10957:142::-;11021:7;11063:27;11082:7;11063:18;:27::i;:::-;11040:52;;10957:142;;;:::o;6319:221::-;6383:7;6423:1;6406:19;;:5;:19;;;6402:60;;;6434:28;;;;;;;;;;;;;;6402:60;1022:13;6479:18;:25;6498:5;6479:25;;;;;;;;;;;;;;;;:54;6472:61;;6319:221;;;:::o;11323:102::-;11379:13;11411:7;11404:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11323:102;:::o;174:166:0:-;304:31;314:10;326:8;304:9;:31::i;:::-;174:166;:::o;13315:303:1:-;13425:19;:17;:19::i;:::-;13413:31;;:8;:31;;;13409:61;;;13453:17;;;;;;;;;;;;;;13409:61;13533:8;13481:18;:39;13500:19;:17;:19::i;:::-;13481:39;;;;;;;;;;;;;;;:49;13521:8;13481:49;;;;;;;;;;;;;;;;:60;;;;;;;;;;;;;;;;;;13592:8;13556:55;;13571:19;:17;:19::i;:::-;13556:55;;;13602:8;13556:55;;;;;;:::i;:::-;;;;;;;;13315:303;;:::o;14157:388::-;14318:31;14331:4;14337:2;14341:7;14318:12;:31::i;:::-;14381:1;14363:2;:14;;;:19;14359:180;;14401:56;14432:4;14438:2;14442:7;14451:5;14401:30;:56::i;:::-;14396:143;;14484:40;;;;;;;;;;;;;;14396:143;14359:180;14157:388;;;;:::o;11491:313::-;11564:13;11594:16;11602:7;11594;:16::i;:::-;11589:59;;11619:29;;;;;;;;;;;;;;11589:59;11659:21;11683:10;:8;:10::i;:::-;11659:34;;11735:1;11716:7;11710:21;:26;;:87;;;;;;;;;;;;;;;;;11763:7;11772:18;11782:7;11772:9;:18::i;:::-;11746:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11710:87;11703:94;;;11491:313;;;:::o;13684:162::-;13781:4;13804:18;:25;13823:5;13804:25;;;;;;;;;;;;;;;:35;13830:8;13804:35;;;;;;;;;;;;;;;;;;;;;;;;;13797:42;;13684:162;;;;:::o;14791:268::-;14848:4;14902:7;14883:15;:13;:15::i;:::-;:26;;:65;;;;;14935:13;;14925:7;:23;14883:65;:150;;;;;15032:1;1774:8;14985:17;:26;15003:7;14985:26;;;;;;;;;;;;:43;:48;14883:150;14864:169;;14791:268;;;:::o;32874:103::-;32934:7;32960:10;32953:17;;32874:103;:::o;4276:90::-;4332:7;4276:90;:::o;7949:1105::-;8016:7;8035:12;8050:7;8035:22;;8115:4;8096:15;:13;:15::i;:::-;:23;8092:898;;8148:13;;8141:4;:20;8137:853;;;8185:14;8202:17;:23;8220:4;8202:23;;;;;;;;;;;;8185:40;;8316:1;1774:8;8289:6;:23;:28;8285:687;;;8800:111;8817:1;8807:6;:11;8800:111;;;8859:17;:25;8877:6;;;;;;;8859:25;;;;;;;;;;;;8850:34;;8800:111;;;8943:6;8936:13;;;;;;8285:687;8163:827;8137:853;8092:898;9016:31;;;;;;;;;;;;;;7949:1105;;;;:::o;20436:637::-;20528:27;20557:23;20596:53;20652:15;20596:71;;20834:7;20828:4;20821:21;20868:22;20862:4;20855:36;20943:4;20937;20927:21;20904:44;;21037:19;21031:26;21012:45;;20774:293;20436:637;;;:::o;21181:632::-;21319:11;21478:15;21472:4;21468:26;21460:34;;21635:15;21624:9;21620:31;21607:44;;21780:15;21769:9;21766:30;21759:4;21748:9;21745:19;21742:55;21732:65;;21181:632;;;;;:::o;31742:154::-;;;;;:::o;30099:302::-;30230:7;30249:16;2166:3;30275:19;:40;;30249:67;;2166:3;30341:31;30352:4;30358:2;30362:9;30341:10;:31::i;:::-;30333:40;;:61;;30326:68;;;30099:302;;;;;:::o;10460:440::-;10540:14;10705:15;10698:5;10694:27;10685:36;;10877:5;10863:11;10839:22;10835:40;10832:51;10825:5;10822:62;10812:72;;10460:440;;;;:::o;32537:153::-;;;;;:::o;15138:102::-;15206:27;15216:2;15220:8;15206:27;;;;;;;;;;;;:9;:27::i;:::-;15138:102;;:::o;28649:697::-;28807:4;28852:2;28827:45;;;28873:19;:17;:19::i;:::-;28894:4;28900:7;28909:5;28827:88;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;28823:517;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29122:1;29105:6;:13;:18;29101:229;;;29150:40;;;;;;;;;;;;;;29101:229;29290:6;29284:13;29275:6;29271:2;29267:15;29260:38;28823:517;28993:54;;;28983:64;;;:6;:64;;;;28976:71;;;28649:697;;;;;;:::o;12049:92::-;12100:13;12125:9;;;;;;;;;;;;;;12049:92;:::o;33078:1920::-;33135:17;33548:3;33541:4;33535:11;33531:21;33524:28;;33637:3;33631:4;33624:17;33740:3;34188:5;34316:1;34311:3;34307:11;34300:18;;34451:2;34445:4;34441:13;34437:2;34433:22;34428:3;34420:36;34491:2;34485:4;34481:13;34473:21;;34082:682;34509:4;34082:682;;;34695:1;34690:3;34686:11;34679:18;;34745:2;34739:4;34735:13;34731:2;34727:22;34722:3;34714:36;34602:2;34596:4;34592:13;34584:21;;34082:682;;;34086:422;34801:3;34796;34792:13;34914:2;34909:3;34905:12;34898:19;;34975:6;34970:3;34963:19;33173:1819;;33078:1920;;;:::o;30961:143::-;31094:6;30961:143;;;;;:::o;15641:661::-;15759:19;15765:2;15769:8;15759:5;:19::i;:::-;15835:1;15817:2;:14;;;:19;15813:473;;15856:11;15870:13;;15856:27;;15901:13;15923:8;15917:3;:14;15901:30;;15949:229;15979:62;16018:1;16022:2;16026:7;;;;;;16035:5;15979:30;:62::i;:::-;15974:165;;16076:40;;;;;;;;;;;;;;15974:165;16173:3;16165:5;:11;15949:229;;16258:3;16241:13;;:20;16237:34;;16263:8;;;16237:34;15838:448;;15813:473;15641:661;;;:::o;16563:1492::-;16627:20;16650:13;;16627:36;;16691:1;16677:16;;:2;:16;;;16673:48;;;16702:19;;;;;;;;;;;;;;16673:48;16747:1;16735:8;:13;16731:44;;;16757:18;;;;;;;;;;;;;;16731:44;16786:61;16816:1;16820:2;16824:12;16838:8;16786:21;:61::i;:::-;17318:1;1156:2;17289:1;:25;;17288:31;17276:8;:44;17250:18;:22;17269:2;17250:22;;;;;;;;;;;;;;;;:70;;;;;;;;;;;17590:136;17626:2;17679:33;17702:1;17706:2;17710:1;17679:14;:33::i;:::-;17646:30;17667:8;17646:20;:30::i;:::-;:66;17590:18;:136::i;:::-;17556:17;:31;17574:12;17556:31;;;;;;;;;;;:170;;;;17741:15;17759:12;17741:30;;17785:11;17814:8;17799:12;:23;17785:37;;17836:99;17887:9;;;;;;17883:2;17862:35;;17879:1;17862:35;;;;;;;;;;;;17930:3;17920:7;:13;17836:99;;17965:3;17949:13;:19;;;;17030:949;;17988:60;18017:1;18021:2;18025:12;18039:8;17988:20;:60::i;:::-;16617:1438;16563:1492;;:::o;12238:316::-;12308:14;12535:1;12525:8;12522:15;12497:23;12493:45;12483:55;;12238:316;;;:::o;7:410:3:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;568:133::-;611:5;649:6;636:20;627:29;;665:30;689:5;665:30;:::i;:::-;568:133;;;;:::o;707:137::-;752:5;790:6;777:20;768:29;;806:32;832:5;806:32;:::i;:::-;707:137;;;;:::o;850:141::-;906:5;937:6;931:13;922:22;;953:32;979:5;953:32;:::i;:::-;850:141;;;;:::o;1010:338::-;1065:5;1114:3;1107:4;1099:6;1095:17;1091:27;1081:122;;1122:79;;:::i;:::-;1081:122;1239:6;1226:20;1264:78;1338:3;1330:6;1323:4;1315:6;1311:17;1264:78;:::i;:::-;1255:87;;1071:277;1010:338;;;;:::o;1354:139::-;1400:5;1438:6;1425:20;1416:29;;1454:33;1481:5;1454:33;:::i;:::-;1354:139;;;;:::o;1499:329::-;1558:6;1607:2;1595:9;1586:7;1582:23;1578:32;1575:119;;;1613:79;;:::i;:::-;1575:119;1733:1;1758:53;1803:7;1794:6;1783:9;1779:22;1758:53;:::i;:::-;1748:63;;1704:117;1499:329;;;;:::o;1834:474::-;1902:6;1910;1959:2;1947:9;1938:7;1934:23;1930:32;1927:119;;;1965:79;;:::i;:::-;1927:119;2085:1;2110:53;2155:7;2146:6;2135:9;2131:22;2110:53;:::i;:::-;2100:63;;2056:117;2212:2;2238:53;2283:7;2274:6;2263:9;2259:22;2238:53;:::i;:::-;2228:63;;2183:118;1834:474;;;;;:::o;2314:619::-;2391:6;2399;2407;2456:2;2444:9;2435:7;2431:23;2427:32;2424:119;;;2462:79;;:::i;:::-;2424:119;2582:1;2607:53;2652:7;2643:6;2632:9;2628:22;2607:53;:::i;:::-;2597:63;;2553:117;2709:2;2735:53;2780:7;2771:6;2760:9;2756:22;2735:53;:::i;:::-;2725:63;;2680:118;2837:2;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2808:118;2314:619;;;;;:::o;2939:943::-;3034:6;3042;3050;3058;3107:3;3095:9;3086:7;3082:23;3078:33;3075:120;;;3114:79;;:::i;:::-;3075:120;3234:1;3259:53;3304:7;3295:6;3284:9;3280:22;3259:53;:::i;:::-;3249:63;;3205:117;3361:2;3387:53;3432:7;3423:6;3412:9;3408:22;3387:53;:::i;:::-;3377:63;;3332:118;3489:2;3515:53;3560:7;3551:6;3540:9;3536:22;3515:53;:::i;:::-;3505:63;;3460:118;3645:2;3634:9;3630:18;3617:32;3676:18;3668:6;3665:30;3662:117;;;3698:79;;:::i;:::-;3662:117;3803:62;3857:7;3848:6;3837:9;3833:22;3803:62;:::i;:::-;3793:72;;3588:287;2939:943;;;;;;;:::o;3888:468::-;3953:6;3961;4010:2;3998:9;3989:7;3985:23;3981:32;3978:119;;;4016:79;;:::i;:::-;3978:119;4136:1;4161:53;4206:7;4197:6;4186:9;4182:22;4161:53;:::i;:::-;4151:63;;4107:117;4263:2;4289:50;4331:7;4322:6;4311:9;4307:22;4289:50;:::i;:::-;4279:60;;4234:115;3888:468;;;;;:::o;4362:474::-;4430:6;4438;4487:2;4475:9;4466:7;4462:23;4458:32;4455:119;;;4493:79;;:::i;:::-;4455:119;4613:1;4638:53;4683:7;4674:6;4663:9;4659:22;4638:53;:::i;:::-;4628:63;;4584:117;4740:2;4766:53;4811:7;4802:6;4791:9;4787:22;4766:53;:::i;:::-;4756:63;;4711:118;4362:474;;;;;:::o;4842:327::-;4900:6;4949:2;4937:9;4928:7;4924:23;4920:32;4917:119;;;4955:79;;:::i;:::-;4917:119;5075:1;5100:52;5144:7;5135:6;5124:9;5120:22;5100:52;:::i;:::-;5090:62;;5046:116;4842:327;;;;:::o;5175:349::-;5244:6;5293:2;5281:9;5272:7;5268:23;5264:32;5261:119;;;5299:79;;:::i;:::-;5261:119;5419:1;5444:63;5499:7;5490:6;5479:9;5475:22;5444:63;:::i;:::-;5434:73;;5390:127;5175:349;;;;:::o;5530:329::-;5589:6;5638:2;5626:9;5617:7;5613:23;5609:32;5606:119;;;5644:79;;:::i;:::-;5606:119;5764:1;5789:53;5834:7;5825:6;5814:9;5810:22;5789:53;:::i;:::-;5779:63;;5735:117;5530:329;;;;:::o;5865:118::-;5952:24;5970:5;5952:24;:::i;:::-;5947:3;5940:37;5865:118;;:::o;5989:109::-;6070:21;6085:5;6070:21;:::i;:::-;6065:3;6058:34;5989:109;;:::o;6104:360::-;6190:3;6218:38;6250:5;6218:38;:::i;:::-;6272:70;6335:6;6330:3;6272:70;:::i;:::-;6265:77;;6351:52;6396:6;6391:3;6384:4;6377:5;6373:16;6351:52;:::i;:::-;6428:29;6450:6;6428:29;:::i;:::-;6423:3;6419:39;6412:46;;6194:270;6104:360;;;;:::o;6470:364::-;6558:3;6586:39;6619:5;6586:39;:::i;:::-;6641:71;6705:6;6700:3;6641:71;:::i;:::-;6634:78;;6721:52;6766:6;6761:3;6754:4;6747:5;6743:16;6721:52;:::i;:::-;6798:29;6820:6;6798:29;:::i;:::-;6793:3;6789:39;6782:46;;6562:272;6470:364;;;;:::o;6840:377::-;6946:3;6974:39;7007:5;6974:39;:::i;:::-;7029:89;7111:6;7106:3;7029:89;:::i;:::-;7022:96;;7127:52;7172:6;7167:3;7160:4;7153:5;7149:16;7127:52;:::i;:::-;7204:6;7199:3;7195:16;7188:23;;6950:267;6840:377;;;;:::o;7223:118::-;7310:24;7328:5;7310:24;:::i;:::-;7305:3;7298:37;7223:118;;:::o;7347:435::-;7527:3;7549:95;7640:3;7631:6;7549:95;:::i;:::-;7542:102;;7661:95;7752:3;7743:6;7661:95;:::i;:::-;7654:102;;7773:3;7766:10;;7347:435;;;;;:::o;7788:222::-;7881:4;7919:2;7908:9;7904:18;7896:26;;7932:71;8000:1;7989:9;7985:17;7976:6;7932:71;:::i;:::-;7788:222;;;;:::o;8016:640::-;8211:4;8249:3;8238:9;8234:19;8226:27;;8263:71;8331:1;8320:9;8316:17;8307:6;8263:71;:::i;:::-;8344:72;8412:2;8401:9;8397:18;8388:6;8344:72;:::i;:::-;8426;8494:2;8483:9;8479:18;8470:6;8426:72;:::i;:::-;8545:9;8539:4;8535:20;8530:2;8519:9;8515:18;8508:48;8573:76;8644:4;8635:6;8573:76;:::i;:::-;8565:84;;8016:640;;;;;;;:::o;8662:210::-;8749:4;8787:2;8776:9;8772:18;8764:26;;8800:65;8862:1;8851:9;8847:17;8838:6;8800:65;:::i;:::-;8662:210;;;;:::o;8878:313::-;8991:4;9029:2;9018:9;9014:18;9006:26;;9078:9;9072:4;9068:20;9064:1;9053:9;9049:17;9042:47;9106:78;9179:4;9170:6;9106:78;:::i;:::-;9098:86;;8878:313;;;;:::o;9197:222::-;9290:4;9328:2;9317:9;9313:18;9305:26;;9341:71;9409:1;9398:9;9394:17;9385:6;9341:71;:::i;:::-;9197:222;;;;:::o;9425:129::-;9459:6;9486:20;;:::i;:::-;9476:30;;9515:33;9543:4;9535:6;9515:33;:::i;:::-;9425:129;;;:::o;9560:75::-;9593:6;9626:2;9620:9;9610:19;;9560:75;:::o;9641:307::-;9702:4;9792:18;9784:6;9781:30;9778:56;;;9814:18;;:::i;:::-;9778:56;9852:29;9874:6;9852:29;:::i;:::-;9844:37;;9936:4;9930;9926:15;9918:23;;9641:307;;;:::o;9954:98::-;10005:6;10039:5;10033:12;10023:22;;9954:98;;;:::o;10058:99::-;10110:6;10144:5;10138:12;10128:22;;10058:99;;;:::o;10163:168::-;10246:11;10280:6;10275:3;10268:19;10320:4;10315:3;10311:14;10296:29;;10163:168;;;;:::o;10337:169::-;10421:11;10455:6;10450:3;10443:19;10495:4;10490:3;10486:14;10471:29;;10337:169;;;;:::o;10512:148::-;10614:11;10651:3;10636:18;;10512:148;;;;:::o;10666:96::-;10703:7;10732:24;10750:5;10732:24;:::i;:::-;10721:35;;10666:96;;;:::o;10768:90::-;10802:7;10845:5;10838:13;10831:21;10820:32;;10768:90;;;:::o;10864:149::-;10900:7;10940:66;10933:5;10929:78;10918:89;;10864:149;;;:::o;11019:126::-;11056:7;11096:42;11089:5;11085:54;11074:65;;11019:126;;;:::o;11151:77::-;11188:7;11217:5;11206:16;;11151:77;;;:::o;11234:154::-;11318:6;11313:3;11308;11295:30;11380:1;11371:6;11366:3;11362:16;11355:27;11234:154;;;:::o;11394:307::-;11462:1;11472:113;11486:6;11483:1;11480:13;11472:113;;;11571:1;11566:3;11562:11;11556:18;11552:1;11547:3;11543:11;11536:39;11508:2;11505:1;11501:10;11496:15;;11472:113;;;11603:6;11600:1;11597:13;11594:101;;;11683:1;11674:6;11669:3;11665:16;11658:27;11594:101;11443:258;11394:307;;;:::o;11707:320::-;11751:6;11788:1;11782:4;11778:12;11768:22;;11835:1;11829:4;11825:12;11856:18;11846:81;;11912:4;11904:6;11900:17;11890:27;;11846:81;11974:2;11966:6;11963:14;11943:18;11940:38;11937:84;;;11993:18;;:::i;:::-;11937:84;11758:269;11707:320;;;:::o;12033:281::-;12116:27;12138:4;12116:27;:::i;:::-;12108:6;12104:40;12246:6;12234:10;12231:22;12210:18;12198:10;12195:34;12192:62;12189:88;;;12257:18;;:::i;:::-;12189:88;12297:10;12293:2;12286:22;12076:238;12033:281;;:::o;12320:180::-;12368:77;12365:1;12358:88;12465:4;12462:1;12455:15;12489:4;12486:1;12479:15;12506:180;12554:77;12551:1;12544:88;12651:4;12648:1;12641:15;12675:4;12672:1;12665:15;12692:117;12801:1;12798;12791:12;12815:117;12924:1;12921;12914:12;12938:117;13047:1;13044;13037:12;13061:117;13170:1;13167;13160:12;13184:102;13225:6;13276:2;13272:7;13267:2;13260:5;13256:14;13252:28;13242:38;;13184:102;;;:::o;13292:122::-;13365:24;13383:5;13365:24;:::i;:::-;13358:5;13355:35;13345:63;;13404:1;13401;13394:12;13345:63;13292:122;:::o;13420:116::-;13490:21;13505:5;13490:21;:::i;:::-;13483:5;13480:32;13470:60;;13526:1;13523;13516:12;13470:60;13420:116;:::o;13542:120::-;13614:23;13631:5;13614:23;:::i;:::-;13607:5;13604:34;13594:62;;13652:1;13649;13642:12;13594:62;13542:120;:::o;13668:122::-;13741:24;13759:5;13741:24;:::i;:::-;13734:5;13731:35;13721:63;;13780:1;13777;13770:12;13721:63;13668:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1465400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2930",
								"getApproved(uint256)": "7375",
								"isApprovedForAll(address,address)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "745",
								"symbol()": "infinite",
								"tokenURI(uint256)": "5545",
								"totalSupply()": "4621",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 98,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 128,
									"end": 170,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 128,
									"end": 170,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 128,
									"end": 170,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 128,
									"end": 170,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 128,
									"end": 170,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 128,
									"end": 170,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 170,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 128,
									"end": 170,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 128,
									"end": 170,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 128,
									"end": 170,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 128,
									"end": 170,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 1,
									"value": "417A756B69000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 1,
									"value": "415A554B49000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4060,
									"end": 4065,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4057,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4085,
									"end": 4092,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4082,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4133,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 4118,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 4118,
									"end": 4131,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4118,
									"end": 4131,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4133,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4118,
									"end": 4133,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4133,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 4118,
									"end": 4133,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 4118,
									"end": 4133,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4102,
									"end": 4115,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4102,
									"end": 4133,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4102,
									"end": 4133,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4102,
									"end": 4133,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4102,
									"end": 4133,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 98,
									"end": 342,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4276,
									"end": 4366,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 4276,
									"end": 4366,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4332,
									"end": 4339,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4276,
									"end": 4366,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4276,
									"end": 4366,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 327,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 7,
									"end": 327,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 51,
									"end": 57,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 89,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 82,
									"end": 86,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 78,
									"end": 90,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 68,
									"end": 90,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 68,
									"end": 90,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 135,
									"end": 136,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 133,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 125,
									"end": 137,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 156,
									"end": 174,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 146,
									"end": 227,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 146,
									"end": 227,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 212,
									"end": 216,
									"name": "PUSH",
									"source": 3,
									"value": "7F"
								},
								{
									"begin": 204,
									"end": 210,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 200,
									"end": 217,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 190,
									"end": 217,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 190,
									"end": 217,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 146,
									"end": 227,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 146,
									"end": 227,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 274,
									"end": 276,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 266,
									"end": 272,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 263,
									"end": 277,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 243,
									"end": 261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 240,
									"end": 278,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 237,
									"end": 321,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 237,
									"end": 321,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 237,
									"end": 321,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 293,
									"end": 311,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 293,
									"end": 311,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 293,
									"end": 311,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 293,
									"end": 311,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 293,
									"end": 311,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 237,
									"end": 321,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 237,
									"end": 321,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 58,
									"end": 327,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 327,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7,
									"end": 327,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7,
									"end": 327,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 327,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 333,
									"end": 513,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 333,
									"end": 513,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 381,
									"end": 458,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 378,
									"end": 379,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 371,
									"end": 459,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 478,
									"end": 482,
									"name": "PUSH",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 475,
									"end": 476,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 468,
									"end": 483,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 502,
									"end": 506,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 499,
									"end": 500,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 492,
									"end": 507,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 98,
									"end": 342,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 98,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 342,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d1d5fbf681d4525c216ecb284c0ab2f758db70a21475536f2e912acd42b617ff64736f6c63430008070033",
									".code": [
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "A0712D68"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 342,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 174,
											"end": 340,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 174,
											"end": 340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 174,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 174,
											"end": 340,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 340,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 174,
											"end": 340,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 174,
											"end": 340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 174,
											"end": 340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 174,
											"end": 340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 174,
											"end": 340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 174,
											"end": 340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 174,
											"end": 340,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 174,
											"end": 340,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 174,
											"end": 340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 174,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 174,
											"end": 340,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 174,
											"end": 340,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 174,
											"end": 340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 174,
											"end": 340,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6048,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A7"
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6044,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6124,
											"end": 6134,
											"name": "PUSH",
											"source": 1,
											"value": "80AC58CD"
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6120,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6200,
											"end": 6210,
											"name": "PUSH",
											"source": 1,
											"value": "5B5E139F"
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6185,
											"end": 6196,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6014,
											"end": 6210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6014,
											"end": 6210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11228,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11247,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13116,
											"end": 13123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13140,
											"end": 13156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 13148,
											"end": 13155,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13140,
											"end": 13147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 13140,
											"end": 13156,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13140,
											"end": 13156,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 13140,
											"end": 13156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13135,
											"end": 13199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 13135,
											"end": 13199,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "PUSH",
											"source": 1,
											"value": "CF4700E400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13135,
											"end": 13199,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 13135,
											"end": 13199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13232,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13233,
											"end": 13240,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13210,
											"end": 13241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13210,
											"end": 13241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12683,
											"end": 12696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12699,
											"end": 12715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 12707,
											"end": 12714,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 12699,
											"end": 12715,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12699,
											"end": 12715,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 12699,
											"end": 12715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12683,
											"end": 12715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12683,
											"end": 12715,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12753,
											"end": 12758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12730,
											"end": 12758,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12730,
											"end": 12758,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12730,
											"end": 12749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 12730,
											"end": 12747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 12730,
											"end": 12749,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12730,
											"end": 12749,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 12730,
											"end": 12749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12730,
											"end": 12758,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12730,
											"end": 12758,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12730,
											"end": 12758,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12726,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 12726,
											"end": 12898,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12777,
											"end": 12821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 12794,
											"end": 12799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12801,
											"end": 12820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 12801,
											"end": 12818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 12801,
											"end": 12820,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12801,
											"end": 12820,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 12801,
											"end": 12820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12777,
											"end": 12793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 12777,
											"end": 12821,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12777,
											"end": 12821,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 12777,
											"end": 12821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12772,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 12772,
											"end": 12898,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "PUSH",
											"source": 1,
											"value": "CFB3B94200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12772,
											"end": 12898,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 12772,
											"end": 12898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12726,
											"end": 12898,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 12726,
											"end": 12898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12935,
											"end": 12937,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12923,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12924,
											"end": 12931,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12972,
											"end": 12979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12968,
											"end": 12970,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12961,
											"end": 12966,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 12673,
											"end": 12987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4789,
											"end": 4796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5013,
											"end": 5026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5010,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4998,
											"end": 5010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4982,
											"end": 4995,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4982,
											"end": 4995,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4982,
											"end": 5010,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4982,
											"end": 5028,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4975,
											"end": 5028,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4975,
											"end": 5028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22184,
											"end": 22211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22214,
											"end": 22241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 22233,
											"end": 22240,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22214,
											"end": 22232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 22214,
											"end": 22241,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22214,
											"end": 22241,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 22214,
											"end": 22241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22184,
											"end": 22241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22184,
											"end": 22241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22297,
											"end": 22301,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22256,
											"end": 22301,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22256,
											"end": 22301,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22272,
											"end": 22291,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22256,
											"end": 22301,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22256,
											"end": 22301,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22256,
											"end": 22301,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 22252,
											"end": 22338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 22252,
											"end": 22338,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "PUSH",
											"source": 1,
											"value": "A114810000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22252,
											"end": 22338,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 22252,
											"end": 22338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22350,
											"end": 22377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22379,
											"end": 22402,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22406,
											"end": 22434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 22426,
											"end": 22433,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 22406,
											"end": 22425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 22406,
											"end": 22434,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22406,
											"end": 22434,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 22406,
											"end": 22434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22349,
											"end": 22434,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22349,
											"end": 22434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22349,
											"end": 22434,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22349,
											"end": 22434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22531,
											"end": 22593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 22550,
											"end": 22565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22567,
											"end": 22571,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 22573,
											"end": 22592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 22573,
											"end": 22590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 22573,
											"end": 22592,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22573,
											"end": 22592,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 22573,
											"end": 22592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22531,
											"end": 22549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 22531,
											"end": 22593,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22531,
											"end": 22593,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 22531,
											"end": 22593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22526,
											"end": 22699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 22526,
											"end": 22699,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22612,
											"end": 22655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 22629,
											"end": 22633,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22635,
											"end": 22654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 22635,
											"end": 22652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 22635,
											"end": 22654,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22635,
											"end": 22654,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 22635,
											"end": 22654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22612,
											"end": 22628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 22612,
											"end": 22655,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22612,
											"end": 22655,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 22612,
											"end": 22655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22607,
											"end": 22699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 22607,
											"end": 22699,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "PUSH",
											"source": 1,
											"value": "59C896BE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22607,
											"end": 22699,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 22607,
											"end": 22699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22526,
											"end": 22699,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 22526,
											"end": 22699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22728,
											"end": 22729,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22714,
											"end": 22730,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22714,
											"end": 22730,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22714,
											"end": 22716,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 22714,
											"end": 22730,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22714,
											"end": 22730,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22714,
											"end": 22730,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 22710,
											"end": 22762,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 22710,
											"end": 22762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 22710,
											"end": 22762,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "PUSH",
											"source": 1,
											"value": "EA553B3400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22710,
											"end": 22762,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 22710,
											"end": 22762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22773,
											"end": 22816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 22795,
											"end": 22799,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22801,
											"end": 22803,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22805,
											"end": 22812,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22814,
											"end": 22815,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 22773,
											"end": 22794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 22773,
											"end": 22816,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22773,
											"end": 22816,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 22773,
											"end": 22816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22905,
											"end": 22920,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23043,
											"end": 23044,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23022,
											"end": 23041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23015,
											"end": 23045,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23447,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23448,
											"end": 23452,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23515,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23516,
											"end": 23518,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23812,
											"end": 23954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 23848,
											"end": 23850,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 23895,
											"end": 23940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 23910,
											"end": 23914,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 23916,
											"end": 23918,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 23920,
											"end": 23939,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 23895,
											"end": 23909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 23895,
											"end": 23940,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23895,
											"end": 23940,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 23895,
											"end": 23940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2054,
											"name": "PUSH",
											"source": 1,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23868,
											"end": 23940,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 23812,
											"end": 23830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 23812,
											"end": 23954,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23812,
											"end": 23954,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 23812,
											"end": 23954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23800,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23801,
											"end": 23808,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23954,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24121,
											"end": 24122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2054,
											"name": "PUSH",
											"source": 1,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24071,
											"end": 24090,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24071,
											"end": 24117,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24071,
											"end": 24122,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 24067,
											"end": 24683,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 24067,
											"end": 24683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 24067,
											"end": 24683,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24142,
											"end": 24161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24174,
											"end": 24175,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 24164,
											"end": 24171,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 24164,
											"end": 24175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24142,
											"end": 24175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24142,
											"end": 24175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24329,
											"end": 24330,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24295,
											"end": 24312,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24313,
											"end": 24324,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24330,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 24291,
											"end": 24669,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 24291,
											"end": 24669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 24291,
											"end": 24669,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24431,
											"end": 24444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24431,
											"end": 24444,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 24416,
											"end": 24427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24416,
											"end": 24444,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 24412,
											"end": 24651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 24412,
											"end": 24651,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24609,
											"end": 24628,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24593,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24594,
											"end": 24605,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24628,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24412,
											"end": 24651,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 24412,
											"end": 24651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24291,
											"end": 24669,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 24291,
											"end": 24669,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24124,
											"end": 24683,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24067,
											"end": 24683,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 24067,
											"end": 24683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24727,
											"end": 24734,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24723,
											"end": 24725,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24717,
											"end": 24721,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 24745,
											"end": 24787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 24766,
											"end": 24770,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 24772,
											"end": 24774,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 24776,
											"end": 24783,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 24785,
											"end": 24786,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 24745,
											"end": 24765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 24745,
											"end": 24787,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24745,
											"end": 24787,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 24745,
											"end": 24787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22174,
											"end": 24794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22174,
											"end": 24794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22174,
											"end": 24794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 14062,
											"end": 14066,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14068,
											"end": 14070,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14072,
											"end": 14079,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11021,
											"end": 11028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11063,
											"end": 11090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 11082,
											"end": 11089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11063,
											"end": 11081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 11063,
											"end": 11090,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11063,
											"end": 11090,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 11063,
											"end": 11090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11040,
											"end": 11092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11040,
											"end": 11092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6383,
											"end": 6390,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6423,
											"end": 6424,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6406,
											"end": 6411,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6402,
											"end": 6462,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6402,
											"end": 6462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 6402,
											"end": 6462,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "PUSH",
											"source": 1,
											"value": "8F4EB60400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6402,
											"end": 6462,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 6402,
											"end": 6462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1035,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6479,
											"end": 6497,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6498,
											"end": 6503,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6533,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6472,
											"end": 6533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6472,
											"end": 6533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11379,
											"end": 11392,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11411,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 174,
											"end": 340,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 174,
											"end": 340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 304,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 314,
											"end": 324,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 326,
											"end": 334,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 304,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 174,
											"end": 340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 174,
											"end": 340,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13425,
											"end": 13444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 13425,
											"end": 13442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 13425,
											"end": 13444,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13425,
											"end": 13444,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 13425,
											"end": 13444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13413,
											"end": 13444,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13413,
											"end": 13444,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13413,
											"end": 13421,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13413,
											"end": 13444,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13413,
											"end": 13444,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13413,
											"end": 13444,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 13409,
											"end": 13470,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13409,
											"end": 13470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 13409,
											"end": 13470,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "PUSH",
											"source": 1,
											"value": "B06307DB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13409,
											"end": 13470,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 13409,
											"end": 13470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13533,
											"end": 13541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13500,
											"end": 13519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 13500,
											"end": 13517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 13500,
											"end": 13519,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13500,
											"end": 13519,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 13500,
											"end": 13519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13521,
											"end": 13529,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13600,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13571,
											"end": 13590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 13571,
											"end": 13588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 13571,
											"end": 13590,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13571,
											"end": 13590,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 13571,
											"end": 13590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13602,
											"end": 13610,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14318,
											"end": 14349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 14331,
											"end": 14335,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14337,
											"end": 14339,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14341,
											"end": 14348,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14318,
											"end": 14330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 14318,
											"end": 14349,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14318,
											"end": 14349,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 14318,
											"end": 14349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14381,
											"end": 14382,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14363,
											"end": 14365,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14363,
											"end": 14377,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14363,
											"end": 14377,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14363,
											"end": 14377,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 14363,
											"end": 14382,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14359,
											"end": 14539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 14359,
											"end": 14539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14401,
											"end": 14457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 14432,
											"end": 14436,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14438,
											"end": 14440,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14442,
											"end": 14449,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14451,
											"end": 14456,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14401,
											"end": 14431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 14401,
											"end": 14457,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14401,
											"end": 14457,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 14401,
											"end": 14457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14396,
											"end": 14539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 14396,
											"end": 14539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "PUSH",
											"source": 1,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14396,
											"end": 14539,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 14396,
											"end": 14539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14359,
											"end": 14539,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 14359,
											"end": 14539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11564,
											"end": 11577,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11594,
											"end": 11610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 11602,
											"end": 11609,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11594,
											"end": 11601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 11594,
											"end": 11610,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11594,
											"end": 11610,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 11594,
											"end": 11610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11589,
											"end": 11648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 11589,
											"end": 11648,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "PUSH",
											"source": 1,
											"value": "A14C4B5000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11589,
											"end": 11648,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 11589,
											"end": 11648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11659,
											"end": 11680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11683,
											"end": 11693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 11683,
											"end": 11691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 11683,
											"end": 11693,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11683,
											"end": 11693,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 11683,
											"end": 11693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11659,
											"end": 11693,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11659,
											"end": 11693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11735,
											"end": 11736,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11716,
											"end": 11723,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11731,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11736,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11736,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11763,
											"end": 11770,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11772,
											"end": 11790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 11782,
											"end": 11789,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11772,
											"end": 11781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 11772,
											"end": 11790,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11772,
											"end": 11790,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 11772,
											"end": 11790,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11703,
											"end": 11797,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11703,
											"end": 11797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11703,
											"end": 11797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13781,
											"end": 13785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13804,
											"end": 13822,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13823,
											"end": 13828,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13830,
											"end": 13838,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13797,
											"end": 13839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13797,
											"end": 13839,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14791,
											"end": 15059,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 14791,
											"end": 15059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14848,
											"end": 14852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14902,
											"end": 14909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 14883,
											"end": 14896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 14883,
											"end": 14898,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14883,
											"end": 14898,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 14883,
											"end": 14898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14909,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14909,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14935,
											"end": 14948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14935,
											"end": 14948,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 14925,
											"end": 14932,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14925,
											"end": 14948,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15032,
											"end": 15033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1774,
											"end": 1782,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14985,
											"end": 15002,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15003,
											"end": 15010,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15028,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15033,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14864,
											"end": 15033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14864,
											"end": 15033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 15059,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 15059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 15059,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 15059,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 32874,
											"end": 32977,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 32874,
											"end": 32977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32934,
											"end": 32941,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 32953,
											"end": 32970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32953,
											"end": 32970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32874,
											"end": 32977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32874,
											"end": 32977,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4276,
											"end": 4366,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 4276,
											"end": 4366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4332,
											"end": 4339,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4366,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8016,
											"end": 8023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8035,
											"end": 8047,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8050,
											"end": 8057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8035,
											"end": 8057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8035,
											"end": 8057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8115,
											"end": 8119,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8096,
											"end": 8111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 8096,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 8096,
											"end": 8111,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8096,
											"end": 8111,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 8096,
											"end": 8111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8096,
											"end": 8119,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8092,
											"end": 8990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 8092,
											"end": 8990,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8148,
											"end": 8161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8148,
											"end": 8161,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8141,
											"end": 8145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8141,
											"end": 8161,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8199,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8202,
											"end": 8219,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8220,
											"end": 8224,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8225,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8316,
											"end": 8317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1774,
											"end": 1782,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8289,
											"end": 8295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8289,
											"end": 8312,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8289,
											"end": 8317,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 8285,
											"end": 8972,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8285,
											"end": 8972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 8285,
											"end": 8972,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8817,
											"end": 8818,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8807,
											"end": 8813,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8807,
											"end": 8818,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8876,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8877,
											"end": 8883,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8877,
											"end": 8883,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8877,
											"end": 8883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8877,
											"end": 8883,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8877,
											"end": 8883,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8877,
											"end": 8883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8877,
											"end": 8883,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8850,
											"end": 8884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8850,
											"end": 8884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8943,
											"end": 8949,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8936,
											"end": 8949,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8936,
											"end": 8949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8936,
											"end": 8949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8936,
											"end": 8949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8936,
											"end": 8949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 8936,
											"end": 8949,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8285,
											"end": 8972,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 8285,
											"end": 8972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8092,
											"end": 8990,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 8092,
											"end": 8990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "PUSH",
											"source": 1,
											"value": "DF2D9B4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20436,
											"end": 21073,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 20436,
											"end": 21073,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20528,
											"end": 20555,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20557,
											"end": 20580,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20596,
											"end": 20649,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20652,
											"end": 20667,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 20596,
											"end": 20667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20596,
											"end": 20667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20834,
											"end": 20841,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20828,
											"end": 20832,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20821,
											"end": 20842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20868,
											"end": 20890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20862,
											"end": 20866,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20855,
											"end": 20891,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20943,
											"end": 20947,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20937,
											"end": 20941,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20927,
											"end": 20948,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 20904,
											"end": 20948,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20904,
											"end": 20948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21037,
											"end": 21056,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21031,
											"end": 21057,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 21012,
											"end": 21057,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21012,
											"end": 21057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20774,
											"end": 21067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20436,
											"end": 21073,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20436,
											"end": 21073,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20436,
											"end": 21073,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20436,
											"end": 21073,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21181,
											"end": 21813,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 21181,
											"end": 21813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21319,
											"end": 21330,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21478,
											"end": 21493,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21472,
											"end": 21476,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21468,
											"end": 21494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21460,
											"end": 21494,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21460,
											"end": 21494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21635,
											"end": 21650,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21624,
											"end": 21633,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21620,
											"end": 21651,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21607,
											"end": 21651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21607,
											"end": 21651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21780,
											"end": 21795,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21769,
											"end": 21778,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21766,
											"end": 21796,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 21759,
											"end": 21763,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21748,
											"end": 21757,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21745,
											"end": 21764,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 21742,
											"end": 21797,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 21732,
											"end": 21797,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21732,
											"end": 21797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21181,
											"end": 21813,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 21181,
											"end": 21813,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21181,
											"end": 21813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21181,
											"end": 21813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21181,
											"end": 21813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21181,
											"end": 21813,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 31742,
											"end": 31896,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 31742,
											"end": 31896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31742,
											"end": 31896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31742,
											"end": 31896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31742,
											"end": 31896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31742,
											"end": 31896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31742,
											"end": 31896,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 30099,
											"end": 30401,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 30099,
											"end": 30401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30230,
											"end": 30237,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30249,
											"end": 30265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "E8"
										},
										{
											"begin": 30275,
											"end": 30294,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30275,
											"end": 30315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30275,
											"end": 30315,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 30249,
											"end": 30316,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30249,
											"end": 30316,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "E8"
										},
										{
											"begin": 30341,
											"end": 30372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 30352,
											"end": 30356,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 30358,
											"end": 30360,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 30362,
											"end": 30371,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 30341,
											"end": 30351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 30341,
											"end": 30372,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 30341,
											"end": 30372,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 30341,
											"end": 30372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30333,
											"end": 30373,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFF"
										},
										{
											"begin": 30333,
											"end": 30373,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30333,
											"end": 30394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30333,
											"end": 30394,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 30326,
											"end": 30394,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30326,
											"end": 30394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30326,
											"end": 30394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30099,
											"end": 30401,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 30099,
											"end": 30401,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 30099,
											"end": 30401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30099,
											"end": 30401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30099,
											"end": 30401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30099,
											"end": 30401,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10460,
											"end": 10900,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 10460,
											"end": 10900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10540,
											"end": 10554,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10705,
											"end": 10720,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10698,
											"end": 10703,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10694,
											"end": 10721,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10685,
											"end": 10721,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10685,
											"end": 10721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10877,
											"end": 10882,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10863,
											"end": 10874,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 10839,
											"end": 10861,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 10835,
											"end": 10875,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 10832,
											"end": 10883,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 10825,
											"end": 10830,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10822,
											"end": 10884,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 10812,
											"end": 10884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10812,
											"end": 10884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10900,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10900,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10900,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 32537,
											"end": 32690,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 32537,
											"end": 32690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32537,
											"end": 32690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32537,
											"end": 32690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32537,
											"end": 32690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32537,
											"end": 32690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32537,
											"end": 32690,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15138,
											"end": 15240,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 15138,
											"end": 15240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 15216,
											"end": 15218,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15220,
											"end": 15228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15206,
											"end": 15215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15138,
											"end": 15240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15138,
											"end": 15240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15138,
											"end": 15240,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28807,
											"end": 28811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28852,
											"end": 28854,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28872,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28827,
											"end": 28872,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28872,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 28873,
											"end": 28892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 28873,
											"end": 28890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 28873,
											"end": 28892,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 28873,
											"end": 28892,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 28873,
											"end": 28892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28894,
											"end": 28898,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 28900,
											"end": 28907,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 28909,
											"end": 28914,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29122,
											"end": 29123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29105,
											"end": 29111,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29105,
											"end": 29118,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 29105,
											"end": 29123,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 29101,
											"end": 29330,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 29101,
											"end": 29330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 29101,
											"end": 29330,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "PUSH",
											"source": 1,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 29101,
											"end": 29330,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 29101,
											"end": 29330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29290,
											"end": 29296,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29284,
											"end": 29297,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 29275,
											"end": 29281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29271,
											"end": 29273,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29267,
											"end": 29282,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29260,
											"end": 29298,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28993,
											"end": 29047,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 28993,
											"end": 29047,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 28993,
											"end": 29047,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28983,
											"end": 28989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28976,
											"end": 29047,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28976,
											"end": 29047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28976,
											"end": 29047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12049,
											"end": 12141,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 12049,
											"end": 12141,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12100,
											"end": 12113,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12049,
											"end": 12141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12049,
											"end": 12141,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 33078,
											"end": 34998,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 33078,
											"end": 34998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33135,
											"end": 33152,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 33548,
											"end": 33551,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 33541,
											"end": 33545,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33535,
											"end": 33546,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 33531,
											"end": 33552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33524,
											"end": 33552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33524,
											"end": 33552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33637,
											"end": 33640,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33631,
											"end": 33635,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33624,
											"end": 33641,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33740,
											"end": 33743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34188,
											"end": 34193,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 34316,
											"end": 34317,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 34311,
											"end": 34314,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34307,
											"end": 34318,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34300,
											"end": 34318,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34300,
											"end": 34318,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34451,
											"end": 34453,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 34445,
											"end": 34449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34441,
											"end": 34454,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 34437,
											"end": 34439,
											"name": "PUSH",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 34433,
											"end": 34455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34428,
											"end": 34431,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34420,
											"end": 34456,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 34491,
											"end": 34493,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 34485,
											"end": 34489,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34481,
											"end": 34494,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 34473,
											"end": 34494,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34473,
											"end": 34494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34509,
											"end": 34513,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 34695,
											"end": 34696,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 34690,
											"end": 34693,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34686,
											"end": 34697,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34679,
											"end": 34697,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34679,
											"end": 34697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34745,
											"end": 34747,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 34739,
											"end": 34743,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34735,
											"end": 34748,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 34731,
											"end": 34733,
											"name": "PUSH",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 34727,
											"end": 34749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34722,
											"end": 34725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34714,
											"end": 34750,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 34602,
											"end": 34604,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 34596,
											"end": 34600,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34592,
											"end": 34605,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 34584,
											"end": 34605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34584,
											"end": 34605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34086,
											"end": 34508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34801,
											"end": 34804,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34796,
											"end": 34799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34792,
											"end": 34805,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34914,
											"end": 34916,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34909,
											"end": 34912,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34905,
											"end": 34917,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34898,
											"end": 34917,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34898,
											"end": 34917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34975,
											"end": 34981,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34970,
											"end": 34973,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34963,
											"end": 34982,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33173,
											"end": 34992,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33173,
											"end": 34992,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33078,
											"end": 34998,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33078,
											"end": 34998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33078,
											"end": 34998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33078,
											"end": 34998,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 30961,
											"end": 31104,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 30961,
											"end": 31104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31094,
											"end": 31100,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30961,
											"end": 31104,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 30961,
											"end": 31104,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 30961,
											"end": 31104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30961,
											"end": 31104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30961,
											"end": 31104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30961,
											"end": 31104,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15641,
											"end": 16302,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 15641,
											"end": 16302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15759,
											"end": 15778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 15765,
											"end": 15767,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15769,
											"end": 15777,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15759,
											"end": 15764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 15759,
											"end": 15778,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15759,
											"end": 15778,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 15759,
											"end": 15778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15835,
											"end": 15836,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15817,
											"end": 15819,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15817,
											"end": 15831,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15817,
											"end": 15831,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15817,
											"end": 15831,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 15817,
											"end": 15836,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15813,
											"end": 16286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 15813,
											"end": 16286,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15856,
											"end": 15867,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15870,
											"end": 15883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15870,
											"end": 15883,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 15856,
											"end": 15883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15856,
											"end": 15883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15901,
											"end": 15914,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15923,
											"end": 15931,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15917,
											"end": 15920,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15917,
											"end": 15931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15901,
											"end": 15931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15901,
											"end": 15931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15949,
											"end": 16178,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 15949,
											"end": 16178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15979,
											"end": 16041,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 16018,
											"end": 16019,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16022,
											"end": 16024,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16026,
											"end": 16033,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16026,
											"end": 16033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16026,
											"end": 16033,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 16026,
											"end": 16033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16026,
											"end": 16033,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 16026,
											"end": 16033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16035,
											"end": 16040,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15979,
											"end": 16009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 15979,
											"end": 16041,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15979,
											"end": 16041,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 15979,
											"end": 16041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15974,
											"end": 16139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 15974,
											"end": 16139,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "PUSH",
											"source": 1,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15974,
											"end": 16139,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 15974,
											"end": 16139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16173,
											"end": 16176,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16165,
											"end": 16170,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16165,
											"end": 16176,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 15949,
											"end": 16178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 15949,
											"end": 16178,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16258,
											"end": 16261,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16241,
											"end": 16254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16241,
											"end": 16254,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 16241,
											"end": 16261,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 16237,
											"end": 16271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 16237,
											"end": 16271,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16263,
											"end": 16271,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16263,
											"end": 16271,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16263,
											"end": 16271,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16237,
											"end": 16271,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 16237,
											"end": 16271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 16286,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 16286,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15813,
											"end": 16286,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 15813,
											"end": 16286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15641,
											"end": 16302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15641,
											"end": 16302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15641,
											"end": 16302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15641,
											"end": 16302,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16563,
											"end": 18055,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 16563,
											"end": 18055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16627,
											"end": 16647,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16650,
											"end": 16663,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16650,
											"end": 16663,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 16627,
											"end": 16663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16627,
											"end": 16663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16677,
											"end": 16693,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16677,
											"end": 16693,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16677,
											"end": 16679,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16677,
											"end": 16693,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16677,
											"end": 16693,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16677,
											"end": 16693,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 16673,
											"end": 16721,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16673,
											"end": 16721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 16673,
											"end": 16721,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "PUSH",
											"source": 1,
											"value": "2E07630000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16673,
											"end": 16721,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 16673,
											"end": 16721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16747,
											"end": 16748,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16735,
											"end": 16743,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16735,
											"end": 16748,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 16731,
											"end": 16775,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16731,
											"end": 16775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 16731,
											"end": 16775,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "PUSH",
											"source": 1,
											"value": "B562E8DD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16731,
											"end": 16775,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 16731,
											"end": 16775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16786,
											"end": 16847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 16816,
											"end": 16817,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16820,
											"end": 16822,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16824,
											"end": 16836,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16838,
											"end": 16846,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16786,
											"end": 16807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 16786,
											"end": 16847,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16786,
											"end": 16847,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 16786,
											"end": 16847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17318,
											"end": 17319,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1156,
											"end": 1158,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17289,
											"end": 17290,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 17289,
											"end": 17314,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17289,
											"end": 17314,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 17288,
											"end": 17319,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 17276,
											"end": 17284,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17276,
											"end": 17320,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17268,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17269,
											"end": 17271,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17250,
											"end": 17320,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17320,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17320,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17320,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17320,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17320,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17590,
											"end": 17726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 17626,
											"end": 17628,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17679,
											"end": 17712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 17702,
											"end": 17703,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17706,
											"end": 17708,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17710,
											"end": 17711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17679,
											"end": 17693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 17679,
											"end": 17712,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17679,
											"end": 17712,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 17679,
											"end": 17712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 17667,
											"end": 17675,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 17646,
											"end": 17676,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17646,
											"end": 17676,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 17646,
											"end": 17676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17712,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 17590,
											"end": 17608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 17590,
											"end": 17726,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17590,
											"end": 17726,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 17590,
											"end": 17726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17556,
											"end": 17573,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17556,
											"end": 17587,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17574,
											"end": 17586,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17556,
											"end": 17587,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17556,
											"end": 17587,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17556,
											"end": 17587,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17556,
											"end": 17587,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17556,
											"end": 17587,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17556,
											"end": 17587,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17556,
											"end": 17587,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17556,
											"end": 17587,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17556,
											"end": 17587,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17556,
											"end": 17587,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17556,
											"end": 17587,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 17556,
											"end": 17726,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17556,
											"end": 17726,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17556,
											"end": 17726,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 17556,
											"end": 17726,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17741,
											"end": 17756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17759,
											"end": 17771,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17741,
											"end": 17771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17741,
											"end": 17771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17785,
											"end": 17796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17814,
											"end": 17822,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17799,
											"end": 17811,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17799,
											"end": 17822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17785,
											"end": 17822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17785,
											"end": 17822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17836,
											"end": 17935,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 17836,
											"end": 17935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17887,
											"end": 17896,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17887,
											"end": 17896,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17887,
											"end": 17896,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 17887,
											"end": 17896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17887,
											"end": 17896,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17887,
											"end": 17896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17883,
											"end": 17885,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17879,
											"end": 17880,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 17930,
											"end": 17933,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17920,
											"end": 17927,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17920,
											"end": 17933,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 17836,
											"end": 17935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 17836,
											"end": 17935,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17965,
											"end": 17968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17949,
											"end": 17962,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17949,
											"end": 17968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17949,
											"end": 17968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17949,
											"end": 17968,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 17949,
											"end": 17968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17030,
											"end": 17979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17030,
											"end": 17979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17988,
											"end": 18048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 18017,
											"end": 18018,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18021,
											"end": 18023,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 18025,
											"end": 18037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18039,
											"end": 18047,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17988,
											"end": 18008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 17988,
											"end": 18048,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17988,
											"end": 18048,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 17988,
											"end": 18048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16617,
											"end": 18055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16563,
											"end": 18055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16563,
											"end": 18055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16563,
											"end": 18055,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12238,
											"end": 12554,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 12238,
											"end": 12554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12308,
											"end": 12322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12535,
											"end": 12536,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12525,
											"end": 12533,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12522,
											"end": 12537,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12497,
											"end": 12520,
											"name": "PUSH",
											"source": 1,
											"value": "E1"
										},
										{
											"begin": 12493,
											"end": 12538,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 12483,
											"end": 12538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12483,
											"end": 12538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12238,
											"end": 12554,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12238,
											"end": 12554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12238,
											"end": 12554,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12238,
											"end": 12554,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 84,
											"end": 89,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 166,
											"end": 172,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 100,
											"end": 174,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 100,
											"end": 174,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 197,
											"end": 203,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 190,
											"end": 195,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 183,
											"end": 204,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 233,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 224,
											"end": 240,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 273,
											"end": 276,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 264,
											"end": 270,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 259,
											"end": 262,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 255,
											"end": 271,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 252,
											"end": 277,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 249,
											"end": 361,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 249,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 249,
											"end": 361,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 404,
											"end": 410,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 399,
											"end": 402,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 394,
											"end": 397,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 90,
											"end": 417,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 469,
											"end": 474,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 513,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 494,
											"end": 514,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 485,
											"end": 514,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 485,
											"end": 514,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 701,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 568,
											"end": 701,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 611,
											"end": 616,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 649,
											"end": 655,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 636,
											"end": 656,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 627,
											"end": 656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 627,
											"end": 656,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 665,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 665,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 665,
											"end": 695,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 665,
											"end": 695,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 665,
											"end": 695,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 568,
											"end": 701,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 568,
											"end": 701,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 568,
											"end": 701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 701,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 707,
											"end": 844,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 707,
											"end": 844,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 752,
											"end": 757,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 790,
											"end": 796,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 777,
											"end": 797,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 768,
											"end": 797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 768,
											"end": 797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 806,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 832,
											"end": 837,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 806,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 806,
											"end": 838,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 806,
											"end": 838,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 806,
											"end": 838,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 707,
											"end": 844,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 707,
											"end": 844,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 707,
											"end": 844,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 707,
											"end": 844,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 707,
											"end": 844,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 850,
											"end": 991,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 850,
											"end": 991,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 906,
											"end": 911,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 943,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 931,
											"end": 944,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 922,
											"end": 944,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 922,
											"end": 944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 953,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 979,
											"end": 984,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 953,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 953,
											"end": 985,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 953,
											"end": 985,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 953,
											"end": 985,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 850,
											"end": 991,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 850,
											"end": 991,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 850,
											"end": 991,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 850,
											"end": 991,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 850,
											"end": 991,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1070,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1117,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1111,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1099,
											"end": 1105,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1095,
											"end": 1112,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1118,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 1081,
											"end": 1203,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1203,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 1081,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1226,
											"end": 1246,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 1338,
											"end": 1341,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1330,
											"end": 1336,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1323,
											"end": 1327,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1321,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1311,
											"end": 1328,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1255,
											"end": 1342,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1255,
											"end": 1342,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "tag",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1400,
											"end": 1405,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1444,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1425,
											"end": 1445,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 1481,
											"end": 1486,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1564,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1607,
											"end": 1609,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1595,
											"end": 1604,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1593,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1605,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1578,
											"end": 1610,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1733,
											"end": 1734,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 1803,
											"end": 1810,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1794,
											"end": 1800,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1783,
											"end": 1792,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1801,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "tag",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1748,
											"end": 1811,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1748,
											"end": 1811,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1704,
											"end": 1821,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1908,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1916,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1959,
											"end": 1961,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1947,
											"end": 1956,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1938,
											"end": 1945,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1934,
											"end": 1957,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1962,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "tag",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2085,
											"end": 2086,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 2155,
											"end": 2162,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2146,
											"end": 2152,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2135,
											"end": 2144,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2131,
											"end": 2153,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2100,
											"end": 2163,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2100,
											"end": 2163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2173,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2212,
											"end": 2214,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 2283,
											"end": 2290,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2280,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2263,
											"end": 2272,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2259,
											"end": 2281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "tag",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2228,
											"end": 2291,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2228,
											"end": 2291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2301,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2391,
											"end": 2397,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2399,
											"end": 2405,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2407,
											"end": 2413,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2456,
											"end": 2458,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2444,
											"end": 2453,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2442,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2431,
											"end": 2454,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2427,
											"end": 2459,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "tag",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "tag",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2582,
											"end": 2583,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 2652,
											"end": 2659,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2643,
											"end": 2649,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2641,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2660,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2660,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2670,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2709,
											"end": 2711,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2771,
											"end": 2777,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2760,
											"end": 2769,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2756,
											"end": 2778,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "tag",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2680,
											"end": 2798,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2837,
											"end": 2839,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 2908,
											"end": 2915,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2899,
											"end": 2905,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2888,
											"end": 2897,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2884,
											"end": 2906,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "tag",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2808,
											"end": 2926,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3034,
											"end": 3040,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3050,
											"end": 3056,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3064,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3107,
											"end": 3110,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3082,
											"end": 3105,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3078,
											"end": 3111,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "tag",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "tag",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3234,
											"end": 3235,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 3304,
											"end": 3311,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3295,
											"end": 3301,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3284,
											"end": 3293,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3302,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "tag",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3249,
											"end": 3312,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 3249,
											"end": 3312,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3205,
											"end": 3322,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3361,
											"end": 3363,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 3432,
											"end": 3439,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3423,
											"end": 3429,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3421,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "tag",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3332,
											"end": 3450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3489,
											"end": 3491,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 3560,
											"end": 3567,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3557,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3540,
											"end": 3549,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3536,
											"end": 3558,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "tag",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3505,
											"end": 3568,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3505,
											"end": 3568,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3460,
											"end": 3578,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3645,
											"end": 3647,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3634,
											"end": 3643,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3617,
											"end": 3649,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3676,
											"end": 3694,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3668,
											"end": 3674,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3695,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "tag",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "tag",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 3857,
											"end": 3864,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3848,
											"end": 3854,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3837,
											"end": 3846,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3833,
											"end": 3855,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "tag",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3793,
											"end": 3865,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3793,
											"end": 3865,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3588,
											"end": 3875,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3953,
											"end": 3959,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3961,
											"end": 3967,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4010,
											"end": 4012,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4007,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3989,
											"end": 3996,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3985,
											"end": 4008,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3981,
											"end": 4013,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "tag",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "tag",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4136,
											"end": 4137,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 4206,
											"end": 4213,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4203,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4186,
											"end": 4195,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4204,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "tag",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4151,
											"end": 4214,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4151,
											"end": 4214,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4107,
											"end": 4224,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4263,
											"end": 4265,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 4331,
											"end": 4338,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4322,
											"end": 4328,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4311,
											"end": 4320,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4307,
											"end": 4329,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "tag",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4339,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4339,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4234,
											"end": 4349,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4438,
											"end": 4444,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4487,
											"end": 4489,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4475,
											"end": 4484,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4466,
											"end": 4473,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4462,
											"end": 4485,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4458,
											"end": 4490,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "tag",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "tag",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4613,
											"end": 4614,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 4683,
											"end": 4690,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4674,
											"end": 4680,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4663,
											"end": 4672,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4681,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "tag",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4628,
											"end": 4691,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4628,
											"end": 4691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4584,
											"end": 4701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4740,
											"end": 4742,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 4811,
											"end": 4818,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4802,
											"end": 4808,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4791,
											"end": 4800,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4809,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "tag",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4756,
											"end": 4819,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4756,
											"end": 4819,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4711,
											"end": 4829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4906,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4951,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4937,
											"end": 4946,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4928,
											"end": 4935,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4924,
											"end": 4947,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4920,
											"end": 4952,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "tag",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "tag",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5075,
											"end": 5076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 5144,
											"end": 5151,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5135,
											"end": 5141,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5124,
											"end": 5133,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5120,
											"end": 5142,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "tag",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5090,
											"end": 5152,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5090,
											"end": 5152,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5046,
											"end": 5162,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5244,
											"end": 5250,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5293,
											"end": 5295,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5281,
											"end": 5290,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5272,
											"end": 5279,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5268,
											"end": 5291,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5264,
											"end": 5296,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "tag",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "tag",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5419,
											"end": 5420,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 5499,
											"end": 5506,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5490,
											"end": 5496,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5479,
											"end": 5488,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5475,
											"end": 5497,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "tag",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5507,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5507,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5390,
											"end": 5517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5595,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5638,
											"end": 5640,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5626,
											"end": 5635,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5617,
											"end": 5624,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5613,
											"end": 5636,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5609,
											"end": 5641,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "tag",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "tag",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5764,
											"end": 5765,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 5834,
											"end": 5841,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5825,
											"end": 5831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5814,
											"end": 5823,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5810,
											"end": 5832,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "tag",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5779,
											"end": 5842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5779,
											"end": 5842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5735,
											"end": 5852,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "tag",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 5970,
											"end": 5975,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "tag",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5947,
											"end": 5950,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5940,
											"end": 5977,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "tag",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 6085,
											"end": 6090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "tag",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6065,
											"end": 6068,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6058,
											"end": 6092,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "tag",
											"source": 3,
											"value": "350"
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6190,
											"end": 6193,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 6250,
											"end": 6255,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "tag",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 6335,
											"end": 6341,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6330,
											"end": 6333,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "tag",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6265,
											"end": 6342,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6265,
											"end": 6342,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 6396,
											"end": 6402,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6391,
											"end": 6394,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6384,
											"end": 6388,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6377,
											"end": 6382,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6373,
											"end": 6389,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "tag",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 6450,
											"end": 6456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "tag",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6423,
											"end": 6426,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6419,
											"end": 6458,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6412,
											"end": 6458,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6412,
											"end": 6458,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6194,
											"end": 6464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "tag",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6558,
											"end": 6561,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 6619,
											"end": 6624,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "tag",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 6705,
											"end": 6711,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6700,
											"end": 6703,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "tag",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6634,
											"end": 6712,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6634,
											"end": 6712,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 6766,
											"end": 6772,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6761,
											"end": 6764,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6754,
											"end": 6758,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6747,
											"end": 6752,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6743,
											"end": 6759,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "tag",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 6820,
											"end": 6826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "tag",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6793,
											"end": 6796,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6789,
											"end": 6828,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6782,
											"end": 6828,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6782,
											"end": 6828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6562,
											"end": 6834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "tag",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6946,
											"end": 6949,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6974,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 7007,
											"end": 7012,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6974,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 6974,
											"end": 7013,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6974,
											"end": 7013,
											"name": "tag",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 6974,
											"end": 7013,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 7111,
											"end": 7117,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7106,
											"end": 7109,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 7029,
											"end": 7118,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7029,
											"end": 7118,
											"name": "tag",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 7029,
											"end": 7118,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7022,
											"end": 7118,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7022,
											"end": 7118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7127,
											"end": 7179,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 7172,
											"end": 7178,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7167,
											"end": 7170,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7160,
											"end": 7164,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7153,
											"end": 7158,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7149,
											"end": 7165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7127,
											"end": 7179,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 7127,
											"end": 7179,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7127,
											"end": 7179,
											"name": "tag",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 7127,
											"end": 7179,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7204,
											"end": 7210,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7199,
											"end": 7202,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7195,
											"end": 7211,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7188,
											"end": 7211,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7188,
											"end": 7211,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6950,
											"end": 7217,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7223,
											"end": 7341,
											"name": "tag",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 7223,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7310,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 7328,
											"end": 7333,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7310,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 7310,
											"end": 7334,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7310,
											"end": 7334,
											"name": "tag",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 7310,
											"end": 7334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7305,
											"end": 7308,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7335,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7223,
											"end": 7341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7223,
											"end": 7341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7223,
											"end": 7341,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7527,
											"end": 7530,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7549,
											"end": 7644,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 7640,
											"end": 7643,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7637,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7549,
											"end": 7644,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 7549,
											"end": 7644,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7549,
											"end": 7644,
											"name": "tag",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 7549,
											"end": 7644,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7542,
											"end": 7644,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7542,
											"end": 7644,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7661,
											"end": 7756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 7752,
											"end": 7755,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7743,
											"end": 7749,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7661,
											"end": 7756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 7661,
											"end": 7756,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7661,
											"end": 7756,
											"name": "tag",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 7661,
											"end": 7756,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7654,
											"end": 7756,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7654,
											"end": 7756,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7773,
											"end": 7776,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7766,
											"end": 7776,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7766,
											"end": 7776,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7881,
											"end": 7885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7919,
											"end": 7921,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7908,
											"end": 7917,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7904,
											"end": 7922,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7922,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7922,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7932,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 8000,
											"end": 8001,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7989,
											"end": 7998,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7985,
											"end": 8002,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7976,
											"end": 7982,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7932,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 7932,
											"end": 8003,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7932,
											"end": 8003,
											"name": "tag",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 7932,
											"end": 8003,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8211,
											"end": 8215,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8249,
											"end": 8252,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 8238,
											"end": 8247,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8234,
											"end": 8253,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8226,
											"end": 8253,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8226,
											"end": 8253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8263,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "384"
										},
										{
											"begin": 8331,
											"end": 8332,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8320,
											"end": 8329,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8316,
											"end": 8333,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8307,
											"end": 8313,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 8263,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 8263,
											"end": 8334,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8263,
											"end": 8334,
											"name": "tag",
											"source": 3,
											"value": "384"
										},
										{
											"begin": 8263,
											"end": 8334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8416,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 8412,
											"end": 8414,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8401,
											"end": 8410,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8397,
											"end": 8415,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8388,
											"end": 8394,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8416,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 8344,
											"end": 8416,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8344,
											"end": 8416,
											"name": "tag",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 8344,
											"end": 8416,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8426,
											"end": 8498,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 8494,
											"end": 8496,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8483,
											"end": 8492,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8479,
											"end": 8497,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8470,
											"end": 8476,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8426,
											"end": 8498,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 8426,
											"end": 8498,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8426,
											"end": 8498,
											"name": "tag",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 8426,
											"end": 8498,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8545,
											"end": 8554,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8539,
											"end": 8543,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8535,
											"end": 8555,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8530,
											"end": 8532,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 8519,
											"end": 8528,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8515,
											"end": 8533,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8508,
											"end": 8556,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8573,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 8644,
											"end": 8648,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8635,
											"end": 8641,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8573,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "350"
										},
										{
											"begin": 8573,
											"end": 8649,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8573,
											"end": 8649,
											"name": "tag",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 8573,
											"end": 8649,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8565,
											"end": 8649,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8565,
											"end": 8649,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8749,
											"end": 8753,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8787,
											"end": 8789,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8776,
											"end": 8785,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8772,
											"end": 8790,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8764,
											"end": 8790,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8764,
											"end": 8790,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8800,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 8862,
											"end": 8863,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8851,
											"end": 8860,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8847,
											"end": 8864,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 8844,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8800,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 8800,
											"end": 8865,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8800,
											"end": 8865,
											"name": "tag",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 8800,
											"end": 8865,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8991,
											"end": 8995,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9029,
											"end": 9031,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9018,
											"end": 9027,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9014,
											"end": 9032,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9006,
											"end": 9032,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9006,
											"end": 9032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9078,
											"end": 9087,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9072,
											"end": 9076,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9068,
											"end": 9088,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9064,
											"end": 9065,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9053,
											"end": 9062,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9049,
											"end": 9066,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9042,
											"end": 9089,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9106,
											"end": 9184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 9179,
											"end": 9183,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9170,
											"end": 9176,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9106,
											"end": 9184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 9106,
											"end": 9184,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9106,
											"end": 9184,
											"name": "tag",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 9106,
											"end": 9184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9098,
											"end": 9184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9098,
											"end": 9184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9290,
											"end": 9294,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9328,
											"end": 9330,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9317,
											"end": 9326,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9313,
											"end": 9331,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9305,
											"end": 9331,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9305,
											"end": 9331,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9341,
											"end": 9412,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 9409,
											"end": 9410,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9398,
											"end": 9407,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9394,
											"end": 9411,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9385,
											"end": 9391,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9341,
											"end": 9412,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 9341,
											"end": 9412,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9341,
											"end": 9412,
											"name": "tag",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 9341,
											"end": 9412,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9459,
											"end": 9465,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "tag",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9476,
											"end": 9506,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9476,
											"end": 9506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9515,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 9543,
											"end": 9547,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9535,
											"end": 9541,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9515,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 9515,
											"end": 9548,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9515,
											"end": 9548,
											"name": "tag",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 9515,
											"end": 9548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9560,
											"end": 9635,
											"name": "tag",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 9560,
											"end": 9635,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9593,
											"end": 9599,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9626,
											"end": 9628,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9620,
											"end": 9629,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9610,
											"end": 9629,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9610,
											"end": 9629,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9560,
											"end": 9635,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9560,
											"end": 9635,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9706,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9792,
											"end": 9810,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9784,
											"end": 9790,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9781,
											"end": 9811,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 9778,
											"end": 9834,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9778,
											"end": 9834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 9778,
											"end": 9834,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9814,
											"end": 9832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "402"
										},
										{
											"begin": 9814,
											"end": 9832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 9814,
											"end": 9832,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9814,
											"end": 9832,
											"name": "tag",
											"source": 3,
											"value": "402"
										},
										{
											"begin": 9814,
											"end": 9832,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9778,
											"end": 9834,
											"name": "tag",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 9778,
											"end": 9834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "404"
										},
										{
											"begin": 9874,
											"end": 9880,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "tag",
											"source": 3,
											"value": "404"
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9844,
											"end": 9881,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9844,
											"end": 9881,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9940,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9930,
											"end": 9934,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9926,
											"end": 9941,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9918,
											"end": 9941,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9918,
											"end": 9941,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "tag",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10005,
											"end": 10011,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10039,
											"end": 10044,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10033,
											"end": 10045,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10023,
											"end": 10045,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10023,
											"end": 10045,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "tag",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10110,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10144,
											"end": 10149,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10138,
											"end": 10150,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10128,
											"end": 10150,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10128,
											"end": 10150,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "tag",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10246,
											"end": 10257,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10280,
											"end": 10286,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10275,
											"end": 10278,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10268,
											"end": 10287,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10320,
											"end": 10324,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10315,
											"end": 10318,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10311,
											"end": 10325,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10325,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10325,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "tag",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10421,
											"end": 10432,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10455,
											"end": 10461,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10450,
											"end": 10453,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10443,
											"end": 10462,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10495,
											"end": 10499,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10490,
											"end": 10493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10486,
											"end": 10500,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10471,
											"end": 10500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10471,
											"end": 10500,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "tag",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10614,
											"end": 10625,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10651,
											"end": 10654,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10654,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10654,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10666,
											"end": 10762,
											"name": "tag",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 10666,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10703,
											"end": 10710,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "411"
										},
										{
											"begin": 10750,
											"end": 10755,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "412"
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "tag",
											"source": 3,
											"value": "411"
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10721,
											"end": 10756,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10721,
											"end": 10756,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10666,
											"end": 10762,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10666,
											"end": 10762,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10666,
											"end": 10762,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10666,
											"end": 10762,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10768,
											"end": 10858,
											"name": "tag",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 10768,
											"end": 10858,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10802,
											"end": 10809,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10845,
											"end": 10850,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10838,
											"end": 10851,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10831,
											"end": 10852,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10820,
											"end": 10852,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10820,
											"end": 10852,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10768,
											"end": 10858,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10768,
											"end": 10858,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10768,
											"end": 10858,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10768,
											"end": 10858,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10864,
											"end": 11013,
											"name": "tag",
											"source": 3,
											"value": "414"
										},
										{
											"begin": 10864,
											"end": 11013,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10900,
											"end": 10907,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10940,
											"end": 11006,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10933,
											"end": 10938,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10929,
											"end": 11007,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10918,
											"end": 11007,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10918,
											"end": 11007,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10864,
											"end": 11013,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10864,
											"end": 11013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10864,
											"end": 11013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10864,
											"end": 11013,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11019,
											"end": 11145,
											"name": "tag",
											"source": 3,
											"value": "412"
										},
										{
											"begin": 11019,
											"end": 11145,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11056,
											"end": 11063,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11096,
											"end": 11138,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11089,
											"end": 11094,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11085,
											"end": 11139,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11074,
											"end": 11139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11074,
											"end": 11139,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11019,
											"end": 11145,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11019,
											"end": 11145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11019,
											"end": 11145,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11019,
											"end": 11145,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11151,
											"end": 11228,
											"name": "tag",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 11151,
											"end": 11228,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11188,
											"end": 11195,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11217,
											"end": 11222,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11206,
											"end": 11222,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11206,
											"end": 11222,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11151,
											"end": 11228,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11151,
											"end": 11228,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11151,
											"end": 11228,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11151,
											"end": 11228,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11234,
											"end": 11388,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 11234,
											"end": 11388,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11318,
											"end": 11324,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11313,
											"end": 11316,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11308,
											"end": 11311,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11295,
											"end": 11325,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 11380,
											"end": 11381,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11371,
											"end": 11377,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11366,
											"end": 11369,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11362,
											"end": 11378,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11355,
											"end": 11382,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11234,
											"end": 11388,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11234,
											"end": 11388,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11234,
											"end": 11388,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11234,
											"end": 11388,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11394,
											"end": 11701,
											"name": "tag",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 11394,
											"end": 11701,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11462,
											"end": 11463,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "tag",
											"source": 3,
											"value": "420"
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11486,
											"end": 11492,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11483,
											"end": 11484,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11480,
											"end": 11493,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "422"
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11571,
											"end": 11572,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11566,
											"end": 11569,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11562,
											"end": 11573,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11556,
											"end": 11574,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11552,
											"end": 11553,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11547,
											"end": 11550,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11543,
											"end": 11554,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11536,
											"end": 11575,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11508,
											"end": 11510,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11505,
											"end": 11506,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11501,
											"end": 11511,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11496,
											"end": 11511,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11496,
											"end": 11511,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "420"
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "tag",
											"source": 3,
											"value": "422"
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11603,
											"end": 11609,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11600,
											"end": 11601,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11597,
											"end": 11610,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 11594,
											"end": 11695,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11594,
											"end": 11695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "423"
										},
										{
											"begin": 11594,
											"end": 11695,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11683,
											"end": 11684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11674,
											"end": 11680,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11669,
											"end": 11672,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11665,
											"end": 11681,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11658,
											"end": 11685,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11594,
											"end": 11695,
											"name": "tag",
											"source": 3,
											"value": "423"
										},
										{
											"begin": 11594,
											"end": 11695,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11443,
											"end": 11701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11394,
											"end": 11701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11394,
											"end": 11701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11394,
											"end": 11701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11394,
											"end": 11701,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11707,
											"end": 12027,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 11707,
											"end": 12027,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11751,
											"end": 11757,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11788,
											"end": 11789,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 11782,
											"end": 11786,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11778,
											"end": 11790,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 11768,
											"end": 11790,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11768,
											"end": 11790,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11835,
											"end": 11836,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 11829,
											"end": 11833,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11825,
											"end": 11837,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11856,
											"end": 11874,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11846,
											"end": 11927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "425"
										},
										{
											"begin": 11846,
											"end": 11927,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11912,
											"end": 11916,
											"name": "PUSH",
											"source": 3,
											"value": "7F"
										},
										{
											"begin": 11904,
											"end": 11910,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11900,
											"end": 11917,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11890,
											"end": 11917,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11890,
											"end": 11917,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11846,
											"end": 11927,
											"name": "tag",
											"source": 3,
											"value": "425"
										},
										{
											"begin": 11846,
											"end": 11927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11974,
											"end": 11976,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11966,
											"end": 11972,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11963,
											"end": 11977,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 11943,
											"end": 11961,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11940,
											"end": 11978,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 11937,
											"end": 12021,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11937,
											"end": 12021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "426"
										},
										{
											"begin": 11937,
											"end": 12021,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "427"
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "428"
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "tag",
											"source": 3,
											"value": "427"
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11937,
											"end": 12021,
											"name": "tag",
											"source": 3,
											"value": "426"
										},
										{
											"begin": 11937,
											"end": 12021,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11758,
											"end": 12027,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11707,
											"end": 12027,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11707,
											"end": 12027,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11707,
											"end": 12027,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11707,
											"end": 12027,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12033,
											"end": 12314,
											"name": "tag",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 12033,
											"end": 12314,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12116,
											"end": 12143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 12138,
											"end": 12142,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12116,
											"end": 12143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 12116,
											"end": 12143,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12116,
											"end": 12143,
											"name": "tag",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 12116,
											"end": 12143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12108,
											"end": 12114,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12104,
											"end": 12144,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12246,
											"end": 12252,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12234,
											"end": 12244,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12231,
											"end": 12253,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 12210,
											"end": 12228,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12198,
											"end": 12208,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12195,
											"end": 12229,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 12192,
											"end": 12254,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 12189,
											"end": 12277,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12189,
											"end": 12277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "431"
										},
										{
											"begin": 12189,
											"end": 12277,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12257,
											"end": 12275,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "432"
										},
										{
											"begin": 12257,
											"end": 12275,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 12257,
											"end": 12275,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12257,
											"end": 12275,
											"name": "tag",
											"source": 3,
											"value": "432"
										},
										{
											"begin": 12257,
											"end": 12275,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12189,
											"end": 12277,
											"name": "tag",
											"source": 3,
											"value": "431"
										},
										{
											"begin": 12189,
											"end": 12277,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12297,
											"end": 12307,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12293,
											"end": 12295,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12286,
											"end": 12308,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12076,
											"end": 12314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12033,
											"end": 12314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12033,
											"end": 12314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12033,
											"end": 12314,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12320,
											"end": 12500,
											"name": "tag",
											"source": 3,
											"value": "428"
										},
										{
											"begin": 12320,
											"end": 12500,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12368,
											"end": 12445,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12365,
											"end": 12366,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12358,
											"end": 12446,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12465,
											"end": 12469,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 12462,
											"end": 12463,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 12455,
											"end": 12470,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12489,
											"end": 12493,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 12486,
											"end": 12487,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12479,
											"end": 12494,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 12506,
											"end": 12686,
											"name": "tag",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 12506,
											"end": 12686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12554,
											"end": 12631,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12551,
											"end": 12552,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12544,
											"end": 12632,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12651,
											"end": 12655,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 12648,
											"end": 12649,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 12641,
											"end": 12656,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12675,
											"end": 12679,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 12672,
											"end": 12673,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12665,
											"end": 12680,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 12692,
											"end": 12809,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 12692,
											"end": 12809,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12801,
											"end": 12802,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12798,
											"end": 12799,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12791,
											"end": 12803,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 12815,
											"end": 12932,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 12815,
											"end": 12932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12924,
											"end": 12925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12921,
											"end": 12922,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12914,
											"end": 12926,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 12938,
											"end": 13055,
											"name": "tag",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 12938,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13047,
											"end": 13048,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13044,
											"end": 13045,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13037,
											"end": 13049,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13061,
											"end": 13178,
											"name": "tag",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 13061,
											"end": 13178,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13170,
											"end": 13171,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13167,
											"end": 13168,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13160,
											"end": 13172,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13184,
											"end": 13286,
											"name": "tag",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 13184,
											"end": 13286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13225,
											"end": 13231,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13276,
											"end": 13278,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 13272,
											"end": 13279,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 13267,
											"end": 13269,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 13260,
											"end": 13265,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13256,
											"end": 13270,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13252,
											"end": 13280,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 13242,
											"end": 13280,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13242,
											"end": 13280,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13184,
											"end": 13286,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13184,
											"end": 13286,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13184,
											"end": 13286,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13184,
											"end": 13286,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13292,
											"end": 13414,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 13292,
											"end": 13414,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "441"
										},
										{
											"begin": 13383,
											"end": 13388,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "tag",
											"source": 3,
											"value": "441"
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13358,
											"end": 13363,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13355,
											"end": 13390,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 13345,
											"end": 13408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "442"
										},
										{
											"begin": 13345,
											"end": 13408,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13404,
											"end": 13405,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13401,
											"end": 13402,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13394,
											"end": 13406,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13345,
											"end": 13408,
											"name": "tag",
											"source": 3,
											"value": "442"
										},
										{
											"begin": 13345,
											"end": 13408,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13292,
											"end": 13414,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13292,
											"end": 13414,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13420,
											"end": 13536,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 13420,
											"end": 13536,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13490,
											"end": 13511,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "444"
										},
										{
											"begin": 13505,
											"end": 13510,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13490,
											"end": 13511,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 13490,
											"end": 13511,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13490,
											"end": 13511,
											"name": "tag",
											"source": 3,
											"value": "444"
										},
										{
											"begin": 13490,
											"end": 13511,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13483,
											"end": 13488,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13480,
											"end": 13512,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 13470,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "445"
										},
										{
											"begin": 13470,
											"end": 13530,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13526,
											"end": 13527,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13523,
											"end": 13524,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13516,
											"end": 13528,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13470,
											"end": 13530,
											"name": "tag",
											"source": 3,
											"value": "445"
										},
										{
											"begin": 13470,
											"end": 13530,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13420,
											"end": 13536,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13420,
											"end": 13536,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13542,
											"end": 13662,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 13542,
											"end": 13662,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13614,
											"end": 13637,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "447"
										},
										{
											"begin": 13631,
											"end": 13636,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13614,
											"end": 13637,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "414"
										},
										{
											"begin": 13614,
											"end": 13637,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13614,
											"end": 13637,
											"name": "tag",
											"source": 3,
											"value": "447"
										},
										{
											"begin": 13614,
											"end": 13637,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13607,
											"end": 13612,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13604,
											"end": 13638,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 13594,
											"end": 13656,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "448"
										},
										{
											"begin": 13594,
											"end": 13656,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13652,
											"end": 13653,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13649,
											"end": 13650,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13642,
											"end": 13654,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13594,
											"end": 13656,
											"name": "tag",
											"source": 3,
											"value": "448"
										},
										{
											"begin": 13594,
											"end": 13656,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13542,
											"end": 13662,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13542,
											"end": 13662,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13668,
											"end": 13790,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 13668,
											"end": 13790,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13741,
											"end": 13765,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "450"
										},
										{
											"begin": 13759,
											"end": 13764,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13741,
											"end": 13765,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 13741,
											"end": 13765,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13741,
											"end": 13765,
											"name": "tag",
											"source": 3,
											"value": "450"
										},
										{
											"begin": 13741,
											"end": 13765,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13734,
											"end": 13739,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13731,
											"end": 13766,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 13721,
											"end": 13784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "451"
										},
										{
											"begin": 13721,
											"end": 13784,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13780,
											"end": 13781,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13777,
											"end": 13778,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13770,
											"end": 13782,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13721,
											"end": 13784,
											"name": "tag",
											"source": 3,
											"value": "451"
										},
										{
											"begin": 13721,
											"end": 13784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13668,
											"end": 13790,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13668,
											"end": 13790,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see `_totalMinted`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Day50_ERC721A.sol\":\"Azuki\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Day50_ERC721A.sol\":{\"keccak256\":\"0x691281b26303a5efbef6844b8c7a012788c18e8b6c848214aa3185a2af3cfc8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2442b18f0e2015be271bb92a4f8648c1bf399059f2afdbe78abedf7187cf21f\",\"dweb:/ipfs/QmRLAobgAm3metazLSGxsMXMh2ySbw11dM5W1tmQYMLY4R\"]},\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x53cbf7665c255e8eef7581b7b81baee6561880463969ba2bb1bfd475db79fc65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e64ab367338098474aec540e515947429475d8b7688ecbb0711f3fa371aa6263\",\"dweb:/ipfs/QmNTqiWVo11JVkdq2jC3twqaUnKgdJnjUJCNvQnJknheP5\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 111,
								"contract": "Day50_ERC721A.sol:Azuki",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 113,
								"contract": "Day50_ERC721A.sol:Azuki",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 115,
								"contract": "Day50_ERC721A.sol:Azuki",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 117,
								"contract": "Day50_ERC721A.sol:Azuki",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 121,
								"contract": "Day50_ERC721A.sol:Azuki",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 125,
								"contract": "Day50_ERC721A.sol:Azuki",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 129,
								"contract": "Day50_ERC721A.sol:Azuki",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 135,
								"contract": "Day50_ERC721A.sol:Azuki",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc721a/contracts/ERC721A.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at `_startTokenId()` (defaults to 0, e.g. 0, 1, 2, 3..). Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply. Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see `_totalMinted`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"erc721a/contracts/ERC721A.sol\":885:35000  contract ERC721A is IERC721A {... */\n  mstore(0x40, 0x80)\n    /* \"erc721a/contracts/ERC721A.sol\":3986:4140  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"erc721a/contracts/ERC721A.sol\":4060:4065  name_ */\n  dup2\n    /* \"erc721a/contracts/ERC721A.sol\":4052:4057  _name */\n  0x02\n    /* \"erc721a/contracts/ERC721A.sol\":4052:4065  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":4085:4092  symbol_ */\n  dup1\n    /* \"erc721a/contracts/ERC721A.sol\":4075:4082  _symbol */\n  0x03\n    /* \"erc721a/contracts/ERC721A.sol\":4075:4092  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":4118:4133  _startTokenId() */\n  tag_9\n    /* \"erc721a/contracts/ERC721A.sol\":4118:4131  _startTokenId */\n  shl(0x20, tag_10)\n    /* \"erc721a/contracts/ERC721A.sol\":4118:4133  _startTokenId() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"erc721a/contracts/ERC721A.sol\":4102:4115  _currentIndex */\n  0x00\n    /* \"erc721a/contracts/ERC721A.sol\":4102:4133  _currentIndex = _startTokenId() */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":3986:4140  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":885:35000  contract ERC721A is IERC721A {... */\n  jump(tag_11)\n    /* \"erc721a/contracts/ERC721A.sol\":4276:4366  function _startTokenId() internal view virtual returns (uint256) {... */\ntag_10:\n    /* \"erc721a/contracts/ERC721A.sol\":4332:4339  uint256 */\n  0x00\n    /* \"erc721a/contracts/ERC721A.sol\":4276:4366  function _startTokenId() internal view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"erc721a/contracts/ERC721A.sol\":885:35000  contract ERC721A is IERC721A {... */\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_13\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_16\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_15)\ntag_16:\n  dup3\n  0x1f\n  lt\n  tag_17\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_15)\ntag_17:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_15\n  jumpi\n  swap2\n  dup3\n  add\ntag_18:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_19\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_18)\ntag_19:\ntag_15:\n  pop\n  swap1\n  pop\n  tag_20\n  swap2\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n  pop\n  swap1\n  jump\t// out\ntag_21:\ntag_22:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_23\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_22)\ntag_23:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:428   */\ntag_25:\n    /* \"#utility.yul\":96:101   */\n  0x00\n    /* \"#utility.yul\":121:187   */\n  tag_27\n    /* \"#utility.yul\":137:186   */\n  tag_28\n    /* \"#utility.yul\":179:185   */\n  dup5\n    /* \"#utility.yul\":137:186   */\n  tag_29\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":121:187   */\n  tag_30\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":112:187   */\n  swap1\n  pop\n    /* \"#utility.yul\":210:216   */\n  dup3\n    /* \"#utility.yul\":203:208   */\n  dup2\n    /* \"#utility.yul\":196:217   */\n  mstore\n    /* \"#utility.yul\":248:252   */\n  0x20\n    /* \"#utility.yul\":241:246   */\n  dup2\n    /* \"#utility.yul\":237:253   */\n  add\n    /* \"#utility.yul\":286:289   */\n  dup5\n    /* \"#utility.yul\":277:283   */\n  dup5\n    /* \"#utility.yul\":272:275   */\n  dup5\n    /* \"#utility.yul\":268:284   */\n  add\n    /* \"#utility.yul\":265:290   */\n  gt\n    /* \"#utility.yul\":262:374   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":293:372   */\n  tag_32\n  tag_33\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":262:374   */\ntag_31:\n    /* \"#utility.yul\":383:422   */\n  tag_34\n    /* \"#utility.yul\":415:421   */\n  dup5\n    /* \"#utility.yul\":410:413   */\n  dup3\n    /* \"#utility.yul\":405:408   */\n  dup6\n    /* \"#utility.yul\":383:422   */\n  tag_35\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":102:428   */\n  pop\n    /* \"#utility.yul\":7:428   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":448:803   */\ntag_36:\n    /* \"#utility.yul\":515:520   */\n  0x00\n    /* \"#utility.yul\":564:567   */\n  dup3\n    /* \"#utility.yul\":557:561   */\n  0x1f\n    /* \"#utility.yul\":549:555   */\n  dup4\n    /* \"#utility.yul\":545:562   */\n  add\n    /* \"#utility.yul\":541:568   */\n  slt\n    /* \"#utility.yul\":531:653   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":572:651   */\n  tag_39\n  tag_40\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":531:653   */\ntag_38:\n    /* \"#utility.yul\":682:688   */\n  dup2\n    /* \"#utility.yul\":676:689   */\n  mload\n    /* \"#utility.yul\":707:797   */\n  tag_41\n    /* \"#utility.yul\":793:796   */\n  dup5\n    /* \"#utility.yul\":785:791   */\n  dup3\n    /* \"#utility.yul\":778:782   */\n  0x20\n    /* \"#utility.yul\":770:776   */\n  dup7\n    /* \"#utility.yul\":766:783   */\n  add\n    /* \"#utility.yul\":707:797   */\n  tag_25\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":698:797   */\n  swap2\n  pop\n    /* \"#utility.yul\":521:803   */\n  pop\n    /* \"#utility.yul\":448:803   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":809:1662   */\ntag_3:\n    /* \"#utility.yul\":908:914   */\n  0x00\n    /* \"#utility.yul\":916:922   */\n  dup1\n    /* \"#utility.yul\":965:967   */\n  0x40\n    /* \"#utility.yul\":953:962   */\n  dup4\n    /* \"#utility.yul\":944:951   */\n  dup6\n    /* \"#utility.yul\":940:963   */\n  sub\n    /* \"#utility.yul\":936:968   */\n  slt\n    /* \"#utility.yul\":933:1052   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":971:1050   */\n  tag_44\n  tag_45\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":933:1052   */\ntag_43:\n    /* \"#utility.yul\":1112:1113   */\n  0x00\n    /* \"#utility.yul\":1101:1110   */\n  dup4\n    /* \"#utility.yul\":1097:1114   */\n  add\n    /* \"#utility.yul\":1091:1115   */\n  mload\n    /* \"#utility.yul\":1142:1160   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1134:1140   */\n  dup2\n    /* \"#utility.yul\":1131:1161   */\n  gt\n    /* \"#utility.yul\":1128:1245   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":1164:1243   */\n  tag_47\n  tag_48\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1128:1245   */\ntag_46:\n    /* \"#utility.yul\":1269:1343   */\n  tag_49\n    /* \"#utility.yul\":1335:1342   */\n  dup6\n    /* \"#utility.yul\":1326:1332   */\n  dup3\n    /* \"#utility.yul\":1315:1324   */\n  dup7\n    /* \"#utility.yul\":1311:1333   */\n  add\n    /* \"#utility.yul\":1269:1343   */\n  tag_36\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1259:1343   */\n  swap3\n  pop\n    /* \"#utility.yul\":1062:1353   */\n  pop\n    /* \"#utility.yul\":1413:1415   */\n  0x20\n    /* \"#utility.yul\":1402:1411   */\n  dup4\n    /* \"#utility.yul\":1398:1416   */\n  add\n    /* \"#utility.yul\":1392:1417   */\n  mload\n    /* \"#utility.yul\":1444:1462   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1436:1442   */\n  dup2\n    /* \"#utility.yul\":1433:1463   */\n  gt\n    /* \"#utility.yul\":1430:1547   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":1466:1545   */\n  tag_51\n  tag_48\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1430:1547   */\ntag_50:\n    /* \"#utility.yul\":1571:1645   */\n  tag_52\n    /* \"#utility.yul\":1637:1644   */\n  dup6\n    /* \"#utility.yul\":1628:1634   */\n  dup3\n    /* \"#utility.yul\":1617:1626   */\n  dup7\n    /* \"#utility.yul\":1613:1635   */\n  add\n    /* \"#utility.yul\":1571:1645   */\n  tag_36\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1561:1645   */\n  swap2\n  pop\n    /* \"#utility.yul\":1363:1655   */\n  pop\n    /* \"#utility.yul\":809:1662   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1668:1797   */\ntag_30:\n    /* \"#utility.yul\":1702:1708   */\n  0x00\n    /* \"#utility.yul\":1729:1749   */\n  tag_54\n  tag_55\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1719:1749   */\n  swap1\n  pop\n    /* \"#utility.yul\":1758:1791   */\n  tag_56\n    /* \"#utility.yul\":1786:1790   */\n  dup3\n    /* \"#utility.yul\":1778:1784   */\n  dup3\n    /* \"#utility.yul\":1758:1791   */\n  tag_57\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1668:1797   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1803:1878   */\ntag_55:\n    /* \"#utility.yul\":1836:1842   */\n  0x00\n    /* \"#utility.yul\":1869:1871   */\n  0x40\n    /* \"#utility.yul\":1863:1872   */\n  mload\n    /* \"#utility.yul\":1853:1872   */\n  swap1\n  pop\n    /* \"#utility.yul\":1803:1878   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":1884:2192   */\ntag_29:\n    /* \"#utility.yul\":1946:1950   */\n  0x00\n    /* \"#utility.yul\":2036:2054   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2028:2034   */\n  dup3\n    /* \"#utility.yul\":2025:2055   */\n  gt\n    /* \"#utility.yul\":2022:2078   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":2058:2076   */\n  tag_61\n  tag_62\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2022:2078   */\ntag_60:\n    /* \"#utility.yul\":2096:2125   */\n  tag_63\n    /* \"#utility.yul\":2118:2124   */\n  dup3\n    /* \"#utility.yul\":2096:2125   */\n  tag_64\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2088:2125   */\n  swap1\n  pop\n    /* \"#utility.yul\":2180:2184   */\n  0x20\n    /* \"#utility.yul\":2174:2178   */\n  dup2\n    /* \"#utility.yul\":2170:2185   */\n  add\n    /* \"#utility.yul\":2162:2185   */\n  swap1\n  pop\n    /* \"#utility.yul\":1884:2192   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2198:2505   */\ntag_35:\n    /* \"#utility.yul\":2266:2267   */\n  0x00\n    /* \"#utility.yul\":2276:2389   */\ntag_66:\n    /* \"#utility.yul\":2290:2296   */\n  dup4\n    /* \"#utility.yul\":2287:2288   */\n  dup2\n    /* \"#utility.yul\":2284:2297   */\n  lt\n    /* \"#utility.yul\":2276:2389   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2375:2376   */\n  dup1\n    /* \"#utility.yul\":2370:2373   */\n  dup3\n    /* \"#utility.yul\":2366:2377   */\n  add\n    /* \"#utility.yul\":2360:2378   */\n  mload\n    /* \"#utility.yul\":2356:2357   */\n  dup2\n    /* \"#utility.yul\":2351:2354   */\n  dup5\n    /* \"#utility.yul\":2347:2358   */\n  add\n    /* \"#utility.yul\":2340:2379   */\n  mstore\n    /* \"#utility.yul\":2312:2314   */\n  0x20\n    /* \"#utility.yul\":2309:2310   */\n  dup2\n    /* \"#utility.yul\":2305:2315   */\n  add\n    /* \"#utility.yul\":2300:2315   */\n  swap1\n  pop\n    /* \"#utility.yul\":2276:2389   */\n  jump(tag_66)\ntag_68:\n    /* \"#utility.yul\":2407:2413   */\n  dup4\n    /* \"#utility.yul\":2404:2405   */\n  dup2\n    /* \"#utility.yul\":2401:2414   */\n  gt\n    /* \"#utility.yul\":2398:2499   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":2487:2488   */\n  0x00\n    /* \"#utility.yul\":2478:2484   */\n  dup5\n    /* \"#utility.yul\":2473:2476   */\n  dup5\n    /* \"#utility.yul\":2469:2485   */\n  add\n    /* \"#utility.yul\":2462:2489   */\n  mstore\n    /* \"#utility.yul\":2398:2499   */\ntag_69:\n    /* \"#utility.yul\":2247:2505   */\n  pop\n    /* \"#utility.yul\":2198:2505   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2511:2831   */\ntag_14:\n    /* \"#utility.yul\":2555:2561   */\n  0x00\n    /* \"#utility.yul\":2592:2593   */\n  0x02\n    /* \"#utility.yul\":2586:2590   */\n  dup3\n    /* \"#utility.yul\":2582:2594   */\n  div\n    /* \"#utility.yul\":2572:2594   */\n  swap1\n  pop\n    /* \"#utility.yul\":2639:2640   */\n  0x01\n    /* \"#utility.yul\":2633:2637   */\n  dup3\n    /* \"#utility.yul\":2629:2641   */\n  and\n    /* \"#utility.yul\":2660:2678   */\n  dup1\n    /* \"#utility.yul\":2650:2731   */\n  tag_71\n  jumpi\n    /* \"#utility.yul\":2716:2720   */\n  0x7f\n    /* \"#utility.yul\":2708:2714   */\n  dup3\n    /* \"#utility.yul\":2704:2721   */\n  and\n    /* \"#utility.yul\":2694:2721   */\n  swap2\n  pop\n    /* \"#utility.yul\":2650:2731   */\ntag_71:\n    /* \"#utility.yul\":2778:2780   */\n  0x20\n    /* \"#utility.yul\":2770:2776   */\n  dup3\n    /* \"#utility.yul\":2767:2781   */\n  lt\n    /* \"#utility.yul\":2747:2765   */\n  dup2\n    /* \"#utility.yul\":2744:2782   */\n  eq\n    /* \"#utility.yul\":2741:2825   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2797:2815   */\n  tag_73\n  tag_74\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2741:2825   */\ntag_72:\n    /* \"#utility.yul\":2562:2831   */\n  pop\n    /* \"#utility.yul\":2511:2831   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2837:3118   */\ntag_57:\n    /* \"#utility.yul\":2920:2947   */\n  tag_76\n    /* \"#utility.yul\":2942:2946   */\n  dup3\n    /* \"#utility.yul\":2920:2947   */\n  tag_64\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2912:2918   */\n  dup2\n    /* \"#utility.yul\":2908:2948   */\n  add\n    /* \"#utility.yul\":3050:3056   */\n  dup2\n    /* \"#utility.yul\":3038:3048   */\n  dup2\n    /* \"#utility.yul\":3035:3057   */\n  lt\n    /* \"#utility.yul\":3014:3032   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3012   */\n  dup3\n    /* \"#utility.yul\":2999:3033   */\n  gt\n    /* \"#utility.yul\":2996:3058   */\n  or\n    /* \"#utility.yul\":2993:3081   */\n  iszero\n  tag_77\n  jumpi\n    /* \"#utility.yul\":3061:3079   */\n  tag_78\n  tag_62\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2993:3081   */\ntag_77:\n    /* \"#utility.yul\":3101:3111   */\n  dup1\n    /* \"#utility.yul\":3097:3099   */\n  0x40\n    /* \"#utility.yul\":3090:3112   */\n  mstore\n    /* \"#utility.yul\":2880:3118   */\n  pop\n    /* \"#utility.yul\":2837:3118   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3124:3304   */\ntag_74:\n    /* \"#utility.yul\":3172:3249   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3169:3170   */\n  0x00\n    /* \"#utility.yul\":3162:3250   */\n  mstore\n    /* \"#utility.yul\":3269:3273   */\n  0x22\n    /* \"#utility.yul\":3266:3267   */\n  0x04\n    /* \"#utility.yul\":3259:3274   */\n  mstore\n    /* \"#utility.yul\":3293:3297   */\n  0x24\n    /* \"#utility.yul\":3290:3291   */\n  0x00\n    /* \"#utility.yul\":3283:3298   */\n  revert\n    /* \"#utility.yul\":3310:3490   */\ntag_62:\n    /* \"#utility.yul\":3358:3435   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3355:3356   */\n  0x00\n    /* \"#utility.yul\":3348:3436   */\n  mstore\n    /* \"#utility.yul\":3455:3459   */\n  0x41\n    /* \"#utility.yul\":3452:3453   */\n  0x04\n    /* \"#utility.yul\":3445:3460   */\n  mstore\n    /* \"#utility.yul\":3479:3483   */\n  0x24\n    /* \"#utility.yul\":3476:3477   */\n  0x00\n    /* \"#utility.yul\":3469:3484   */\n  revert\n    /* \"#utility.yul\":3496:3613   */\ntag_40:\n    /* \"#utility.yul\":3605:3606   */\n  0x00\n    /* \"#utility.yul\":3602:3603   */\n  dup1\n    /* \"#utility.yul\":3595:3607   */\n  revert\n    /* \"#utility.yul\":3619:3736   */\ntag_33:\n    /* \"#utility.yul\":3728:3729   */\n  0x00\n    /* \"#utility.yul\":3725:3726   */\n  dup1\n    /* \"#utility.yul\":3718:3730   */\n  revert\n    /* \"#utility.yul\":3742:3859   */\ntag_48:\n    /* \"#utility.yul\":3851:3852   */\n  0x00\n    /* \"#utility.yul\":3848:3849   */\n  dup1\n    /* \"#utility.yul\":3841:3853   */\n  revert\n    /* \"#utility.yul\":3865:3982   */\ntag_45:\n    /* \"#utility.yul\":3974:3975   */\n  0x00\n    /* \"#utility.yul\":3971:3972   */\n  dup1\n    /* \"#utility.yul\":3964:3976   */\n  revert\n    /* \"#utility.yul\":3988:4090   */\ntag_64:\n    /* \"#utility.yul\":4029:4035   */\n  0x00\n    /* \"#utility.yul\":4080:4082   */\n  0x1f\n    /* \"#utility.yul\":4076:4083   */\n  not\n    /* \"#utility.yul\":4071:4073   */\n  0x1f\n    /* \"#utility.yul\":4064:4069   */\n  dup4\n    /* \"#utility.yul\":4060:4074   */\n  add\n    /* \"#utility.yul\":4056:4084   */\n  and\n    /* \"#utility.yul\":4046:4084   */\n  swap1\n  pop\n    /* \"#utility.yul\":3988:4090   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"erc721a/contracts/ERC721A.sol\":885:35000  contract ERC721A is IERC721A {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"erc721a/contracts/ERC721A.sol\":885:35000  contract ERC721A is IERC721A {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x6352211e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x095ea7b3\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":5653:6260  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":11161:11259  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":13048:13248  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_5:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":12611:12987  function approve(address to, uint256 tokenId) public override {... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"erc721a/contracts/ERC721A.sol\":4736:5045  function totalSupply() public view override returns (uint256) {... */\n    tag_7:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":22055:24794  function transferFrom(... */\n    tag_8:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"erc721a/contracts/ERC721A.sol\":13912:14091  function safeTransferFrom(... */\n    tag_9:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      stop\n        /* \"erc721a/contracts/ERC721A.sol\":10957:11099  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_10:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":6319:6540  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_11:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":11323:11425  function symbol() public view virtual override returns (string memory) {... */\n    tag_12:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":13315:13618  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_13:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      stop\n        /* \"erc721a/contracts/ERC721A.sol\":14157:14545  function safeTransferFrom(... */\n    tag_14:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      stop\n        /* \"erc721a/contracts/ERC721A.sol\":11491:11804  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_15:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":13684:13846  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":5653:6260  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_23:\n        /* \"erc721a/contracts/ERC721A.sol\":5738:5742  bool */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":6048:6058  0x01ffc9a7 */\n      0x01ffc9a7\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6058  interfaceId == 0x01ffc9a7 */\n      0xe0\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6044  interfaceId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6058  interfaceId == 0x01ffc9a7 */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6134  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_81\n      jumpi\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":6124:6134  0x80ac58cd */\n      0x80ac58cd\n        /* \"erc721a/contracts/ERC721A.sol\":6109:6134  interfaceId == 0x80ac58cd */\n      0xe0\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":6109:6120  interfaceId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":6109:6134  interfaceId == 0x80ac58cd */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6134  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_81:\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6210  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_82\n      jumpi\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":6200:6210  0x5b5e139f */\n      0x5b5e139f\n        /* \"erc721a/contracts/ERC721A.sol\":6185:6210  interfaceId == 0x5b5e139f */\n      0xe0\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":6185:6196  interfaceId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":6185:6210  interfaceId == 0x5b5e139f */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6210  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_82:\n        /* \"erc721a/contracts/ERC721A.sol\":6014:6210  return... */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":5653:6260  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":11161:11259  function name() public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"erc721a/contracts/ERC721A.sol\":11215:11228  string memory */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":11247:11252  _name */\n      0x02\n        /* \"erc721a/contracts/ERC721A.sol\":11240:11252  return _name */\n      dup1\n      sload\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_85\n      jump\t// in\n    tag_86:\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_88\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_87)\n    tag_88:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_89:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_89\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_87:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":11161:11259  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":13048:13248  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_33:\n        /* \"erc721a/contracts/ERC721A.sol\":13116:13123  address */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13140:13156  _exists(tokenId) */\n      tag_91\n        /* \"erc721a/contracts/ERC721A.sol\":13148:13155  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":13140:13147  _exists */\n      tag_92\n        /* \"erc721a/contracts/ERC721A.sol\":13140:13156  _exists(tokenId) */\n      jump\t// in\n    tag_91:\n        /* \"erc721a/contracts/ERC721A.sol\":13135:13199  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_93\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":13165:13199  ApprovalQueryForNonexistentToken() */\n      mload(0x40)\n      0xcf4700e400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":13135:13199  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_93:\n        /* \"erc721a/contracts/ERC721A.sol\":13217:13232  _tokenApprovals */\n      0x06\n        /* \"erc721a/contracts/ERC721A.sol\":13217:13241  _tokenApprovals[tokenId] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13233:13240  tokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":13217:13241  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":13210:13241  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":13048:13248  function getApproved(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":12611:12987  function approve(address to, uint256 tokenId) public override {... */\n    tag_39:\n        /* \"erc721a/contracts/ERC721A.sol\":12683:12696  address owner */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":12699:12715  ownerOf(tokenId) */\n      tag_95\n        /* \"erc721a/contracts/ERC721A.sol\":12707:12714  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":12699:12706  ownerOf */\n      tag_53\n        /* \"erc721a/contracts/ERC721A.sol\":12699:12715  ownerOf(tokenId) */\n      jump\t// in\n    tag_95:\n        /* \"erc721a/contracts/ERC721A.sol\":12683:12715  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":12753:12758  owner */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":12730:12758  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":12730:12749  _msgSenderERC721A() */\n      tag_96\n        /* \"erc721a/contracts/ERC721A.sol\":12730:12747  _msgSenderERC721A */\n      tag_97\n        /* \"erc721a/contracts/ERC721A.sol\":12730:12749  _msgSenderERC721A() */\n      jump\t// in\n    tag_96:\n        /* \"erc721a/contracts/ERC721A.sol\":12730:12758  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":12726:12898  if (_msgSenderERC721A() != owner)... */\n      tag_98\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":12777:12821  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_99\n        /* \"erc721a/contracts/ERC721A.sol\":12794:12799  owner */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":12801:12820  _msgSenderERC721A() */\n      tag_100\n        /* \"erc721a/contracts/ERC721A.sol\":12801:12818  _msgSenderERC721A */\n      tag_97\n        /* \"erc721a/contracts/ERC721A.sol\":12801:12820  _msgSenderERC721A() */\n      jump\t// in\n    tag_100:\n        /* \"erc721a/contracts/ERC721A.sol\":12777:12793  isApprovedForAll */\n      tag_78\n        /* \"erc721a/contracts/ERC721A.sol\":12777:12821  isApprovedForAll(owner, _msgSenderERC721A()) */\n      jump\t// in\n    tag_99:\n        /* \"erc721a/contracts/ERC721A.sol\":12772:12898  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_101\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":12848:12883  ApprovalCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0xcfb3b94200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":12772:12898  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n    tag_101:\n        /* \"erc721a/contracts/ERC721A.sol\":12726:12898  if (_msgSenderERC721A() != owner)... */\n    tag_98:\n        /* \"erc721a/contracts/ERC721A.sol\":12935:12937  to */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12923  _tokenApprovals */\n      0x06\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12932  _tokenApprovals[tokenId] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":12924:12931  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12932  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12937  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":12972:12979  tokenId */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":12968:12970  to */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":12952:12980  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":12961:12966  owner */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":12952:12980  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"erc721a/contracts/ERC721A.sol\":12673:12987  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":12611:12987  function approve(address to, uint256 tokenId) public override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":4736:5045  function totalSupply() public view override returns (uint256) {... */\n    tag_41:\n        /* \"erc721a/contracts/ERC721A.sol\":4789:4796  uint256 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":5013:5028  _startTokenId() */\n      tag_103\n        /* \"erc721a/contracts/ERC721A.sol\":5013:5026  _startTokenId */\n      tag_104\n        /* \"erc721a/contracts/ERC721A.sol\":5013:5028  _startTokenId() */\n      jump\t// in\n    tag_103:\n        /* \"erc721a/contracts/ERC721A.sol\":4998:5010  _burnCounter */\n      sload(0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":4982:4995  _currentIndex */\n      sload(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":4982:5010  _currentIndex - _burnCounter */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":4982:5028  _currentIndex - _burnCounter - _startTokenId() */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":4975:5028  return _currentIndex - _burnCounter - _startTokenId() */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":4736:5045  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":22055:24794  function transferFrom(... */\n    tag_47:\n        /* \"erc721a/contracts/ERC721A.sol\":22184:22211  uint256 prevOwnershipPacked */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":22214:22241  _packedOwnershipOf(tokenId) */\n      tag_106\n        /* \"erc721a/contracts/ERC721A.sol\":22233:22240  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":22214:22232  _packedOwnershipOf */\n      tag_107\n        /* \"erc721a/contracts/ERC721A.sol\":22214:22241  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_106:\n        /* \"erc721a/contracts/ERC721A.sol\":22184:22241  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":22297:22301  from */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":22256:22301  address(uint160(prevOwnershipPacked)) != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":22272:22291  prevOwnershipPacked */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":22256:22301  address(uint160(prevOwnershipPacked)) != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":22252:22338  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n      tag_108\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22310:22338  TransferFromIncorrectOwner() */\n      mload(0x40)\n      0xa114810000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":22252:22338  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n    tag_108:\n        /* \"erc721a/contracts/ERC721A.sol\":22350:22377  uint256 approvedAddressSlot */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":22379:22402  address approvedAddress */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":22406:22434  _getApprovedAddress(tokenId) */\n      tag_109\n        /* \"erc721a/contracts/ERC721A.sol\":22426:22433  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":22406:22425  _getApprovedAddress */\n      tag_110\n        /* \"erc721a/contracts/ERC721A.sol\":22406:22434  _getApprovedAddress(tokenId) */\n      jump\t// in\n    tag_109:\n        /* \"erc721a/contracts/ERC721A.sol\":22349:22434  (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedAddress(tokenId) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":22531:22593  _isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()) */\n      tag_111\n        /* \"erc721a/contracts/ERC721A.sol\":22550:22565  approvedAddress */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":22567:22571  from */\n      dup8\n        /* \"erc721a/contracts/ERC721A.sol\":22573:22592  _msgSenderERC721A() */\n      tag_112\n        /* \"erc721a/contracts/ERC721A.sol\":22573:22590  _msgSenderERC721A */\n      tag_97\n        /* \"erc721a/contracts/ERC721A.sol\":22573:22592  _msgSenderERC721A() */\n      jump\t// in\n    tag_112:\n        /* \"erc721a/contracts/ERC721A.sol\":22531:22549  _isOwnerOrApproved */\n      tag_113\n        /* \"erc721a/contracts/ERC721A.sol\":22531:22593  _isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_111:\n        /* \"erc721a/contracts/ERC721A.sol\":22526:22699  if (!_isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_114\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22612:22655  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_115\n        /* \"erc721a/contracts/ERC721A.sol\":22629:22633  from */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":22635:22654  _msgSenderERC721A() */\n      tag_116\n        /* \"erc721a/contracts/ERC721A.sol\":22635:22652  _msgSenderERC721A */\n      tag_97\n        /* \"erc721a/contracts/ERC721A.sol\":22635:22654  _msgSenderERC721A() */\n      jump\t// in\n    tag_116:\n        /* \"erc721a/contracts/ERC721A.sol\":22612:22628  isApprovedForAll */\n      tag_78\n        /* \"erc721a/contracts/ERC721A.sol\":22612:22655  isApprovedForAll(from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_115:\n        /* \"erc721a/contracts/ERC721A.sol\":22607:22699  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n      tag_117\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22664:22699  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0x59c896be00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":22607:22699  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n    tag_117:\n        /* \"erc721a/contracts/ERC721A.sol\":22526:22699  if (!_isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()))... */\n    tag_114:\n        /* \"erc721a/contracts/ERC721A.sol\":22728:22729  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":22714:22730  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":22714:22716  to */\n      dup6\n        /* \"erc721a/contracts/ERC721A.sol\":22714:22730  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":22710:22762  if (to == address(0)) revert TransferToZeroAddress() */\n      iszero\n      tag_118\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22739:22762  TransferToZeroAddress() */\n      mload(0x40)\n      0xea553b3400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":22710:22762  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_118:\n        /* \"erc721a/contracts/ERC721A.sol\":22773:22816  _beforeTokenTransfers(from, to, tokenId, 1) */\n      tag_119\n        /* \"erc721a/contracts/ERC721A.sol\":22795:22799  from */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":22801:22803  to */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":22805:22812  tokenId */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":22814:22815  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":22773:22794  _beforeTokenTransfers */\n      tag_120\n        /* \"erc721a/contracts/ERC721A.sol\":22773:22816  _beforeTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_119:\n        /* \"erc721a/contracts/ERC721A.sol\":22905:22920  approvedAddress */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":22902:23059  if approvedAddress {... */\n      iszero\n      tag_121\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":23043:23044  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":23022:23041  approvedAddressSlot */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":23015:23045  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":22902:23059  if approvedAddress {... */\n    tag_121:\n        /* \"erc721a/contracts/ERC721A.sol\":23429:23447  _packedAddressData */\n      0x05\n        /* \"erc721a/contracts/ERC721A.sol\":23429:23453  _packedAddressData[from] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":23448:23452  from */\n      dup8\n        /* \"erc721a/contracts/ERC721A.sol\":23429:23453  _packedAddressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":23427:23453  --_packedAddressData[from] */\n      dup2\n      sload\n      0x01\n      swap1\n      sub\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":23497:23515  _packedAddressData */\n      0x05\n        /* \"erc721a/contracts/ERC721A.sol\":23497:23519  _packedAddressData[to] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":23516:23518  to */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":23497:23519  _packedAddressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":23495:23519  ++_packedAddressData[to] */\n      dup2\n      sload\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":23812:23954  _packOwnershipData(... */\n      tag_122\n        /* \"erc721a/contracts/ERC721A.sol\":23848:23850  to */\n      dup6\n        /* \"erc721a/contracts/ERC721A.sol\":23895:23940  _nextExtraData(from, to, prevOwnershipPacked) */\n      tag_123\n        /* \"erc721a/contracts/ERC721A.sol\":23910:23914  from */\n      dup9\n        /* \"erc721a/contracts/ERC721A.sol\":23916:23918  to */\n      dup9\n        /* \"erc721a/contracts/ERC721A.sol\":23920:23939  prevOwnershipPacked */\n      dup8\n        /* \"erc721a/contracts/ERC721A.sol\":23895:23909  _nextExtraData */\n      tag_124\n        /* \"erc721a/contracts/ERC721A.sol\":23895:23940  _nextExtraData(from, to, prevOwnershipPacked) */\n      jump\t// in\n    tag_123:\n        /* \"erc721a/contracts/ERC721A.sol\":2046:2054  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"erc721a/contracts/ERC721A.sol\":23868:23940  BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked) */\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":23812:23830  _packOwnershipData */\n      tag_125\n        /* \"erc721a/contracts/ERC721A.sol\":23812:23954  _packOwnershipData(... */\n      jump\t// in\n    tag_122:\n        /* \"erc721a/contracts/ERC721A.sol\":23783:23800  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":23783:23809  _packedOwnerships[tokenId] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":23801:23808  tokenId */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":23783:23809  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":23783:23954  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":24121:24122  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":2046:2054  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"erc721a/contracts/ERC721A.sol\":24071:24090  prevOwnershipPacked */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":24071:24117  prevOwnershipPacked & BITMASK_NEXT_INITIALIZED */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":24071:24122  prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0 */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":24067:24683  if (prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0) {... */\n      iszero\n      tag_126\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":24142:24161  uint256 nextTokenId */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":24174:24175  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":24164:24171  tokenId */\n      dup6\n        /* \"erc721a/contracts/ERC721A.sol\":24164:24175  tokenId + 1 */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":24142:24175  uint256 nextTokenId = tokenId + 1 */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":24329:24330  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":24295:24312  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":24295:24325  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":24313:24324  nextTokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":24295:24325  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":24295:24330  _packedOwnerships[nextTokenId] == 0 */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":24291:24669  if (_packedOwnerships[nextTokenId] == 0) {... */\n      iszero\n      tag_127\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":24431:24444  _currentIndex */\n      sload(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":24416:24427  nextTokenId */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":24416:24444  nextTokenId != _currentIndex */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":24412:24651  if (nextTokenId != _currentIndex) {... */\n      tag_128\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":24609:24628  prevOwnershipPacked */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":24576:24593  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":24576:24606  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":24594:24605  nextTokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":24576:24606  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":24576:24628  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":24412:24651  if (nextTokenId != _currentIndex) {... */\n    tag_128:\n        /* \"erc721a/contracts/ERC721A.sol\":24291:24669  if (_packedOwnerships[nextTokenId] == 0) {... */\n    tag_127:\n        /* \"erc721a/contracts/ERC721A.sol\":24124:24683  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":24067:24683  if (prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_126:\n        /* \"erc721a/contracts/ERC721A.sol\":24727:24734  tokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":24723:24725  to */\n      dup6\n        /* \"erc721a/contracts/ERC721A.sol\":24708:24735  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":24717:24721  from */\n      dup8\n        /* \"erc721a/contracts/ERC721A.sol\":24708:24735  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"erc721a/contracts/ERC721A.sol\":24745:24787  _afterTokenTransfers(from, to, tokenId, 1) */\n      tag_129\n        /* \"erc721a/contracts/ERC721A.sol\":24766:24770  from */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":24772:24774  to */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":24776:24783  tokenId */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":24785:24786  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":24745:24765  _afterTokenTransfers */\n      tag_130\n        /* \"erc721a/contracts/ERC721A.sol\":24745:24787  _afterTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_129:\n        /* \"erc721a/contracts/ERC721A.sol\":22174:24794  {... */\n      pop\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":22055:24794  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":13912:14091  function safeTransferFrom(... */\n    tag_50:\n        /* \"erc721a/contracts/ERC721A.sol\":14045:14084  safeTransferFrom(from, to, tokenId, '') */\n      tag_132\n        /* \"erc721a/contracts/ERC721A.sol\":14062:14066  from */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":14068:14070  to */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":14072:14079  tokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":14045:14084  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":14045:14061  safeTransferFrom */\n      tag_70\n        /* \"erc721a/contracts/ERC721A.sol\":14045:14084  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_132:\n        /* \"erc721a/contracts/ERC721A.sol\":13912:14091  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":10957:11099  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_53:\n        /* \"erc721a/contracts/ERC721A.sol\":11021:11028  address */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":11063:11090  _packedOwnershipOf(tokenId) */\n      tag_134\n        /* \"erc721a/contracts/ERC721A.sol\":11082:11089  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":11063:11081  _packedOwnershipOf */\n      tag_107\n        /* \"erc721a/contracts/ERC721A.sol\":11063:11090  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_134:\n        /* \"erc721a/contracts/ERC721A.sol\":11040:11092  return address(uint160(_packedOwnershipOf(tokenId))) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":10957:11099  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":6319:6540  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_58:\n        /* \"erc721a/contracts/ERC721A.sol\":6383:6390  uint256 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":6423:6424  0 */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":6406:6425  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":6406:6411  owner */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":6406:6425  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":6402:6462  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      iszero\n      tag_136\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":6434:6462  BalanceQueryForZeroAddress() */\n      mload(0x40)\n      0x8f4eb60400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":6402:6462  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_136:\n        /* \"erc721a/contracts/ERC721A.sol\":1022:1035  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"erc721a/contracts/ERC721A.sol\":6479:6497  _packedAddressData */\n      0x05\n        /* \"erc721a/contracts/ERC721A.sol\":6479:6504  _packedAddressData[owner] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":6498:6503  owner */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":6479:6504  _packedAddressData[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":6479:6533  _packedAddressData[owner] & BITMASK_ADDRESS_DATA_ENTRY */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":6472:6533  return _packedAddressData[owner] & BITMASK_ADDRESS_DATA_ENTRY */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":6319:6540  function balanceOf(address owner) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":11323:11425  function symbol() public view virtual override returns (string memory) {... */\n    tag_61:\n        /* \"erc721a/contracts/ERC721A.sol\":11379:11392  string memory */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":11411:11418  _symbol */\n      0x03\n        /* \"erc721a/contracts/ERC721A.sol\":11404:11418  return _symbol */\n      dup1\n      sload\n      tag_138\n      swap1\n      tag_85\n      jump\t// in\n    tag_138:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_139\n      swap1\n      tag_85\n      jump\t// in\n    tag_139:\n      dup1\n      iszero\n      tag_140\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_141\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_140)\n    tag_141:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_142:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_142\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_140:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":11323:11425  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":13315:13618  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_66:\n        /* \"erc721a/contracts/ERC721A.sol\":13425:13444  _msgSenderERC721A() */\n      tag_144\n        /* \"erc721a/contracts/ERC721A.sol\":13425:13442  _msgSenderERC721A */\n      tag_97\n        /* \"erc721a/contracts/ERC721A.sol\":13425:13444  _msgSenderERC721A() */\n      jump\t// in\n    tag_144:\n        /* \"erc721a/contracts/ERC721A.sol\":13413:13444  operator == _msgSenderERC721A() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":13413:13421  operator */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":13413:13444  operator == _msgSenderERC721A() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":13409:13470  if (operator == _msgSenderERC721A()) revert ApproveToCaller() */\n      iszero\n      tag_145\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":13453:13470  ApproveToCaller() */\n      mload(0x40)\n      0xb06307db00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":13409:13470  if (operator == _msgSenderERC721A()) revert ApproveToCaller() */\n    tag_145:\n        /* \"erc721a/contracts/ERC721A.sol\":13533:13541  approved */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13499  _operatorApprovals */\n      0x07\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13520  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13500:13519  _msgSenderERC721A() */\n      tag_146\n        /* \"erc721a/contracts/ERC721A.sol\":13500:13517  _msgSenderERC721A */\n      tag_97\n        /* \"erc721a/contracts/ERC721A.sol\":13500:13519  _msgSenderERC721A() */\n      jump\t// in\n    tag_146:\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13520  _operatorApprovals[_msgSenderERC721A()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13530  _operatorApprovals[_msgSenderERC721A()][operator] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13521:13529  operator */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13530  _operatorApprovals[_msgSenderERC721A()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13541  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":13592:13600  operator */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":13556:13611  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":13571:13590  _msgSenderERC721A() */\n      tag_147\n        /* \"erc721a/contracts/ERC721A.sol\":13571:13588  _msgSenderERC721A */\n      tag_97\n        /* \"erc721a/contracts/ERC721A.sol\":13571:13590  _msgSenderERC721A() */\n      jump\t// in\n    tag_147:\n        /* \"erc721a/contracts/ERC721A.sol\":13556:13611  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"erc721a/contracts/ERC721A.sol\":13602:13610  approved */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":13556:13611  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      tag_148\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"erc721a/contracts/ERC721A.sol\":13315:13618  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":14157:14545  function safeTransferFrom(... */\n    tag_70:\n        /* \"erc721a/contracts/ERC721A.sol\":14318:14349  transferFrom(from, to, tokenId) */\n      tag_150\n        /* \"erc721a/contracts/ERC721A.sol\":14331:14335  from */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14337:14339  to */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14341:14348  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14318:14330  transferFrom */\n      tag_47\n        /* \"erc721a/contracts/ERC721A.sol\":14318:14349  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_150:\n        /* \"erc721a/contracts/ERC721A.sol\":14381:14382  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":14363:14365  to */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":14363:14377  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"erc721a/contracts/ERC721A.sol\":14363:14382  to.code.length != 0 */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":14359:14539  if (to.code.length != 0)... */\n      tag_151\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":14401:14457  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_152\n        /* \"erc721a/contracts/ERC721A.sol\":14432:14436  from */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14438:14440  to */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14442:14449  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14451:14456  _data */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14401:14431  _checkContractOnERC721Received */\n      tag_153\n        /* \"erc721a/contracts/ERC721A.sol\":14401:14457  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_152:\n        /* \"erc721a/contracts/ERC721A.sol\":14396:14539  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_154\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":14484:14524  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":14396:14539  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_154:\n        /* \"erc721a/contracts/ERC721A.sol\":14359:14539  if (to.code.length != 0)... */\n    tag_151:\n        /* \"erc721a/contracts/ERC721A.sol\":14157:14545  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":11491:11804  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_73:\n        /* \"erc721a/contracts/ERC721A.sol\":11564:11577  string memory */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":11594:11610  _exists(tokenId) */\n      tag_156\n        /* \"erc721a/contracts/ERC721A.sol\":11602:11609  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":11594:11601  _exists */\n      tag_92\n        /* \"erc721a/contracts/ERC721A.sol\":11594:11610  _exists(tokenId) */\n      jump\t// in\n    tag_156:\n        /* \"erc721a/contracts/ERC721A.sol\":11589:11648  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n      tag_157\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":11619:11648  URIQueryForNonexistentToken() */\n      mload(0x40)\n      0xa14c4b5000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":11589:11648  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n    tag_157:\n        /* \"erc721a/contracts/ERC721A.sol\":11659:11680  string memory baseURI */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":11683:11693  _baseURI() */\n      tag_158\n        /* \"erc721a/contracts/ERC721A.sol\":11683:11691  _baseURI */\n      tag_159\n        /* \"erc721a/contracts/ERC721A.sol\":11683:11693  _baseURI() */\n      jump\t// in\n    tag_158:\n        /* \"erc721a/contracts/ERC721A.sol\":11659:11693  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":11735:11736  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":11716:11723  baseURI */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":11710:11731  bytes(baseURI).length */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":11710:11736  bytes(baseURI).length != 0 */\n      eq\n      iszero\n        /* \"erc721a/contracts/ERC721A.sol\":11710:11797  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      tag_160\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_161)\n    tag_160:\n        /* \"erc721a/contracts/ERC721A.sol\":11763:11770  baseURI */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":11772:11790  _toString(tokenId) */\n      tag_162\n        /* \"erc721a/contracts/ERC721A.sol\":11782:11789  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":11772:11781  _toString */\n      tag_163\n        /* \"erc721a/contracts/ERC721A.sol\":11772:11790  _toString(tokenId) */\n      jump\t// in\n    tag_162:\n        /* \"erc721a/contracts/ERC721A.sol\":11746:11791  abi.encodePacked(baseURI, _toString(tokenId)) */\n      add(0x20, mload(0x40))\n      tag_164\n      swap3\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":11710:11797  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n    tag_161:\n        /* \"erc721a/contracts/ERC721A.sol\":11703:11797  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      swap2\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":11491:11804  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":13684:13846  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_78:\n        /* \"erc721a/contracts/ERC721A.sol\":13781:13785  bool */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13822  _operatorApprovals */\n      0x07\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13829  _operatorApprovals[owner] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13823:13828  owner */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13829  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13839  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13830:13838  operator */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13839  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":13797:13839  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":13684:13846  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":14791:15059  function _exists(uint256 tokenId) internal view returns (bool) {... */\n    tag_92:\n        /* \"erc721a/contracts/ERC721A.sol\":14848:14852  bool */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":14902:14909  tokenId */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":14883:14898  _startTokenId() */\n      tag_168\n        /* \"erc721a/contracts/ERC721A.sol\":14883:14896  _startTokenId */\n      tag_104\n        /* \"erc721a/contracts/ERC721A.sol\":14883:14898  _startTokenId() */\n      jump\t// in\n    tag_168:\n        /* \"erc721a/contracts/ERC721A.sol\":14883:14909  _startTokenId() <= tokenId */\n      gt\n      iszero\n        /* \"erc721a/contracts/ERC721A.sol\":14883:14948  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_169\n      jumpi\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":14935:14948  _currentIndex */\n      sload(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":14925:14932  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":14925:14948  tokenId < _currentIndex */\n      lt\n        /* \"erc721a/contracts/ERC721A.sol\":14883:14948  _startTokenId() <= tokenId &&... */\n    tag_169:\n        /* \"erc721a/contracts/ERC721A.sol\":14883:15033  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_170\n      jumpi\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":15032:15033  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":1774:1782  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15002  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15011  _packedOwnerships[tokenId] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":15003:15010  tokenId */\n      dup6\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15011  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15028  _packedOwnerships[tokenId] & BITMASK_BURNED */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15033  _packedOwnerships[tokenId] & BITMASK_BURNED == 0 */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":14883:15033  _startTokenId() <= tokenId &&... */\n    tag_170:\n        /* \"erc721a/contracts/ERC721A.sol\":14864:15033  return... */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":14791:15059  function _exists(uint256 tokenId) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":32874:32977  function _msgSenderERC721A() internal view virtual returns (address) {... */\n    tag_97:\n        /* \"erc721a/contracts/ERC721A.sol\":32934:32941  address */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n        /* \"erc721a/contracts/ERC721A.sol\":32953:32970  return msg.sender */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":32874:32977  function _msgSenderERC721A() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":4276:4366  function _startTokenId() internal view virtual returns (uint256) {... */\n    tag_104:\n        /* \"erc721a/contracts/ERC721A.sol\":4332:4339  uint256 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":4276:4366  function _startTokenId() internal view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":7949:9054  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {... */\n    tag_107:\n        /* \"erc721a/contracts/ERC721A.sol\":8016:8023  uint256 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":8035:8047  uint256 curr */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":8050:8057  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":8035:8057  uint256 curr = tokenId */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":8115:8119  curr */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":8096:8111  _startTokenId() */\n      tag_174\n        /* \"erc721a/contracts/ERC721A.sol\":8096:8109  _startTokenId */\n      tag_104\n        /* \"erc721a/contracts/ERC721A.sol\":8096:8111  _startTokenId() */\n      jump\t// in\n    tag_174:\n        /* \"erc721a/contracts/ERC721A.sol\":8096:8119  _startTokenId() <= curr */\n      gt\n        /* \"erc721a/contracts/ERC721A.sol\":8092:8990  if (_startTokenId() <= curr)... */\n      tag_175\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":8148:8161  _currentIndex */\n      sload(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":8141:8145  curr */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":8141:8161  curr < _currentIndex */\n      lt\n        /* \"erc721a/contracts/ERC721A.sol\":8137:8990  if (curr < _currentIndex) {... */\n      iszero\n      tag_176\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":8185:8199  uint256 packed */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":8202:8219  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":8202:8225  _packedOwnerships[curr] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":8220:8224  curr */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":8202:8225  _packedOwnerships[curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":8185:8225  uint256 packed = _packedOwnerships[curr] */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":8316:8317  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":1774:1782  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"erc721a/contracts/ERC721A.sol\":8289:8295  packed */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":8289:8312  packed & BITMASK_BURNED */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":8289:8317  packed & BITMASK_BURNED == 0 */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":8285:8972  if (packed & BITMASK_BURNED == 0) {... */\n      iszero\n      tag_177\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":8800:8911  while (packed == 0) {... */\n    tag_178:\n        /* \"erc721a/contracts/ERC721A.sol\":8817:8818  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":8807:8813  packed */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":8807:8818  packed == 0 */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":8800:8911  while (packed == 0) {... */\n      iszero\n      tag_179\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":8859:8876  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":8859:8884  _packedOwnerships[--curr] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":8877:8883  --curr */\n      dup4\n      0x01\n      swap1\n      sub\n      swap4\n      pop\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":8859:8884  _packedOwnerships[--curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":8850:8884  packed = _packedOwnerships[--curr] */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":8800:8911  while (packed == 0) {... */\n      jump(tag_178)\n    tag_179:\n        /* \"erc721a/contracts/ERC721A.sol\":8943:8949  packed */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":8936:8949  return packed */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_173)\n        /* \"erc721a/contracts/ERC721A.sol\":8285:8972  if (packed & BITMASK_BURNED == 0) {... */\n    tag_177:\n        /* \"erc721a/contracts/ERC721A.sol\":8163:8990  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":8137:8990  if (curr < _currentIndex) {... */\n    tag_176:\n        /* \"erc721a/contracts/ERC721A.sol\":8092:8990  if (_startTokenId() <= curr)... */\n    tag_175:\n        /* \"erc721a/contracts/ERC721A.sol\":9016:9047  OwnerQueryForNonexistentToken() */\n      mload(0x40)\n      0xdf2d9b4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":7949:9054  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {... */\n    tag_173:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":20436:21073  function _getApprovedAddress(uint256 tokenId)... */\n    tag_110:\n        /* \"erc721a/contracts/ERC721A.sol\":20528:20555  uint256 approvedAddressSlot */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":20557:20580  address approvedAddress */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":20596:20649  mapping(uint256 => address) storage tokenApprovalsPtr */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":20652:20667  _tokenApprovals */\n      0x06\n        /* \"erc721a/contracts/ERC721A.sol\":20596:20667  mapping(uint256 => address) storage tokenApprovalsPtr = _tokenApprovals */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":20834:20841  tokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":20828:20832  0x00 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":20821:20842  mstore(0x00, tokenId) */\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":20868:20890  tokenApprovalsPtr.slot */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":20862:20866  0x20 */\n      0x20\n        /* \"erc721a/contracts/ERC721A.sol\":20855:20891  mstore(0x20, tokenApprovalsPtr.slot) */\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":20943:20947  0x40 */\n      0x40\n        /* \"erc721a/contracts/ERC721A.sol\":20937:20941  0x00 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":20927:20948  keccak256(0x00, 0x40) */\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":20904:20948  approvedAddressSlot := keccak256(0x00, 0x40) */\n      swap3\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":21037:21056  approvedAddressSlot */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":21031:21057  sload(approvedAddressSlot) */\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":21012:21057  approvedAddress := sload(approvedAddressSlot) */\n      swap2\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":20774:21067  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":20436:21073  function _getApprovedAddress(uint256 tokenId)... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":21181:21813  function _isOwnerOrApproved(... */\n    tag_113:\n        /* \"erc721a/contracts/ERC721A.sol\":21319:21330  bool result */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":21478:21493  BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"erc721a/contracts/ERC721A.sol\":21472:21476  from */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":21468:21494  and(from, BITMASK_ADDRESS) */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":21460:21494  from := and(from, BITMASK_ADDRESS) */\n      swap3\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":21635:21650  BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"erc721a/contracts/ERC721A.sol\":21624:21633  msgSender */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":21620:21651  and(msgSender, BITMASK_ADDRESS) */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":21607:21651  msgSender := and(msgSender, BITMASK_ADDRESS) */\n      swap2\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":21780:21795  approvedAddress */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":21769:21778  msgSender */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":21766:21796  eq(msgSender, approvedAddress) */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":21759:21763  from */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":21748:21757  msgSender */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":21745:21764  eq(msgSender, from) */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":21742:21797  or(eq(msgSender, from), eq(msgSender, approvedAddress)) */\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":21732:21797  result := or(eq(msgSender, from), eq(msgSender, approvedAddress)) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":21181:21813  function _isOwnerOrApproved(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":31742:31896  function _beforeTokenTransfers(... */\n    tag_120:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":30099:30401  function _nextExtraData(... */\n    tag_124:\n        /* \"erc721a/contracts/ERC721A.sol\":30230:30237  uint256 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":30249:30265  uint24 extraData */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":2166:2169  232 */\n      0xe8\n        /* \"erc721a/contracts/ERC721A.sol\":30275:30294  prevOwnershipPacked */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":30275:30315  prevOwnershipPacked >> BITPOS_EXTRA_DATA */\n      swap1\n      shr\n        /* \"erc721a/contracts/ERC721A.sol\":30249:30316  uint24 extraData = uint24(prevOwnershipPacked >> BITPOS_EXTRA_DATA) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":2166:2169  232 */\n      0xe8\n        /* \"erc721a/contracts/ERC721A.sol\":30341:30372  _extraData(from, to, extraData) */\n      tag_184\n        /* \"erc721a/contracts/ERC721A.sol\":30352:30356  from */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":30358:30360  to */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":30362:30371  extraData */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":30341:30351  _extraData */\n      tag_185\n        /* \"erc721a/contracts/ERC721A.sol\":30341:30372  _extraData(from, to, extraData) */\n      jump\t// in\n    tag_184:\n        /* \"erc721a/contracts/ERC721A.sol\":30333:30373  uint256(_extraData(from, to, extraData)) */\n      0xffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":30333:30394  uint256(_extraData(from, to, extraData)) << BITPOS_EXTRA_DATA */\n      swap1\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":30326:30394  return uint256(_extraData(from, to, extraData)) << BITPOS_EXTRA_DATA */\n      swap2\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":30099:30401  function _nextExtraData(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":10460:10900  function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {... */\n    tag_125:\n        /* \"erc721a/contracts/ERC721A.sol\":10540:10554  uint256 result */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":10705:10720  BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"erc721a/contracts/ERC721A.sol\":10698:10703  owner */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":10694:10721  and(owner, BITMASK_ADDRESS) */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":10685:10721  owner := and(owner, BITMASK_ADDRESS) */\n      swap3\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":10877:10882  flags */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":10863:10874  timestamp() */\n      timestamp\n        /* \"erc721a/contracts/ERC721A.sol\":10839:10861  BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"erc721a/contracts/ERC721A.sol\":10835:10875  shl(BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":10832:10883  or(shl(BITPOS_START_TIMESTAMP, timestamp()), flags) */\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":10825:10830  owner */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":10822:10884  or(owner, or(shl(BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":10812:10884  result := or(owner, or(shl(BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":10460:10900  function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":32537:32690  function _afterTokenTransfers(... */\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":28649:29346  function _checkContractOnERC721Received(... */\n    tag_153:\n        /* \"erc721a/contracts/ERC721A.sol\":28807:28811  bool */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":28852:28854  to */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":28827:28872  ERC721A__IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"erc721a/contracts/ERC721A.sol\":28873:28892  _msgSenderERC721A() */\n      tag_189\n        /* \"erc721a/contracts/ERC721A.sol\":28873:28890  _msgSenderERC721A */\n      tag_97\n        /* \"erc721a/contracts/ERC721A.sol\":28873:28892  _msgSenderERC721A() */\n      jump\t// in\n    tag_189:\n        /* \"erc721a/contracts/ERC721A.sol\":28894:28898  from */\n      dup8\n        /* \"erc721a/contracts/ERC721A.sol\":28900:28907  tokenId */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":28909:28914  _data */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":28827:28915  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_192\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_192:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_193\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_194\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      0x01\n    tag_193:\n        /* \"erc721a/contracts/ERC721A.sol\":28823:29340  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_196\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_201\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_200)\n    tag_201:\n      0x60\n      swap2\n      pop\n    tag_200:\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":29122:29123  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":29105:29111  reason */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":29105:29118  reason.length */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":29105:29123  reason.length == 0 */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":29101:29330  if (reason.length == 0) {... */\n      iszero\n      tag_202\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":29150:29190  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":29101:29330  if (reason.length == 0) {... */\n    tag_202:\n        /* \"erc721a/contracts/ERC721A.sol\":29290:29296  reason */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":29284:29297  mload(reason) */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":29275:29281  reason */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":29271:29273  32 */\n      0x20\n        /* \"erc721a/contracts/ERC721A.sol\":29267:29282  add(32, reason) */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":29260:29298  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":28823:29340  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_196:\n        /* \"erc721a/contracts/ERC721A.sol\":28993:29047  ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"erc721a/contracts/ERC721A.sol\":28983:29047  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":28983:28989  retval */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":28983:29047  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":28976:29047  return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      swap2\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":28649:29346  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":12049:12141  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_159:\n        /* \"erc721a/contracts/ERC721A.sol\":12100:12113  string memory */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":12125:12134  return '' */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":12049:12141  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":33078:34998  function _toString(uint256 value) internal pure returns (string memory ptr) {... */\n    tag_163:\n        /* \"erc721a/contracts/ERC721A.sol\":33135:33152  string memory ptr */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":33548:33551  128 */\n      0x80\n        /* \"erc721a/contracts/ERC721A.sol\":33541:33545  0x40 */\n      0x40\n        /* \"erc721a/contracts/ERC721A.sol\":33535:33546  mload(0x40) */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":33531:33552  add(mload(0x40), 128) */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":33524:33552  ptr := add(mload(0x40), 128) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":33637:33640  ptr */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":33631:33635  0x40 */\n      0x40\n        /* \"erc721a/contracts/ERC721A.sol\":33624:33641  mstore(0x40, ptr) */\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":33740:33743  ptr */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":34188:34193  value */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":34316:34317  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":34311:34314  ptr */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":34307:34318  sub(ptr, 1) */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":34300:34318  ptr := sub(ptr, 1) */\n      swap3\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":34451:34453  10 */\n      0x0a\n        /* \"erc721a/contracts/ERC721A.sol\":34445:34449  temp */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":34441:34454  mod(temp, 10) */\n      mod\n        /* \"erc721a/contracts/ERC721A.sol\":34437:34439  48 */\n      0x30\n        /* \"erc721a/contracts/ERC721A.sol\":34433:34455  add(48, mod(temp, 10)) */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":34428:34431  ptr */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":34420:34456  mstore8(ptr, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"erc721a/contracts/ERC721A.sol\":34491:34493  10 */\n      0x0a\n        /* \"erc721a/contracts/ERC721A.sol\":34485:34489  temp */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":34481:34494  div(temp, 10) */\n      div\n        /* \"erc721a/contracts/ERC721A.sol\":34473:34494  temp := div(temp, 10) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":34082:34764  for {... */\n    tag_207:\n        /* \"erc721a/contracts/ERC721A.sol\":34509:34513  temp */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":34082:34764  for {... */\n      iszero\n      tag_209\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":34695:34696  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":34690:34693  ptr */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":34686:34697  sub(ptr, 1) */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":34679:34697  ptr := sub(ptr, 1) */\n      swap3\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":34745:34747  10 */\n      0x0a\n        /* \"erc721a/contracts/ERC721A.sol\":34739:34743  temp */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":34735:34748  mod(temp, 10) */\n      mod\n        /* \"erc721a/contracts/ERC721A.sol\":34731:34733  48 */\n      0x30\n        /* \"erc721a/contracts/ERC721A.sol\":34727:34749  add(48, mod(temp, 10)) */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":34722:34725  ptr */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":34714:34750  mstore8(ptr, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"erc721a/contracts/ERC721A.sol\":34602:34604  10 */\n      0x0a\n        /* \"erc721a/contracts/ERC721A.sol\":34596:34600  temp */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":34592:34605  div(temp, 10) */\n      div\n        /* \"erc721a/contracts/ERC721A.sol\":34584:34605  temp := div(temp, 10) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":34082:34764  for {... */\n      jump(tag_207)\n    tag_209:\n        /* \"erc721a/contracts/ERC721A.sol\":34086:34508  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":34801:34804  ptr */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":34796:34799  end */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":34792:34805  sub(end, ptr) */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":34914:34916  32 */\n      0x20\n        /* \"erc721a/contracts/ERC721A.sol\":34909:34912  ptr */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":34905:34917  sub(ptr, 32) */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":34898:34917  ptr := sub(ptr, 32) */\n      swap3\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":34975:34981  length */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":34970:34973  ptr */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":34963:34982  mstore(ptr, length) */\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":33173:34992  {... */\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":33078:34998  function _toString(uint256 value) internal pure returns (string memory ptr) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":30961:31104  function _extraData(... */\n    tag_185:\n        /* \"erc721a/contracts/ERC721A.sol\":31094:31100  uint24 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":30961:31104  function _extraData(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:417   */\n    tag_212:\n        /* \"#utility.yul\":84:89   */\n      0x00\n        /* \"#utility.yul\":109:174   */\n      tag_214\n        /* \"#utility.yul\":125:173   */\n      tag_215\n        /* \"#utility.yul\":166:172   */\n      dup5\n        /* \"#utility.yul\":125:173   */\n      tag_216\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":109:174   */\n      tag_217\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":100:174   */\n      swap1\n      pop\n        /* \"#utility.yul\":197:203   */\n      dup3\n        /* \"#utility.yul\":190:195   */\n      dup2\n        /* \"#utility.yul\":183:204   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x20\n        /* \"#utility.yul\":228:233   */\n      dup2\n        /* \"#utility.yul\":224:240   */\n      add\n        /* \"#utility.yul\":273:276   */\n      dup5\n        /* \"#utility.yul\":264:270   */\n      dup5\n        /* \"#utility.yul\":259:262   */\n      dup5\n        /* \"#utility.yul\":255:271   */\n      add\n        /* \"#utility.yul\":252:277   */\n      gt\n        /* \"#utility.yul\":249:361   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":280:359   */\n      tag_219\n      tag_220\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":249:361   */\n    tag_218:\n        /* \"#utility.yul\":370:411   */\n      tag_221\n        /* \"#utility.yul\":404:410   */\n      dup5\n        /* \"#utility.yul\":399:402   */\n      dup3\n        /* \"#utility.yul\":394:397   */\n      dup6\n        /* \"#utility.yul\":370:411   */\n      tag_222\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":90:417   */\n      pop\n        /* \"#utility.yul\":7:417   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":423:562   */\n    tag_223:\n        /* \"#utility.yul\":469:474   */\n      0x00\n        /* \"#utility.yul\":507:513   */\n      dup2\n        /* \"#utility.yul\":494:514   */\n      calldataload\n        /* \"#utility.yul\":485:514   */\n      swap1\n      pop\n        /* \"#utility.yul\":523:556   */\n      tag_225\n        /* \"#utility.yul\":550:555   */\n      dup2\n        /* \"#utility.yul\":523:556   */\n      tag_226\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":423:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:701   */\n    tag_227:\n        /* \"#utility.yul\":611:616   */\n      0x00\n        /* \"#utility.yul\":649:655   */\n      dup2\n        /* \"#utility.yul\":636:656   */\n      calldataload\n        /* \"#utility.yul\":627:656   */\n      swap1\n      pop\n        /* \"#utility.yul\":665:695   */\n      tag_229\n        /* \"#utility.yul\":689:694   */\n      dup2\n        /* \"#utility.yul\":665:695   */\n      tag_230\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":568:701   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":707:844   */\n    tag_231:\n        /* \"#utility.yul\":752:757   */\n      0x00\n        /* \"#utility.yul\":790:796   */\n      dup2\n        /* \"#utility.yul\":777:797   */\n      calldataload\n        /* \"#utility.yul\":768:797   */\n      swap1\n      pop\n        /* \"#utility.yul\":806:838   */\n      tag_233\n        /* \"#utility.yul\":832:837   */\n      dup2\n        /* \"#utility.yul\":806:838   */\n      tag_234\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":707:844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":850:991   */\n    tag_235:\n        /* \"#utility.yul\":906:911   */\n      0x00\n        /* \"#utility.yul\":937:943   */\n      dup2\n        /* \"#utility.yul\":931:944   */\n      mload\n        /* \"#utility.yul\":922:944   */\n      swap1\n      pop\n        /* \"#utility.yul\":953:985   */\n      tag_237\n        /* \"#utility.yul\":979:984   */\n      dup2\n        /* \"#utility.yul\":953:985   */\n      tag_234\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":850:991   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1010:1348   */\n    tag_238:\n        /* \"#utility.yul\":1065:1070   */\n      0x00\n        /* \"#utility.yul\":1114:1117   */\n      dup3\n        /* \"#utility.yul\":1107:1111   */\n      0x1f\n        /* \"#utility.yul\":1099:1105   */\n      dup4\n        /* \"#utility.yul\":1095:1112   */\n      add\n        /* \"#utility.yul\":1091:1118   */\n      slt\n        /* \"#utility.yul\":1081:1203   */\n      tag_240\n      jumpi\n        /* \"#utility.yul\":1122:1201   */\n      tag_241\n      tag_242\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":1081:1203   */\n    tag_240:\n        /* \"#utility.yul\":1239:1245   */\n      dup2\n        /* \"#utility.yul\":1226:1246   */\n      calldataload\n        /* \"#utility.yul\":1264:1342   */\n      tag_243\n        /* \"#utility.yul\":1338:1341   */\n      dup5\n        /* \"#utility.yul\":1330:1336   */\n      dup3\n        /* \"#utility.yul\":1323:1327   */\n      0x20\n        /* \"#utility.yul\":1315:1321   */\n      dup7\n        /* \"#utility.yul\":1311:1328   */\n      add\n        /* \"#utility.yul\":1264:1342   */\n      tag_212\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":1255:1342   */\n      swap2\n      pop\n        /* \"#utility.yul\":1071:1348   */\n      pop\n        /* \"#utility.yul\":1010:1348   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1354:1493   */\n    tag_244:\n        /* \"#utility.yul\":1400:1405   */\n      0x00\n        /* \"#utility.yul\":1438:1444   */\n      dup2\n        /* \"#utility.yul\":1425:1445   */\n      calldataload\n        /* \"#utility.yul\":1416:1445   */\n      swap1\n      pop\n        /* \"#utility.yul\":1454:1487   */\n      tag_246\n        /* \"#utility.yul\":1481:1486   */\n      dup2\n        /* \"#utility.yul\":1454:1487   */\n      tag_247\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":1354:1493   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1499:1828   */\n    tag_57:\n        /* \"#utility.yul\":1558:1564   */\n      0x00\n        /* \"#utility.yul\":1607:1609   */\n      0x20\n        /* \"#utility.yul\":1595:1604   */\n      dup3\n        /* \"#utility.yul\":1586:1593   */\n      dup5\n        /* \"#utility.yul\":1582:1605   */\n      sub\n        /* \"#utility.yul\":1578:1610   */\n      slt\n        /* \"#utility.yul\":1575:1694   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":1613:1692   */\n      tag_250\n      tag_251\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":1575:1694   */\n    tag_249:\n        /* \"#utility.yul\":1733:1734   */\n      0x00\n        /* \"#utility.yul\":1758:1811   */\n      tag_252\n        /* \"#utility.yul\":1803:1810   */\n      dup5\n        /* \"#utility.yul\":1794:1800   */\n      dup3\n        /* \"#utility.yul\":1783:1792   */\n      dup6\n        /* \"#utility.yul\":1779:1801   */\n      add\n        /* \"#utility.yul\":1758:1811   */\n      tag_223\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":1748:1811   */\n      swap2\n      pop\n        /* \"#utility.yul\":1704:1821   */\n      pop\n        /* \"#utility.yul\":1499:1828   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1834:2308   */\n    tag_77:\n        /* \"#utility.yul\":1902:1908   */\n      0x00\n        /* \"#utility.yul\":1910:1916   */\n      dup1\n        /* \"#utility.yul\":1959:1961   */\n      0x40\n        /* \"#utility.yul\":1947:1956   */\n      dup4\n        /* \"#utility.yul\":1938:1945   */\n      dup6\n        /* \"#utility.yul\":1934:1957   */\n      sub\n        /* \"#utility.yul\":1930:1962   */\n      slt\n        /* \"#utility.yul\":1927:2046   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":1965:2044   */\n      tag_255\n      tag_251\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":1927:2046   */\n    tag_254:\n        /* \"#utility.yul\":2085:2086   */\n      0x00\n        /* \"#utility.yul\":2110:2163   */\n      tag_256\n        /* \"#utility.yul\":2155:2162   */\n      dup6\n        /* \"#utility.yul\":2146:2152   */\n      dup3\n        /* \"#utility.yul\":2135:2144   */\n      dup7\n        /* \"#utility.yul\":2131:2153   */\n      add\n        /* \"#utility.yul\":2110:2163   */\n      tag_223\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":2100:2163   */\n      swap3\n      pop\n        /* \"#utility.yul\":2056:2173   */\n      pop\n        /* \"#utility.yul\":2212:2214   */\n      0x20\n        /* \"#utility.yul\":2238:2291   */\n      tag_257\n        /* \"#utility.yul\":2283:2290   */\n      dup6\n        /* \"#utility.yul\":2274:2280   */\n      dup3\n        /* \"#utility.yul\":2263:2272   */\n      dup7\n        /* \"#utility.yul\":2259:2281   */\n      add\n        /* \"#utility.yul\":2238:2291   */\n      tag_223\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":2228:2291   */\n      swap2\n      pop\n        /* \"#utility.yul\":2183:2301   */\n      pop\n        /* \"#utility.yul\":1834:2308   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2314:2933   */\n    tag_46:\n        /* \"#utility.yul\":2391:2397   */\n      0x00\n        /* \"#utility.yul\":2399:2405   */\n      dup1\n        /* \"#utility.yul\":2407:2413   */\n      0x00\n        /* \"#utility.yul\":2456:2458   */\n      0x60\n        /* \"#utility.yul\":2444:2453   */\n      dup5\n        /* \"#utility.yul\":2435:2442   */\n      dup7\n        /* \"#utility.yul\":2431:2454   */\n      sub\n        /* \"#utility.yul\":2427:2459   */\n      slt\n        /* \"#utility.yul\":2424:2543   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":2462:2541   */\n      tag_260\n      tag_251\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":2424:2543   */\n    tag_259:\n        /* \"#utility.yul\":2582:2583   */\n      0x00\n        /* \"#utility.yul\":2607:2660   */\n      tag_261\n        /* \"#utility.yul\":2652:2659   */\n      dup7\n        /* \"#utility.yul\":2643:2649   */\n      dup3\n        /* \"#utility.yul\":2632:2641   */\n      dup8\n        /* \"#utility.yul\":2628:2650   */\n      add\n        /* \"#utility.yul\":2607:2660   */\n      tag_223\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":2597:2660   */\n      swap4\n      pop\n        /* \"#utility.yul\":2553:2670   */\n      pop\n        /* \"#utility.yul\":2709:2711   */\n      0x20\n        /* \"#utility.yul\":2735:2788   */\n      tag_262\n        /* \"#utility.yul\":2780:2787   */\n      dup7\n        /* \"#utility.yul\":2771:2777   */\n      dup3\n        /* \"#utility.yul\":2760:2769   */\n      dup8\n        /* \"#utility.yul\":2756:2778   */\n      add\n        /* \"#utility.yul\":2735:2788   */\n      tag_223\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":2725:2788   */\n      swap3\n      pop\n        /* \"#utility.yul\":2680:2798   */\n      pop\n        /* \"#utility.yul\":2837:2839   */\n      0x40\n        /* \"#utility.yul\":2863:2916   */\n      tag_263\n        /* \"#utility.yul\":2908:2915   */\n      dup7\n        /* \"#utility.yul\":2899:2905   */\n      dup3\n        /* \"#utility.yul\":2888:2897   */\n      dup8\n        /* \"#utility.yul\":2884:2906   */\n      add\n        /* \"#utility.yul\":2863:2916   */\n      tag_244\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":2853:2916   */\n      swap2\n      pop\n        /* \"#utility.yul\":2808:2926   */\n      pop\n        /* \"#utility.yul\":2314:2933   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2939:3882   */\n    tag_69:\n        /* \"#utility.yul\":3034:3040   */\n      0x00\n        /* \"#utility.yul\":3042:3048   */\n      dup1\n        /* \"#utility.yul\":3050:3056   */\n      0x00\n        /* \"#utility.yul\":3058:3064   */\n      dup1\n        /* \"#utility.yul\":3107:3110   */\n      0x80\n        /* \"#utility.yul\":3095:3104   */\n      dup6\n        /* \"#utility.yul\":3086:3093   */\n      dup8\n        /* \"#utility.yul\":3082:3105   */\n      sub\n        /* \"#utility.yul\":3078:3111   */\n      slt\n        /* \"#utility.yul\":3075:3195   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":3114:3193   */\n      tag_266\n      tag_251\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":3075:3195   */\n    tag_265:\n        /* \"#utility.yul\":3234:3235   */\n      0x00\n        /* \"#utility.yul\":3259:3312   */\n      tag_267\n        /* \"#utility.yul\":3304:3311   */\n      dup8\n        /* \"#utility.yul\":3295:3301   */\n      dup3\n        /* \"#utility.yul\":3284:3293   */\n      dup9\n        /* \"#utility.yul\":3280:3302   */\n      add\n        /* \"#utility.yul\":3259:3312   */\n      tag_223\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":3249:3312   */\n      swap5\n      pop\n        /* \"#utility.yul\":3205:3322   */\n      pop\n        /* \"#utility.yul\":3361:3363   */\n      0x20\n        /* \"#utility.yul\":3387:3440   */\n      tag_268\n        /* \"#utility.yul\":3432:3439   */\n      dup8\n        /* \"#utility.yul\":3423:3429   */\n      dup3\n        /* \"#utility.yul\":3412:3421   */\n      dup9\n        /* \"#utility.yul\":3408:3430   */\n      add\n        /* \"#utility.yul\":3387:3440   */\n      tag_223\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":3377:3440   */\n      swap4\n      pop\n        /* \"#utility.yul\":3332:3450   */\n      pop\n        /* \"#utility.yul\":3489:3491   */\n      0x40\n        /* \"#utility.yul\":3515:3568   */\n      tag_269\n        /* \"#utility.yul\":3560:3567   */\n      dup8\n        /* \"#utility.yul\":3551:3557   */\n      dup3\n        /* \"#utility.yul\":3540:3549   */\n      dup9\n        /* \"#utility.yul\":3536:3558   */\n      add\n        /* \"#utility.yul\":3515:3568   */\n      tag_244\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":3505:3568   */\n      swap3\n      pop\n        /* \"#utility.yul\":3460:3578   */\n      pop\n        /* \"#utility.yul\":3645:3647   */\n      0x60\n        /* \"#utility.yul\":3634:3643   */\n      dup6\n        /* \"#utility.yul\":3630:3648   */\n      add\n        /* \"#utility.yul\":3617:3649   */\n      calldataload\n        /* \"#utility.yul\":3676:3694   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3668:3674   */\n      dup2\n        /* \"#utility.yul\":3665:3695   */\n      gt\n        /* \"#utility.yul\":3662:3779   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":3698:3777   */\n      tag_271\n      tag_272\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":3662:3779   */\n    tag_270:\n        /* \"#utility.yul\":3803:3865   */\n      tag_273\n        /* \"#utility.yul\":3857:3864   */\n      dup8\n        /* \"#utility.yul\":3848:3854   */\n      dup3\n        /* \"#utility.yul\":3837:3846   */\n      dup9\n        /* \"#utility.yul\":3833:3855   */\n      add\n        /* \"#utility.yul\":3803:3865   */\n      tag_238\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":3793:3865   */\n      swap2\n      pop\n        /* \"#utility.yul\":3588:3875   */\n      pop\n        /* \"#utility.yul\":2939:3882   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3888:4356   */\n    tag_65:\n        /* \"#utility.yul\":3953:3959   */\n      0x00\n        /* \"#utility.yul\":3961:3967   */\n      dup1\n        /* \"#utility.yul\":4010:4012   */\n      0x40\n        /* \"#utility.yul\":3998:4007   */\n      dup4\n        /* \"#utility.yul\":3989:3996   */\n      dup6\n        /* \"#utility.yul\":3985:4008   */\n      sub\n        /* \"#utility.yul\":3981:4013   */\n      slt\n        /* \"#utility.yul\":3978:4097   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":4016:4095   */\n      tag_276\n      tag_251\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":3978:4097   */\n    tag_275:\n        /* \"#utility.yul\":4136:4137   */\n      0x00\n        /* \"#utility.yul\":4161:4214   */\n      tag_277\n        /* \"#utility.yul\":4206:4213   */\n      dup6\n        /* \"#utility.yul\":4197:4203   */\n      dup3\n        /* \"#utility.yul\":4186:4195   */\n      dup7\n        /* \"#utility.yul\":4182:4204   */\n      add\n        /* \"#utility.yul\":4161:4214   */\n      tag_223\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":4151:4214   */\n      swap3\n      pop\n        /* \"#utility.yul\":4107:4224   */\n      pop\n        /* \"#utility.yul\":4263:4265   */\n      0x20\n        /* \"#utility.yul\":4289:4339   */\n      tag_278\n        /* \"#utility.yul\":4331:4338   */\n      dup6\n        /* \"#utility.yul\":4322:4328   */\n      dup3\n        /* \"#utility.yul\":4311:4320   */\n      dup7\n        /* \"#utility.yul\":4307:4329   */\n      add\n        /* \"#utility.yul\":4289:4339   */\n      tag_227\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":4279:4339   */\n      swap2\n      pop\n        /* \"#utility.yul\":4234:4349   */\n      pop\n        /* \"#utility.yul\":3888:4356   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4362:4836   */\n    tag_38:\n        /* \"#utility.yul\":4430:4436   */\n      0x00\n        /* \"#utility.yul\":4438:4444   */\n      dup1\n        /* \"#utility.yul\":4487:4489   */\n      0x40\n        /* \"#utility.yul\":4475:4484   */\n      dup4\n        /* \"#utility.yul\":4466:4473   */\n      dup6\n        /* \"#utility.yul\":4462:4485   */\n      sub\n        /* \"#utility.yul\":4458:4490   */\n      slt\n        /* \"#utility.yul\":4455:4574   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":4493:4572   */\n      tag_281\n      tag_251\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":4455:4574   */\n    tag_280:\n        /* \"#utility.yul\":4613:4614   */\n      0x00\n        /* \"#utility.yul\":4638:4691   */\n      tag_282\n        /* \"#utility.yul\":4683:4690   */\n      dup6\n        /* \"#utility.yul\":4674:4680   */\n      dup3\n        /* \"#utility.yul\":4663:4672   */\n      dup7\n        /* \"#utility.yul\":4659:4681   */\n      add\n        /* \"#utility.yul\":4638:4691   */\n      tag_223\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":4628:4691   */\n      swap3\n      pop\n        /* \"#utility.yul\":4584:4701   */\n      pop\n        /* \"#utility.yul\":4740:4742   */\n      0x20\n        /* \"#utility.yul\":4766:4819   */\n      tag_283\n        /* \"#utility.yul\":4811:4818   */\n      dup6\n        /* \"#utility.yul\":4802:4808   */\n      dup3\n        /* \"#utility.yul\":4791:4800   */\n      dup7\n        /* \"#utility.yul\":4787:4809   */\n      add\n        /* \"#utility.yul\":4766:4819   */\n      tag_244\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":4756:4819   */\n      swap2\n      pop\n        /* \"#utility.yul\":4711:4829   */\n      pop\n        /* \"#utility.yul\":4362:4836   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4842:5169   */\n    tag_22:\n        /* \"#utility.yul\":4900:4906   */\n      0x00\n        /* \"#utility.yul\":4949:4951   */\n      0x20\n        /* \"#utility.yul\":4937:4946   */\n      dup3\n        /* \"#utility.yul\":4928:4935   */\n      dup5\n        /* \"#utility.yul\":4924:4947   */\n      sub\n        /* \"#utility.yul\":4920:4952   */\n      slt\n        /* \"#utility.yul\":4917:5036   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":4955:5034   */\n      tag_286\n      tag_251\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":4917:5036   */\n    tag_285:\n        /* \"#utility.yul\":5075:5076   */\n      0x00\n        /* \"#utility.yul\":5100:5152   */\n      tag_287\n        /* \"#utility.yul\":5144:5151   */\n      dup5\n        /* \"#utility.yul\":5135:5141   */\n      dup3\n        /* \"#utility.yul\":5124:5133   */\n      dup6\n        /* \"#utility.yul\":5120:5142   */\n      add\n        /* \"#utility.yul\":5100:5152   */\n      tag_231\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":5090:5152   */\n      swap2\n      pop\n        /* \"#utility.yul\":5046:5162   */\n      pop\n        /* \"#utility.yul\":4842:5169   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5175:5524   */\n    tag_195:\n        /* \"#utility.yul\":5244:5250   */\n      0x00\n        /* \"#utility.yul\":5293:5295   */\n      0x20\n        /* \"#utility.yul\":5281:5290   */\n      dup3\n        /* \"#utility.yul\":5272:5279   */\n      dup5\n        /* \"#utility.yul\":5268:5291   */\n      sub\n        /* \"#utility.yul\":5264:5296   */\n      slt\n        /* \"#utility.yul\":5261:5380   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":5299:5378   */\n      tag_290\n      tag_251\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":5261:5380   */\n    tag_289:\n        /* \"#utility.yul\":5419:5420   */\n      0x00\n        /* \"#utility.yul\":5444:5507   */\n      tag_291\n        /* \"#utility.yul\":5499:5506   */\n      dup5\n        /* \"#utility.yul\":5490:5496   */\n      dup3\n        /* \"#utility.yul\":5479:5488   */\n      dup6\n        /* \"#utility.yul\":5475:5497   */\n      add\n        /* \"#utility.yul\":5444:5507   */\n      tag_235\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":5434:5507   */\n      swap2\n      pop\n        /* \"#utility.yul\":5390:5517   */\n      pop\n        /* \"#utility.yul\":5175:5524   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5530:5859   */\n    tag_32:\n        /* \"#utility.yul\":5589:5595   */\n      0x00\n        /* \"#utility.yul\":5638:5640   */\n      0x20\n        /* \"#utility.yul\":5626:5635   */\n      dup3\n        /* \"#utility.yul\":5617:5624   */\n      dup5\n        /* \"#utility.yul\":5613:5636   */\n      sub\n        /* \"#utility.yul\":5609:5641   */\n      slt\n        /* \"#utility.yul\":5606:5725   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":5644:5723   */\n      tag_294\n      tag_251\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":5606:5725   */\n    tag_293:\n        /* \"#utility.yul\":5764:5765   */\n      0x00\n        /* \"#utility.yul\":5789:5842   */\n      tag_295\n        /* \"#utility.yul\":5834:5841   */\n      dup5\n        /* \"#utility.yul\":5825:5831   */\n      dup3\n        /* \"#utility.yul\":5814:5823   */\n      dup6\n        /* \"#utility.yul\":5810:5832   */\n      add\n        /* \"#utility.yul\":5789:5842   */\n      tag_244\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":5779:5842   */\n      swap2\n      pop\n        /* \"#utility.yul\":5735:5852   */\n      pop\n        /* \"#utility.yul\":5530:5859   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5865:5983   */\n    tag_296:\n        /* \"#utility.yul\":5952:5976   */\n      tag_298\n        /* \"#utility.yul\":5970:5975   */\n      dup2\n        /* \"#utility.yul\":5952:5976   */\n      tag_299\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":5947:5950   */\n      dup3\n        /* \"#utility.yul\":5940:5977   */\n      mstore\n        /* \"#utility.yul\":5865:5983   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5989:6098   */\n    tag_300:\n        /* \"#utility.yul\":6070:6091   */\n      tag_302\n        /* \"#utility.yul\":6085:6090   */\n      dup2\n        /* \"#utility.yul\":6070:6091   */\n      tag_303\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":6065:6068   */\n      dup3\n        /* \"#utility.yul\":6058:6092   */\n      mstore\n        /* \"#utility.yul\":5989:6098   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6104:6464   */\n    tag_304:\n        /* \"#utility.yul\":6190:6193   */\n      0x00\n        /* \"#utility.yul\":6218:6256   */\n      tag_306\n        /* \"#utility.yul\":6250:6255   */\n      dup3\n        /* \"#utility.yul\":6218:6256   */\n      tag_307\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":6272:6342   */\n      tag_308\n        /* \"#utility.yul\":6335:6341   */\n      dup2\n        /* \"#utility.yul\":6330:6333   */\n      dup6\n        /* \"#utility.yul\":6272:6342   */\n      tag_309\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":6265:6342   */\n      swap4\n      pop\n        /* \"#utility.yul\":6351:6403   */\n      tag_310\n        /* \"#utility.yul\":6396:6402   */\n      dup2\n        /* \"#utility.yul\":6391:6394   */\n      dup6\n        /* \"#utility.yul\":6384:6388   */\n      0x20\n        /* \"#utility.yul\":6377:6382   */\n      dup7\n        /* \"#utility.yul\":6373:6389   */\n      add\n        /* \"#utility.yul\":6351:6403   */\n      tag_311\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":6428:6457   */\n      tag_312\n        /* \"#utility.yul\":6450:6456   */\n      dup2\n        /* \"#utility.yul\":6428:6457   */\n      tag_313\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":6423:6426   */\n      dup5\n        /* \"#utility.yul\":6419:6458   */\n      add\n        /* \"#utility.yul\":6412:6458   */\n      swap2\n      pop\n        /* \"#utility.yul\":6194:6464   */\n      pop\n        /* \"#utility.yul\":6104:6464   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6470:6834   */\n    tag_314:\n        /* \"#utility.yul\":6558:6561   */\n      0x00\n        /* \"#utility.yul\":6586:6625   */\n      tag_316\n        /* \"#utility.yul\":6619:6624   */\n      dup3\n        /* \"#utility.yul\":6586:6625   */\n      tag_317\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":6641:6712   */\n      tag_318\n        /* \"#utility.yul\":6705:6711   */\n      dup2\n        /* \"#utility.yul\":6700:6703   */\n      dup6\n        /* \"#utility.yul\":6641:6712   */\n      tag_319\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":6634:6712   */\n      swap4\n      pop\n        /* \"#utility.yul\":6721:6773   */\n      tag_320\n        /* \"#utility.yul\":6766:6772   */\n      dup2\n        /* \"#utility.yul\":6761:6764   */\n      dup6\n        /* \"#utility.yul\":6754:6758   */\n      0x20\n        /* \"#utility.yul\":6747:6752   */\n      dup7\n        /* \"#utility.yul\":6743:6759   */\n      add\n        /* \"#utility.yul\":6721:6773   */\n      tag_311\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":6798:6827   */\n      tag_321\n        /* \"#utility.yul\":6820:6826   */\n      dup2\n        /* \"#utility.yul\":6798:6827   */\n      tag_313\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":6793:6796   */\n      dup5\n        /* \"#utility.yul\":6789:6828   */\n      add\n        /* \"#utility.yul\":6782:6828   */\n      swap2\n      pop\n        /* \"#utility.yul\":6562:6834   */\n      pop\n        /* \"#utility.yul\":6470:6834   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6840:7217   */\n    tag_322:\n        /* \"#utility.yul\":6946:6949   */\n      0x00\n        /* \"#utility.yul\":6974:7013   */\n      tag_324\n        /* \"#utility.yul\":7007:7012   */\n      dup3\n        /* \"#utility.yul\":6974:7013   */\n      tag_317\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":7029:7118   */\n      tag_325\n        /* \"#utility.yul\":7111:7117   */\n      dup2\n        /* \"#utility.yul\":7106:7109   */\n      dup6\n        /* \"#utility.yul\":7029:7118   */\n      tag_326\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":7022:7118   */\n      swap4\n      pop\n        /* \"#utility.yul\":7127:7179   */\n      tag_327\n        /* \"#utility.yul\":7172:7178   */\n      dup2\n        /* \"#utility.yul\":7167:7170   */\n      dup6\n        /* \"#utility.yul\":7160:7164   */\n      0x20\n        /* \"#utility.yul\":7153:7158   */\n      dup7\n        /* \"#utility.yul\":7149:7165   */\n      add\n        /* \"#utility.yul\":7127:7179   */\n      tag_311\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":7204:7210   */\n      dup1\n        /* \"#utility.yul\":7199:7202   */\n      dup5\n        /* \"#utility.yul\":7195:7211   */\n      add\n        /* \"#utility.yul\":7188:7211   */\n      swap2\n      pop\n        /* \"#utility.yul\":6950:7217   */\n      pop\n        /* \"#utility.yul\":6840:7217   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7223:7341   */\n    tag_328:\n        /* \"#utility.yul\":7310:7334   */\n      tag_330\n        /* \"#utility.yul\":7328:7333   */\n      dup2\n        /* \"#utility.yul\":7310:7334   */\n      tag_331\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":7305:7308   */\n      dup3\n        /* \"#utility.yul\":7298:7335   */\n      mstore\n        /* \"#utility.yul\":7223:7341   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7347:7782   */\n    tag_165:\n        /* \"#utility.yul\":7527:7530   */\n      0x00\n        /* \"#utility.yul\":7549:7644   */\n      tag_333\n        /* \"#utility.yul\":7640:7643   */\n      dup3\n        /* \"#utility.yul\":7631:7637   */\n      dup6\n        /* \"#utility.yul\":7549:7644   */\n      tag_322\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":7542:7644   */\n      swap2\n      pop\n        /* \"#utility.yul\":7661:7756   */\n      tag_334\n        /* \"#utility.yul\":7752:7755   */\n      dup3\n        /* \"#utility.yul\":7743:7749   */\n      dup5\n        /* \"#utility.yul\":7661:7756   */\n      tag_322\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":7654:7756   */\n      swap2\n      pop\n        /* \"#utility.yul\":7773:7776   */\n      dup2\n        /* \"#utility.yul\":7766:7776   */\n      swap1\n      pop\n        /* \"#utility.yul\":7347:7782   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7788:8010   */\n    tag_35:\n        /* \"#utility.yul\":7881:7885   */\n      0x00\n        /* \"#utility.yul\":7919:7921   */\n      0x20\n        /* \"#utility.yul\":7908:7917   */\n      dup3\n        /* \"#utility.yul\":7904:7922   */\n      add\n        /* \"#utility.yul\":7896:7922   */\n      swap1\n      pop\n        /* \"#utility.yul\":7932:8003   */\n      tag_336\n        /* \"#utility.yul\":8000:8001   */\n      0x00\n        /* \"#utility.yul\":7989:7998   */\n      dup4\n        /* \"#utility.yul\":7985:8002   */\n      add\n        /* \"#utility.yul\":7976:7982   */\n      dup5\n        /* \"#utility.yul\":7932:8003   */\n      tag_296\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":7788:8010   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8016:8656   */\n    tag_191:\n        /* \"#utility.yul\":8211:8215   */\n      0x00\n        /* \"#utility.yul\":8249:8252   */\n      0x80\n        /* \"#utility.yul\":8238:8247   */\n      dup3\n        /* \"#utility.yul\":8234:8253   */\n      add\n        /* \"#utility.yul\":8226:8253   */\n      swap1\n      pop\n        /* \"#utility.yul\":8263:8334   */\n      tag_338\n        /* \"#utility.yul\":8331:8332   */\n      0x00\n        /* \"#utility.yul\":8320:8329   */\n      dup4\n        /* \"#utility.yul\":8316:8333   */\n      add\n        /* \"#utility.yul\":8307:8313   */\n      dup8\n        /* \"#utility.yul\":8263:8334   */\n      tag_296\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":8344:8416   */\n      tag_339\n        /* \"#utility.yul\":8412:8414   */\n      0x20\n        /* \"#utility.yul\":8401:8410   */\n      dup4\n        /* \"#utility.yul\":8397:8415   */\n      add\n        /* \"#utility.yul\":8388:8394   */\n      dup7\n        /* \"#utility.yul\":8344:8416   */\n      tag_296\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":8426:8498   */\n      tag_340\n        /* \"#utility.yul\":8494:8496   */\n      0x40\n        /* \"#utility.yul\":8483:8492   */\n      dup4\n        /* \"#utility.yul\":8479:8497   */\n      add\n        /* \"#utility.yul\":8470:8476   */\n      dup6\n        /* \"#utility.yul\":8426:8498   */\n      tag_328\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":8545:8554   */\n      dup2\n        /* \"#utility.yul\":8539:8543   */\n      dup2\n        /* \"#utility.yul\":8535:8555   */\n      sub\n        /* \"#utility.yul\":8530:8532   */\n      0x60\n        /* \"#utility.yul\":8519:8528   */\n      dup4\n        /* \"#utility.yul\":8515:8533   */\n      add\n        /* \"#utility.yul\":8508:8556   */\n      mstore\n        /* \"#utility.yul\":8573:8649   */\n      tag_341\n        /* \"#utility.yul\":8644:8648   */\n      dup2\n        /* \"#utility.yul\":8635:8641   */\n      dup5\n        /* \"#utility.yul\":8573:8649   */\n      tag_304\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":8565:8649   */\n      swap1\n      pop\n        /* \"#utility.yul\":8016:8656   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8662:8872   */\n    tag_25:\n        /* \"#utility.yul\":8749:8753   */\n      0x00\n        /* \"#utility.yul\":8787:8789   */\n      0x20\n        /* \"#utility.yul\":8776:8785   */\n      dup3\n        /* \"#utility.yul\":8772:8790   */\n      add\n        /* \"#utility.yul\":8764:8790   */\n      swap1\n      pop\n        /* \"#utility.yul\":8800:8865   */\n      tag_343\n        /* \"#utility.yul\":8862:8863   */\n      0x00\n        /* \"#utility.yul\":8851:8860   */\n      dup4\n        /* \"#utility.yul\":8847:8864   */\n      add\n        /* \"#utility.yul\":8838:8844   */\n      dup5\n        /* \"#utility.yul\":8800:8865   */\n      tag_300\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":8662:8872   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8878:9191   */\n    tag_29:\n        /* \"#utility.yul\":8991:8995   */\n      0x00\n        /* \"#utility.yul\":9029:9031   */\n      0x20\n        /* \"#utility.yul\":9018:9027   */\n      dup3\n        /* \"#utility.yul\":9014:9032   */\n      add\n        /* \"#utility.yul\":9006:9032   */\n      swap1\n      pop\n        /* \"#utility.yul\":9078:9087   */\n      dup2\n        /* \"#utility.yul\":9072:9076   */\n      dup2\n        /* \"#utility.yul\":9068:9088   */\n      sub\n        /* \"#utility.yul\":9064:9065   */\n      0x00\n        /* \"#utility.yul\":9053:9062   */\n      dup4\n        /* \"#utility.yul\":9049:9066   */\n      add\n        /* \"#utility.yul\":9042:9089   */\n      mstore\n        /* \"#utility.yul\":9106:9184   */\n      tag_345\n        /* \"#utility.yul\":9179:9183   */\n      dup2\n        /* \"#utility.yul\":9170:9176   */\n      dup5\n        /* \"#utility.yul\":9106:9184   */\n      tag_314\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":9098:9184   */\n      swap1\n      pop\n        /* \"#utility.yul\":8878:9191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9197:9419   */\n    tag_43:\n        /* \"#utility.yul\":9290:9294   */\n      0x00\n        /* \"#utility.yul\":9328:9330   */\n      0x20\n        /* \"#utility.yul\":9317:9326   */\n      dup3\n        /* \"#utility.yul\":9313:9331   */\n      add\n        /* \"#utility.yul\":9305:9331   */\n      swap1\n      pop\n        /* \"#utility.yul\":9341:9412   */\n      tag_347\n        /* \"#utility.yul\":9409:9410   */\n      0x00\n        /* \"#utility.yul\":9398:9407   */\n      dup4\n        /* \"#utility.yul\":9394:9411   */\n      add\n        /* \"#utility.yul\":9385:9391   */\n      dup5\n        /* \"#utility.yul\":9341:9412   */\n      tag_328\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":9197:9419   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9425:9554   */\n    tag_217:\n        /* \"#utility.yul\":9459:9465   */\n      0x00\n        /* \"#utility.yul\":9486:9506   */\n      tag_349\n      tag_350\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":9476:9506   */\n      swap1\n      pop\n        /* \"#utility.yul\":9515:9548   */\n      tag_351\n        /* \"#utility.yul\":9543:9547   */\n      dup3\n        /* \"#utility.yul\":9535:9541   */\n      dup3\n        /* \"#utility.yul\":9515:9548   */\n      tag_352\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":9425:9554   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9560:9635   */\n    tag_350:\n        /* \"#utility.yul\":9593:9599   */\n      0x00\n        /* \"#utility.yul\":9626:9628   */\n      0x40\n        /* \"#utility.yul\":9620:9629   */\n      mload\n        /* \"#utility.yul\":9610:9629   */\n      swap1\n      pop\n        /* \"#utility.yul\":9560:9635   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":9641:9948   */\n    tag_216:\n        /* \"#utility.yul\":9702:9706   */\n      0x00\n        /* \"#utility.yul\":9792:9810   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9784:9790   */\n      dup3\n        /* \"#utility.yul\":9781:9811   */\n      gt\n        /* \"#utility.yul\":9778:9834   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":9814:9832   */\n      tag_356\n      tag_357\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":9778:9834   */\n    tag_355:\n        /* \"#utility.yul\":9852:9881   */\n      tag_358\n        /* \"#utility.yul\":9874:9880   */\n      dup3\n        /* \"#utility.yul\":9852:9881   */\n      tag_313\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":9844:9881   */\n      swap1\n      pop\n        /* \"#utility.yul\":9936:9940   */\n      0x20\n        /* \"#utility.yul\":9930:9934   */\n      dup2\n        /* \"#utility.yul\":9926:9941   */\n      add\n        /* \"#utility.yul\":9918:9941   */\n      swap1\n      pop\n        /* \"#utility.yul\":9641:9948   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9954:10052   */\n    tag_307:\n        /* \"#utility.yul\":10005:10011   */\n      0x00\n        /* \"#utility.yul\":10039:10044   */\n      dup2\n        /* \"#utility.yul\":10033:10045   */\n      mload\n        /* \"#utility.yul\":10023:10045   */\n      swap1\n      pop\n        /* \"#utility.yul\":9954:10052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10058:10157   */\n    tag_317:\n        /* \"#utility.yul\":10110:10116   */\n      0x00\n        /* \"#utility.yul\":10144:10149   */\n      dup2\n        /* \"#utility.yul\":10138:10150   */\n      mload\n        /* \"#utility.yul\":10128:10150   */\n      swap1\n      pop\n        /* \"#utility.yul\":10058:10157   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10163:10331   */\n    tag_309:\n        /* \"#utility.yul\":10246:10257   */\n      0x00\n        /* \"#utility.yul\":10280:10286   */\n      dup3\n        /* \"#utility.yul\":10275:10278   */\n      dup3\n        /* \"#utility.yul\":10268:10287   */\n      mstore\n        /* \"#utility.yul\":10320:10324   */\n      0x20\n        /* \"#utility.yul\":10315:10318   */\n      dup3\n        /* \"#utility.yul\":10311:10325   */\n      add\n        /* \"#utility.yul\":10296:10325   */\n      swap1\n      pop\n        /* \"#utility.yul\":10163:10331   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10337:10506   */\n    tag_319:\n        /* \"#utility.yul\":10421:10432   */\n      0x00\n        /* \"#utility.yul\":10455:10461   */\n      dup3\n        /* \"#utility.yul\":10450:10453   */\n      dup3\n        /* \"#utility.yul\":10443:10462   */\n      mstore\n        /* \"#utility.yul\":10495:10499   */\n      0x20\n        /* \"#utility.yul\":10490:10493   */\n      dup3\n        /* \"#utility.yul\":10486:10500   */\n      add\n        /* \"#utility.yul\":10471:10500   */\n      swap1\n      pop\n        /* \"#utility.yul\":10337:10506   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10512:10660   */\n    tag_326:\n        /* \"#utility.yul\":10614:10625   */\n      0x00\n        /* \"#utility.yul\":10651:10654   */\n      dup2\n        /* \"#utility.yul\":10636:10654   */\n      swap1\n      pop\n        /* \"#utility.yul\":10512:10660   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10666:10762   */\n    tag_299:\n        /* \"#utility.yul\":10703:10710   */\n      0x00\n        /* \"#utility.yul\":10732:10756   */\n      tag_365\n        /* \"#utility.yul\":10750:10755   */\n      dup3\n        /* \"#utility.yul\":10732:10756   */\n      tag_366\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":10721:10756   */\n      swap1\n      pop\n        /* \"#utility.yul\":10666:10762   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10768:10858   */\n    tag_303:\n        /* \"#utility.yul\":10802:10809   */\n      0x00\n        /* \"#utility.yul\":10845:10850   */\n      dup2\n        /* \"#utility.yul\":10838:10851   */\n      iszero\n        /* \"#utility.yul\":10831:10852   */\n      iszero\n        /* \"#utility.yul\":10820:10852   */\n      swap1\n      pop\n        /* \"#utility.yul\":10768:10858   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10864:11013   */\n    tag_368:\n        /* \"#utility.yul\":10900:10907   */\n      0x00\n        /* \"#utility.yul\":10940:11006   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10933:10938   */\n      dup3\n        /* \"#utility.yul\":10929:11007   */\n      and\n        /* \"#utility.yul\":10918:11007   */\n      swap1\n      pop\n        /* \"#utility.yul\":10864:11013   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11019:11145   */\n    tag_366:\n        /* \"#utility.yul\":11056:11063   */\n      0x00\n        /* \"#utility.yul\":11096:11138   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11089:11094   */\n      dup3\n        /* \"#utility.yul\":11085:11139   */\n      and\n        /* \"#utility.yul\":11074:11139   */\n      swap1\n      pop\n        /* \"#utility.yul\":11019:11145   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11151:11228   */\n    tag_331:\n        /* \"#utility.yul\":11188:11195   */\n      0x00\n        /* \"#utility.yul\":11217:11222   */\n      dup2\n        /* \"#utility.yul\":11206:11222   */\n      swap1\n      pop\n        /* \"#utility.yul\":11151:11228   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11234:11388   */\n    tag_222:\n        /* \"#utility.yul\":11318:11324   */\n      dup3\n        /* \"#utility.yul\":11313:11316   */\n      dup2\n        /* \"#utility.yul\":11308:11311   */\n      dup4\n        /* \"#utility.yul\":11295:11325   */\n      calldatacopy\n        /* \"#utility.yul\":11380:11381   */\n      0x00\n        /* \"#utility.yul\":11371:11377   */\n      dup4\n        /* \"#utility.yul\":11366:11369   */\n      dup4\n        /* \"#utility.yul\":11362:11378   */\n      add\n        /* \"#utility.yul\":11355:11382   */\n      mstore\n        /* \"#utility.yul\":11234:11388   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11394:11701   */\n    tag_311:\n        /* \"#utility.yul\":11462:11463   */\n      0x00\n        /* \"#utility.yul\":11472:11585   */\n    tag_374:\n        /* \"#utility.yul\":11486:11492   */\n      dup4\n        /* \"#utility.yul\":11483:11484   */\n      dup2\n        /* \"#utility.yul\":11480:11493   */\n      lt\n        /* \"#utility.yul\":11472:11585   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":11571:11572   */\n      dup1\n        /* \"#utility.yul\":11566:11569   */\n      dup3\n        /* \"#utility.yul\":11562:11573   */\n      add\n        /* \"#utility.yul\":11556:11574   */\n      mload\n        /* \"#utility.yul\":11552:11553   */\n      dup2\n        /* \"#utility.yul\":11547:11550   */\n      dup5\n        /* \"#utility.yul\":11543:11554   */\n      add\n        /* \"#utility.yul\":11536:11575   */\n      mstore\n        /* \"#utility.yul\":11508:11510   */\n      0x20\n        /* \"#utility.yul\":11505:11506   */\n      dup2\n        /* \"#utility.yul\":11501:11511   */\n      add\n        /* \"#utility.yul\":11496:11511   */\n      swap1\n      pop\n        /* \"#utility.yul\":11472:11585   */\n      jump(tag_374)\n    tag_376:\n        /* \"#utility.yul\":11603:11609   */\n      dup4\n        /* \"#utility.yul\":11600:11601   */\n      dup2\n        /* \"#utility.yul\":11597:11610   */\n      gt\n        /* \"#utility.yul\":11594:11695   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":11683:11684   */\n      0x00\n        /* \"#utility.yul\":11674:11680   */\n      dup5\n        /* \"#utility.yul\":11669:11672   */\n      dup5\n        /* \"#utility.yul\":11665:11681   */\n      add\n        /* \"#utility.yul\":11658:11685   */\n      mstore\n        /* \"#utility.yul\":11594:11695   */\n    tag_377:\n        /* \"#utility.yul\":11443:11701   */\n      pop\n        /* \"#utility.yul\":11394:11701   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11707:12027   */\n    tag_85:\n        /* \"#utility.yul\":11751:11757   */\n      0x00\n        /* \"#utility.yul\":11788:11789   */\n      0x02\n        /* \"#utility.yul\":11782:11786   */\n      dup3\n        /* \"#utility.yul\":11778:11790   */\n      div\n        /* \"#utility.yul\":11768:11790   */\n      swap1\n      pop\n        /* \"#utility.yul\":11835:11836   */\n      0x01\n        /* \"#utility.yul\":11829:11833   */\n      dup3\n        /* \"#utility.yul\":11825:11837   */\n      and\n        /* \"#utility.yul\":11856:11874   */\n      dup1\n        /* \"#utility.yul\":11846:11927   */\n      tag_379\n      jumpi\n        /* \"#utility.yul\":11912:11916   */\n      0x7f\n        /* \"#utility.yul\":11904:11910   */\n      dup3\n        /* \"#utility.yul\":11900:11917   */\n      and\n        /* \"#utility.yul\":11890:11917   */\n      swap2\n      pop\n        /* \"#utility.yul\":11846:11927   */\n    tag_379:\n        /* \"#utility.yul\":11974:11976   */\n      0x20\n        /* \"#utility.yul\":11966:11972   */\n      dup3\n        /* \"#utility.yul\":11963:11977   */\n      lt\n        /* \"#utility.yul\":11943:11961   */\n      dup2\n        /* \"#utility.yul\":11940:11978   */\n      eq\n        /* \"#utility.yul\":11937:12021   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":11993:12011   */\n      tag_381\n      tag_382\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":11937:12021   */\n    tag_380:\n        /* \"#utility.yul\":11758:12027   */\n      pop\n        /* \"#utility.yul\":11707:12027   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12033:12314   */\n    tag_352:\n        /* \"#utility.yul\":12116:12143   */\n      tag_384\n        /* \"#utility.yul\":12138:12142   */\n      dup3\n        /* \"#utility.yul\":12116:12143   */\n      tag_313\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":12108:12114   */\n      dup2\n        /* \"#utility.yul\":12104:12144   */\n      add\n        /* \"#utility.yul\":12246:12252   */\n      dup2\n        /* \"#utility.yul\":12234:12244   */\n      dup2\n        /* \"#utility.yul\":12231:12253   */\n      lt\n        /* \"#utility.yul\":12210:12228   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12198:12208   */\n      dup3\n        /* \"#utility.yul\":12195:12229   */\n      gt\n        /* \"#utility.yul\":12192:12254   */\n      or\n        /* \"#utility.yul\":12189:12277   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":12257:12275   */\n      tag_386\n      tag_357\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":12189:12277   */\n    tag_385:\n        /* \"#utility.yul\":12297:12307   */\n      dup1\n        /* \"#utility.yul\":12293:12295   */\n      0x40\n        /* \"#utility.yul\":12286:12308   */\n      mstore\n        /* \"#utility.yul\":12076:12314   */\n      pop\n        /* \"#utility.yul\":12033:12314   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12320:12500   */\n    tag_382:\n        /* \"#utility.yul\":12368:12445   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12365:12366   */\n      0x00\n        /* \"#utility.yul\":12358:12446   */\n      mstore\n        /* \"#utility.yul\":12465:12469   */\n      0x22\n        /* \"#utility.yul\":12462:12463   */\n      0x04\n        /* \"#utility.yul\":12455:12470   */\n      mstore\n        /* \"#utility.yul\":12489:12493   */\n      0x24\n        /* \"#utility.yul\":12486:12487   */\n      0x00\n        /* \"#utility.yul\":12479:12494   */\n      revert\n        /* \"#utility.yul\":12506:12686   */\n    tag_357:\n        /* \"#utility.yul\":12554:12631   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12551:12552   */\n      0x00\n        /* \"#utility.yul\":12544:12632   */\n      mstore\n        /* \"#utility.yul\":12651:12655   */\n      0x41\n        /* \"#utility.yul\":12648:12649   */\n      0x04\n        /* \"#utility.yul\":12641:12656   */\n      mstore\n        /* \"#utility.yul\":12675:12679   */\n      0x24\n        /* \"#utility.yul\":12672:12673   */\n      0x00\n        /* \"#utility.yul\":12665:12680   */\n      revert\n        /* \"#utility.yul\":12692:12809   */\n    tag_242:\n        /* \"#utility.yul\":12801:12802   */\n      0x00\n        /* \"#utility.yul\":12798:12799   */\n      dup1\n        /* \"#utility.yul\":12791:12803   */\n      revert\n        /* \"#utility.yul\":12815:12932   */\n    tag_220:\n        /* \"#utility.yul\":12924:12925   */\n      0x00\n        /* \"#utility.yul\":12921:12922   */\n      dup1\n        /* \"#utility.yul\":12914:12926   */\n      revert\n        /* \"#utility.yul\":12938:13055   */\n    tag_272:\n        /* \"#utility.yul\":13047:13048   */\n      0x00\n        /* \"#utility.yul\":13044:13045   */\n      dup1\n        /* \"#utility.yul\":13037:13049   */\n      revert\n        /* \"#utility.yul\":13061:13178   */\n    tag_251:\n        /* \"#utility.yul\":13170:13171   */\n      0x00\n        /* \"#utility.yul\":13167:13168   */\n      dup1\n        /* \"#utility.yul\":13160:13172   */\n      revert\n        /* \"#utility.yul\":13184:13286   */\n    tag_313:\n        /* \"#utility.yul\":13225:13231   */\n      0x00\n        /* \"#utility.yul\":13276:13278   */\n      0x1f\n        /* \"#utility.yul\":13272:13279   */\n      not\n        /* \"#utility.yul\":13267:13269   */\n      0x1f\n        /* \"#utility.yul\":13260:13265   */\n      dup4\n        /* \"#utility.yul\":13256:13270   */\n      add\n        /* \"#utility.yul\":13252:13280   */\n      and\n        /* \"#utility.yul\":13242:13280   */\n      swap1\n      pop\n        /* \"#utility.yul\":13184:13286   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13292:13414   */\n    tag_226:\n        /* \"#utility.yul\":13365:13389   */\n      tag_395\n        /* \"#utility.yul\":13383:13388   */\n      dup2\n        /* \"#utility.yul\":13365:13389   */\n      tag_299\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":13358:13363   */\n      dup2\n        /* \"#utility.yul\":13355:13390   */\n      eq\n        /* \"#utility.yul\":13345:13408   */\n      tag_396\n      jumpi\n        /* \"#utility.yul\":13404:13405   */\n      0x00\n        /* \"#utility.yul\":13401:13402   */\n      dup1\n        /* \"#utility.yul\":13394:13406   */\n      revert\n        /* \"#utility.yul\":13345:13408   */\n    tag_396:\n        /* \"#utility.yul\":13292:13414   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13420:13536   */\n    tag_230:\n        /* \"#utility.yul\":13490:13511   */\n      tag_398\n        /* \"#utility.yul\":13505:13510   */\n      dup2\n        /* \"#utility.yul\":13490:13511   */\n      tag_303\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":13483:13488   */\n      dup2\n        /* \"#utility.yul\":13480:13512   */\n      eq\n        /* \"#utility.yul\":13470:13530   */\n      tag_399\n      jumpi\n        /* \"#utility.yul\":13526:13527   */\n      0x00\n        /* \"#utility.yul\":13523:13524   */\n      dup1\n        /* \"#utility.yul\":13516:13528   */\n      revert\n        /* \"#utility.yul\":13470:13530   */\n    tag_399:\n        /* \"#utility.yul\":13420:13536   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13542:13662   */\n    tag_234:\n        /* \"#utility.yul\":13614:13637   */\n      tag_401\n        /* \"#utility.yul\":13631:13636   */\n      dup2\n        /* \"#utility.yul\":13614:13637   */\n      tag_368\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":13607:13612   */\n      dup2\n        /* \"#utility.yul\":13604:13638   */\n      eq\n        /* \"#utility.yul\":13594:13656   */\n      tag_402\n      jumpi\n        /* \"#utility.yul\":13652:13653   */\n      0x00\n        /* \"#utility.yul\":13649:13650   */\n      dup1\n        /* \"#utility.yul\":13642:13654   */\n      revert\n        /* \"#utility.yul\":13594:13656   */\n    tag_402:\n        /* \"#utility.yul\":13542:13662   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13668:13790   */\n    tag_247:\n        /* \"#utility.yul\":13741:13765   */\n      tag_404\n        /* \"#utility.yul\":13759:13764   */\n      dup2\n        /* \"#utility.yul\":13741:13765   */\n      tag_331\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":13734:13739   */\n      dup2\n        /* \"#utility.yul\":13731:13766   */\n      eq\n        /* \"#utility.yul\":13721:13784   */\n      tag_405\n      jumpi\n        /* \"#utility.yul\":13780:13781   */\n      0x00\n        /* \"#utility.yul\":13777:13778   */\n      dup1\n        /* \"#utility.yul\":13770:13782   */\n      revert\n        /* \"#utility.yul\":13721:13784   */\n    tag_405:\n        /* \"#utility.yul\":13668:13790   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fabda550b99ab51f63831c281022828f87a2678b59c0c740c68ab0369e99542e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_156": {
									"entryPoint": null,
									"id": 156,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_165": {
									"entryPoint": 135,
									"id": 165,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 316,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 606,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 670,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 832,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 879,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 926,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 931,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 936,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 941,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4093:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "102:326:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "112:75:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "179:6:3"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "137:41:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "137:49:3"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "121:15:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:66:3"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "112:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "203:5:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "210:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "196:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "196:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "196:21:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "226:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "241:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "248:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:16:3"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "230:3:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "293:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "272:3:3"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "277:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "268:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "268:16:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "286:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "265:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "265:25:3"
															},
															"nodeType": "YulIf",
															"src": "262:112:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "405:3:3"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "410:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "415:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "383:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "383:39:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "383:39:3"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "75:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "88:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "96:5:3",
														"type": ""
													}
												],
												"src": "7:421:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "521:282:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "570:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "572:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "572:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "572:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "549:6:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "557:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "545:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "545:17:3"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "564:3:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "541:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "541:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "534:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:35:3"
															},
															"nodeType": "YulIf",
															"src": "531:122:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "662:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "682:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "676:13:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "666:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "698:99:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "770:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "778:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "766:17:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "785:6:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "793:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "707:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "707:90:3"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "698:5:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "499:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "507:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "515:5:3",
														"type": ""
													}
												],
												"src": "448:355:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "923:739:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "969:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "971:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "971:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "971:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "944:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "953:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "940:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "940:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "965:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "936:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "936:32:3"
															},
															"nodeType": "YulIf",
															"src": "933:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1062:291:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1077:38:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1101:9:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1112:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1097:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1097:17:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1091:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1091:24:3"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1081:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1162:83:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1164:77:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1164:79:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1164:79:3"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1134:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1142:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1131:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1131:30:3"
																	},
																	"nodeType": "YulIf",
																	"src": "1128:117:3"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1259:84:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1315:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1326:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1311:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1311:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1335:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1269:41:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1269:74:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1259:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1363:292:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1378:39:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1402:9:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1413:2:3",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1398:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1398:18:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1392:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1392:25:3"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1382:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1464:83:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1466:77:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1466:79:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1466:79:3"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1436:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1444:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1433:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1433:30:3"
																	},
																	"nodeType": "YulIf",
																	"src": "1430:117:3"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1561:84:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1617:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1628:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1613:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1613:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1637:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1571:41:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1571:74:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1561:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "885:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "896:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "908:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "916:6:3",
														"type": ""
													}
												],
												"src": "809:853:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1709:88:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1719:30:3",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1729:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:20:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1719:6:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1778:6:3"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1786:4:3"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1758:19:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1758:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1758:33:3"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1693:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1702:6:3",
														"type": ""
													}
												],
												"src": "1668:129:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1843:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1853:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1869:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1863:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1863:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1836:6:3",
														"type": ""
													}
												],
												"src": "1803:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1951:241:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2056:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2058:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2058:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2058:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2028:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2025:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2025:30:3"
															},
															"nodeType": "YulIf",
															"src": "2022:56:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2088:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2118:6:3"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2096:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2096:29:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2088:4:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2162:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2174:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2180:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2170:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2170:15:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2162:4:3"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1946:4:3",
														"type": ""
													}
												],
												"src": "1884:308:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2247:258:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2257:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2266:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2261:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2326:63:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2351:3:3"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2356:1:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2347:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2347:11:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2370:3:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2375:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2366:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2366:11:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2360:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2360:18:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2340:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2340:39:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2340:39:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2287:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2290:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2284:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2284:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2298:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2300:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2309:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2312:2:3",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2305:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2305:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2300:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2280:3:3",
																"statements": []
															},
															"src": "2276:113:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2423:76:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2473:3:3"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2478:6:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2469:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2469:16:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2487:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2462:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2462:27:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2462:27:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2404:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2407:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2401:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2401:13:3"
															},
															"nodeType": "YulIf",
															"src": "2398:101:3"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2229:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2234:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2239:6:3",
														"type": ""
													}
												],
												"src": "2198:307:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2562:269:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2572:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2586:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2592:1:3",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2582:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2582:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2572:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2603:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2633:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2639:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2629:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2629:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2607:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2680:51:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2694:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2708:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2716:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2704:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2704:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2694:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2660:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2653:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2653:26:3"
															},
															"nodeType": "YulIf",
															"src": "2650:81:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2783:42:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "2797:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2797:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2797:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2747:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2770:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2778:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2767:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2744:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2744:38:3"
															},
															"nodeType": "YulIf",
															"src": "2741:84:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2546:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2555:6:3",
														"type": ""
													}
												],
												"src": "2511:320:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2880:238:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2890:58:3",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2912:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "2942:4:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2920:21:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2920:27:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2908:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2908:40:3"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2894:10:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3059:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3061:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3061:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3061:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3002:10:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3014:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:34:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3038:10:3"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3050:6:3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3035:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3035:22:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2996:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2996:62:3"
															},
															"nodeType": "YulIf",
															"src": "2993:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3097:2:3",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3101:10:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3090:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3090:22:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3090:22:3"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2866:6:3",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2874:4:3",
														"type": ""
													}
												],
												"src": "2837:281:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3152:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3169:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3172:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3162:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3162:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3162:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3266:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3269:4:3",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3259:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3259:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3259:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3290:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3293:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3283:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3283:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3283:15:3"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3124:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3338:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3358:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3348:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3348:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3348:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3452:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3455:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3445:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3445:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3445:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3476:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3479:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3469:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3469:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3469:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3310:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3585:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3602:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3605:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3595:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3595:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3595:12:3"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3496:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3708:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3725:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3728:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3718:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3718:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3718:12:3"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "3619:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3831:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3848:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3851:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3841:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3841:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3742:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3954:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3971:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3974:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3964:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3964:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3964:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3865:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4036:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4046:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4064:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4071:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4060:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4060:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4080:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4076:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4076:7:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4056:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4056:28:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4046:6:3"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4019:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4029:6:3",
														"type": ""
													}
												],
												"src": "3988:102:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001cf638038062001cf68339818101604052810190620000379190620001ba565b81600290805190602001906200004f9291906200008c565b508060039080519060200190620000689291906200008c565b50620000796200008760201b60201c565b6000819055505050620003c3565b600090565b8280546200009a90620002d4565b90600052602060002090601f016020900481019282620000be57600085556200010a565b82601f10620000d957805160ff19168380011785556200010a565b828001600101855582156200010a579182015b8281111562000109578251825591602001919060010190620000ec565b5b5090506200011991906200011d565b5090565b5b80821115620001385760008160009055506001016200011e565b5090565b6000620001536200014d8462000268565b6200023f565b905082815260208101848484011115620001725762000171620003a3565b5b6200017f8482856200029e565b509392505050565b600082601f8301126200019f576200019e6200039e565b5b8151620001b18482602086016200013c565b91505092915050565b60008060408385031215620001d457620001d3620003ad565b5b600083015167ffffffffffffffff811115620001f557620001f4620003a8565b5b620002038582860162000187565b925050602083015167ffffffffffffffff811115620002275762000226620003a8565b5b620002358582860162000187565b9150509250929050565b60006200024b6200025e565b90506200025982826200030a565b919050565b6000604051905090565b600067ffffffffffffffff8211156200028657620002856200036f565b5b6200029182620003b2565b9050602081019050919050565b60005b83811015620002be578082015181840152602081019050620002a1565b83811115620002ce576000848401525b50505050565b60006002820490506001821680620002ed57607f821691505b6020821081141562000304576200030362000340565b5b50919050565b6200031582620003b2565b810181811067ffffffffffffffff821117156200033757620003366200036f565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61192380620003d36000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb4651461025d578063b88d4fde14610279578063c87b56dd14610295578063e985e9c5146102c5576100ea565b80636352211e146101df57806370a082311461020f57806395d89b411461023f576100ea565b8063095ea7b3116100c8578063095ea7b31461016d57806318160ddd1461018957806323b872dd146101a757806342842e0e146101c3576100ea565b806301ffc9a7146100ef57806306fdde031461011f578063081812fc1461013d575b600080fd5b61010960048036038101906101049190611422565b6102f5565b6040516101169190611604565b60405180910390f35b610127610387565b604051610134919061161f565b60405180910390f35b6101576004803603810190610152919061147c565b610419565b604051610164919061159d565b60405180910390f35b610187600480360381019061018291906113e2565b610495565b005b6101916105d6565b60405161019e9190611641565b60405180910390f35b6101c160048036038101906101bc91906112cc565b6105ed565b005b6101dd60048036038101906101d891906112cc565b610912565b005b6101f960048036038101906101f4919061147c565b610932565b604051610206919061159d565b60405180910390f35b6102296004803603810190610224919061125f565b610944565b6040516102369190611641565b60405180910390f35b6102476109fd565b604051610254919061161f565b60405180910390f35b610277600480360381019061027291906113a2565b610a8f565b005b610293600480360381019061028e919061131f565b610c07565b005b6102af60048036038101906102aa919061147c565b610c7a565b6040516102bc919061161f565b60405180910390f35b6102df60048036038101906102da919061128c565b610d19565b6040516102ec9190611604565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061035057506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103805750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b606060028054610396906117ab565b80601f01602080910402602001604051908101604052809291908181526020018280546103c2906117ab565b801561040f5780601f106103e45761010080835404028352916020019161040f565b820191906000526020600020905b8154815290600101906020018083116103f257829003601f168201915b5050505050905090565b600061042482610dad565b61045a576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104a082610932565b90508073ffffffffffffffffffffffffffffffffffffffff166104c1610e0c565b73ffffffffffffffffffffffffffffffffffffffff1614610524576104ed816104e8610e0c565b610d19565b610523576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826006600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60006105e0610e14565b6001546000540303905090565b60006105f882610e19565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461065f576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008061066b84610ee7565b91509150610681818761067c610e0c565b610f09565b6106cd5761069686610691610e0c565b610d19565b6106cc576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610734576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107418686866001610f4d565b801561074c57600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001019190508190555061081a856107f6888887610f53565b7c020000000000000000000000000000000000000000000000000000000017610f7b565b600460008681526020019081526020016000208190555060007c0200000000000000000000000000000000000000000000000000000000841614156108a25760006001850190506000600460008381526020019081526020016000205414156108a057600054811461089f578360046000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a461090a8686866001610fa6565b505050505050565b61092d83838360405180602001604052806000815250610c07565b505050565b600061093d82610e19565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109ac576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b606060038054610a0c906117ab565b80601f0160208091040260200160405190810160405280929190818152602001828054610a38906117ab565b8015610a855780601f10610a5a57610100808354040283529160200191610a85565b820191906000526020600020905b815481529060010190602001808311610a6857829003601f168201915b5050505050905090565b610a97610e0c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610afc576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060076000610b09610e0c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610bb6610e0c565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610bfb9190611604565b60405180910390a35050565b610c128484846105ed565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610c7457610c3d84848484610fac565b610c73576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6060610c8582610dad565b610cbb576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610cc561110c565b9050600081511415610ce65760405180602001604052806000815250610d11565b80610cf084611123565b604051602001610d01929190611579565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081610db8610e14565b11158015610dc7575060005482105b8015610e05575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b600033905090565b600090565b60008082905080610e28610e14565b11610eb057600054811015610eaf5760006004600083815260200190815260200160002054905060007c010000000000000000000000000000000000000000000000000000000082161415610ead575b6000811415610ea3576004600083600190039350838152602001908152602001600020549050610e78565b8092505050610ee2565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000806000600690508360005280602052604060002092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e8610f6a86868461117d565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02610fd2610e0c565b8786866040518563ffffffff1660e01b8152600401610ff494939291906115b8565b602060405180830381600087803b15801561100e57600080fd5b505af192505050801561103f57506040513d601f19601f8201168201806040525081019061103c919061144f565b60015b6110b9573d806000811461106f576040519150601f19603f3d011682016040523d82523d6000602084013e611074565b606091505b506000815114156110b1576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b60606080604051019050806040528082600183039250600a81066030018353600a810490505b801561116957600183039250600a81066030018353600a81049050611149565b508181036020830392508083525050919050565b60009392505050565b600061119961119484611681565b61165c565b9050828152602081018484840111156111b5576111b4611871565b5b6111c0848285611769565b509392505050565b6000813590506111d781611891565b92915050565b6000813590506111ec816118a8565b92915050565b600081359050611201816118bf565b92915050565b600081519050611216816118bf565b92915050565b600082601f8301126112315761123061186c565b5b8135611241848260208601611186565b91505092915050565b600081359050611259816118d6565b92915050565b6000602082840312156112755761127461187b565b5b6000611283848285016111c8565b91505092915050565b600080604083850312156112a3576112a261187b565b5b60006112b1858286016111c8565b92505060206112c2858286016111c8565b9150509250929050565b6000806000606084860312156112e5576112e461187b565b5b60006112f3868287016111c8565b9350506020611304868287016111c8565b92505060406113158682870161124a565b9150509250925092565b600080600080608085870312156113395761133861187b565b5b6000611347878288016111c8565b9450506020611358878288016111c8565b93505060406113698782880161124a565b925050606085013567ffffffffffffffff81111561138a57611389611876565b5b6113968782880161121c565b91505092959194509250565b600080604083850312156113b9576113b861187b565b5b60006113c7858286016111c8565b92505060206113d8858286016111dd565b9150509250929050565b600080604083850312156113f9576113f861187b565b5b6000611407858286016111c8565b92505060206114188582860161124a565b9150509250929050565b6000602082840312156114385761143761187b565b5b6000611446848285016111f2565b91505092915050565b6000602082840312156114655761146461187b565b5b600061147384828501611207565b91505092915050565b6000602082840312156114925761149161187b565b5b60006114a08482850161124a565b91505092915050565b6114b2816116f5565b82525050565b6114c181611707565b82525050565b60006114d2826116b2565b6114dc81856116c8565b93506114ec818560208601611778565b6114f581611880565b840191505092915050565b600061150b826116bd565b61151581856116d9565b9350611525818560208601611778565b61152e81611880565b840191505092915050565b6000611544826116bd565b61154e81856116ea565b935061155e818560208601611778565b80840191505092915050565b6115738161175f565b82525050565b60006115858285611539565b91506115918284611539565b91508190509392505050565b60006020820190506115b260008301846114a9565b92915050565b60006080820190506115cd60008301876114a9565b6115da60208301866114a9565b6115e7604083018561156a565b81810360608301526115f981846114c7565b905095945050505050565b600060208201905061161960008301846114b8565b92915050565b600060208201905081810360008301526116398184611500565b905092915050565b6000602082019050611656600083018461156a565b92915050565b6000611666611677565b905061167282826117dd565b919050565b6000604051905090565b600067ffffffffffffffff82111561169c5761169b61183d565b5b6116a582611880565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006117008261173f565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561179657808201518184015260208101905061177b565b838111156117a5576000848401525b50505050565b600060028204905060018216806117c357607f821691505b602082108114156117d7576117d661180e565b5b50919050565b6117e682611880565b810181811067ffffffffffffffff821117156118055761180461183d565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61189a816116f5565b81146118a557600080fd5b50565b6118b181611707565b81146118bc57600080fd5b50565b6118c881611713565b81146118d357600080fd5b50565b6118df8161175f565b81146118ea57600080fd5b5056fea2646970667358221220fabda550b99ab51f63831c281022828f87a2678b59c0c740c68ab0369e99542e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1CF6 CODESIZE SUB DUP1 PUSH3 0x1CF6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1BA JUMP JUMPDEST DUP2 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x8C JUMP JUMPDEST POP DUP1 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x8C JUMP JUMPDEST POP PUSH3 0x79 PUSH3 0x87 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x3C3 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x9A SWAP1 PUSH3 0x2D4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xBE JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x10A JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xD9 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x10A JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x10A JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x109 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x119 SWAP2 SWAP1 PUSH3 0x11D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x138 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x11E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x153 PUSH3 0x14D DUP5 PUSH3 0x268 JUMP JUMPDEST PUSH3 0x23F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x172 JUMPI PUSH3 0x171 PUSH3 0x3A3 JUMP JUMPDEST JUMPDEST PUSH3 0x17F DUP5 DUP3 DUP6 PUSH3 0x29E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x19F JUMPI PUSH3 0x19E PUSH3 0x39E JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1B1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x13C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D4 JUMPI PUSH3 0x1D3 PUSH3 0x3AD JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1F5 JUMPI PUSH3 0x1F4 PUSH3 0x3A8 JUMP JUMPDEST JUMPDEST PUSH3 0x203 DUP6 DUP3 DUP7 ADD PUSH3 0x187 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x227 JUMPI PUSH3 0x226 PUSH3 0x3A8 JUMP JUMPDEST JUMPDEST PUSH3 0x235 DUP6 DUP3 DUP7 ADD PUSH3 0x187 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x24B PUSH3 0x25E JUMP JUMPDEST SWAP1 POP PUSH3 0x259 DUP3 DUP3 PUSH3 0x30A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x286 JUMPI PUSH3 0x285 PUSH3 0x36F JUMP JUMPDEST JUMPDEST PUSH3 0x291 DUP3 PUSH3 0x3B2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2BE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x2A1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x2CE JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2ED JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x304 JUMPI PUSH3 0x303 PUSH3 0x340 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x315 DUP3 PUSH3 0x3B2 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x337 JUMPI PUSH3 0x336 PUSH3 0x36F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1923 DUP1 PUSH3 0x3D3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2C5 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x23F JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1C3 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x1422 JUMP JUMPDEST PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1604 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x387 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x161F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x159D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x13E2 JUMP JUMPDEST PUSH2 0x495 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x191 PUSH2 0x5D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0x912 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST PUSH2 0x932 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x159D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x125F JUMP JUMPDEST PUSH2 0x944 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x161F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH2 0xA8F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x131F JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST PUSH2 0xC7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x161F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x128C JUMP JUMPDEST PUSH2 0xD19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x1604 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x350 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x380 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x396 SWAP1 PUSH2 0x17AB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3C2 SWAP1 PUSH2 0x17AB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x40F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3E4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x40F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x424 DUP3 PUSH2 0xDAD JUMP JUMPDEST PUSH2 0x45A JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A0 DUP3 PUSH2 0x932 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4C1 PUSH2 0xE0C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x524 JUMPI PUSH2 0x4ED DUP2 PUSH2 0x4E8 PUSH2 0xE0C JUMP JUMPDEST PUSH2 0xD19 JUMP JUMPDEST PUSH2 0x523 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E0 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F8 DUP3 PUSH2 0xE19 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x65F JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x66B DUP5 PUSH2 0xEE7 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x681 DUP2 DUP8 PUSH2 0x67C PUSH2 0xE0C JUMP JUMPDEST PUSH2 0xF09 JUMP JUMPDEST PUSH2 0x6CD JUMPI PUSH2 0x696 DUP7 PUSH2 0x691 PUSH2 0xE0C JUMP JUMPDEST PUSH2 0xD19 JUMP JUMPDEST PUSH2 0x6CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x734 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x741 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xF4D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x74C JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x81A DUP6 PUSH2 0x7F6 DUP9 DUP9 DUP8 PUSH2 0xF53 JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND EQ ISZERO PUSH2 0x8A2 JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x8A0 JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x89F JUMPI DUP4 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x90A DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xFA6 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x92D DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC07 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93D DUP3 PUSH2 0xE19 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0xA0C SWAP1 PUSH2 0x17AB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA38 SWAP1 PUSH2 0x17AB JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA85 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA5A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA85 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA68 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA97 PUSH2 0xE0C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAFC JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06307DB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0xB09 PUSH2 0xE0C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBB6 PUSH2 0xE0C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xBFB SWAP2 SWAP1 PUSH2 0x1604 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xC12 DUP5 DUP5 DUP5 PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0xC74 JUMPI PUSH2 0xC3D DUP5 DUP5 DUP5 DUP5 PUSH2 0xFAC JUMP JUMPDEST PUSH2 0xC73 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC85 DUP3 PUSH2 0xDAD JUMP JUMPDEST PUSH2 0xCBB JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCC5 PUSH2 0x110C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0xCE6 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD11 JUMP JUMPDEST DUP1 PUSH2 0xCF0 DUP5 PUSH2 0x1123 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD01 SWAP3 SWAP2 SWAP1 PUSH2 0x1579 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xDB8 PUSH2 0xE14 JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xDC7 JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0xE05 JUMPI POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP DUP1 PUSH2 0xE28 PUSH2 0xE14 JUMP JUMPDEST GT PUSH2 0xEB0 JUMPI PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0xEAF JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND EQ ISZERO PUSH2 0xEAD JUMPI JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xEA3 JUMPI PUSH1 0x4 PUSH1 0x0 DUP4 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0xE78 JUMP JUMPDEST DUP1 SWAP3 POP POP POP PUSH2 0xEE2 JUMP JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 SWAP1 POP DUP4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 POP DUP3 SLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 POP DUP4 DUP3 EQ DUP4 DUP4 EQ OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE8 DUP4 SWAP1 SHR SWAP1 POP PUSH1 0xE8 PUSH2 0xF6A DUP7 DUP7 DUP5 PUSH2 0x117D JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 SHL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP DUP2 TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xFD2 PUSH2 0xE0C JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x100E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x103F JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x103C SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x10B9 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x106F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1074 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x10B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x80 PUSH1 0x40 MLOAD ADD SWAP1 POP DUP1 PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP JUMPDEST DUP1 ISZERO PUSH2 0x1169 JUMPI PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP PUSH2 0x1149 JUMP JUMPDEST POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 SUB SWAP3 POP DUP1 DUP4 MSTORE POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1199 PUSH2 0x1194 DUP5 PUSH2 0x1681 JUMP JUMPDEST PUSH2 0x165C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x11B5 JUMPI PUSH2 0x11B4 PUSH2 0x1871 JUMP JUMPDEST JUMPDEST PUSH2 0x11C0 DUP5 DUP3 DUP6 PUSH2 0x1769 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11D7 DUP2 PUSH2 0x1891 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11EC DUP2 PUSH2 0x18A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1201 DUP2 PUSH2 0x18BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1216 DUP2 PUSH2 0x18BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1231 JUMPI PUSH2 0x1230 PUSH2 0x186C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1241 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1186 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1259 DUP2 PUSH2 0x18D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1275 JUMPI PUSH2 0x1274 PUSH2 0x187B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1283 DUP5 DUP3 DUP6 ADD PUSH2 0x11C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12A3 JUMPI PUSH2 0x12A2 PUSH2 0x187B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12B1 DUP6 DUP3 DUP7 ADD PUSH2 0x11C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12C2 DUP6 DUP3 DUP7 ADD PUSH2 0x11C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12E5 JUMPI PUSH2 0x12E4 PUSH2 0x187B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12F3 DUP7 DUP3 DUP8 ADD PUSH2 0x11C8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1304 DUP7 DUP3 DUP8 ADD PUSH2 0x11C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1315 DUP7 DUP3 DUP8 ADD PUSH2 0x124A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1339 JUMPI PUSH2 0x1338 PUSH2 0x187B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1347 DUP8 DUP3 DUP9 ADD PUSH2 0x11C8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1358 DUP8 DUP3 DUP9 ADD PUSH2 0x11C8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1369 DUP8 DUP3 DUP9 ADD PUSH2 0x124A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x138A JUMPI PUSH2 0x1389 PUSH2 0x1876 JUMP JUMPDEST JUMPDEST PUSH2 0x1396 DUP8 DUP3 DUP9 ADD PUSH2 0x121C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13B9 JUMPI PUSH2 0x13B8 PUSH2 0x187B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13C7 DUP6 DUP3 DUP7 ADD PUSH2 0x11C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13D8 DUP6 DUP3 DUP7 ADD PUSH2 0x11DD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13F9 JUMPI PUSH2 0x13F8 PUSH2 0x187B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1407 DUP6 DUP3 DUP7 ADD PUSH2 0x11C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1418 DUP6 DUP3 DUP7 ADD PUSH2 0x124A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1438 JUMPI PUSH2 0x1437 PUSH2 0x187B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1446 DUP5 DUP3 DUP6 ADD PUSH2 0x11F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1465 JUMPI PUSH2 0x1464 PUSH2 0x187B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1473 DUP5 DUP3 DUP6 ADD PUSH2 0x1207 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1492 JUMPI PUSH2 0x1491 PUSH2 0x187B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14A0 DUP5 DUP3 DUP6 ADD PUSH2 0x124A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14B2 DUP2 PUSH2 0x16F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x14C1 DUP2 PUSH2 0x1707 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D2 DUP3 PUSH2 0x16B2 JUMP JUMPDEST PUSH2 0x14DC DUP2 DUP6 PUSH2 0x16C8 JUMP JUMPDEST SWAP4 POP PUSH2 0x14EC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1778 JUMP JUMPDEST PUSH2 0x14F5 DUP2 PUSH2 0x1880 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x150B DUP3 PUSH2 0x16BD JUMP JUMPDEST PUSH2 0x1515 DUP2 DUP6 PUSH2 0x16D9 JUMP JUMPDEST SWAP4 POP PUSH2 0x1525 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1778 JUMP JUMPDEST PUSH2 0x152E DUP2 PUSH2 0x1880 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1544 DUP3 PUSH2 0x16BD JUMP JUMPDEST PUSH2 0x154E DUP2 DUP6 PUSH2 0x16EA JUMP JUMPDEST SWAP4 POP PUSH2 0x155E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1778 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1573 DUP2 PUSH2 0x175F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1585 DUP3 DUP6 PUSH2 0x1539 JUMP JUMPDEST SWAP2 POP PUSH2 0x1591 DUP3 DUP5 PUSH2 0x1539 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15B2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x15CD PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0x15DA PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0x15E7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x156A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x15F9 DUP2 DUP5 PUSH2 0x14C7 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1619 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1639 DUP2 DUP5 PUSH2 0x1500 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1656 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x156A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1666 PUSH2 0x1677 JUMP JUMPDEST SWAP1 POP PUSH2 0x1672 DUP3 DUP3 PUSH2 0x17DD JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x169C JUMPI PUSH2 0x169B PUSH2 0x183D JUMP JUMPDEST JUMPDEST PUSH2 0x16A5 DUP3 PUSH2 0x1880 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1700 DUP3 PUSH2 0x173F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1796 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x177B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x17A5 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x17C3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x17D7 JUMPI PUSH2 0x17D6 PUSH2 0x180E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17E6 DUP3 PUSH2 0x1880 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1805 JUMPI PUSH2 0x1804 PUSH2 0x183D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x189A DUP2 PUSH2 0x16F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x18A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x18B1 DUP2 PUSH2 0x1707 JUMP JUMPDEST DUP2 EQ PUSH2 0x18BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x18C8 DUP2 PUSH2 0x1713 JUMP JUMPDEST DUP2 EQ PUSH2 0x18D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x18DF DUP2 PUSH2 0x175F JUMP JUMPDEST DUP2 EQ PUSH2 0x18EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL 0xBD 0xA5 POP 0xB9 SWAP11 0xB5 0x1F PUSH4 0x831C2810 0x22 DUP3 DUP16 DUP8 LOG2 PUSH8 0x8B59C0C740C68AB0 CALLDATASIZE SWAP15 SWAP10 SLOAD 0x2E PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "885:34115:1:-:0;;;3986:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4060:5;4052;:13;;;;;;;;;;;;:::i;:::-;;4085:7;4075;:17;;;;;;;;;;;;:::i;:::-;;4118:15;:13;;;:15;;:::i;:::-;4102:13;:31;;;;3986:154;;885:34115;;4276:90;4332:7;4276:90;:::o;885:34115::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:3:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:112;;;293:79;;:::i;:::-;262:112;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;7:421;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:122;;572:79;;:::i;:::-;531:122;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;448:355;;;;:::o;809:853::-;908:6;916;965:2;953:9;944:7;940:23;936:32;933:119;;;971:79;;:::i;:::-;933:119;1112:1;1101:9;1097:17;1091:24;1142:18;1134:6;1131:30;1128:117;;;1164:79;;:::i;:::-;1128:117;1269:74;1335:7;1326:6;1315:9;1311:22;1269:74;:::i;:::-;1259:84;;1062:291;1413:2;1402:9;1398:18;1392:25;1444:18;1436:6;1433:30;1430:117;;;1466:79;;:::i;:::-;1430:117;1571:74;1637:7;1628:6;1617:9;1613:22;1571:74;:::i;:::-;1561:84;;1363:292;809:853;;;;;:::o;1668:129::-;1702:6;1729:20;;:::i;:::-;1719:30;;1758:33;1786:4;1778:6;1758:33;:::i;:::-;1668:129;;;:::o;1803:75::-;1836:6;1869:2;1863:9;1853:19;;1803:75;:::o;1884:308::-;1946:4;2036:18;2028:6;2025:30;2022:56;;;2058:18;;:::i;:::-;2022:56;2096:29;2118:6;2096:29;:::i;:::-;2088:37;;2180:4;2174;2170:15;2162:23;;1884:308;;;:::o;2198:307::-;2266:1;2276:113;2290:6;2287:1;2284:13;2276:113;;;2375:1;2370:3;2366:11;2360:18;2356:1;2351:3;2347:11;2340:39;2312:2;2309:1;2305:10;2300:15;;2276:113;;;2407:6;2404:1;2401:13;2398:101;;;2487:1;2478:6;2473:3;2469:16;2462:27;2398:101;2247:258;2198:307;;;:::o;2511:320::-;2555:6;2592:1;2586:4;2582:12;2572:22;;2639:1;2633:4;2629:12;2660:18;2650:81;;2716:4;2708:6;2704:17;2694:27;;2650:81;2778:2;2770:6;2767:14;2747:18;2744:38;2741:84;;;2797:18;;:::i;:::-;2741:84;2562:269;2511:320;;;:::o;2837:281::-;2920:27;2942:4;2920:27;:::i;:::-;2912:6;2908:40;3050:6;3038:10;3035:22;3014:18;3002:10;2999:34;2996:62;2993:88;;;3061:18;;:::i;:::-;2993:88;3101:10;3097:2;3090:22;2880:238;2837:281;;:::o;3124:180::-;3172:77;3169:1;3162:88;3269:4;3266:1;3259:15;3293:4;3290:1;3283:15;3310:180;3358:77;3355:1;3348:88;3455:4;3452:1;3445:15;3479:4;3476:1;3469:15;3496:117;3605:1;3602;3595:12;3619:117;3728:1;3725;3718:12;3742:117;3851:1;3848;3841:12;3865:117;3974:1;3971;3964:12;3988:102;4029:6;4080:2;4076:7;4071:2;4064:5;4060:14;4056:28;4046:38;;3988:102;;;:::o;885:34115:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_1643": {
									"entryPoint": 4006,
									"id": 1643,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_617": {
									"entryPoint": 4364,
									"id": 617,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1630": {
									"entryPoint": 3917,
									"id": 1630,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_1527": {
									"entryPoint": 4012,
									"id": 1527,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_828": {
									"entryPoint": 3501,
									"id": 828,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_1617": {
									"entryPoint": 4477,
									"id": 1617,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedAddress_1149": {
									"entryPoint": 3815,
									"id": 1149,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isOwnerOrApproved_1163": {
									"entryPoint": 3849,
									"id": 1163,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_msgSenderERC721A_1653": {
									"entryPoint": 3596,
									"id": 1653,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_1604": {
									"entryPoint": 3923,
									"id": 1604,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_packOwnershipData_525": {
									"entryPoint": 3963,
									"id": 525,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_405": {
									"entryPoint": 3609,
									"id": 405,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_startTokenId_165": {
									"entryPoint": 3604,
									"id": 165,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_toString_1663": {
									"entryPoint": 4387,
									"id": 1663,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@approve_671": {
									"entryPoint": 1173,
									"id": 671,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_260": {
									"entryPoint": 2372,
									"id": 260,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_693": {
									"entryPoint": 1049,
									"id": 693,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_745": {
									"entryPoint": 3353,
									"id": 745,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_555": {
									"entryPoint": 903,
									"id": 555,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_545": {
									"entryPoint": 2354,
									"id": 545,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_764": {
									"entryPoint": 2322,
									"id": 764,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_802": {
									"entryPoint": 3079,
									"id": 802,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_727": {
									"entryPoint": 2703,
									"id": 727,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_234": {
									"entryPoint": 757,
									"id": 234,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_565": {
									"entryPoint": 2557,
									"id": 565,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_608": {
									"entryPoint": 3194,
									"id": 608,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_190": {
									"entryPoint": 1494,
									"id": 190,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1308": {
									"entryPoint": 1517,
									"id": 1308,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 4486,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4552,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 4573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 4594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 4615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 4636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 4895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5090,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5154,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 5199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 5319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5497,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5560,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5751,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 5761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 5810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 5832,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 5993,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 6008,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6059,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6158,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6205,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6252,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6257,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6262,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6267,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 6289,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13793:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "90:327:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "100:74:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "166:6:3"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "125:40:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:48:3"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "109:15:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "109:65:3"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "100:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "190:5:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "197:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "183:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "183:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "183:21:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "213:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "228:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "224:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:16:3"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "217:3:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "278:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "280:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "280:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "280:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "259:3:3"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "264:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "255:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "255:16:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "273:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "252:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:25:3"
															},
															"nodeType": "YulIf",
															"src": "249:112:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "394:3:3"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "399:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "404:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "370:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "370:41:3"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "63:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "76:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "84:5:3",
														"type": ""
													}
												],
												"src": "7:410:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "485:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "507:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "494:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "485:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "523:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "453:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "461:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:3",
														"type": ""
													}
												],
												"src": "423:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "617:84:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "627:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "649:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "636:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "636:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "665:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "665:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "665:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "603:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:3",
														"type": ""
													}
												],
												"src": "568:133:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "758:86:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "768:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "790:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "777:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "777:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "768:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "832:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "806:25:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "806:32:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "806:32:3"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "736:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "744:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "752:5:3",
														"type": ""
													}
												],
												"src": "707:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "912:79:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "922:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "937:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "931:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "931:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "922:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "979:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "953:25:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "953:32:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "953:32:3"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "890:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "898:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "906:5:3",
														"type": ""
													}
												],
												"src": "850:141:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1071:277:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1120:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1122:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1122:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1122:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1099:6:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1107:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1095:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1095:17:3"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1114:3:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1091:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1091:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1084:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1084:35:3"
															},
															"nodeType": "YulIf",
															"src": "1081:122:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1212:34:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1239:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1226:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1226:20:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1216:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1255:87:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1315:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1323:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1311:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1311:17:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1330:6:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1338:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1264:46:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1264:78:3"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1255:5:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1049:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1057:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1065:5:3",
														"type": ""
													}
												],
												"src": "1010:338:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1406:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1416:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1438:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1425:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1425:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1416:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1481:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1454:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1454:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1454:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1384:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1392:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1400:5:3",
														"type": ""
													}
												],
												"src": "1354:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1565:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1611:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1613:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1613:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1613:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1586:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1595:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1582:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1582:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1607:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1578:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1578:32:3"
															},
															"nodeType": "YulIf",
															"src": "1575:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1704:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1719:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1733:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1723:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1748:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1783:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1794:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1779:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1779:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1803:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1758:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1758:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1748:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1535:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1546:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1558:6:3",
														"type": ""
													}
												],
												"src": "1499:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1917:391:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1963:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1965:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1965:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1938:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1947:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1934:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1934:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1959:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1930:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1930:32:3"
															},
															"nodeType": "YulIf",
															"src": "1927:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2056:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2071:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2085:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2075:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2100:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2135:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2146:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2131:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2131:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2155:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2110:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2110:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2100:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2183:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2198:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2212:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2202:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2228:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2263:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2274:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2259:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2259:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2283:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2238:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2238:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2228:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1879:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1890:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1902:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1910:6:3",
														"type": ""
													}
												],
												"src": "1834:474:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2414:519:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2460:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2462:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2462:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2462:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2435:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2444:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2431:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2431:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2456:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2427:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2427:32:3"
															},
															"nodeType": "YulIf",
															"src": "2424:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2553:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2568:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2582:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2572:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2597:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2632:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2643:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2628:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2628:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2652:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2607:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2607:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2597:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2680:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2695:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2709:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2699:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2725:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2760:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2771:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2756:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2756:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2780:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2735:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2735:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2725:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2808:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2823:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2837:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2827:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2853:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2888:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2899:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2884:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2884:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2908:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2863:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2863:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2853:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2368:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2379:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2391:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2399:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2407:6:3",
														"type": ""
													}
												],
												"src": "2314:619:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3065:817:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3112:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3114:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3114:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3114:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3086:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3095:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3082:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3082:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3107:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3078:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3078:33:3"
															},
															"nodeType": "YulIf",
															"src": "3075:120:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "3205:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3220:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3234:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3224:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3249:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3284:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3295:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3280:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3280:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3304:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3259:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3259:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3249:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3332:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3347:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3361:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3351:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3377:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3412:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3423:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3408:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3408:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3432:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3387:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3387:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3377:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3460:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3475:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3489:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3479:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3505:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3540:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3551:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3536:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3536:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3560:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3515:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3515:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3505:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3588:287:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3603:46:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3634:9:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3645:2:3",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3630:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3630:18:3"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3617:12:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3617:32:3"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3607:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3696:83:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3698:77:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3698:79:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3698:79:3"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3668:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3676:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3665:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3665:30:3"
																	},
																	"nodeType": "YulIf",
																	"src": "3662:117:3"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3793:72:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3837:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3848:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3833:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3833:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3857:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3803:29:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3803:62:3"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "3793:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3011:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3022:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3034:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3042:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3050:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3058:6:3",
														"type": ""
													}
												],
												"src": "2939:943:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3968:388:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4014:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4016:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4016:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4016:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3989:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3998:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3985:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3985:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4010:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3981:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:32:3"
															},
															"nodeType": "YulIf",
															"src": "3978:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "4107:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4122:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4136:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4126:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4151:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4186:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4197:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4182:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4182:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4206:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4161:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4161:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4151:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4234:115:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4249:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4263:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4253:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4279:60:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4311:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4322:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4307:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4307:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4331:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4289:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4289:50:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4279:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3930:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3941:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3953:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3961:6:3",
														"type": ""
													}
												],
												"src": "3888:468:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4445:391:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4491:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4493:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4493:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4493:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4466:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4475:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4462:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4462:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4487:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4458:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4458:32:3"
															},
															"nodeType": "YulIf",
															"src": "4455:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "4584:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4599:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4613:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4603:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4628:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4663:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4674:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4659:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4659:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4683:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4638:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4638:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4628:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4711:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4726:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4740:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4730:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4756:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4791:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4802:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4787:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4787:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4811:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4766:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4766:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4756:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4407:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4418:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4430:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4438:6:3",
														"type": ""
													}
												],
												"src": "4362:474:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4907:262:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4953:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4955:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4955:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4955:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4928:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4937:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4924:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4924:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4949:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4920:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4920:32:3"
															},
															"nodeType": "YulIf",
															"src": "4917:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "5046:116:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5061:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5075:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5065:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5090:62:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5124:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5135:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5120:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5120:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5144:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "5100:19:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5100:52:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5090:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4877:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4888:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4900:6:3",
														"type": ""
													}
												],
												"src": "4842:327:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5251:273:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5297:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5299:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5299:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5299:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5272:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5281:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5268:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5268:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5293:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5264:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5264:32:3"
															},
															"nodeType": "YulIf",
															"src": "5261:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "5390:127:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5405:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5419:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5409:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5434:73:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5479:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5490:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5475:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5475:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5499:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5444:30:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5444:63:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5434:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5221:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5232:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5244:6:3",
														"type": ""
													}
												],
												"src": "5175:349:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5596:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5642:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5644:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5644:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5644:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5617:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5626:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5613:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5613:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5638:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5609:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5609:32:3"
															},
															"nodeType": "YulIf",
															"src": "5606:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "5735:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5750:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5764:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5754:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5779:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5814:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5825:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5810:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5810:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5834:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5789:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5789:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5779:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5566:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5577:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5589:6:3",
														"type": ""
													}
												],
												"src": "5530:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5930:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5947:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5970:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5952:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5952:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5940:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5940:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5940:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5918:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5925:3:3",
														"type": ""
													}
												],
												"src": "5865:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6048:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6065:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6085:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6070:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6070:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6058:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6058:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6058:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6036:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6043:3:3",
														"type": ""
													}
												],
												"src": "5989:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6194:270:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6204:52:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6250:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6218:31:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6218:38:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6208:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6265:77:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6330:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6335:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6272:57:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6272:70:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6265:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6377:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6384:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6373:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6373:16:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6391:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6396:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6351:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6351:52:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6351:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6412:46:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6423:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6450:6:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "6428:21:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6428:29:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6419:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6419:39:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6412:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6175:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6182:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6190:3:3",
														"type": ""
													}
												],
												"src": "6104:360:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6562:272:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6572:53:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6619:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6586:32:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6586:39:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6576:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6634:78:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6700:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6705:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6641:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6641:71:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6634:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6747:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6754:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6743:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6743:16:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6761:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6766:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6721:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6721:52:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6721:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6782:46:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6793:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6820:6:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "6798:21:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6798:29:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6789:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6789:39:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6782:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6543:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6550:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6558:3:3",
														"type": ""
													}
												],
												"src": "6470:364:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6950:267:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6960:53:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7007:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6974:32:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6974:39:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6964:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7022:96:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7106:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7111:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7029:76:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7029:89:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7022:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7153:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7160:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7149:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7149:16:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7167:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7172:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7127:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7127:52:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7127:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7188:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7199:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7204:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7195:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7195:16:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7188:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6931:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6938:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6946:3:3",
														"type": ""
													}
												],
												"src": "6840:377:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7288:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7305:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7328:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7310:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7310:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7298:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7298:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7298:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7276:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7283:3:3",
														"type": ""
													}
												],
												"src": "7223:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7531:251:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7542:102:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7631:6:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7640:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7549:81:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7549:95:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7542:3:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7654:102:3",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7743:6:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7752:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7661:81:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7661:95:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7654:3:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7766:10:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7773:3:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7766:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7502:3:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7508:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7516:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7527:3:3",
														"type": ""
													}
												],
												"src": "7347:435:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7886:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7896:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7908:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7919:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7904:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7904:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7896:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7976:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7989:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8000:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7985:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7985:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7932:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7932:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7932:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7858:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7870:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7881:4:3",
														"type": ""
													}
												],
												"src": "7788:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8216:440:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8226:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8238:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8249:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8234:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8234:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8226:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8307:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8320:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8331:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8316:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8316:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8263:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8263:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8263:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8388:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8401:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8412:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8397:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8397:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8344:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8344:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8344:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8470:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8483:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8494:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8479:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8479:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8426:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8426:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8426:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8519:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8530:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8515:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8515:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8539:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8545:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8535:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8535:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8508:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8508:48:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8508:48:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8565:84:3",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8635:6:3"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8644:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8573:61:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8573:76:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8565:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8164:9:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8176:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8184:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8192:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8200:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8211:4:3",
														"type": ""
													}
												],
												"src": "8016:640:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8754:118:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8764:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8776:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8787:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8772:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8772:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8764:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8838:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8851:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8862:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8847:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8847:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8800:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8800:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8800:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8726:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8738:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8749:4:3",
														"type": ""
													}
												],
												"src": "8662:210:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8996:195:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9006:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9018:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9029:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9014:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9014:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9006:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9053:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9064:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9049:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9049:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9072:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9078:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9068:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9068:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9042:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9042:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9042:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9098:86:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9170:6:3"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9179:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9106:63:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9106:78:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9098:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8968:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8980:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8991:4:3",
														"type": ""
													}
												],
												"src": "8878:313:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9295:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9305:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9317:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9328:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9313:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9313:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9305:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9385:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9398:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9409:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9394:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9394:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9341:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9341:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9341:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9267:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9279:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9290:4:3",
														"type": ""
													}
												],
												"src": "9197:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9466:88:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9476:30:3",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "9486:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9486:20:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "9476:6:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "9535:6:3"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "9543:4:3"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "9515:19:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9515:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9515:33:3"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9450:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9459:6:3",
														"type": ""
													}
												],
												"src": "9425:129:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9600:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9610:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9626:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9620:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9620:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "9610:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9593:6:3",
														"type": ""
													}
												],
												"src": "9560:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9707:241:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9812:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "9814:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9814:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9814:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9784:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9792:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9781:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9781:30:3"
															},
															"nodeType": "YulIf",
															"src": "9778:56:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9844:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9874:6:3"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "9852:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9852:29:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9844:4:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9918:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "9930:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9936:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9926:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9926:15:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9918:4:3"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9691:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9702:4:3",
														"type": ""
													}
												],
												"src": "9641:307:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10012:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10023:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10039:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10033:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10033:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10023:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9995:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10005:6:3",
														"type": ""
													}
												],
												"src": "9954:98:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10117:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10128:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10144:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10138:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10138:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10128:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10100:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10110:6:3",
														"type": ""
													}
												],
												"src": "10058:99:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10258:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10275:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10280:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10268:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10268:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10268:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10296:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10315:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10320:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10311:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10311:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10296:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10230:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10235:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10246:11:3",
														"type": ""
													}
												],
												"src": "10163:168:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10433:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10450:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10455:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10443:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10443:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10443:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10471:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10490:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10495:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10486:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10486:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10471:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10405:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10410:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10421:11:3",
														"type": ""
													}
												],
												"src": "10337:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10626:34:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10636:18:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10651:3:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10636:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10598:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10603:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10614:11:3",
														"type": ""
													}
												],
												"src": "10512:148:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10711:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10721:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10750:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10732:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10732:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10721:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10693:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10703:7:3",
														"type": ""
													}
												],
												"src": "10666:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10810:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10820:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10845:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10838:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10838:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10831:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10831:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10820:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10792:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10802:7:3",
														"type": ""
													}
												],
												"src": "10768:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10908:105:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10918:89:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10933:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10940:66:3",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10929:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10929:78:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10918:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10890:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10900:7:3",
														"type": ""
													}
												],
												"src": "10864:149:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11064:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11074:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11089:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11096:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11085:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11085:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11074:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11046:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11056:7:3",
														"type": ""
													}
												],
												"src": "11019:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11196:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11206:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11217:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11206:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11178:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11188:7:3",
														"type": ""
													}
												],
												"src": "11151:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11285:103:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "11308:3:3"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "11313:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11318:6:3"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "11295:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11295:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11295:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "11366:3:3"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11371:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11362:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11362:16:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11380:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11355:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11355:27:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11355:27:3"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "11267:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "11272:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11277:6:3",
														"type": ""
													}
												],
												"src": "11234:154:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11443:258:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11453:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11462:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "11457:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11522:63:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11547:3:3"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "11552:1:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11543:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11543:11:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "11566:3:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "11571:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "11562:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11562:11:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "11556:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11556:18:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11536:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11536:39:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11536:39:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11483:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11486:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11480:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11480:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11494:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11496:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "11505:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11508:2:3",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11501:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11501:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "11496:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11476:3:3",
																"statements": []
															},
															"src": "11472:113:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11619:76:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11669:3:3"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "11674:6:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11665:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11665:16:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11683:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11658:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11658:27:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11658:27:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11600:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11603:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11597:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11597:13:3"
															},
															"nodeType": "YulIf",
															"src": "11594:101:3"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "11425:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "11430:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11435:6:3",
														"type": ""
													}
												],
												"src": "11394:307:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11758:269:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11768:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11782:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11788:1:3",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11778:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11778:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11768:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11799:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11829:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11835:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11825:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11825:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "11803:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11876:51:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11890:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "11904:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11912:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "11900:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11900:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11890:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11856:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11849:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11849:26:3"
															},
															"nodeType": "YulIf",
															"src": "11846:81:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11979:42:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "11993:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11993:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11993:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11943:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11966:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11974:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "11963:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11963:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11940:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11940:38:3"
															},
															"nodeType": "YulIf",
															"src": "11937:84:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "11742:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11751:6:3",
														"type": ""
													}
												],
												"src": "11707:320:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12076:238:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12086:58:3",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "12108:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "12138:4:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "12116:21:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12116:27:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12104:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12104:40:3"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "12090:10:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12255:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "12257:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12257:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12257:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "12198:10:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12210:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12195:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12195:34:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "12234:10:3"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12246:6:3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "12231:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12231:22:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "12192:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12192:62:3"
															},
															"nodeType": "YulIf",
															"src": "12189:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12293:2:3",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "12297:10:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12286:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12286:22:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12286:22:3"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12062:6:3",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "12070:4:3",
														"type": ""
													}
												],
												"src": "12033:281:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12348:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12365:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12368:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12358:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12358:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12358:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12462:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12465:4:3",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12455:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12455:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12455:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12486:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12489:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12479:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12479:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12479:15:3"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "12320:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12534:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12551:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12554:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12544:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12544:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12544:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12648:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12651:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12641:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12641:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12641:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12672:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12675:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12665:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12665:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12665:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "12506:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12781:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12798:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12801:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12791:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12791:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12791:12:3"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "12692:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12904:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12921:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12924:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12914:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12914:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12914:12:3"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "12815:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13027:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13044:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13047:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13037:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13037:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13037:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "12938:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13150:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13167:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13170:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13160:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13160:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13160:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "13061:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13232:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13242:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13260:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13267:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13256:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13256:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13276:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "13272:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13272:7:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13252:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13252:28:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "13242:6:3"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13215:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "13225:6:3",
														"type": ""
													}
												],
												"src": "13184:102:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13335:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13392:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13401:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13404:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13394:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13394:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13394:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13358:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13383:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "13365:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13365:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13355:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13355:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13348:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13348:43:3"
															},
															"nodeType": "YulIf",
															"src": "13345:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13328:5:3",
														"type": ""
													}
												],
												"src": "13292:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13460:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13514:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13523:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13526:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13516:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13516:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13516:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13483:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13505:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "13490:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13490:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13480:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13480:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13473:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13473:40:3"
															},
															"nodeType": "YulIf",
															"src": "13470:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13453:5:3",
														"type": ""
													}
												],
												"src": "13420:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13584:78:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13640:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13649:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13652:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13642:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13642:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13642:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13607:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13631:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "13614:16:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13614:23:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13604:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13604:34:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13597:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13597:42:3"
															},
															"nodeType": "YulIf",
															"src": "13594:62:3"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13577:5:3",
														"type": ""
													}
												],
												"src": "13542:120:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13711:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13768:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13777:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13780:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13770:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13770:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13770:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13734:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13759:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "13741:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13741:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13731:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13731:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13724:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13724:43:3"
															},
															"nodeType": "YulIf",
															"src": "13721:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13704:5:3",
														"type": ""
													}
												],
												"src": "13668:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2C5 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x23F JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1C3 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x1422 JUMP JUMPDEST PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1604 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x387 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x161F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x159D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x13E2 JUMP JUMPDEST PUSH2 0x495 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x191 PUSH2 0x5D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0x912 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST PUSH2 0x932 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x159D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x125F JUMP JUMPDEST PUSH2 0x944 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x161F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH2 0xA8F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x131F JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST PUSH2 0xC7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x161F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x128C JUMP JUMPDEST PUSH2 0xD19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x1604 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x350 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x380 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x396 SWAP1 PUSH2 0x17AB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3C2 SWAP1 PUSH2 0x17AB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x40F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3E4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x40F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x424 DUP3 PUSH2 0xDAD JUMP JUMPDEST PUSH2 0x45A JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A0 DUP3 PUSH2 0x932 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4C1 PUSH2 0xE0C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x524 JUMPI PUSH2 0x4ED DUP2 PUSH2 0x4E8 PUSH2 0xE0C JUMP JUMPDEST PUSH2 0xD19 JUMP JUMPDEST PUSH2 0x523 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E0 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F8 DUP3 PUSH2 0xE19 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x65F JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x66B DUP5 PUSH2 0xEE7 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x681 DUP2 DUP8 PUSH2 0x67C PUSH2 0xE0C JUMP JUMPDEST PUSH2 0xF09 JUMP JUMPDEST PUSH2 0x6CD JUMPI PUSH2 0x696 DUP7 PUSH2 0x691 PUSH2 0xE0C JUMP JUMPDEST PUSH2 0xD19 JUMP JUMPDEST PUSH2 0x6CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x734 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x741 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xF4D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x74C JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x81A DUP6 PUSH2 0x7F6 DUP9 DUP9 DUP8 PUSH2 0xF53 JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND EQ ISZERO PUSH2 0x8A2 JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x8A0 JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x89F JUMPI DUP4 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x90A DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xFA6 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x92D DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC07 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93D DUP3 PUSH2 0xE19 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0xA0C SWAP1 PUSH2 0x17AB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA38 SWAP1 PUSH2 0x17AB JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA85 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA5A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA85 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA68 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA97 PUSH2 0xE0C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAFC JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06307DB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0xB09 PUSH2 0xE0C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBB6 PUSH2 0xE0C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xBFB SWAP2 SWAP1 PUSH2 0x1604 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xC12 DUP5 DUP5 DUP5 PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0xC74 JUMPI PUSH2 0xC3D DUP5 DUP5 DUP5 DUP5 PUSH2 0xFAC JUMP JUMPDEST PUSH2 0xC73 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC85 DUP3 PUSH2 0xDAD JUMP JUMPDEST PUSH2 0xCBB JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCC5 PUSH2 0x110C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0xCE6 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD11 JUMP JUMPDEST DUP1 PUSH2 0xCF0 DUP5 PUSH2 0x1123 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD01 SWAP3 SWAP2 SWAP1 PUSH2 0x1579 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xDB8 PUSH2 0xE14 JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xDC7 JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0xE05 JUMPI POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP DUP1 PUSH2 0xE28 PUSH2 0xE14 JUMP JUMPDEST GT PUSH2 0xEB0 JUMPI PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0xEAF JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND EQ ISZERO PUSH2 0xEAD JUMPI JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xEA3 JUMPI PUSH1 0x4 PUSH1 0x0 DUP4 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0xE78 JUMP JUMPDEST DUP1 SWAP3 POP POP POP PUSH2 0xEE2 JUMP JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 SWAP1 POP DUP4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 POP DUP3 SLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 POP DUP4 DUP3 EQ DUP4 DUP4 EQ OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE8 DUP4 SWAP1 SHR SWAP1 POP PUSH1 0xE8 PUSH2 0xF6A DUP7 DUP7 DUP5 PUSH2 0x117D JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 SHL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP DUP2 TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xFD2 PUSH2 0xE0C JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x100E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x103F JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x103C SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x10B9 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x106F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1074 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x10B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x80 PUSH1 0x40 MLOAD ADD SWAP1 POP DUP1 PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP JUMPDEST DUP1 ISZERO PUSH2 0x1169 JUMPI PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP PUSH2 0x1149 JUMP JUMPDEST POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 SUB SWAP3 POP DUP1 DUP4 MSTORE POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1199 PUSH2 0x1194 DUP5 PUSH2 0x1681 JUMP JUMPDEST PUSH2 0x165C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x11B5 JUMPI PUSH2 0x11B4 PUSH2 0x1871 JUMP JUMPDEST JUMPDEST PUSH2 0x11C0 DUP5 DUP3 DUP6 PUSH2 0x1769 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11D7 DUP2 PUSH2 0x1891 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11EC DUP2 PUSH2 0x18A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1201 DUP2 PUSH2 0x18BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1216 DUP2 PUSH2 0x18BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1231 JUMPI PUSH2 0x1230 PUSH2 0x186C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1241 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1186 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1259 DUP2 PUSH2 0x18D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1275 JUMPI PUSH2 0x1274 PUSH2 0x187B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1283 DUP5 DUP3 DUP6 ADD PUSH2 0x11C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12A3 JUMPI PUSH2 0x12A2 PUSH2 0x187B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12B1 DUP6 DUP3 DUP7 ADD PUSH2 0x11C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12C2 DUP6 DUP3 DUP7 ADD PUSH2 0x11C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12E5 JUMPI PUSH2 0x12E4 PUSH2 0x187B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12F3 DUP7 DUP3 DUP8 ADD PUSH2 0x11C8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1304 DUP7 DUP3 DUP8 ADD PUSH2 0x11C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1315 DUP7 DUP3 DUP8 ADD PUSH2 0x124A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1339 JUMPI PUSH2 0x1338 PUSH2 0x187B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1347 DUP8 DUP3 DUP9 ADD PUSH2 0x11C8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1358 DUP8 DUP3 DUP9 ADD PUSH2 0x11C8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1369 DUP8 DUP3 DUP9 ADD PUSH2 0x124A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x138A JUMPI PUSH2 0x1389 PUSH2 0x1876 JUMP JUMPDEST JUMPDEST PUSH2 0x1396 DUP8 DUP3 DUP9 ADD PUSH2 0x121C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13B9 JUMPI PUSH2 0x13B8 PUSH2 0x187B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13C7 DUP6 DUP3 DUP7 ADD PUSH2 0x11C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13D8 DUP6 DUP3 DUP7 ADD PUSH2 0x11DD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13F9 JUMPI PUSH2 0x13F8 PUSH2 0x187B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1407 DUP6 DUP3 DUP7 ADD PUSH2 0x11C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1418 DUP6 DUP3 DUP7 ADD PUSH2 0x124A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1438 JUMPI PUSH2 0x1437 PUSH2 0x187B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1446 DUP5 DUP3 DUP6 ADD PUSH2 0x11F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1465 JUMPI PUSH2 0x1464 PUSH2 0x187B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1473 DUP5 DUP3 DUP6 ADD PUSH2 0x1207 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1492 JUMPI PUSH2 0x1491 PUSH2 0x187B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14A0 DUP5 DUP3 DUP6 ADD PUSH2 0x124A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14B2 DUP2 PUSH2 0x16F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x14C1 DUP2 PUSH2 0x1707 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D2 DUP3 PUSH2 0x16B2 JUMP JUMPDEST PUSH2 0x14DC DUP2 DUP6 PUSH2 0x16C8 JUMP JUMPDEST SWAP4 POP PUSH2 0x14EC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1778 JUMP JUMPDEST PUSH2 0x14F5 DUP2 PUSH2 0x1880 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x150B DUP3 PUSH2 0x16BD JUMP JUMPDEST PUSH2 0x1515 DUP2 DUP6 PUSH2 0x16D9 JUMP JUMPDEST SWAP4 POP PUSH2 0x1525 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1778 JUMP JUMPDEST PUSH2 0x152E DUP2 PUSH2 0x1880 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1544 DUP3 PUSH2 0x16BD JUMP JUMPDEST PUSH2 0x154E DUP2 DUP6 PUSH2 0x16EA JUMP JUMPDEST SWAP4 POP PUSH2 0x155E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1778 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1573 DUP2 PUSH2 0x175F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1585 DUP3 DUP6 PUSH2 0x1539 JUMP JUMPDEST SWAP2 POP PUSH2 0x1591 DUP3 DUP5 PUSH2 0x1539 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15B2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x15CD PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0x15DA PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0x15E7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x156A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x15F9 DUP2 DUP5 PUSH2 0x14C7 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1619 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1639 DUP2 DUP5 PUSH2 0x1500 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1656 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x156A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1666 PUSH2 0x1677 JUMP JUMPDEST SWAP1 POP PUSH2 0x1672 DUP3 DUP3 PUSH2 0x17DD JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x169C JUMPI PUSH2 0x169B PUSH2 0x183D JUMP JUMPDEST JUMPDEST PUSH2 0x16A5 DUP3 PUSH2 0x1880 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1700 DUP3 PUSH2 0x173F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1796 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x177B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x17A5 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x17C3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x17D7 JUMPI PUSH2 0x17D6 PUSH2 0x180E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17E6 DUP3 PUSH2 0x1880 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1805 JUMPI PUSH2 0x1804 PUSH2 0x183D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x189A DUP2 PUSH2 0x16F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x18A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x18B1 DUP2 PUSH2 0x1707 JUMP JUMPDEST DUP2 EQ PUSH2 0x18BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x18C8 DUP2 PUSH2 0x1713 JUMP JUMPDEST DUP2 EQ PUSH2 0x18D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x18DF DUP2 PUSH2 0x175F JUMP JUMPDEST DUP2 EQ PUSH2 0x18EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL 0xBD 0xA5 POP 0xB9 SWAP11 0xB5 0x1F PUSH4 0x831C2810 0x22 DUP3 DUP16 DUP8 LOG2 PUSH8 0x8B59C0C740C68AB0 CALLDATASIZE SWAP15 SWAP10 SLOAD 0x2E PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "885:34115:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5653:607;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11161:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13048:200;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12611:376;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4736:309;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22055:2739;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13912:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10957:142;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6319:221;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11323:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13315:303;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14157:388;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11491:313;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13684:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5653:607;5738:4;6048:10;6033:25;;:11;:25;;;;:101;;;;6124:10;6109:25;;:11;:25;;;;6033:101;:177;;;;6200:10;6185:25;;:11;:25;;;;6033:177;6014:196;;5653:607;;;:::o;11161:98::-;11215:13;11247:5;11240:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11161:98;:::o;13048:200::-;13116:7;13140:16;13148:7;13140;:16::i;:::-;13135:64;;13165:34;;;;;;;;;;;;;;13135:64;13217:15;:24;13233:7;13217:24;;;;;;;;;;;;;;;;;;;;;13210:31;;13048:200;;;:::o;12611:376::-;12683:13;12699:16;12707:7;12699;:16::i;:::-;12683:32;;12753:5;12730:28;;:19;:17;:19::i;:::-;:28;;;12726:172;;12777:44;12794:5;12801:19;:17;:19::i;:::-;12777:16;:44::i;:::-;12772:126;;12848:35;;;;;;;;;;;;;;12772:126;12726:172;12935:2;12908:15;:24;12924:7;12908:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12972:7;12968:2;12952:28;;12961:5;12952:28;;;;;;;;;;;;12673:314;12611:376;;:::o;4736:309::-;4789:7;5013:15;:13;:15::i;:::-;4998:12;;4982:13;;:28;:46;4975:53;;4736:309;:::o;22055:2739::-;22184:27;22214;22233:7;22214:18;:27::i;:::-;22184:57;;22297:4;22256:45;;22272:19;22256:45;;;22252:86;;22310:28;;;;;;;;;;;;;;22252:86;22350:27;22379:23;22406:28;22426:7;22406:19;:28::i;:::-;22349:85;;;;22531:62;22550:15;22567:4;22573:19;:17;:19::i;:::-;22531:18;:62::i;:::-;22526:173;;22612:43;22629:4;22635:19;:17;:19::i;:::-;22612:16;:43::i;:::-;22607:92;;22664:35;;;;;;;;;;;;;;22607:92;22526:173;22728:1;22714:16;;:2;:16;;;22710:52;;;22739:23;;;;;;;;;;;;;;22710:52;22773:43;22795:4;22801:2;22805:7;22814:1;22773:21;:43::i;:::-;22905:15;22902:157;;;23043:1;23022:19;23015:30;22902:157;23429:18;:24;23448:4;23429:24;;;;;;;;;;;;;;;;23427:26;;;;;;;;;;;;23497:18;:22;23516:2;23497:22;;;;;;;;;;;;;;;;23495:24;;;;;;;;;;;23812:142;23848:2;23895:45;23910:4;23916:2;23920:19;23895:14;:45::i;:::-;2046:8;23868:72;23812:18;:142::i;:::-;23783:17;:26;23801:7;23783:26;;;;;;;;;;;:171;;;;24121:1;2046:8;24071:19;:46;:51;24067:616;;;24142:19;24174:1;24164:7;:11;24142:33;;24329:1;24295:17;:30;24313:11;24295:30;;;;;;;;;;;;:35;24291:378;;;24431:13;;24416:11;:28;24412:239;;24609:19;24576:17;:30;24594:11;24576:30;;;;;;;;;;;:52;;;;24412:239;24291:378;24124:559;24067:616;24727:7;24723:2;24708:27;;24717:4;24708:27;;;;;;;;;;;;24745:42;24766:4;24772:2;24776:7;24785:1;24745:20;:42::i;:::-;22174:2620;;;22055:2739;;;:::o;13912:179::-;14045:39;14062:4;14068:2;14072:7;14045:39;;;;;;;;;;;;:16;:39::i;:::-;13912:179;;;:::o;10957:142::-;11021:7;11063:27;11082:7;11063:18;:27::i;:::-;11040:52;;10957:142;;;:::o;6319:221::-;6383:7;6423:1;6406:19;;:5;:19;;;6402:60;;;6434:28;;;;;;;;;;;;;;6402:60;1022:13;6479:18;:25;6498:5;6479:25;;;;;;;;;;;;;;;;:54;6472:61;;6319:221;;;:::o;11323:102::-;11379:13;11411:7;11404:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11323:102;:::o;13315:303::-;13425:19;:17;:19::i;:::-;13413:31;;:8;:31;;;13409:61;;;13453:17;;;;;;;;;;;;;;13409:61;13533:8;13481:18;:39;13500:19;:17;:19::i;:::-;13481:39;;;;;;;;;;;;;;;:49;13521:8;13481:49;;;;;;;;;;;;;;;;:60;;;;;;;;;;;;;;;;;;13592:8;13556:55;;13571:19;:17;:19::i;:::-;13556:55;;;13602:8;13556:55;;;;;;:::i;:::-;;;;;;;;13315:303;;:::o;14157:388::-;14318:31;14331:4;14337:2;14341:7;14318:12;:31::i;:::-;14381:1;14363:2;:14;;;:19;14359:180;;14401:56;14432:4;14438:2;14442:7;14451:5;14401:30;:56::i;:::-;14396:143;;14484:40;;;;;;;;;;;;;;14396:143;14359:180;14157:388;;;;:::o;11491:313::-;11564:13;11594:16;11602:7;11594;:16::i;:::-;11589:59;;11619:29;;;;;;;;;;;;;;11589:59;11659:21;11683:10;:8;:10::i;:::-;11659:34;;11735:1;11716:7;11710:21;:26;;:87;;;;;;;;;;;;;;;;;11763:7;11772:18;11782:7;11772:9;:18::i;:::-;11746:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11710:87;11703:94;;;11491:313;;;:::o;13684:162::-;13781:4;13804:18;:25;13823:5;13804:25;;;;;;;;;;;;;;;:35;13830:8;13804:35;;;;;;;;;;;;;;;;;;;;;;;;;13797:42;;13684:162;;;;:::o;14791:268::-;14848:4;14902:7;14883:15;:13;:15::i;:::-;:26;;:65;;;;;14935:13;;14925:7;:23;14883:65;:150;;;;;15032:1;1774:8;14985:17;:26;15003:7;14985:26;;;;;;;;;;;;:43;:48;14883:150;14864:169;;14791:268;;;:::o;32874:103::-;32934:7;32960:10;32953:17;;32874:103;:::o;4276:90::-;4332:7;4276:90;:::o;7949:1105::-;8016:7;8035:12;8050:7;8035:22;;8115:4;8096:15;:13;:15::i;:::-;:23;8092:898;;8148:13;;8141:4;:20;8137:853;;;8185:14;8202:17;:23;8220:4;8202:23;;;;;;;;;;;;8185:40;;8316:1;1774:8;8289:6;:23;:28;8285:687;;;8800:111;8817:1;8807:6;:11;8800:111;;;8859:17;:25;8877:6;;;;;;;8859:25;;;;;;;;;;;;8850:34;;8800:111;;;8943:6;8936:13;;;;;;8285:687;8163:827;8137:853;8092:898;9016:31;;;;;;;;;;;;;;7949:1105;;;;:::o;20436:637::-;20528:27;20557:23;20596:53;20652:15;20596:71;;20834:7;20828:4;20821:21;20868:22;20862:4;20855:36;20943:4;20937;20927:21;20904:44;;21037:19;21031:26;21012:45;;20774:293;20436:637;;;:::o;21181:632::-;21319:11;21478:15;21472:4;21468:26;21460:34;;21635:15;21624:9;21620:31;21607:44;;21780:15;21769:9;21766:30;21759:4;21748:9;21745:19;21742:55;21732:65;;21181:632;;;;;:::o;31742:154::-;;;;;:::o;30099:302::-;30230:7;30249:16;2166:3;30275:19;:40;;30249:67;;2166:3;30341:31;30352:4;30358:2;30362:9;30341:10;:31::i;:::-;30333:40;;:61;;30326:68;;;30099:302;;;;;:::o;10460:440::-;10540:14;10705:15;10698:5;10694:27;10685:36;;10877:5;10863:11;10839:22;10835:40;10832:51;10825:5;10822:62;10812:72;;10460:440;;;;:::o;32537:153::-;;;;;:::o;28649:697::-;28807:4;28852:2;28827:45;;;28873:19;:17;:19::i;:::-;28894:4;28900:7;28909:5;28827:88;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;28823:517;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29122:1;29105:6;:13;:18;29101:229;;;29150:40;;;;;;;;;;;;;;29101:229;29290:6;29284:13;29275:6;29271:2;29267:15;29260:38;28823:517;28993:54;;;28983:64;;;:6;:64;;;;28976:71;;;28649:697;;;;;;:::o;12049:92::-;12100:13;12125:9;;;;;;;;;;;;;;12049:92;:::o;33078:1920::-;33135:17;33548:3;33541:4;33535:11;33531:21;33524:28;;33637:3;33631:4;33624:17;33740:3;34188:5;34316:1;34311:3;34307:11;34300:18;;34451:2;34445:4;34441:13;34437:2;34433:22;34428:3;34420:36;34491:2;34485:4;34481:13;34473:21;;34082:682;34509:4;34082:682;;;34695:1;34690:3;34686:11;34679:18;;34745:2;34739:4;34735:13;34731:2;34727:22;34722:3;34714:36;34602:2;34596:4;34592:13;34584:21;;34082:682;;;34086:422;34801:3;34796;34792:13;34914:2;34909:3;34905:12;34898:19;;34975:6;34970:3;34963:19;33173:1819;;33078:1920;;;:::o;30961:143::-;31094:6;30961:143;;;;;:::o;7:410:3:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;568:133::-;611:5;649:6;636:20;627:29;;665:30;689:5;665:30;:::i;:::-;568:133;;;;:::o;707:137::-;752:5;790:6;777:20;768:29;;806:32;832:5;806:32;:::i;:::-;707:137;;;;:::o;850:141::-;906:5;937:6;931:13;922:22;;953:32;979:5;953:32;:::i;:::-;850:141;;;;:::o;1010:338::-;1065:5;1114:3;1107:4;1099:6;1095:17;1091:27;1081:122;;1122:79;;:::i;:::-;1081:122;1239:6;1226:20;1264:78;1338:3;1330:6;1323:4;1315:6;1311:17;1264:78;:::i;:::-;1255:87;;1071:277;1010:338;;;;:::o;1354:139::-;1400:5;1438:6;1425:20;1416:29;;1454:33;1481:5;1454:33;:::i;:::-;1354:139;;;;:::o;1499:329::-;1558:6;1607:2;1595:9;1586:7;1582:23;1578:32;1575:119;;;1613:79;;:::i;:::-;1575:119;1733:1;1758:53;1803:7;1794:6;1783:9;1779:22;1758:53;:::i;:::-;1748:63;;1704:117;1499:329;;;;:::o;1834:474::-;1902:6;1910;1959:2;1947:9;1938:7;1934:23;1930:32;1927:119;;;1965:79;;:::i;:::-;1927:119;2085:1;2110:53;2155:7;2146:6;2135:9;2131:22;2110:53;:::i;:::-;2100:63;;2056:117;2212:2;2238:53;2283:7;2274:6;2263:9;2259:22;2238:53;:::i;:::-;2228:63;;2183:118;1834:474;;;;;:::o;2314:619::-;2391:6;2399;2407;2456:2;2444:9;2435:7;2431:23;2427:32;2424:119;;;2462:79;;:::i;:::-;2424:119;2582:1;2607:53;2652:7;2643:6;2632:9;2628:22;2607:53;:::i;:::-;2597:63;;2553:117;2709:2;2735:53;2780:7;2771:6;2760:9;2756:22;2735:53;:::i;:::-;2725:63;;2680:118;2837:2;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2808:118;2314:619;;;;;:::o;2939:943::-;3034:6;3042;3050;3058;3107:3;3095:9;3086:7;3082:23;3078:33;3075:120;;;3114:79;;:::i;:::-;3075:120;3234:1;3259:53;3304:7;3295:6;3284:9;3280:22;3259:53;:::i;:::-;3249:63;;3205:117;3361:2;3387:53;3432:7;3423:6;3412:9;3408:22;3387:53;:::i;:::-;3377:63;;3332:118;3489:2;3515:53;3560:7;3551:6;3540:9;3536:22;3515:53;:::i;:::-;3505:63;;3460:118;3645:2;3634:9;3630:18;3617:32;3676:18;3668:6;3665:30;3662:117;;;3698:79;;:::i;:::-;3662:117;3803:62;3857:7;3848:6;3837:9;3833:22;3803:62;:::i;:::-;3793:72;;3588:287;2939:943;;;;;;;:::o;3888:468::-;3953:6;3961;4010:2;3998:9;3989:7;3985:23;3981:32;3978:119;;;4016:79;;:::i;:::-;3978:119;4136:1;4161:53;4206:7;4197:6;4186:9;4182:22;4161:53;:::i;:::-;4151:63;;4107:117;4263:2;4289:50;4331:7;4322:6;4311:9;4307:22;4289:50;:::i;:::-;4279:60;;4234:115;3888:468;;;;;:::o;4362:474::-;4430:6;4438;4487:2;4475:9;4466:7;4462:23;4458:32;4455:119;;;4493:79;;:::i;:::-;4455:119;4613:1;4638:53;4683:7;4674:6;4663:9;4659:22;4638:53;:::i;:::-;4628:63;;4584:117;4740:2;4766:53;4811:7;4802:6;4791:9;4787:22;4766:53;:::i;:::-;4756:63;;4711:118;4362:474;;;;;:::o;4842:327::-;4900:6;4949:2;4937:9;4928:7;4924:23;4920:32;4917:119;;;4955:79;;:::i;:::-;4917:119;5075:1;5100:52;5144:7;5135:6;5124:9;5120:22;5100:52;:::i;:::-;5090:62;;5046:116;4842:327;;;;:::o;5175:349::-;5244:6;5293:2;5281:9;5272:7;5268:23;5264:32;5261:119;;;5299:79;;:::i;:::-;5261:119;5419:1;5444:63;5499:7;5490:6;5479:9;5475:22;5444:63;:::i;:::-;5434:73;;5390:127;5175:349;;;;:::o;5530:329::-;5589:6;5638:2;5626:9;5617:7;5613:23;5609:32;5606:119;;;5644:79;;:::i;:::-;5606:119;5764:1;5789:53;5834:7;5825:6;5814:9;5810:22;5789:53;:::i;:::-;5779:63;;5735:117;5530:329;;;;:::o;5865:118::-;5952:24;5970:5;5952:24;:::i;:::-;5947:3;5940:37;5865:118;;:::o;5989:109::-;6070:21;6085:5;6070:21;:::i;:::-;6065:3;6058:34;5989:109;;:::o;6104:360::-;6190:3;6218:38;6250:5;6218:38;:::i;:::-;6272:70;6335:6;6330:3;6272:70;:::i;:::-;6265:77;;6351:52;6396:6;6391:3;6384:4;6377:5;6373:16;6351:52;:::i;:::-;6428:29;6450:6;6428:29;:::i;:::-;6423:3;6419:39;6412:46;;6194:270;6104:360;;;;:::o;6470:364::-;6558:3;6586:39;6619:5;6586:39;:::i;:::-;6641:71;6705:6;6700:3;6641:71;:::i;:::-;6634:78;;6721:52;6766:6;6761:3;6754:4;6747:5;6743:16;6721:52;:::i;:::-;6798:29;6820:6;6798:29;:::i;:::-;6793:3;6789:39;6782:46;;6562:272;6470:364;;;;:::o;6840:377::-;6946:3;6974:39;7007:5;6974:39;:::i;:::-;7029:89;7111:6;7106:3;7029:89;:::i;:::-;7022:96;;7127:52;7172:6;7167:3;7160:4;7153:5;7149:16;7127:52;:::i;:::-;7204:6;7199:3;7195:16;7188:23;;6950:267;6840:377;;;;:::o;7223:118::-;7310:24;7328:5;7310:24;:::i;:::-;7305:3;7298:37;7223:118;;:::o;7347:435::-;7527:3;7549:95;7640:3;7631:6;7549:95;:::i;:::-;7542:102;;7661:95;7752:3;7743:6;7661:95;:::i;:::-;7654:102;;7773:3;7766:10;;7347:435;;;;;:::o;7788:222::-;7881:4;7919:2;7908:9;7904:18;7896:26;;7932:71;8000:1;7989:9;7985:17;7976:6;7932:71;:::i;:::-;7788:222;;;;:::o;8016:640::-;8211:4;8249:3;8238:9;8234:19;8226:27;;8263:71;8331:1;8320:9;8316:17;8307:6;8263:71;:::i;:::-;8344:72;8412:2;8401:9;8397:18;8388:6;8344:72;:::i;:::-;8426;8494:2;8483:9;8479:18;8470:6;8426:72;:::i;:::-;8545:9;8539:4;8535:20;8530:2;8519:9;8515:18;8508:48;8573:76;8644:4;8635:6;8573:76;:::i;:::-;8565:84;;8016:640;;;;;;;:::o;8662:210::-;8749:4;8787:2;8776:9;8772:18;8764:26;;8800:65;8862:1;8851:9;8847:17;8838:6;8800:65;:::i;:::-;8662:210;;;;:::o;8878:313::-;8991:4;9029:2;9018:9;9014:18;9006:26;;9078:9;9072:4;9068:20;9064:1;9053:9;9049:17;9042:47;9106:78;9179:4;9170:6;9106:78;:::i;:::-;9098:86;;8878:313;;;;:::o;9197:222::-;9290:4;9328:2;9317:9;9313:18;9305:26;;9341:71;9409:1;9398:9;9394:17;9385:6;9341:71;:::i;:::-;9197:222;;;;:::o;9425:129::-;9459:6;9486:20;;:::i;:::-;9476:30;;9515:33;9543:4;9535:6;9515:33;:::i;:::-;9425:129;;;:::o;9560:75::-;9593:6;9626:2;9620:9;9610:19;;9560:75;:::o;9641:307::-;9702:4;9792:18;9784:6;9781:30;9778:56;;;9814:18;;:::i;:::-;9778:56;9852:29;9874:6;9852:29;:::i;:::-;9844:37;;9936:4;9930;9926:15;9918:23;;9641:307;;;:::o;9954:98::-;10005:6;10039:5;10033:12;10023:22;;9954:98;;;:::o;10058:99::-;10110:6;10144:5;10138:12;10128:22;;10058:99;;;:::o;10163:168::-;10246:11;10280:6;10275:3;10268:19;10320:4;10315:3;10311:14;10296:29;;10163:168;;;;:::o;10337:169::-;10421:11;10455:6;10450:3;10443:19;10495:4;10490:3;10486:14;10471:29;;10337:169;;;;:::o;10512:148::-;10614:11;10651:3;10636:18;;10512:148;;;;:::o;10666:96::-;10703:7;10732:24;10750:5;10732:24;:::i;:::-;10721:35;;10666:96;;;:::o;10768:90::-;10802:7;10845:5;10838:13;10831:21;10820:32;;10768:90;;;:::o;10864:149::-;10900:7;10940:66;10933:5;10929:78;10918:89;;10864:149;;;:::o;11019:126::-;11056:7;11096:42;11089:5;11085:54;11074:65;;11019:126;;;:::o;11151:77::-;11188:7;11217:5;11206:16;;11151:77;;;:::o;11234:154::-;11318:6;11313:3;11308;11295:30;11380:1;11371:6;11366:3;11362:16;11355:27;11234:154;;;:::o;11394:307::-;11462:1;11472:113;11486:6;11483:1;11480:13;11472:113;;;11571:1;11566:3;11562:11;11556:18;11552:1;11547:3;11543:11;11536:39;11508:2;11505:1;11501:10;11496:15;;11472:113;;;11603:6;11600:1;11597:13;11594:101;;;11683:1;11674:6;11669:3;11665:16;11658:27;11594:101;11443:258;11394:307;;;:::o;11707:320::-;11751:6;11788:1;11782:4;11778:12;11768:22;;11835:1;11829:4;11825:12;11856:18;11846:81;;11912:4;11904:6;11900:17;11890:27;;11846:81;11974:2;11966:6;11963:14;11943:18;11940:38;11937:84;;;11993:18;;:::i;:::-;11937:84;11758:269;11707:320;;;:::o;12033:281::-;12116:27;12138:4;12116:27;:::i;:::-;12108:6;12104:40;12246:6;12234:10;12231:22;12210:18;12198:10;12195:34;12192:62;12189:88;;;12257:18;;:::i;:::-;12189:88;12297:10;12293:2;12286:22;12076:238;12033:281;;:::o;12320:180::-;12368:77;12365:1;12358:88;12465:4;12462:1;12455:15;12489:4;12486:1;12479:15;12506:180;12554:77;12551:1;12544:88;12651:4;12648:1;12641:15;12675:4;12672:1;12665:15;12692:117;12801:1;12798;12791:12;12815:117;12924:1;12921;12914:12;12938:117;13047:1;13044;13037:12;13061:117;13170:1;13167;13160:12;13184:102;13225:6;13276:2;13272:7;13267:2;13260:5;13256:14;13252:28;13242:38;;13184:102;;;:::o;13292:122::-;13365:24;13383:5;13365:24;:::i;:::-;13358:5;13355:35;13345:63;;13404:1;13401;13394:12;13345:63;13292:122;:::o;13420:116::-;13490:21;13505:5;13490:21;:::i;:::-;13483:5;13480:32;13470:60;;13526:1;13523;13516:12;13470:60;13420:116;:::o;13542:120::-;13614:23;13631:5;13614:23;:::i;:::-;13607:5;13604:34;13594:62;;13652:1;13649;13642:12;13594:62;13542:120;:::o;13668:122::-;13741:24;13759:5;13741:24;:::i;:::-;13734:5;13731:35;13721:63;;13780:1;13777;13770:12;13721:63;13668:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1287000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2930",
								"getApproved(uint256)": "7375",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "745",
								"symbol()": "infinite",
								"tokenURI(uint256)": "5545",
								"totalSupply()": "4621",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "17",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "17",
								"_burn(uint256)": "infinite",
								"_burn(uint256,bool)": "infinite",
								"_checkContractOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "4416",
								"_extraData(address,address,uint24)": "24",
								"_getApprovedAddress(uint256)": "2221",
								"_getAux(address)": "infinite",
								"_initializeOwnershipAt(uint256)": "infinite",
								"_isOwnerOrApproved(address,address,address)": "78",
								"_mint(address,uint256)": "infinite",
								"_mintERC2309(address,uint256)": "infinite",
								"_msgSenderERC721A()": "22",
								"_nextExtraData(address,address,uint256)": "114",
								"_nextInitializedFlag(uint256)": "infinite",
								"_nextTokenId()": "infinite",
								"_numberBurned(address)": "infinite",
								"_numberMinted(address)": "infinite",
								"_ownershipAt(uint256)": "infinite",
								"_ownershipOf(uint256)": "infinite",
								"_packOwnershipData(address,uint256)": "61",
								"_packedOwnershipOf(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_setAux(address,uint64)": "infinite",
								"_setExtraDataAt(uint256,uint24)": "infinite",
								"_startTokenId()": "15",
								"_toString(uint256)": "infinite",
								"_totalBurned()": "infinite",
								"_totalMinted()": "infinite",
								"_unpackedOwnership(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4060,
									"end": 4065,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4057,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4085,
									"end": 4092,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4082,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4133,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 4118,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 4118,
									"end": 4131,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4118,
									"end": 4131,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4133,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4118,
									"end": 4133,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4133,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 4118,
									"end": 4133,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 4118,
									"end": 4133,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4102,
									"end": 4115,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4102,
									"end": 4133,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4102,
									"end": 4133,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4102,
									"end": 4133,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4102,
									"end": 4133,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4276,
									"end": 4366,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 4276,
									"end": 4366,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4332,
									"end": 4339,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4276,
									"end": 4366,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4276,
									"end": 4366,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 96,
									"end": 101,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 179,
									"end": 185,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 112,
									"end": 187,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 112,
									"end": 187,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 210,
									"end": 216,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 203,
									"end": 208,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 196,
									"end": 217,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 248,
									"end": 252,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 241,
									"end": 246,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 237,
									"end": 253,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 286,
									"end": 289,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 272,
									"end": 275,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 268,
									"end": 284,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 265,
									"end": 290,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 262,
									"end": 374,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 262,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 262,
									"end": 374,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 415,
									"end": 421,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 410,
									"end": 413,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 405,
									"end": 408,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 102,
									"end": 428,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 515,
									"end": 520,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 567,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 557,
									"end": 561,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 549,
									"end": 555,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 545,
									"end": 562,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 541,
									"end": 568,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 531,
									"end": 653,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "tag",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 531,
									"end": 653,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 682,
									"end": 688,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 676,
									"end": 689,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 793,
									"end": 796,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 785,
									"end": 791,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 778,
									"end": 782,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 770,
									"end": 776,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 766,
									"end": 783,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "tag",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 698,
									"end": 797,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 698,
									"end": 797,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 521,
									"end": 803,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 908,
									"end": 914,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 916,
									"end": 922,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 965,
									"end": 967,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 953,
									"end": 962,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 944,
									"end": 951,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 940,
									"end": 963,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "45"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "tag",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "tag",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1112,
									"end": 1113,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1101,
									"end": 1110,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1097,
									"end": 1114,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1091,
									"end": 1115,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1142,
									"end": 1160,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1134,
									"end": 1140,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1131,
									"end": 1161,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "46"
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "tag",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "tag",
									"source": 3,
									"value": "46"
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 1335,
									"end": 1342,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1326,
									"end": 1332,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1315,
									"end": 1324,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1311,
									"end": 1333,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "tag",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1259,
									"end": 1343,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1259,
									"end": 1343,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1062,
									"end": 1353,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1413,
									"end": 1415,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1402,
									"end": 1411,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1398,
									"end": 1416,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1392,
									"end": 1417,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1436,
									"end": 1442,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1433,
									"end": 1463,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "50"
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "tag",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "tag",
									"source": 3,
									"value": "50"
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 1637,
									"end": 1644,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1628,
									"end": 1634,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1617,
									"end": 1626,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1613,
									"end": 1635,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "tag",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1561,
									"end": 1645,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1561,
									"end": 1645,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1363,
									"end": 1655,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1702,
									"end": 1708,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "54"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "55"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "tag",
									"source": 3,
									"value": "54"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1719,
									"end": 1749,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1719,
									"end": 1749,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "56"
								},
								{
									"begin": 1786,
									"end": 1790,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1778,
									"end": 1784,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "57"
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "tag",
									"source": 3,
									"value": "56"
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "tag",
									"source": 3,
									"value": "55"
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1836,
									"end": 1842,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1871,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1863,
									"end": 1872,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1853,
									"end": 1872,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1853,
									"end": 1872,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1946,
									"end": 1950,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2036,
									"end": 2054,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2028,
									"end": 2034,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2025,
									"end": 2055,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "tag",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "tag",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "63"
								},
								{
									"begin": 2118,
									"end": 2124,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "tag",
									"source": 3,
									"value": "63"
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2088,
									"end": 2125,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2088,
									"end": 2125,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2180,
									"end": 2184,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2174,
									"end": 2178,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2170,
									"end": 2185,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2162,
									"end": 2185,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2162,
									"end": 2185,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "tag",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2266,
									"end": 2267,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "tag",
									"source": 3,
									"value": "66"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2290,
									"end": 2296,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2284,
									"end": 2297,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "68"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2375,
									"end": 2376,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2370,
									"end": 2373,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2366,
									"end": 2377,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2360,
									"end": 2378,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2356,
									"end": 2357,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2351,
									"end": 2354,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2347,
									"end": 2358,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2340,
									"end": 2379,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2312,
									"end": 2314,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2309,
									"end": 2310,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2305,
									"end": 2315,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2300,
									"end": 2315,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2300,
									"end": 2315,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "66"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "tag",
									"source": 3,
									"value": "68"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2407,
									"end": 2413,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2404,
									"end": 2405,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2401,
									"end": 2414,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "69"
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2487,
									"end": 2488,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2478,
									"end": 2484,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2473,
									"end": 2476,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2469,
									"end": 2485,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2462,
									"end": 2489,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "tag",
									"source": 3,
									"value": "69"
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2247,
									"end": 2505,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2555,
									"end": 2561,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2592,
									"end": 2593,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 2586,
									"end": 2590,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2582,
									"end": 2594,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2639,
									"end": 2640,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2633,
									"end": 2637,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2629,
									"end": 2641,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2660,
									"end": 2678,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "71"
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2716,
									"end": 2720,
									"name": "PUSH",
									"source": 3,
									"value": "7F"
								},
								{
									"begin": 2708,
									"end": 2714,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2704,
									"end": 2721,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2694,
									"end": 2721,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2694,
									"end": 2721,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "tag",
									"source": 3,
									"value": "71"
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2778,
									"end": 2780,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2770,
									"end": 2776,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2767,
									"end": 2781,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 2747,
									"end": 2765,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2744,
									"end": 2782,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "72"
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "74"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "tag",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "tag",
									"source": 3,
									"value": "72"
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2562,
									"end": 2831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "tag",
									"source": 3,
									"value": "57"
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "76"
								},
								{
									"begin": 2942,
									"end": 2946,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "tag",
									"source": 3,
									"value": "76"
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 2918,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2908,
									"end": 2948,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3050,
									"end": 3056,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3038,
									"end": 3048,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3035,
									"end": 3057,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 3014,
									"end": 3032,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3012,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2999,
									"end": 3033,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 2996,
									"end": 3058,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "77"
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "78"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "tag",
									"source": 3,
									"value": "78"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "tag",
									"source": 3,
									"value": "77"
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3101,
									"end": 3111,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3097,
									"end": 3099,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3090,
									"end": 3112,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2880,
									"end": 3118,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 3124,
									"end": 3304,
									"name": "tag",
									"source": 3,
									"value": "74"
								},
								{
									"begin": 3124,
									"end": 3304,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3172,
									"end": 3249,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3169,
									"end": 3170,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3162,
									"end": 3250,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3269,
									"end": 3273,
									"name": "PUSH",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 3266,
									"end": 3267,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 3259,
									"end": 3274,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3293,
									"end": 3297,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 3290,
									"end": 3291,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3283,
									"end": 3298,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 3310,
									"end": 3490,
									"name": "tag",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 3310,
									"end": 3490,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3358,
									"end": 3435,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3355,
									"end": 3356,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3348,
									"end": 3436,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3455,
									"end": 3459,
									"name": "PUSH",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 3452,
									"end": 3453,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 3445,
									"end": 3460,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3479,
									"end": 3483,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 3476,
									"end": 3477,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3469,
									"end": 3484,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 3496,
									"end": 3613,
									"name": "tag",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3496,
									"end": 3613,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3605,
									"end": 3606,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3602,
									"end": 3603,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3595,
									"end": 3607,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 3619,
									"end": 3736,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 3619,
									"end": 3736,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3728,
									"end": 3729,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3725,
									"end": 3726,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3718,
									"end": 3730,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 3742,
									"end": 3859,
									"name": "tag",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 3742,
									"end": 3859,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3851,
									"end": 3852,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3848,
									"end": 3849,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3841,
									"end": 3853,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 3865,
									"end": 3982,
									"name": "tag",
									"source": 3,
									"value": "45"
								},
								{
									"begin": 3865,
									"end": 3982,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3974,
									"end": 3975,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3971,
									"end": 3972,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3964,
									"end": 3976,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "tag",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4029,
									"end": 4035,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4080,
									"end": 4082,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 4076,
									"end": 4083,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 4071,
									"end": 4073,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 4064,
									"end": 4069,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 4060,
									"end": 4074,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4056,
									"end": 4084,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 4046,
									"end": 4084,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4046,
									"end": 4084,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fabda550b99ab51f63831c281022828f87a2678b59c0c740c68ab0369e99542e64736f6c63430008070033",
									".code": [
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "6352211E"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "A22CB465"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "A22CB465"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "B88D4FDE"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "C87B56DD"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "E985E9C5"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "6352211E"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "42842E0E"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A7"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "81812FC"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6048,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A7"
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6044,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6124,
											"end": 6134,
											"name": "PUSH",
											"source": 1,
											"value": "80AC58CD"
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6120,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6200,
											"end": 6210,
											"name": "PUSH",
											"source": 1,
											"value": "5B5E139F"
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6185,
											"end": 6196,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6014,
											"end": 6210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6014,
											"end": 6210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11228,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11247,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13116,
											"end": 13123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13140,
											"end": 13156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 13148,
											"end": 13155,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13140,
											"end": 13147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 13140,
											"end": 13156,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13140,
											"end": 13156,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 13140,
											"end": 13156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13135,
											"end": 13199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 13135,
											"end": 13199,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "PUSH",
											"source": 1,
											"value": "CF4700E400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13135,
											"end": 13199,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 13135,
											"end": 13199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13232,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13233,
											"end": 13240,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13210,
											"end": 13241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13210,
											"end": 13241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12683,
											"end": 12696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12699,
											"end": 12715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 12707,
											"end": 12714,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 12699,
											"end": 12715,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12699,
											"end": 12715,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 12699,
											"end": 12715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12683,
											"end": 12715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12683,
											"end": 12715,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12753,
											"end": 12758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12730,
											"end": 12758,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12730,
											"end": 12758,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12730,
											"end": 12749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 12730,
											"end": 12747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 12730,
											"end": 12749,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12730,
											"end": 12749,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 12730,
											"end": 12749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12730,
											"end": 12758,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12730,
											"end": 12758,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12730,
											"end": 12758,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12726,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 12726,
											"end": 12898,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12777,
											"end": 12821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 12794,
											"end": 12799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12801,
											"end": 12820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 12801,
											"end": 12818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 12801,
											"end": 12820,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12801,
											"end": 12820,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 12801,
											"end": 12820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12777,
											"end": 12793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 12777,
											"end": 12821,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12777,
											"end": 12821,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 12777,
											"end": 12821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12772,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 12772,
											"end": 12898,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "PUSH",
											"source": 1,
											"value": "CFB3B94200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12772,
											"end": 12898,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 12772,
											"end": 12898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12726,
											"end": 12898,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 12726,
											"end": 12898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12935,
											"end": 12937,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12923,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12924,
											"end": 12931,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12972,
											"end": 12979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12968,
											"end": 12970,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12961,
											"end": 12966,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 12673,
											"end": 12987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4789,
											"end": 4796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 5013,
											"end": 5026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5010,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4998,
											"end": 5010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4982,
											"end": 4995,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4982,
											"end": 4995,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4982,
											"end": 5010,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4982,
											"end": 5028,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4975,
											"end": 5028,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4975,
											"end": 5028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22184,
											"end": 22211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22214,
											"end": 22241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 22233,
											"end": 22240,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22214,
											"end": 22232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 22214,
											"end": 22241,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22214,
											"end": 22241,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 22214,
											"end": 22241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22184,
											"end": 22241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22184,
											"end": 22241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22297,
											"end": 22301,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22256,
											"end": 22301,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22256,
											"end": 22301,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22272,
											"end": 22291,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22256,
											"end": 22301,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22256,
											"end": 22301,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22256,
											"end": 22301,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 22252,
											"end": 22338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 22252,
											"end": 22338,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "PUSH",
											"source": 1,
											"value": "A114810000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22252,
											"end": 22338,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 22252,
											"end": 22338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22350,
											"end": 22377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22379,
											"end": 22402,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22406,
											"end": 22434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 22426,
											"end": 22433,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 22406,
											"end": 22425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 22406,
											"end": 22434,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22406,
											"end": 22434,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 22406,
											"end": 22434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22349,
											"end": 22434,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22349,
											"end": 22434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22349,
											"end": 22434,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22349,
											"end": 22434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22531,
											"end": 22593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 22550,
											"end": 22565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22567,
											"end": 22571,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 22573,
											"end": 22592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 22573,
											"end": 22590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 22573,
											"end": 22592,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22573,
											"end": 22592,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 22573,
											"end": 22592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22531,
											"end": 22549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 22531,
											"end": 22593,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22531,
											"end": 22593,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 22531,
											"end": 22593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22526,
											"end": 22699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 22526,
											"end": 22699,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22612,
											"end": 22655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 22629,
											"end": 22633,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22635,
											"end": 22654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 22635,
											"end": 22652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 22635,
											"end": 22654,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22635,
											"end": 22654,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 22635,
											"end": 22654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22612,
											"end": 22628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 22612,
											"end": 22655,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22612,
											"end": 22655,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 22612,
											"end": 22655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22607,
											"end": 22699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 22607,
											"end": 22699,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "PUSH",
											"source": 1,
											"value": "59C896BE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22607,
											"end": 22699,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 22607,
											"end": 22699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22526,
											"end": 22699,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 22526,
											"end": 22699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22728,
											"end": 22729,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22714,
											"end": 22730,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22714,
											"end": 22730,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22714,
											"end": 22716,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 22714,
											"end": 22730,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22714,
											"end": 22730,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22714,
											"end": 22730,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 22710,
											"end": 22762,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 22710,
											"end": 22762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 22710,
											"end": 22762,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "PUSH",
											"source": 1,
											"value": "EA553B3400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22710,
											"end": 22762,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 22710,
											"end": 22762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22773,
											"end": 22816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 22795,
											"end": 22799,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22801,
											"end": 22803,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22805,
											"end": 22812,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22814,
											"end": 22815,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 22773,
											"end": 22794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 22773,
											"end": 22816,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22773,
											"end": 22816,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 22773,
											"end": 22816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22905,
											"end": 22920,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23043,
											"end": 23044,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23022,
											"end": 23041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23015,
											"end": 23045,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23447,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23448,
											"end": 23452,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23515,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23516,
											"end": 23518,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23812,
											"end": 23954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 23848,
											"end": 23850,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 23895,
											"end": 23940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 23910,
											"end": 23914,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 23916,
											"end": 23918,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 23920,
											"end": 23939,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 23895,
											"end": 23909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 23895,
											"end": 23940,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23895,
											"end": 23940,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 23895,
											"end": 23940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2054,
											"name": "PUSH",
											"source": 1,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23868,
											"end": 23940,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 23812,
											"end": 23830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 23812,
											"end": 23954,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23812,
											"end": 23954,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 23812,
											"end": 23954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23800,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23801,
											"end": 23808,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23954,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24121,
											"end": 24122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2054,
											"name": "PUSH",
											"source": 1,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24071,
											"end": 24090,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24071,
											"end": 24117,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24071,
											"end": 24122,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 24067,
											"end": 24683,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 24067,
											"end": 24683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 24067,
											"end": 24683,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24142,
											"end": 24161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24174,
											"end": 24175,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 24164,
											"end": 24171,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 24164,
											"end": 24175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24142,
											"end": 24175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24142,
											"end": 24175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24329,
											"end": 24330,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24295,
											"end": 24312,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24313,
											"end": 24324,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24330,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 24291,
											"end": 24669,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 24291,
											"end": 24669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 24291,
											"end": 24669,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24431,
											"end": 24444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24431,
											"end": 24444,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 24416,
											"end": 24427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24416,
											"end": 24444,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 24412,
											"end": 24651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 24412,
											"end": 24651,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24609,
											"end": 24628,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24593,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24594,
											"end": 24605,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24628,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24412,
											"end": 24651,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 24412,
											"end": 24651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24291,
											"end": 24669,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 24291,
											"end": 24669,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24124,
											"end": 24683,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24067,
											"end": 24683,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 24067,
											"end": 24683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24727,
											"end": 24734,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24723,
											"end": 24725,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24717,
											"end": 24721,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 24745,
											"end": 24787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 24766,
											"end": 24770,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 24772,
											"end": 24774,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 24776,
											"end": 24783,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 24785,
											"end": 24786,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 24745,
											"end": 24765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 24745,
											"end": 24787,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24745,
											"end": 24787,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 24745,
											"end": 24787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22174,
											"end": 24794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22174,
											"end": 24794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22174,
											"end": 24794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 14062,
											"end": 14066,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14068,
											"end": 14070,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14072,
											"end": 14079,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11021,
											"end": 11028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11063,
											"end": 11090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 11082,
											"end": 11089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11063,
											"end": 11081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 11063,
											"end": 11090,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11063,
											"end": 11090,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 11063,
											"end": 11090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11040,
											"end": 11092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11040,
											"end": 11092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6383,
											"end": 6390,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6423,
											"end": 6424,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6406,
											"end": 6411,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6402,
											"end": 6462,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6402,
											"end": 6462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 6402,
											"end": 6462,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "PUSH",
											"source": 1,
											"value": "8F4EB60400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6402,
											"end": 6462,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 6402,
											"end": 6462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1035,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6479,
											"end": 6497,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6498,
											"end": 6503,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6533,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6472,
											"end": 6533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6472,
											"end": 6533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11379,
											"end": 11392,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11411,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13425,
											"end": 13444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 13425,
											"end": 13442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 13425,
											"end": 13444,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13425,
											"end": 13444,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 13425,
											"end": 13444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13413,
											"end": 13444,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13413,
											"end": 13444,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13413,
											"end": 13421,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13413,
											"end": 13444,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13413,
											"end": 13444,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13413,
											"end": 13444,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 13409,
											"end": 13470,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13409,
											"end": 13470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 13409,
											"end": 13470,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "PUSH",
											"source": 1,
											"value": "B06307DB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13409,
											"end": 13470,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 13409,
											"end": 13470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13533,
											"end": 13541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13500,
											"end": 13519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 13500,
											"end": 13517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 13500,
											"end": 13519,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13500,
											"end": 13519,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 13500,
											"end": 13519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13521,
											"end": 13529,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13600,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13571,
											"end": 13590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 13571,
											"end": 13588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 13571,
											"end": 13590,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13571,
											"end": 13590,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 13571,
											"end": 13590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13602,
											"end": 13610,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14318,
											"end": 14349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 14331,
											"end": 14335,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14337,
											"end": 14339,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14341,
											"end": 14348,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14318,
											"end": 14330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 14318,
											"end": 14349,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14318,
											"end": 14349,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 14318,
											"end": 14349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14381,
											"end": 14382,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14363,
											"end": 14365,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14363,
											"end": 14377,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14363,
											"end": 14377,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14363,
											"end": 14377,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 14363,
											"end": 14382,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14359,
											"end": 14539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 14359,
											"end": 14539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14401,
											"end": 14457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 14432,
											"end": 14436,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14438,
											"end": 14440,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14442,
											"end": 14449,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14451,
											"end": 14456,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14401,
											"end": 14431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 14401,
											"end": 14457,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14401,
											"end": 14457,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 14401,
											"end": 14457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14396,
											"end": 14539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 14396,
											"end": 14539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "PUSH",
											"source": 1,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14396,
											"end": 14539,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 14396,
											"end": 14539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14359,
											"end": 14539,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 14359,
											"end": 14539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11564,
											"end": 11577,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11594,
											"end": 11610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 11602,
											"end": 11609,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11594,
											"end": 11601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 11594,
											"end": 11610,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11594,
											"end": 11610,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 11594,
											"end": 11610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11589,
											"end": 11648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 11589,
											"end": 11648,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "PUSH",
											"source": 1,
											"value": "A14C4B5000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11589,
											"end": 11648,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 11589,
											"end": 11648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11659,
											"end": 11680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11683,
											"end": 11693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 11683,
											"end": 11691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 11683,
											"end": 11693,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11683,
											"end": 11693,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 11683,
											"end": 11693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11659,
											"end": 11693,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11659,
											"end": 11693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11735,
											"end": 11736,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11716,
											"end": 11723,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11731,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11736,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11736,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11763,
											"end": 11770,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11772,
											"end": 11790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 11782,
											"end": 11789,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11772,
											"end": 11781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 11772,
											"end": 11790,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11772,
											"end": 11790,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 11772,
											"end": 11790,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11703,
											"end": 11797,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11703,
											"end": 11797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11703,
											"end": 11797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13781,
											"end": 13785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13804,
											"end": 13822,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13823,
											"end": 13828,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13830,
											"end": 13838,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13797,
											"end": 13839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13797,
											"end": 13839,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14791,
											"end": 15059,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 14791,
											"end": 15059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14848,
											"end": 14852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14902,
											"end": 14909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 14883,
											"end": 14896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 14883,
											"end": 14898,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14883,
											"end": 14898,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 14883,
											"end": 14898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14909,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14909,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14935,
											"end": 14948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14935,
											"end": 14948,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 14925,
											"end": 14932,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14925,
											"end": 14948,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15032,
											"end": 15033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1774,
											"end": 1782,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14985,
											"end": 15002,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15003,
											"end": 15010,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15028,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15033,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14864,
											"end": 15033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14864,
											"end": 15033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 15059,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 15059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 15059,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 15059,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 32874,
											"end": 32977,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 32874,
											"end": 32977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32934,
											"end": 32941,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 32953,
											"end": 32970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32953,
											"end": 32970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32874,
											"end": 32977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32874,
											"end": 32977,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4276,
											"end": 4366,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4276,
											"end": 4366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4332,
											"end": 4339,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4366,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8016,
											"end": 8023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8035,
											"end": 8047,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8050,
											"end": 8057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8035,
											"end": 8057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8035,
											"end": 8057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8115,
											"end": 8119,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8096,
											"end": 8111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 8096,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 8096,
											"end": 8111,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8096,
											"end": 8111,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 8096,
											"end": 8111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8096,
											"end": 8119,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8092,
											"end": 8990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 8092,
											"end": 8990,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8148,
											"end": 8161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8148,
											"end": 8161,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8141,
											"end": 8145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8141,
											"end": 8161,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8199,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8202,
											"end": 8219,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8220,
											"end": 8224,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8225,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8316,
											"end": 8317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1774,
											"end": 1782,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8289,
											"end": 8295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8289,
											"end": 8312,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8289,
											"end": 8317,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 8285,
											"end": 8972,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8285,
											"end": 8972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 8285,
											"end": 8972,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8817,
											"end": 8818,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8807,
											"end": 8813,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8807,
											"end": 8818,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8876,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8877,
											"end": 8883,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8877,
											"end": 8883,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8877,
											"end": 8883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8877,
											"end": 8883,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8877,
											"end": 8883,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8877,
											"end": 8883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8877,
											"end": 8883,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8850,
											"end": 8884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8850,
											"end": 8884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8943,
											"end": 8949,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8936,
											"end": 8949,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8936,
											"end": 8949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8936,
											"end": 8949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8936,
											"end": 8949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8936,
											"end": 8949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 8936,
											"end": 8949,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8285,
											"end": 8972,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 8285,
											"end": 8972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8092,
											"end": 8990,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 8092,
											"end": 8990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "PUSH",
											"source": 1,
											"value": "DF2D9B4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20436,
											"end": 21073,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 20436,
											"end": 21073,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20528,
											"end": 20555,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20557,
											"end": 20580,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20596,
											"end": 20649,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20652,
											"end": 20667,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 20596,
											"end": 20667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20596,
											"end": 20667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20834,
											"end": 20841,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20828,
											"end": 20832,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20821,
											"end": 20842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20868,
											"end": 20890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20862,
											"end": 20866,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20855,
											"end": 20891,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20943,
											"end": 20947,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20937,
											"end": 20941,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20927,
											"end": 20948,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 20904,
											"end": 20948,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20904,
											"end": 20948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21037,
											"end": 21056,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21031,
											"end": 21057,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 21012,
											"end": 21057,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21012,
											"end": 21057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20774,
											"end": 21067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20436,
											"end": 21073,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20436,
											"end": 21073,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20436,
											"end": 21073,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20436,
											"end": 21073,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21181,
											"end": 21813,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 21181,
											"end": 21813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21319,
											"end": 21330,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21478,
											"end": 21493,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21472,
											"end": 21476,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21468,
											"end": 21494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21460,
											"end": 21494,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21460,
											"end": 21494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21635,
											"end": 21650,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21624,
											"end": 21633,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21620,
											"end": 21651,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21607,
											"end": 21651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21607,
											"end": 21651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21780,
											"end": 21795,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21769,
											"end": 21778,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21766,
											"end": 21796,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 21759,
											"end": 21763,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21748,
											"end": 21757,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21745,
											"end": 21764,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 21742,
											"end": 21797,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 21732,
											"end": 21797,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21732,
											"end": 21797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21181,
											"end": 21813,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 21181,
											"end": 21813,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21181,
											"end": 21813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21181,
											"end": 21813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21181,
											"end": 21813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21181,
											"end": 21813,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 31742,
											"end": 31896,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 31742,
											"end": 31896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31742,
											"end": 31896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31742,
											"end": 31896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31742,
											"end": 31896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31742,
											"end": 31896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31742,
											"end": 31896,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 30099,
											"end": 30401,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 30099,
											"end": 30401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30230,
											"end": 30237,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30249,
											"end": 30265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "E8"
										},
										{
											"begin": 30275,
											"end": 30294,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30275,
											"end": 30315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30275,
											"end": 30315,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 30249,
											"end": 30316,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30249,
											"end": 30316,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "E8"
										},
										{
											"begin": 30341,
											"end": 30372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 30352,
											"end": 30356,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 30358,
											"end": 30360,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 30362,
											"end": 30371,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 30341,
											"end": 30351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 30341,
											"end": 30372,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 30341,
											"end": 30372,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 30341,
											"end": 30372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30333,
											"end": 30373,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFF"
										},
										{
											"begin": 30333,
											"end": 30373,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30333,
											"end": 30394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30333,
											"end": 30394,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 30326,
											"end": 30394,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30326,
											"end": 30394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30326,
											"end": 30394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30099,
											"end": 30401,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 30099,
											"end": 30401,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 30099,
											"end": 30401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30099,
											"end": 30401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30099,
											"end": 30401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30099,
											"end": 30401,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10460,
											"end": 10900,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 10460,
											"end": 10900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10540,
											"end": 10554,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10705,
											"end": 10720,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10698,
											"end": 10703,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10694,
											"end": 10721,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10685,
											"end": 10721,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10685,
											"end": 10721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10877,
											"end": 10882,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10863,
											"end": 10874,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 10839,
											"end": 10861,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 10835,
											"end": 10875,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 10832,
											"end": 10883,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 10825,
											"end": 10830,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10822,
											"end": 10884,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 10812,
											"end": 10884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10812,
											"end": 10884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10900,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10900,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10900,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 32537,
											"end": 32690,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 32537,
											"end": 32690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32537,
											"end": 32690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32537,
											"end": 32690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32537,
											"end": 32690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32537,
											"end": 32690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32537,
											"end": 32690,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28807,
											"end": 28811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28852,
											"end": 28854,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28872,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28827,
											"end": 28872,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28872,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 28873,
											"end": 28892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 28873,
											"end": 28890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 28873,
											"end": 28892,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 28873,
											"end": 28892,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 28873,
											"end": 28892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28894,
											"end": 28898,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 28900,
											"end": 28907,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 28909,
											"end": 28914,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29122,
											"end": 29123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29105,
											"end": 29111,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29105,
											"end": 29118,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 29105,
											"end": 29123,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 29101,
											"end": 29330,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 29101,
											"end": 29330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 29101,
											"end": 29330,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "PUSH",
											"source": 1,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 29101,
											"end": 29330,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 29101,
											"end": 29330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29290,
											"end": 29296,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29284,
											"end": 29297,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 29275,
											"end": 29281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29271,
											"end": 29273,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29267,
											"end": 29282,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29260,
											"end": 29298,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28993,
											"end": 29047,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 28993,
											"end": 29047,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 28993,
											"end": 29047,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28983,
											"end": 28989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28976,
											"end": 29047,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28976,
											"end": 29047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28976,
											"end": 29047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12049,
											"end": 12141,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 12049,
											"end": 12141,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12100,
											"end": 12113,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12049,
											"end": 12141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12049,
											"end": 12141,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 33078,
											"end": 34998,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 33078,
											"end": 34998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33135,
											"end": 33152,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 33548,
											"end": 33551,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 33541,
											"end": 33545,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33535,
											"end": 33546,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 33531,
											"end": 33552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33524,
											"end": 33552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33524,
											"end": 33552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33637,
											"end": 33640,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33631,
											"end": 33635,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33624,
											"end": 33641,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33740,
											"end": 33743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34188,
											"end": 34193,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 34316,
											"end": 34317,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 34311,
											"end": 34314,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34307,
											"end": 34318,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34300,
											"end": 34318,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34300,
											"end": 34318,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34451,
											"end": 34453,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 34445,
											"end": 34449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34441,
											"end": 34454,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 34437,
											"end": 34439,
											"name": "PUSH",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 34433,
											"end": 34455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34428,
											"end": 34431,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34420,
											"end": 34456,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 34491,
											"end": 34493,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 34485,
											"end": 34489,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34481,
											"end": 34494,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 34473,
											"end": 34494,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34473,
											"end": 34494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34509,
											"end": 34513,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 34695,
											"end": 34696,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 34690,
											"end": 34693,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34686,
											"end": 34697,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34679,
											"end": 34697,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34679,
											"end": 34697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34745,
											"end": 34747,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 34739,
											"end": 34743,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34735,
											"end": 34748,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 34731,
											"end": 34733,
											"name": "PUSH",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 34727,
											"end": 34749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34722,
											"end": 34725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34714,
											"end": 34750,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 34602,
											"end": 34604,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 34596,
											"end": 34600,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34592,
											"end": 34605,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 34584,
											"end": 34605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34584,
											"end": 34605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34086,
											"end": 34508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34801,
											"end": 34804,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34796,
											"end": 34799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34792,
											"end": 34805,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34914,
											"end": 34916,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34909,
											"end": 34912,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34905,
											"end": 34917,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34898,
											"end": 34917,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34898,
											"end": 34917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34975,
											"end": 34981,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34970,
											"end": 34973,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34963,
											"end": 34982,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33173,
											"end": 34992,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33173,
											"end": 34992,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33078,
											"end": 34998,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33078,
											"end": 34998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33078,
											"end": 34998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33078,
											"end": 34998,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 30961,
											"end": 31104,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 30961,
											"end": 31104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31094,
											"end": 31100,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30961,
											"end": 31104,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 30961,
											"end": 31104,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 30961,
											"end": 31104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30961,
											"end": 31104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30961,
											"end": 31104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30961,
											"end": 31104,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 84,
											"end": 89,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 166,
											"end": 172,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 100,
											"end": 174,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 100,
											"end": 174,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 197,
											"end": 203,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 190,
											"end": 195,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 183,
											"end": 204,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 233,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 224,
											"end": 240,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 273,
											"end": 276,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 264,
											"end": 270,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 259,
											"end": 262,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 255,
											"end": 271,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 252,
											"end": 277,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 249,
											"end": 361,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 249,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 249,
											"end": 361,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 404,
											"end": 410,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 399,
											"end": 402,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 394,
											"end": 397,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 90,
											"end": 417,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 469,
											"end": 474,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 513,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 494,
											"end": 514,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 485,
											"end": 514,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 485,
											"end": 514,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 701,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 568,
											"end": 701,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 611,
											"end": 616,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 649,
											"end": 655,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 636,
											"end": 656,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 627,
											"end": 656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 627,
											"end": 656,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 665,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 665,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 665,
											"end": 695,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 665,
											"end": 695,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 665,
											"end": 695,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 568,
											"end": 701,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 568,
											"end": 701,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 568,
											"end": 701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 701,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 707,
											"end": 844,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 707,
											"end": 844,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 752,
											"end": 757,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 790,
											"end": 796,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 777,
											"end": 797,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 768,
											"end": 797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 768,
											"end": 797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 806,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 832,
											"end": 837,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 806,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 806,
											"end": 838,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 806,
											"end": 838,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 806,
											"end": 838,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 707,
											"end": 844,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 707,
											"end": 844,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 707,
											"end": 844,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 707,
											"end": 844,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 707,
											"end": 844,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 850,
											"end": 991,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 850,
											"end": 991,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 906,
											"end": 911,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 943,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 931,
											"end": 944,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 922,
											"end": 944,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 922,
											"end": 944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 953,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 979,
											"end": 984,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 953,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 953,
											"end": 985,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 953,
											"end": 985,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 953,
											"end": 985,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 850,
											"end": 991,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 850,
											"end": 991,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 850,
											"end": 991,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 850,
											"end": 991,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 850,
											"end": 991,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1070,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1117,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1111,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1099,
											"end": 1105,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1095,
											"end": 1112,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1118,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 1081,
											"end": 1203,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1203,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 1081,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1226,
											"end": 1246,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 1338,
											"end": 1341,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1330,
											"end": 1336,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1323,
											"end": 1327,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1321,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1311,
											"end": 1328,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1255,
											"end": 1342,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1255,
											"end": 1342,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1400,
											"end": 1405,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1444,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1425,
											"end": 1445,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 1481,
											"end": 1486,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1564,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1607,
											"end": 1609,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1595,
											"end": 1604,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1593,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1605,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1578,
											"end": 1610,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1733,
											"end": 1734,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 1803,
											"end": 1810,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1794,
											"end": 1800,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1783,
											"end": 1792,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1801,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1748,
											"end": 1811,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1748,
											"end": 1811,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1704,
											"end": 1821,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 1908,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1916,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1959,
											"end": 1961,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1947,
											"end": 1956,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1938,
											"end": 1945,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1934,
											"end": 1957,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1930,
											"end": 1962,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2085,
											"end": 2086,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 2155,
											"end": 2162,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2146,
											"end": 2152,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2135,
											"end": 2144,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2131,
											"end": 2153,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2100,
											"end": 2163,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2100,
											"end": 2163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2173,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2212,
											"end": 2214,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 2283,
											"end": 2290,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2280,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2263,
											"end": 2272,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2259,
											"end": 2281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2228,
											"end": 2291,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2228,
											"end": 2291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2301,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2391,
											"end": 2397,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2399,
											"end": 2405,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2407,
											"end": 2413,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2456,
											"end": 2458,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2444,
											"end": 2453,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2442,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2431,
											"end": 2454,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2427,
											"end": 2459,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2582,
											"end": 2583,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 2652,
											"end": 2659,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2643,
											"end": 2649,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2641,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2660,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2660,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2670,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2709,
											"end": 2711,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2771,
											"end": 2777,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2760,
											"end": 2769,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2756,
											"end": 2778,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2680,
											"end": 2798,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2837,
											"end": 2839,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 2908,
											"end": 2915,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2899,
											"end": 2905,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2888,
											"end": 2897,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2884,
											"end": 2906,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2808,
											"end": 2926,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3034,
											"end": 3040,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3050,
											"end": 3056,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3064,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3107,
											"end": 3110,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3082,
											"end": 3105,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3078,
											"end": 3111,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3234,
											"end": 3235,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 3304,
											"end": 3311,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3295,
											"end": 3301,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3284,
											"end": 3293,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3302,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3249,
											"end": 3312,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 3249,
											"end": 3312,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3205,
											"end": 3322,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3361,
											"end": 3363,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 3432,
											"end": 3439,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3423,
											"end": 3429,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3421,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3332,
											"end": 3450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3489,
											"end": 3491,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 3560,
											"end": 3567,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3557,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3540,
											"end": 3549,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3536,
											"end": 3558,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3505,
											"end": 3568,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3505,
											"end": 3568,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3460,
											"end": 3578,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3645,
											"end": 3647,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3634,
											"end": 3643,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3617,
											"end": 3649,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3676,
											"end": 3694,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3668,
											"end": 3674,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3695,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 3857,
											"end": 3864,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3848,
											"end": 3854,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3837,
											"end": 3846,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3833,
											"end": 3855,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3793,
											"end": 3865,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3793,
											"end": 3865,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3588,
											"end": 3875,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3953,
											"end": 3959,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3961,
											"end": 3967,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4010,
											"end": 4012,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4007,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3989,
											"end": 3996,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3985,
											"end": 4008,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3981,
											"end": 4013,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4136,
											"end": 4137,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 4206,
											"end": 4213,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4203,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4186,
											"end": 4195,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4204,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4151,
											"end": 4214,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4151,
											"end": 4214,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4107,
											"end": 4224,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4263,
											"end": 4265,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 4331,
											"end": 4338,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4322,
											"end": 4328,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4311,
											"end": 4320,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4307,
											"end": 4329,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4339,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4339,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4234,
											"end": 4349,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4438,
											"end": 4444,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4487,
											"end": 4489,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4475,
											"end": 4484,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4466,
											"end": 4473,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4462,
											"end": 4485,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4458,
											"end": 4490,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4613,
											"end": 4614,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 4683,
											"end": 4690,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4674,
											"end": 4680,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4663,
											"end": 4672,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4681,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4628,
											"end": 4691,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4628,
											"end": 4691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4584,
											"end": 4701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4740,
											"end": 4742,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 4811,
											"end": 4818,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4802,
											"end": 4808,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4791,
											"end": 4800,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4809,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4756,
											"end": 4819,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4756,
											"end": 4819,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4711,
											"end": 4829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4906,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4951,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4937,
											"end": 4946,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4928,
											"end": 4935,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4924,
											"end": 4947,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4920,
											"end": 4952,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5075,
											"end": 5076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 5144,
											"end": 5151,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5135,
											"end": 5141,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5124,
											"end": 5133,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5120,
											"end": 5142,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5090,
											"end": 5152,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5090,
											"end": 5152,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5046,
											"end": 5162,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5244,
											"end": 5250,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5293,
											"end": 5295,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5281,
											"end": 5290,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5272,
											"end": 5279,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5268,
											"end": 5291,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5264,
											"end": 5296,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "tag",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5419,
											"end": 5420,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 5499,
											"end": 5506,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5490,
											"end": 5496,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5479,
											"end": 5488,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5475,
											"end": 5497,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5507,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5507,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5390,
											"end": 5517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5595,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5638,
											"end": 5640,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5626,
											"end": 5635,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5617,
											"end": 5624,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5613,
											"end": 5636,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5609,
											"end": 5641,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "tag",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5764,
											"end": 5765,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 5834,
											"end": 5841,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5825,
											"end": 5831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5814,
											"end": 5823,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5810,
											"end": 5832,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5779,
											"end": 5842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5779,
											"end": 5842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5735,
											"end": 5852,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 5970,
											"end": 5975,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "tag",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5947,
											"end": 5950,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5940,
											"end": 5977,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 6085,
											"end": 6090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6065,
											"end": 6068,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6058,
											"end": 6092,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "tag",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6190,
											"end": 6193,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 6250,
											"end": 6255,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "tag",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 6335,
											"end": 6341,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6330,
											"end": 6333,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "tag",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6265,
											"end": 6342,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6265,
											"end": 6342,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 6396,
											"end": 6402,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6391,
											"end": 6394,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6384,
											"end": 6388,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6377,
											"end": 6382,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6373,
											"end": 6389,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "tag",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 6450,
											"end": 6456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "tag",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6423,
											"end": 6426,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6419,
											"end": 6458,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6412,
											"end": 6458,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6412,
											"end": 6458,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6194,
											"end": 6464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "tag",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6558,
											"end": 6561,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 6619,
											"end": 6624,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "tag",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 6705,
											"end": 6711,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6700,
											"end": 6703,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "tag",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6634,
											"end": 6712,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6634,
											"end": 6712,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 6766,
											"end": 6772,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6761,
											"end": 6764,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6754,
											"end": 6758,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6747,
											"end": 6752,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6743,
											"end": 6759,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "tag",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 6820,
											"end": 6826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "tag",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6793,
											"end": 6796,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6789,
											"end": 6828,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6782,
											"end": 6828,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6782,
											"end": 6828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6562,
											"end": 6834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "tag",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6946,
											"end": 6949,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6974,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 7007,
											"end": 7012,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6974,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 6974,
											"end": 7013,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6974,
											"end": 7013,
											"name": "tag",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 6974,
											"end": 7013,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 7111,
											"end": 7117,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7106,
											"end": 7109,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7029,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 7029,
											"end": 7118,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7029,
											"end": 7118,
											"name": "tag",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 7029,
											"end": 7118,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7022,
											"end": 7118,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7022,
											"end": 7118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7127,
											"end": 7179,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 7172,
											"end": 7178,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7167,
											"end": 7170,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7160,
											"end": 7164,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7153,
											"end": 7158,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7149,
											"end": 7165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7127,
											"end": 7179,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 7127,
											"end": 7179,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7127,
											"end": 7179,
											"name": "tag",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 7127,
											"end": 7179,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7204,
											"end": 7210,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7199,
											"end": 7202,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7195,
											"end": 7211,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7188,
											"end": 7211,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7188,
											"end": 7211,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6950,
											"end": 7217,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7223,
											"end": 7341,
											"name": "tag",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 7223,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7310,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 7328,
											"end": 7333,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7310,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 7310,
											"end": 7334,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7310,
											"end": 7334,
											"name": "tag",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 7310,
											"end": 7334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7305,
											"end": 7308,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7335,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7223,
											"end": 7341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7223,
											"end": 7341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7223,
											"end": 7341,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7527,
											"end": 7530,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7549,
											"end": 7644,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 7640,
											"end": 7643,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7637,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7549,
											"end": 7644,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 7549,
											"end": 7644,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7549,
											"end": 7644,
											"name": "tag",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 7549,
											"end": 7644,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7542,
											"end": 7644,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7542,
											"end": 7644,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7661,
											"end": 7756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 7752,
											"end": 7755,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7743,
											"end": 7749,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7661,
											"end": 7756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 7661,
											"end": 7756,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7661,
											"end": 7756,
											"name": "tag",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 7661,
											"end": 7756,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7654,
											"end": 7756,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7654,
											"end": 7756,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7773,
											"end": 7776,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7766,
											"end": 7776,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7766,
											"end": 7776,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7881,
											"end": 7885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7919,
											"end": 7921,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7908,
											"end": 7917,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7904,
											"end": 7922,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7922,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7922,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7932,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 8000,
											"end": 8001,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7989,
											"end": 7998,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7985,
											"end": 8002,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7976,
											"end": 7982,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7932,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 7932,
											"end": 8003,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7932,
											"end": 8003,
											"name": "tag",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 7932,
											"end": 8003,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8211,
											"end": 8215,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8249,
											"end": 8252,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 8238,
											"end": 8247,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8234,
											"end": 8253,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8226,
											"end": 8253,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8226,
											"end": 8253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8263,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 8331,
											"end": 8332,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8320,
											"end": 8329,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8316,
											"end": 8333,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8307,
											"end": 8313,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 8263,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 8263,
											"end": 8334,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8263,
											"end": 8334,
											"name": "tag",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 8263,
											"end": 8334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8416,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 8412,
											"end": 8414,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8401,
											"end": 8410,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8397,
											"end": 8415,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8388,
											"end": 8394,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8416,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 8344,
											"end": 8416,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8344,
											"end": 8416,
											"name": "tag",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 8344,
											"end": 8416,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8426,
											"end": 8498,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 8494,
											"end": 8496,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8483,
											"end": 8492,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8479,
											"end": 8497,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8470,
											"end": 8476,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8426,
											"end": 8498,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 8426,
											"end": 8498,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8426,
											"end": 8498,
											"name": "tag",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 8426,
											"end": 8498,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8545,
											"end": 8554,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8539,
											"end": 8543,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8535,
											"end": 8555,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8530,
											"end": 8532,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 8519,
											"end": 8528,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8515,
											"end": 8533,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8508,
											"end": 8556,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8573,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 8644,
											"end": 8648,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8635,
											"end": 8641,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8573,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 8573,
											"end": 8649,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8573,
											"end": 8649,
											"name": "tag",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 8573,
											"end": 8649,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8565,
											"end": 8649,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8565,
											"end": 8649,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8749,
											"end": 8753,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8787,
											"end": 8789,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8776,
											"end": 8785,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8772,
											"end": 8790,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8764,
											"end": 8790,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8764,
											"end": 8790,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8800,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 8862,
											"end": 8863,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8851,
											"end": 8860,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8847,
											"end": 8864,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 8844,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8800,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 8800,
											"end": 8865,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8800,
											"end": 8865,
											"name": "tag",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 8800,
											"end": 8865,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8991,
											"end": 8995,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9029,
											"end": 9031,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9018,
											"end": 9027,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9014,
											"end": 9032,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9006,
											"end": 9032,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9006,
											"end": 9032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9078,
											"end": 9087,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9072,
											"end": 9076,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9068,
											"end": 9088,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9064,
											"end": 9065,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9053,
											"end": 9062,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9049,
											"end": 9066,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9042,
											"end": 9089,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9106,
											"end": 9184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 9179,
											"end": 9183,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9170,
											"end": 9176,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9106,
											"end": 9184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 9106,
											"end": 9184,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9106,
											"end": 9184,
											"name": "tag",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 9106,
											"end": 9184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9098,
											"end": 9184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9098,
											"end": 9184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9290,
											"end": 9294,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9328,
											"end": 9330,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9317,
											"end": 9326,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9313,
											"end": 9331,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9305,
											"end": 9331,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9305,
											"end": 9331,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9341,
											"end": 9412,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 9409,
											"end": 9410,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9398,
											"end": 9407,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9394,
											"end": 9411,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9385,
											"end": 9391,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9341,
											"end": 9412,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 9341,
											"end": 9412,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9341,
											"end": 9412,
											"name": "tag",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 9341,
											"end": 9412,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9459,
											"end": 9465,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "350"
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "tag",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9476,
											"end": 9506,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9476,
											"end": 9506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9515,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 9543,
											"end": 9547,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9535,
											"end": 9541,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9515,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 9515,
											"end": 9548,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9515,
											"end": 9548,
											"name": "tag",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 9515,
											"end": 9548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9560,
											"end": 9635,
											"name": "tag",
											"source": 3,
											"value": "350"
										},
										{
											"begin": 9560,
											"end": 9635,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9593,
											"end": 9599,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9626,
											"end": 9628,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9620,
											"end": 9629,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9610,
											"end": 9629,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9610,
											"end": 9629,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9560,
											"end": 9635,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9560,
											"end": 9635,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9702,
											"end": 9706,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9792,
											"end": 9810,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9784,
											"end": 9790,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9781,
											"end": 9811,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 9778,
											"end": 9834,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9778,
											"end": 9834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 9778,
											"end": 9834,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9814,
											"end": 9832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 9814,
											"end": 9832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 9814,
											"end": 9832,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9814,
											"end": 9832,
											"name": "tag",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 9814,
											"end": 9832,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9778,
											"end": 9834,
											"name": "tag",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 9778,
											"end": 9834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 9874,
											"end": 9880,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "tag",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9844,
											"end": 9881,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9844,
											"end": 9881,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9940,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9930,
											"end": 9934,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9926,
											"end": 9941,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9918,
											"end": 9941,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9918,
											"end": 9941,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10005,
											"end": 10011,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10039,
											"end": 10044,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10033,
											"end": 10045,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10023,
											"end": 10045,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10023,
											"end": 10045,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "tag",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10110,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10144,
											"end": 10149,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10138,
											"end": 10150,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10128,
											"end": 10150,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10128,
											"end": 10150,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "tag",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10246,
											"end": 10257,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10280,
											"end": 10286,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10275,
											"end": 10278,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10268,
											"end": 10287,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10320,
											"end": 10324,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10315,
											"end": 10318,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10311,
											"end": 10325,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10325,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10296,
											"end": 10325,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "tag",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10421,
											"end": 10432,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10455,
											"end": 10461,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10450,
											"end": 10453,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10443,
											"end": 10462,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10495,
											"end": 10499,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10490,
											"end": 10493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10486,
											"end": 10500,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10471,
											"end": 10500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10471,
											"end": 10500,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "tag",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10614,
											"end": 10625,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10651,
											"end": 10654,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10654,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10654,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10666,
											"end": 10762,
											"name": "tag",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 10666,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10703,
											"end": 10710,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 10750,
											"end": 10755,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "tag",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10721,
											"end": 10756,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10721,
											"end": 10756,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10666,
											"end": 10762,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10666,
											"end": 10762,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10666,
											"end": 10762,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10666,
											"end": 10762,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10768,
											"end": 10858,
											"name": "tag",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 10768,
											"end": 10858,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10802,
											"end": 10809,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10845,
											"end": 10850,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10838,
											"end": 10851,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10831,
											"end": 10852,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10820,
											"end": 10852,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10820,
											"end": 10852,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10768,
											"end": 10858,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10768,
											"end": 10858,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10768,
											"end": 10858,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10768,
											"end": 10858,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10864,
											"end": 11013,
											"name": "tag",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 10864,
											"end": 11013,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10900,
											"end": 10907,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10940,
											"end": 11006,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10933,
											"end": 10938,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10929,
											"end": 11007,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10918,
											"end": 11007,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10918,
											"end": 11007,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10864,
											"end": 11013,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10864,
											"end": 11013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10864,
											"end": 11013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10864,
											"end": 11013,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11019,
											"end": 11145,
											"name": "tag",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 11019,
											"end": 11145,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11056,
											"end": 11063,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11096,
											"end": 11138,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11089,
											"end": 11094,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11085,
											"end": 11139,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11074,
											"end": 11139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11074,
											"end": 11139,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11019,
											"end": 11145,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11019,
											"end": 11145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11019,
											"end": 11145,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11019,
											"end": 11145,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11151,
											"end": 11228,
											"name": "tag",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 11151,
											"end": 11228,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11188,
											"end": 11195,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11217,
											"end": 11222,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11206,
											"end": 11222,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11206,
											"end": 11222,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11151,
											"end": 11228,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11151,
											"end": 11228,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11151,
											"end": 11228,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11151,
											"end": 11228,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11234,
											"end": 11388,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 11234,
											"end": 11388,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11318,
											"end": 11324,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11313,
											"end": 11316,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11308,
											"end": 11311,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11295,
											"end": 11325,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 11380,
											"end": 11381,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11371,
											"end": 11377,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11366,
											"end": 11369,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11362,
											"end": 11378,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11355,
											"end": 11382,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11234,
											"end": 11388,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11234,
											"end": 11388,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11234,
											"end": 11388,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11234,
											"end": 11388,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11394,
											"end": 11701,
											"name": "tag",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 11394,
											"end": 11701,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11462,
											"end": 11463,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "tag",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11486,
											"end": 11492,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11483,
											"end": 11484,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11480,
											"end": 11493,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11571,
											"end": 11572,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11566,
											"end": 11569,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11562,
											"end": 11573,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11556,
											"end": 11574,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11552,
											"end": 11553,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11547,
											"end": 11550,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11543,
											"end": 11554,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11536,
											"end": 11575,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11508,
											"end": 11510,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11505,
											"end": 11506,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11501,
											"end": 11511,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11496,
											"end": 11511,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11496,
											"end": 11511,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "tag",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11603,
											"end": 11609,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11600,
											"end": 11601,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11597,
											"end": 11610,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 11594,
											"end": 11695,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11594,
											"end": 11695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 11594,
											"end": 11695,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11683,
											"end": 11684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11674,
											"end": 11680,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11669,
											"end": 11672,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11665,
											"end": 11681,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11658,
											"end": 11685,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11594,
											"end": 11695,
											"name": "tag",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 11594,
											"end": 11695,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11443,
											"end": 11701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11394,
											"end": 11701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11394,
											"end": 11701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11394,
											"end": 11701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11394,
											"end": 11701,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11707,
											"end": 12027,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 11707,
											"end": 12027,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11751,
											"end": 11757,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11788,
											"end": 11789,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 11782,
											"end": 11786,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11778,
											"end": 11790,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 11768,
											"end": 11790,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11768,
											"end": 11790,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11835,
											"end": 11836,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 11829,
											"end": 11833,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11825,
											"end": 11837,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11856,
											"end": 11874,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11846,
											"end": 11927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 11846,
											"end": 11927,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11912,
											"end": 11916,
											"name": "PUSH",
											"source": 3,
											"value": "7F"
										},
										{
											"begin": 11904,
											"end": 11910,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11900,
											"end": 11917,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11890,
											"end": 11917,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11890,
											"end": 11917,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11846,
											"end": 11927,
											"name": "tag",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 11846,
											"end": 11927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11974,
											"end": 11976,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11966,
											"end": 11972,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11963,
											"end": 11977,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 11943,
											"end": 11961,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11940,
											"end": 11978,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 11937,
											"end": 12021,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11937,
											"end": 12021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 11937,
											"end": 12021,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "tag",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11937,
											"end": 12021,
											"name": "tag",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 11937,
											"end": 12021,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11758,
											"end": 12027,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11707,
											"end": 12027,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11707,
											"end": 12027,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11707,
											"end": 12027,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11707,
											"end": 12027,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12033,
											"end": 12314,
											"name": "tag",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 12033,
											"end": 12314,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12116,
											"end": 12143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "384"
										},
										{
											"begin": 12138,
											"end": 12142,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12116,
											"end": 12143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 12116,
											"end": 12143,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12116,
											"end": 12143,
											"name": "tag",
											"source": 3,
											"value": "384"
										},
										{
											"begin": 12116,
											"end": 12143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12108,
											"end": 12114,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12104,
											"end": 12144,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12246,
											"end": 12252,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12234,
											"end": 12244,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12231,
											"end": 12253,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 12210,
											"end": 12228,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12198,
											"end": 12208,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12195,
											"end": 12229,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 12192,
											"end": 12254,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 12189,
											"end": 12277,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12189,
											"end": 12277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 12189,
											"end": 12277,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12257,
											"end": 12275,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 12257,
											"end": 12275,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 12257,
											"end": 12275,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12257,
											"end": 12275,
											"name": "tag",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 12257,
											"end": 12275,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12189,
											"end": 12277,
											"name": "tag",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 12189,
											"end": 12277,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12297,
											"end": 12307,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12293,
											"end": 12295,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12286,
											"end": 12308,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12076,
											"end": 12314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12033,
											"end": 12314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12033,
											"end": 12314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12033,
											"end": 12314,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12320,
											"end": 12500,
											"name": "tag",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 12320,
											"end": 12500,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12368,
											"end": 12445,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12365,
											"end": 12366,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12358,
											"end": 12446,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12465,
											"end": 12469,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 12462,
											"end": 12463,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 12455,
											"end": 12470,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12489,
											"end": 12493,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 12486,
											"end": 12487,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12479,
											"end": 12494,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 12506,
											"end": 12686,
											"name": "tag",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 12506,
											"end": 12686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12554,
											"end": 12631,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12551,
											"end": 12552,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12544,
											"end": 12632,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12651,
											"end": 12655,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 12648,
											"end": 12649,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 12641,
											"end": 12656,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12675,
											"end": 12679,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 12672,
											"end": 12673,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12665,
											"end": 12680,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 12692,
											"end": 12809,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 12692,
											"end": 12809,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12801,
											"end": 12802,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12798,
											"end": 12799,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12791,
											"end": 12803,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 12815,
											"end": 12932,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 12815,
											"end": 12932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12924,
											"end": 12925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12921,
											"end": 12922,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12914,
											"end": 12926,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 12938,
											"end": 13055,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 12938,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13047,
											"end": 13048,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13044,
											"end": 13045,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13037,
											"end": 13049,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13061,
											"end": 13178,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 13061,
											"end": 13178,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13170,
											"end": 13171,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13167,
											"end": 13168,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13160,
											"end": 13172,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13184,
											"end": 13286,
											"name": "tag",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 13184,
											"end": 13286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13225,
											"end": 13231,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13276,
											"end": 13278,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 13272,
											"end": 13279,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 13267,
											"end": 13269,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 13260,
											"end": 13265,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13256,
											"end": 13270,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13252,
											"end": 13280,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 13242,
											"end": 13280,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13242,
											"end": 13280,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13184,
											"end": 13286,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13184,
											"end": 13286,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13184,
											"end": 13286,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13184,
											"end": 13286,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13292,
											"end": 13414,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 13292,
											"end": 13414,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 13383,
											"end": 13388,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "tag",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13358,
											"end": 13363,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13355,
											"end": 13390,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 13345,
											"end": 13408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 13345,
											"end": 13408,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13404,
											"end": 13405,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13401,
											"end": 13402,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13394,
											"end": 13406,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13345,
											"end": 13408,
											"name": "tag",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 13345,
											"end": 13408,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13292,
											"end": 13414,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13292,
											"end": 13414,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13420,
											"end": 13536,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 13420,
											"end": 13536,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13490,
											"end": 13511,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 13505,
											"end": 13510,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13490,
											"end": 13511,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 13490,
											"end": 13511,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13490,
											"end": 13511,
											"name": "tag",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 13490,
											"end": 13511,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13483,
											"end": 13488,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13480,
											"end": 13512,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 13470,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 13470,
											"end": 13530,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13526,
											"end": 13527,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13523,
											"end": 13524,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13516,
											"end": 13528,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13470,
											"end": 13530,
											"name": "tag",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 13470,
											"end": 13530,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13420,
											"end": 13536,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13420,
											"end": 13536,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13542,
											"end": 13662,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 13542,
											"end": 13662,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13614,
											"end": 13637,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 13631,
											"end": 13636,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13614,
											"end": 13637,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 13614,
											"end": 13637,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13614,
											"end": 13637,
											"name": "tag",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 13614,
											"end": 13637,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13607,
											"end": 13612,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13604,
											"end": 13638,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 13594,
											"end": 13656,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "402"
										},
										{
											"begin": 13594,
											"end": 13656,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13652,
											"end": 13653,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13649,
											"end": 13650,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13642,
											"end": 13654,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13594,
											"end": 13656,
											"name": "tag",
											"source": 3,
											"value": "402"
										},
										{
											"begin": 13594,
											"end": 13656,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13542,
											"end": 13662,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13542,
											"end": 13662,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13668,
											"end": 13790,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 13668,
											"end": 13790,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13741,
											"end": 13765,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "404"
										},
										{
											"begin": 13759,
											"end": 13764,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13741,
											"end": 13765,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 13741,
											"end": 13765,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13741,
											"end": 13765,
											"name": "tag",
											"source": 3,
											"value": "404"
										},
										{
											"begin": 13741,
											"end": 13765,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13734,
											"end": 13739,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13731,
											"end": 13766,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 13721,
											"end": 13784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "405"
										},
										{
											"begin": 13721,
											"end": 13784,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13780,
											"end": 13781,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13777,
											"end": 13778,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13770,
											"end": 13782,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13721,
											"end": 13784,
											"name": "tag",
											"source": 3,
											"value": "405"
										},
										{
											"begin": 13721,
											"end": 13784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13668,
											"end": 13790,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13668,
											"end": 13790,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at `_startTokenId()` (defaults to 0, e.g. 0, 1, 2, 3..). Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply. Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see `_totalMinted`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x53cbf7665c255e8eef7581b7b81baee6561880463969ba2bb1bfd475db79fc65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e64ab367338098474aec540e515947429475d8b7688ecbb0711f3fa371aa6263\",\"dweb:/ipfs/QmNTqiWVo11JVkdq2jC3twqaUnKgdJnjUJCNvQnJknheP5\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 111,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 113,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 115,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 117,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 121,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 125,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 129,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 135,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721A__IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token receiver interface.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token receiver interface.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/ERC721A.sol\":\"ERC721A__IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x53cbf7665c255e8eef7581b7b81baee6561880463969ba2bb1bfd475db79fc65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e64ab367338098474aec540e515947429475d8b7688ecbb0711f3fa371aa6263\",\"dweb:/ipfs/QmNTqiWVo11JVkdq2jC3twqaUnKgdJnjUJCNvQnJknheP5\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc721a/contracts/IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of an ERC721A compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the ERC2309 standard. See `_mintERC2309` for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721A compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the ERC2309 standard. See `_mintERC2309` for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Day50_ERC721A.sol": {
				"ast": {
					"absolutePath": "Day50_ERC721A.sol",
					"exportedSymbols": {
						"Azuki": [
							25
						],
						"ERC721A": [
							1664
						],
						"ERC721A__IERC721Receiver": [
							43
						],
						"IERC721A": [
							1873
						]
					},
					"id": 26,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": "erc721a/contracts/ERC721A.sol",
							"file": "erc721a/contracts/ERC721A.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 26,
							"sourceUnit": 1665,
							"src": "57:39:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "ERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1664,
										"src": "116:7:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "116:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 25,
							"linearizedBaseContracts": [
								25,
								1664,
								1873
							],
							"name": "Azuki",
							"nameLocation": "107:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "168:2:0",
										"statements": []
									},
									"id": 12,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "417a756b69",
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "150:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8259708f963947d28484bf669e6cdd15ac12e7d813de008356896f65b003a79b",
														"typeString": "literal_string \"Azuki\""
													},
													"value": "Azuki"
												},
												{
													"hexValue": "415a554b49",
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "159:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_184a09271b0532717108cdd656088ca8d5a200eb75d6eb742b2d77961d97dd73",
														"typeString": "literal_string \"AZUKI\""
													},
													"value": "AZUKI"
												}
											],
											"id": 9,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 6,
												"name": "ERC721A",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1664,
												"src": "142:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "142:25:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "139:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "168:0:0"
									},
									"scope": 25,
									"src": "128:42:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "223:117:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 18,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "314:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "314:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 20,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "326:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 17,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															843,
															905
														],
														"referencedDeclaration": 843,
														"src": "304:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "304:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "304:31:0"
											}
										]
									},
									"functionSelector": "a0712d68",
									"id": 24,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "183:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "196:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "188:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "188:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "187:18:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "223:0:0"
									},
									"scope": 25,
									"src": "174:166:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 26,
							"src": "98:244:0",
							"usedErrors": [
								1670,
								1673,
								1676,
								1679,
								1682,
								1685,
								1688,
								1691,
								1694,
								1697,
								1700,
								1703,
								1706,
								1709
							]
						}
					],
					"src": "32:310:0"
				},
				"id": 0
			},
			"erc721a/contracts/ERC721A.sol": {
				"ast": {
					"absolutePath": "erc721a/contracts/ERC721A.sol",
					"exportedSymbols": {
						"ERC721A": [
							1664
						],
						"ERC721A__IERC721Receiver": [
							43
						],
						"IERC721A": [
							1873
						]
					},
					"id": 1665,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 27,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:1"
						},
						{
							"absolutePath": "erc721a/contracts/IERC721A.sol",
							"file": "./IERC721A.sol",
							"id": 28,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1665,
							"sourceUnit": 1874,
							"src": "109:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 29,
								"nodeType": "StructuredDocumentation",
								"src": "135:48:1",
								"text": " @dev ERC721 token receiver interface."
							},
							"fullyImplemented": false,
							"id": 43,
							"linearizedBaseContracts": [
								43
							],
							"name": "ERC721A__IERC721Receiver",
							"nameLocation": "194:24:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "150b7a02",
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "234:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "268:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "260:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "260:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "294:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "286:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "286:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "316:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "308:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "348:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "333:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 36,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "333:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "250:108:1"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "377:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 39,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "377:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "376:8:1"
									},
									"scope": 43,
									"src": "225:160:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1665,
							"src": "184:203:1",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 45,
										"name": "IERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1873,
										"src": "905:8:1"
									},
									"id": 46,
									"nodeType": "InheritanceSpecifier",
									"src": "905:8:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 44,
								"nodeType": "StructuredDocumentation",
								"src": "389:495:1",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard,\n including the Metadata extension. Built to optimize for lower gas during batch mints.\n Assumes serials are sequentially minted starting at `_startTokenId()`\n (defaults to 0, e.g. 0, 1, 2, 3..).\n Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256)."
							},
							"fullyImplemented": true,
							"id": 1664,
							"linearizedBaseContracts": [
								1664,
								1873
							],
							"name": "ERC721A",
							"nameLocation": "894:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 54,
									"mutability": "constant",
									"name": "BITMASK_ADDRESS_DATA_ENTRY",
									"nameLocation": "993:26:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "968:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 47,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "968:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										},
										"id": 53,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1023:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 49,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1028:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "1023:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													}
												}
											],
											"id": 51,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1022:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18446744073709551616_by_1",
												"typeString": "int_const 18446744073709551616"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 52,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1034:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1022:13:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 57,
									"mutability": "constant",
									"name": "BITPOS_NUMBER_MINTED",
									"nameLocation": "1133:20:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "1108:50:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 55,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1108:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3634",
										"id": 56,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1156:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "64"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 60,
									"mutability": "constant",
									"name": "BITPOS_NUMBER_BURNED",
									"nameLocation": "1256:20:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "1231:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 58,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1231:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313238",
										"id": 59,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1279:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "128"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 63,
									"mutability": "constant",
									"name": "BITPOS_AUX",
									"nameLocation": "1371:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "1346:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 61,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1346:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313932",
										"id": 62,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1384:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "192"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 71,
									"mutability": "constant",
									"name": "BITMASK_AUX_COMPLEMENT",
									"nameLocation": "1500:22:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "1475:64:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 64,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1475:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										},
										"id": 70,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1526:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313932",
														"id": 66,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1531:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_192_by_1",
															"typeString": "int_const 192"
														},
														"value": "192"
													},
													"src": "1526:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													}
												}
											],
											"id": 68,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1525:10:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
												"typeString": "int_const 6277...(50 digits omitted)...2896"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 69,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1538:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1525:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 74,
									"mutability": "constant",
									"name": "BITPOS_START_TIMESTAMP",
									"nameLocation": "1636:22:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "1611:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 72,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1611:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313630",
										"id": 73,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1661:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_160_by_1",
											"typeString": "int_const 160"
										},
										"value": "160"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 79,
									"mutability": "constant",
									"name": "BITMASK_BURNED",
									"nameLocation": "1757:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "1732:50:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 75,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1732:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										},
										"id": 78,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 76,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1774:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323234",
											"id": 77,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1779:3:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_224_by_1",
												"typeString": "int_const 224"
											},
											"value": "224"
										},
										"src": "1774:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 82,
									"mutability": "constant",
									"name": "BITPOS_NEXT_INITIALIZED",
									"nameLocation": "1888:23:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "1863:54:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 80,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1863:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323235",
										"id": 81,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1914:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_225_by_1",
											"typeString": "int_const 225"
										},
										"value": "225"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 87,
									"mutability": "constant",
									"name": "BITMASK_NEXT_INITIALIZED",
									"nameLocation": "2019:24:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "1994:60:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 83,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1994:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										},
										"id": 86,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 84,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2046:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323235",
											"id": 85,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2051:3:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_225_by_1",
												"typeString": "int_const 225"
											},
											"value": "225"
										},
										"src": "2046:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 90,
									"mutability": "constant",
									"name": "BITPOS_EXTRA_DATA",
									"nameLocation": "2146:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "2121:48:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 88,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2121:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323332",
										"id": 89,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2166:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_232_by_1",
											"typeString": "int_const 232"
										},
										"value": "232"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 98,
									"mutability": "constant",
									"name": "BITMASK_EXTRA_DATA_COMPLEMENT",
									"nameLocation": "2287:29:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "2262:71:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 91,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2262:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										},
										"id": 97,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 92,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2320:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "323332",
														"id": 93,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2325:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_232_by_1",
															"typeString": "int_const 232"
														},
														"value": "232"
													},
													"src": "2320:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													}
												}
											],
											"id": 95,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2319:10:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
												"typeString": "int_const 6901...(62 digits omitted)...9296"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 96,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2332:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2319:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 106,
									"mutability": "constant",
									"name": "BITMASK_ADDRESS",
									"nameLocation": "2418:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "2393:57:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 99,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2393:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										},
										"id": 105,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 100,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2437:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313630",
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2442:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160_by_1",
															"typeString": "int_const 160"
														},
														"value": "160"
													},
													"src": "2437:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													}
												}
											],
											"id": 103,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2436:10:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
												"typeString": "int_const 1461...(41 digits omitted)...2976"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 104,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2449:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2436:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 109,
									"mutability": "constant",
									"name": "MAX_MINT_ERC2309_QUANTITY_LIMIT",
									"nameLocation": "2758:31:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "2733:63:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 107,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2733:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35303030",
										"id": 108,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2792:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "5000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 111,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "2870:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "2854:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 110,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2854:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 113,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "2942:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "2926:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 112,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2926:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 115,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "2994:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "2979:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 114,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2979:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 117,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "3041:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "3026:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 116,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3026:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 121,
									"mutability": "mutable",
									"name": "_packedOwnerships",
									"nameLocation": "3468:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "3432:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 120,
										"keyType": {
											"id": 118,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3440:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3432:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 119,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3451:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 125,
									"mutability": "mutable",
									"name": "_packedAddressData",
									"nameLocation": "3727:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "3691:54:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 124,
										"keyType": {
											"id": 122,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3699:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3691:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 123,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3710:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 129,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "3838:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "3802:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 128,
										"keyType": {
											"id": 126,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3810:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3802:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 127,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3821:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 135,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "3961:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "3908:71:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 134,
										"keyType": {
											"id": 130,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3916:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3908:44:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 133,
											"keyType": {
												"id": 131,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3935:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "3927:24:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 132,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "3946:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "4042:98:1",
										"statements": [
											{
												"expression": {
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 142,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "4052:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 143,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "4060:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "4052:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4052:13:1"
											},
											{
												"expression": {
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 146,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "4075:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 147,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "4085:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "4075:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "4075:17:1"
											},
											{
												"expression": {
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 150,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "4102:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 151,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "4118:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4118:15:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4102:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "4102:31:1"
											}
										]
									},
									"id": 156,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "4012:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "3998:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 136,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3998:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "4033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "4019:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 138,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4019:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3997:44:1"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4042:0:1"
									},
									"scope": 1664,
									"src": "3986:154:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "4341:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4358:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 161,
												"id": 163,
												"nodeType": "Return",
												"src": "4351:8:1"
											}
										]
									},
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "4146:125:1",
										"text": " @dev Returns the starting token ID.\n To change the starting token ID, please override this function."
									},
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "4285:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4298:2:1"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "4332:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4332:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4331:9:1"
									},
									"scope": 1664,
									"src": "4276:90:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "4496:37:1",
										"statements": [
											{
												"expression": {
													"id": 171,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 111,
													"src": "4513:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 170,
												"id": 172,
												"nodeType": "Return",
												"src": "4506:20:1"
											}
										]
									},
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "4372:63:1",
										"text": " @dev Returns the next token ID to be minted."
									},
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextTokenId",
									"nameLocation": "4449:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4461:2:1"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "4487:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4487:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4486:9:1"
									},
									"scope": 1664,
									"src": "4440:93:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1724
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "4798:247:1",
										"statements": [
											{
												"id": 188,
												"nodeType": "UncheckedBlock",
												"src": "4951:88:1",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 181,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "4982:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 182,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "4998:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4982:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 184,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "5013:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5013:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4982:46:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 180,
														"id": 187,
														"nodeType": "Return",
														"src": "4975:53:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "4539:192:1",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see `_totalMinted`."
									},
									"functionSelector": "18160ddd",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "4745:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 177,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4771:8:1"
									},
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4756:2:1"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "4789:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4789:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4788:9:1"
									},
									"scope": 1664,
									"src": "4736:309:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "5194:223:1",
										"statements": [
											{
												"id": 201,
												"nodeType": "UncheckedBlock",
												"src": "5338:73:1",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 196,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "5369:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 197,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "5385:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5385:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5369:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 195,
														"id": 200,
														"nodeType": "Return",
														"src": "5362:38:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5051:82:1",
										"text": " @dev Returns the total amount of tokens minted in the contract."
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "5147:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5159:2:1"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "5185:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5185:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5184:9:1"
									},
									"scope": 1664,
									"src": "5138:279:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "5550:36:1",
										"statements": [
											{
												"expression": {
													"id": 209,
													"name": "_burnCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 113,
													"src": "5567:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 208,
												"id": 210,
												"nodeType": "Return",
												"src": "5560:19:1"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "5423:66:1",
										"text": " @dev Returns the total number of tokens burned."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalBurned",
									"nameLocation": "5503:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5515:2:1"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5541:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5541:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5540:9:1"
									},
									"scope": 1664,
									"src": "5494:92:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1732
									],
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "5744:516:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 227,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 221,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "6033:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783031666663396137",
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6048:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33540519_by_1",
																	"typeString": "int_const 33540519"
																},
																"value": "0x01ffc9a7"
															},
															"src": "6033:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 224,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "6109:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783830616335386364",
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6124:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2158778573_by_1",
																	"typeString": "int_const 2158778573"
																},
																"value": "0x80ac58cd"
															},
															"src": "6109:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6033:101:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 228,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "6185:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30783562356531333966",
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6200:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1532892063_by_1",
																"typeString": "int_const 1532892063"
															},
															"value": "0x5b5e139f"
														},
														"src": "6185:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6033:177:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 220,
												"id": 232,
												"nodeType": "Return",
												"src": "6014:196:1"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "5592:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "5662:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 217,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5720:8:1"
									},
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "5687:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "5680:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 214,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "5680:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5679:20:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "5738:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 218,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5738:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5737:6:1"
									},
									"scope": 1664,
									"src": "5653:607:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1767
									],
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "6392:148:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 243,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "6406:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6423:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6415:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 244,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6415:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6415:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6406:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 252,
												"nodeType": "IfStatement",
												"src": "6402:60:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 249,
															"name": "BalanceQueryForZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1679,
															"src": "6434:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6434:28:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 251,
													"nodeType": "RevertStatement",
													"src": "6427:35:1"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 253,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "6479:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 255,
														"indexExpression": {
															"id": 254,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "6498:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6479:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 256,
														"name": "BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "6507:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6479:54:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 242,
												"id": 258,
												"nodeType": "Return",
												"src": "6472:61:1"
											}
										]
									},
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "6266:48:1",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "6328:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 239,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6365:8:1"
									},
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6346:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "6338:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6338:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6337:15:1"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "6383:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6383:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6382:9:1"
									},
									"scope": 1664,
									"src": "6319:221:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "6687:104:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 268,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 125,
																		"src": "6705:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 270,
																	"indexExpression": {
																		"id": 269,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 263,
																		"src": "6724:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6705:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 271,
																	"name": "BITPOS_NUMBER_MINTED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 57,
																	"src": "6734:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6705:49:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 273,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6704:51:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 274,
														"name": "BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "6758:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6704:80:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 267,
												"id": 276,
												"nodeType": "Return",
												"src": "6697:87:1"
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "6546:66:1",
										"text": " Returns the number of tokens minted by `owner`."
									},
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "6626:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6648:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "6640:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6640:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6639:15:1"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "6678:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6678:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6677:9:1"
									},
									"scope": 1664,
									"src": "6617:174:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "6954:104:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 286,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 125,
																		"src": "6972:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 288,
																	"indexExpression": {
																		"id": 287,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "6991:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6972:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 289,
																	"name": "BITPOS_NUMBER_BURNED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "7001:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6972:49:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 291,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6971:51:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 292,
														"name": "BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "7025:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6971:80:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 285,
												"id": 294,
												"nodeType": "Return",
												"src": "6964:87:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "6797:82:1",
										"text": " Returns the number of tokens burned by or on behalf of `owner`."
									},
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "6893:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6915:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "6907:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6907:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6906:15:1"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "6945:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6945:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6944:9:1"
									},
									"scope": 1664,
									"src": "6884:174:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "7234:71:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 306,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 125,
																	"src": "7258:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 308,
																"indexExpression": {
																	"id": 307,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 299,
																	"src": "7277:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7258:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 309,
																"name": "BITPOS_AUX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "7287:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7258:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 305,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7251:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 304,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "7251:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7251:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 303,
												"id": 312,
												"nodeType": "Return",
												"src": "7244:54:1"
											}
										]
									},
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "7064:102:1",
										"text": " Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used)."
									},
									"id": 314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "7180:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7196:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "7188:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7188:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7187:15:1"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "7226:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 301,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "7226:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7225:8:1"
									},
									"scope": 1664,
									"src": "7171:134:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "7540:332:1",
										"statements": [
											{
												"assignments": [
													323
												],
												"declarations": [
													{
														"constant": false,
														"id": 323,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "7558:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 350,
														"src": "7550:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 322,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7550:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 327,
												"initialValue": {
													"baseExpression": {
														"id": 324,
														"name": "_packedAddressData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "7567:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 326,
													"indexExpression": {
														"id": 325,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "7586:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7567:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7550:42:1"
											},
											{
												"assignments": [
													329
												],
												"declarations": [
													{
														"constant": false,
														"id": 329,
														"mutability": "mutable",
														"name": "auxCasted",
														"nameLocation": "7610:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 350,
														"src": "7602:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 328,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7602:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 330,
												"nodeType": "VariableDeclarationStatement",
												"src": "7602:17:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7702:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7716:16:1",
															"value": {
																"name": "aux",
																"nodeType": "YulIdentifier",
																"src": "7729:3:1"
															},
															"variableNames": [
																{
																	"name": "auxCasted",
																	"nodeType": "YulIdentifier",
																	"src": "7716:9:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 319,
														"isOffset": false,
														"isSlot": false,
														"src": "7729:3:1",
														"valueSize": 1
													},
													{
														"declaration": 329,
														"isOffset": false,
														"isSlot": false,
														"src": "7716:9:1",
														"valueSize": 1
													}
												],
												"id": 331,
												"nodeType": "InlineAssembly",
												"src": "7693:49:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 332,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "7751:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 333,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 323,
																		"src": "7761:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 334,
																		"name": "BITMASK_AUX_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 71,
																		"src": "7770:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7761:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 336,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7760:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 337,
																		"name": "auxCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 329,
																		"src": "7797:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 338,
																		"name": "BITPOS_AUX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 63,
																		"src": "7810:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7797:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 340,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7796:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7760:61:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7751:70:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "7751:70:1"
											},
											{
												"expression": {
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 344,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "7831:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 346,
														"indexExpression": {
															"id": 345,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "7850:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7831:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 347,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "7859:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7831:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 349,
												"nodeType": "ExpressionStatement",
												"src": "7831:34:1"
											}
										]
									},
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "7311:171:1",
										"text": " Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."
									},
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "7496:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7512:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "7504:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7504:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "7526:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "7519:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 318,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "7519:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7503:27:1"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7540:0:1"
									},
									"scope": 1664,
									"src": "7487:385:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 404,
										"nodeType": "Block",
										"src": "8025:1029:1",
										"statements": [
											{
												"assignments": [
													360
												],
												"declarations": [
													{
														"constant": false,
														"id": 360,
														"mutability": "mutable",
														"name": "curr",
														"nameLocation": "8043:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 404,
														"src": "8035:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 359,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8035:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 362,
												"initialValue": {
													"id": 361,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 354,
													"src": "8050:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8035:22:1"
											},
											{
												"id": 400,
												"nodeType": "UncheckedBlock",
												"src": "8068:932:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 363,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "8096:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8096:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 365,
																"name": "curr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 360,
																"src": "8115:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8096:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 399,
														"nodeType": "IfStatement",
														"src": "8092:898:1",
														"trueBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 367,
																	"name": "curr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "8141:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 368,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "8148:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8141:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 398,
															"nodeType": "IfStatement",
															"src": "8137:853:1",
															"trueBody": {
																"id": 397,
																"nodeType": "Block",
																"src": "8163:827:1",
																"statements": [
																	{
																		"assignments": [
																			371
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 371,
																				"mutability": "mutable",
																				"name": "packed",
																				"nameLocation": "8193:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 397,
																				"src": "8185:14:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 370,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "8185:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 375,
																		"initialValue": {
																			"baseExpression": {
																				"id": 372,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 121,
																				"src": "8202:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 374,
																			"indexExpression": {
																				"id": 373,
																				"name": "curr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 360,
																				"src": "8220:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8202:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "8185:40:1"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 380,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 378,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 376,
																					"name": "packed",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 371,
																					"src": "8289:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&",
																				"rightExpression": {
																					"id": 377,
																					"name": "BITMASK_BURNED",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 79,
																					"src": "8298:14:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8289:23:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 379,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8316:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "8289:28:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 396,
																		"nodeType": "IfStatement",
																		"src": "8285:687:1",
																		"trueBody": {
																			"id": 395,
																			"nodeType": "Block",
																			"src": "8319:653:1",
																			"statements": [
																				{
																					"body": {
																						"id": 391,
																						"nodeType": "Block",
																						"src": "8820:91:1",
																						"statements": [
																							{
																								"expression": {
																									"id": 389,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 384,
																										"name": "packed",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 371,
																										"src": "8850:6:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"baseExpression": {
																											"id": 385,
																											"name": "_packedOwnerships",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 121,
																											"src": "8859:17:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																												"typeString": "mapping(uint256 => uint256)"
																											}
																										},
																										"id": 388,
																										"indexExpression": {
																											"id": 387,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "UnaryOperation",
																											"operator": "--",
																											"prefix": true,
																											"src": "8877:6:1",
																											"subExpression": {
																												"id": 386,
																												"name": "curr",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 360,
																												"src": "8879:4:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "8859:25:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "8850:34:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 390,
																								"nodeType": "ExpressionStatement",
																								"src": "8850:34:1"
																							}
																						]
																					},
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 383,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 381,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 371,
																							"src": "8807:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 382,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "8817:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "8807:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 392,
																					"nodeType": "WhileStatement",
																					"src": "8800:111:1"
																				},
																				{
																					"expression": {
																						"id": 393,
																						"name": "packed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 371,
																						"src": "8943:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"functionReturnParameters": 358,
																					"id": 394,
																					"nodeType": "Return",
																					"src": "8936:13:1"
																				}
																			]
																		}
																	}
																]
															}
														}
													}
												]
											},
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 401,
														"name": "OwnerQueryForNonexistentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1688,
														"src": "9016:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9016:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 403,
												"nodeType": "RevertStatement",
												"src": "9009:38:1"
											}
										]
									},
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "7878:66:1",
										"text": " Returns the packed ownership data of `tokenId`."
									},
									"id": 405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packedOwnershipOf",
									"nameLocation": "7958:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7985:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "7977:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7977:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7976:17:1"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "8016:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8015:9:1"
									},
									"scope": 1664,
									"src": "7949:1105:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "9242:259:1",
										"statements": [
											{
												"expression": {
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 414,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "9252:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1718_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 416,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1711,
														"src": "9252:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 421,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 408,
																		"src": "9285:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9277:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 419,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "9277:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9269:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 417,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9269:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9269:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9252:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "9252:41:1"
											},
											{
												"expression": {
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 426,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "9303:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1718_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 428,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1713,
														"src": "9303:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 431,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 408,
																	"src": "9337:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 432,
																	"name": "BITPOS_START_TIMESTAMP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 74,
																	"src": "9347:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9337:32:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9330:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 429,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "9330:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9330:40:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "9303:67:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "9303:67:1"
											},
											{
												"expression": {
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 437,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "9380:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1718_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 439,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "burned",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1715,
														"src": "9380:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 440,
																"name": "packed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 408,
																"src": "9399:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 441,
																"name": "BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "9408:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9399:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9426:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9399:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9380:47:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "9380:47:1"
											},
											{
												"expression": {
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 447,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "9437:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1718_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "extraData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1717,
														"src": "9437:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 452,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 408,
																	"src": "9466:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 453,
																	"name": "BITPOS_EXTRA_DATA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 90,
																	"src": "9476:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9466:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9459:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint24_$",
																"typeString": "type(uint24)"
															},
															"typeName": {
																"id": 450,
																"name": "uint24",
																"nodeType": "ElementaryTypeName",
																"src": "9459:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9459:35:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "9437:57:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "9437:57:1"
											}
										]
									},
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "9060:78:1",
										"text": " Returns the unpacked `TokenOwnership` struct from `packed`."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unpackedOwnership",
									"nameLocation": "9152:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "9179:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "9171:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9171:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9170:16:1"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "ownership",
												"nameLocation": "9231:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "9209:31:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1718_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 411,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 410,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1718,
														"src": "9209:14:1"
													},
													"referencedDeclaration": 1718,
													"src": "9209:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1718_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9208:33:1"
									},
									"scope": 1664,
									"src": "9143:358:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "9670:68:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 469,
																"name": "_packedOwnerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "9706:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 471,
															"indexExpression": {
																"id": 470,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "9724:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9706:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 468,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "9687:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$1718_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9687:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1718_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 467,
												"id": 473,
												"nodeType": "Return",
												"src": "9680:51:1"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "9507:75:1",
										"text": " Returns the unpacked `TokenOwnership` struct at `index`."
									},
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipAt",
									"nameLocation": "9596:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9617:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "9609:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9609:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9608:15:1"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "9647:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1718_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 465,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 464,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1718,
														"src": "9647:14:1"
													},
													"referencedDeclaration": 1718,
													"src": "9647:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1718_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9646:23:1"
									},
									"scope": 1664,
									"src": "9587:151:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "9902:128:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 481,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 121,
															"src": "9916:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 483,
														"indexExpression": {
															"id": 482,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "9934:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9916:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 484,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9944:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9916:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 495,
												"nodeType": "IfStatement",
												"src": "9912:112:1",
												"trueBody": {
													"id": 494,
													"nodeType": "Block",
													"src": "9947:77:1",
													"statements": [
														{
															"expression": {
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 486,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 121,
																		"src": "9961:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 488,
																	"indexExpression": {
																		"id": 487,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "9979:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9961:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 490,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 478,
																			"src": "10007:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 489,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "9988:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9988:25:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9961:52:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 493,
															"nodeType": "ExpressionStatement",
															"src": "9961:52:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "9744:97:1",
										"text": " @dev Initializes the ownership slot minted at `index` for efficiency purposes."
									},
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializeOwnershipAt",
									"nameLocation": "9855:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9886:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "9878:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9877:15:1"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9902:0:1"
									},
									"scope": 1664,
									"src": "9846:184:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "10311:71:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 508,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 500,
																	"src": "10366:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 507,
																"name": "_packedOwnershipOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "10347:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10347:27:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "10328:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$1718_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10328:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1718_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 505,
												"id": 511,
												"nodeType": "Return",
												"src": "10321:54:1"
											}
										]
									},
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "10036:185:1",
										"text": " Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around in the collection over time."
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipOf",
									"nameLocation": "10235:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10256:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "10248:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10248:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10247:17:1"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "10288:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1718_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 503,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 502,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1718,
														"src": "10288:14:1"
													},
													"referencedDeclaration": 1718,
													"src": "10288:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1718_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10287:23:1"
									},
									"scope": 1664,
									"src": "10226:156:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "10556:344:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "10575:319:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10685:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "10698:5:1"
																	},
																	{
																		"name": "BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "10705:15:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10694:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10694:27:1"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "10685:5:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10812:72:1",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "10825:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "BITPOS_START_TIMESTAMP",
																						"nodeType": "YulIdentifier",
																						"src": "10839:22:1"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "timestamp",
																							"nodeType": "YulIdentifier",
																							"src": "10863:9:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10863:11:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "10835:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10835:40:1"
																			},
																			{
																				"name": "flags",
																				"nodeType": "YulIdentifier",
																				"src": "10877:5:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "10832:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10832:51:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "10822:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10822:62:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "10812:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 106,
														"isOffset": false,
														"isSlot": false,
														"src": "10705:15:1",
														"valueSize": 1
													},
													{
														"declaration": 74,
														"isOffset": false,
														"isSlot": false,
														"src": "10839:22:1",
														"valueSize": 1
													},
													{
														"declaration": 518,
														"isOffset": false,
														"isSlot": false,
														"src": "10877:5:1",
														"valueSize": 1
													},
													{
														"declaration": 516,
														"isOffset": false,
														"isSlot": false,
														"src": "10685:5:1",
														"valueSize": 1
													},
													{
														"declaration": 516,
														"isOffset": false,
														"isSlot": false,
														"src": "10698:5:1",
														"valueSize": 1
													},
													{
														"declaration": 516,
														"isOffset": false,
														"isSlot": false,
														"src": "10825:5:1",
														"valueSize": 1
													},
													{
														"declaration": 521,
														"isOffset": false,
														"isSlot": false,
														"src": "10812:6:1",
														"valueSize": 1
													}
												],
												"id": 523,
												"nodeType": "InlineAssembly",
												"src": "10566:328:1"
											}
										]
									},
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "10388:67:1",
										"text": " @dev Packs ownership data into a single uint256."
									},
									"id": 525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packOwnershipData",
									"nameLocation": "10469:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10496:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "10488:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10488:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "flags",
												"nameLocation": "10511:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "10503:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10503:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10487:30:1"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "10548:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "10540:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10540:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10539:16:1"
									},
									"scope": 1664,
									"src": "10460:440:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1775
									],
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "11030:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 539,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 528,
																			"src": "11082:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 538,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "11063:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11063:27:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11055:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 536,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "11055:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11055:36:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 535,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11047:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 534,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11047:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11047:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 533,
												"id": 543,
												"nodeType": "Return",
												"src": "11040:52:1"
											}
										]
									},
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "10906:46:1",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "10966:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 530,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11003:8:1"
									},
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10982:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "10974:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10974:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10973:17:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "11021:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11021:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11020:9:1"
									},
									"scope": 1664,
									"src": "10957:142:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1847
									],
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "11230:29:1",
										"statements": [
											{
												"expression": {
													"id": 552,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 115,
													"src": "11247:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 551,
												"id": 553,
												"nodeType": "Return",
												"src": "11240:12:1"
											}
										]
									},
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "11105:51:1",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "11170:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 548,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11197:8:1"
									},
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11174:2:1"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "11215:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 549,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11215:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11214:15:1"
									},
									"scope": 1664,
									"src": "11161:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1853
									],
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "11394:31:1",
										"statements": [
											{
												"expression": {
													"id": 562,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 117,
													"src": "11411:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 561,
												"id": 563,
												"nodeType": "Return",
												"src": "11404:14:1"
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "11265:53:1",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "11332:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 558,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11361:8:1"
									},
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11338:2:1"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "11379:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 559,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11379:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11378:15:1"
									},
									"scope": 1664,
									"src": "11323:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1861
									],
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "11579:225:1",
										"statements": [
											{
												"condition": {
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "11593:17:1",
													"subExpression": {
														"arguments": [
															{
																"id": 575,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 568,
																"src": "11602:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 574,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "11594:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11594:16:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 581,
												"nodeType": "IfStatement",
												"src": "11589:59:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 578,
															"name": "URIQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1703,
															"src": "11619:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11619:29:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 580,
													"nodeType": "RevertStatement",
													"src": "11612:36:1"
												}
											},
											{
												"assignments": [
													583
												],
												"declarations": [
													{
														"constant": false,
														"id": 583,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "11673:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 607,
														"src": "11659:21:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 582,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "11659:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 586,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 584,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 617,
														"src": "11683:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11683:10:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11659:34:1"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 589,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 583,
																		"src": "11716:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11710:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 587,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "11710:5:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11710:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "11710:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11735:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "11710:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11795:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11710:87:1",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 598,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 583,
																		"src": "11763:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 600,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 568,
																				"src": "11782:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 599,
																			"name": "_toString",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1663,
																			"src": "11772:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11772:18:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 596,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "11746:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "11746:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11746:45:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11739:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 594,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "11739:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 603,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11739:53:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 573,
												"id": 606,
												"nodeType": "Return",
												"src": "11703:94:1"
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "11431:55:1",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "11500:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 570,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11546:8:1"
									},
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "11509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11509:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11508:17:1"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "11564:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 571,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11564:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11563:15:1"
									},
									"scope": 1664,
									"src": "11491:313:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 616,
										"nodeType": "Block",
										"src": "12115:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12132:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 613,
												"id": 615,
												"nodeType": "Return",
												"src": "12125:9:1"
											}
										]
									},
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "11810:234:1",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, it can be overridden in child contracts."
									},
									"id": 617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "12058:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12066:2:1"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "12100:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 611,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12100:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12099:15:1"
									},
									"scope": 1664,
									"src": "12049:92:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "12324:230:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "12408:140:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12483:55:1",
															"value": {
																"arguments": [
																	{
																		"name": "BITPOS_NEXT_INITIALIZED",
																		"nodeType": "YulIdentifier",
																		"src": "12497:23:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "quantity",
																				"nodeType": "YulIdentifier",
																				"src": "12525:8:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12535:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12522:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12522:15:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "12493:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12493:45:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12483:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 82,
														"isOffset": false,
														"isSlot": false,
														"src": "12497:23:1",
														"valueSize": 1
													},
													{
														"declaration": 620,
														"isOffset": false,
														"isSlot": false,
														"src": "12525:8:1",
														"valueSize": 1
													},
													{
														"declaration": 623,
														"isOffset": false,
														"isSlot": false,
														"src": "12483:6:1",
														"valueSize": 1
													}
												],
												"id": 625,
												"nodeType": "InlineAssembly",
												"src": "12399:149:1"
											}
										]
									},
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "12147:86:1",
										"text": " @dev Returns the `nextInitialized` flag set if `quantity` equals 1."
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextInitializedFlag",
									"nameLocation": "12247:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "12276:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "12268:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12268:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12267:18:1"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "12316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "12308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12307:16:1"
									},
									"scope": 1664,
									"src": "12238:316:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1815
									],
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "12673:314:1",
										"statements": [
											{
												"assignments": [
													637
												],
												"declarations": [
													{
														"constant": false,
														"id": 637,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "12691:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 670,
														"src": "12683:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 636,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12683:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 641,
												"initialValue": {
													"arguments": [
														{
															"id": 639,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "12707:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 638,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "12699:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12699:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12683:32:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 642,
															"name": "_msgSenderERC721A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1653,
															"src": "12730:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12730:19:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 644,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "12753:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12730:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 657,
												"nodeType": "IfStatement",
												"src": "12726:172:1",
												"trueBody": {
													"condition": {
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "12776:45:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 647,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "12794:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 648,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1653,
																		"src": "12801:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12801:19:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 646,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 745,
																"src": "12777:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12777:44:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 656,
													"nodeType": "IfStatement",
													"src": "12772:126:1",
													"trueBody": {
														"id": 655,
														"nodeType": "Block",
														"src": "12823:75:1",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 652,
																		"name": "ApprovalCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1670,
																		"src": "12848:33:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12848:35:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 654,
																"nodeType": "RevertStatement",
																"src": "12841:42:1"
															}
														]
													}
												}
											},
											{
												"expression": {
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 658,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "12908:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 660,
														"indexExpression": {
															"id": 659,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "12924:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12908:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 661,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "12935:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12908:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 663,
												"nodeType": "ExpressionStatement",
												"src": "12908:29:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 665,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "12961:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "12968:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 667,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "12972:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 664,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1750,
														"src": "12952:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12952:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "EmitStatement",
												"src": "12947:33:1"
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "12560:46:1",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "12620:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 634,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12664:8:1"
									},
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12636:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "12628:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12628:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12648:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "12640:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12640:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12627:29:1"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12673:0:1"
									},
									"scope": 1664,
									"src": "12611:376:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1831
									],
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "13125:123:1",
										"statements": [
											{
												"condition": {
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "13139:17:1",
													"subExpression": {
														"arguments": [
															{
																"id": 681,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "13148:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 680,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "13140:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 682,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13140:16:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 687,
												"nodeType": "IfStatement",
												"src": "13135:64:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 684,
															"name": "ApprovalQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1673,
															"src": "13165:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13165:34:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 686,
													"nodeType": "RevertStatement",
													"src": "13158:41:1"
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 688,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "13217:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 690,
													"indexExpression": {
														"id": 689,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "13233:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13217:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 679,
												"id": 691,
												"nodeType": "Return",
												"src": "13210:31:1"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "12993:50:1",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "13057:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 676,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13098:8:1"
									},
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13077:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "13069:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13068:17:1"
									},
									"returnParameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "13116:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13115:9:1"
									},
									"scope": 1664,
									"src": "13048:200:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1823
									],
									"body": {
										"id": 726,
										"nodeType": "Block",
										"src": "13399:219:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "13413:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 703,
															"name": "_msgSenderERC721A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1653,
															"src": "13425:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 704,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13425:19:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13413:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 709,
												"nodeType": "IfStatement",
												"src": "13409:61:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 706,
															"name": "ApproveToCaller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1676,
															"src": "13453:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13453:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 708,
													"nodeType": "RevertStatement",
													"src": "13446:24:1"
												}
											},
											{
												"expression": {
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 710,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "13481:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 714,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 711,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1653,
																	"src": "13500:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13500:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13481:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 715,
														"indexExpression": {
															"id": 713,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "13521:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13481:49:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 716,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "13533:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13481:60:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "13481:60:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 720,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1653,
																"src": "13571:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13571:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 722,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "13592:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 723,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 698,
															"src": "13602:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 719,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1759,
														"src": "13556:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13556:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 725,
												"nodeType": "EmitStatement",
												"src": "13551:60:1"
											}
										]
									},
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "13254:56:1",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "13324:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 700,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13390:8:1"
									},
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13350:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "13342:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13342:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13365:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "13360:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 697,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13360:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13341:33:1"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13399:0:1"
									},
									"scope": 1664,
									"src": "13315:303:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1841
									],
									"body": {
										"id": 744,
										"nodeType": "Block",
										"src": "13787:59:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 738,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 135,
															"src": "13804:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 740,
														"indexExpression": {
															"id": 739,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "13823:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13804:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 742,
													"indexExpression": {
														"id": 741,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "13830:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13804:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 737,
												"id": 743,
												"nodeType": "Return",
												"src": "13797:42:1"
											}
										]
									},
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "13624:55:1",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "13693:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 734,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13763:8:1"
									},
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13718:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "13710:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13710:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13733:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "13725:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13709:33:1"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "13781:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 735,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13781:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13780:6:1"
									},
									"scope": 1664,
									"src": "13684:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1797
									],
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "14035:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 757,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "14062:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 758,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "14068:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 759,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "14072:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14081:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 756,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															764,
															802
														],
														"referencedDeclaration": 802,
														"src": "14045:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14045:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "14045:39:1"
											}
										]
									},
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "13852:55:1",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "13921:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 754,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14026:8:1"
									},
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13955:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "13947:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13947:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13977:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "13969:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13969:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13997:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "13989:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13989:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13937:73:1"
									},
									"returnParameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14035:0:1"
									},
									"scope": 1664,
									"src": "13912:179:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1787
									],
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "14308:237:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 778,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "14331:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 779,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "14337:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 780,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "14341:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 777,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1308,
														"src": "14318:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14318:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 782,
												"nodeType": "ExpressionStatement",
												"src": "14318:31:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 783,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "14363:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "14363:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 785,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "14363:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 786,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14381:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14363:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 800,
												"nodeType": "IfStatement",
												"src": "14359:180:1",
												"trueBody": {
													"condition": {
														"id": 794,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "14400:57:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 789,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "14432:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 790,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 769,
																	"src": "14438:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 791,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 771,
																	"src": "14442:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 792,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "14451:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 788,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1527,
																"src": "14401:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14401:56:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 799,
													"nodeType": "IfStatement",
													"src": "14396:143:1",
													"trueBody": {
														"id": 798,
														"nodeType": "Block",
														"src": "14459:80:1",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 795,
																		"name": "TransferToNonERC721ReceiverImplementer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1697,
																		"src": "14484:38:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14484:40:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 797,
																"nodeType": "RevertStatement",
																"src": "14477:47:1"
															}
														]
													}
												}
											}
										]
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "14097:55:1",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "14166:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 775,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14299:8:1"
									},
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14200:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "14192:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14192:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14222:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "14214:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14214:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14242:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "14234:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14234:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "14272:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "14259:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 772,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14259:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14182:101:1"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14308:0:1"
									},
									"scope": 1664,
									"src": "14157:388:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "14854:205:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 810,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "14883:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14883:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 812,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "14902:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14883:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 814,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "14925:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 815,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "14935:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14925:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "14883:65:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 818,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "14985:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 820,
																"indexExpression": {
																	"id": 819,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "15003:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14985:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 821,
																"name": "BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "15014:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14985:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15032:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "14985:48:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14883:150:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 809,
												"id": 826,
												"nodeType": "Return",
												"src": "14864:169:1"
											}
										]
									},
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "14551:235:1",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),"
									},
									"id": 828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "14800:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14816:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "14808:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14808:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14807:17:1"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "14848:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 807,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14848:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14847:6:1"
									},
									"scope": 1664,
									"src": "14791:268:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "15196:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 837,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "15216:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 838,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "15220:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15230:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 836,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															843,
															905
														],
														"referencedDeclaration": 905,
														"src": "15206:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15206:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 841,
												"nodeType": "ExpressionStatement",
												"src": "15206:27:1"
											}
										]
									},
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "15065:68:1",
										"text": " @dev Equivalent to `_safeMint(to, quantity, '')`."
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "15147:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15165:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "15157:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15157:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "15177:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "15169:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15169:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15156:30:1"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15196:0:1"
									},
									"scope": 1664,
									"src": "15138:102:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "15749:553:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 854,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "15765:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "15769:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 853,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "15759:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15759:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "15759:19:1"
											},
											{
												"id": 903,
												"nodeType": "UncheckedBlock",
												"src": "15789:507:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 858,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 846,
																		"src": "15817:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "15817:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "15817:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15835:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15817:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 902,
														"nodeType": "IfStatement",
														"src": "15813:473:1",
														"trueBody": {
															"id": 901,
															"nodeType": "Block",
															"src": "15838:448:1",
															"statements": [
																{
																	"assignments": [
																		864
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 864,
																			"mutability": "mutable",
																			"name": "end",
																			"nameLocation": "15864:3:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 901,
																			"src": "15856:11:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 863,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "15856:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 866,
																	"initialValue": {
																		"id": 865,
																		"name": "_currentIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 111,
																		"src": "15870:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "15856:27:1"
																},
																{
																	"assignments": [
																		868
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 868,
																			"mutability": "mutable",
																			"name": "index",
																			"nameLocation": "15909:5:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 901,
																			"src": "15901:13:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 867,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "15901:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 872,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 869,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 864,
																			"src": "15917:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 870,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 848,
																			"src": "15923:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15917:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "15901:30:1"
																},
																{
																	"body": {
																		"id": 889,
																		"nodeType": "Block",
																		"src": "15952:205:1",
																		"statements": [
																			{
																				"condition": {
																					"id": 883,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "15978:63:1",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 876,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "16018:1:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 875,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "16010:7:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 874,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "16010:7:1",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 877,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16010:10:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 878,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 846,
																								"src": "16022:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 880,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "16026:7:1",
																								"subExpression": {
																									"id": 879,
																									"name": "index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 868,
																									"src": "16026:5:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 881,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 850,
																								"src": "16035:5:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 873,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1527,
																							"src": "15979:30:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 882,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "15979:62:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 888,
																				"nodeType": "IfStatement",
																				"src": "15974:165:1",
																				"trueBody": {
																					"id": 887,
																					"nodeType": "Block",
																					"src": "16043:96:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 884,
																									"name": "TransferToNonERC721ReceiverImplementer",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1697,
																									"src": "16076:38:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$__$returns$__$",
																										"typeString": "function () pure"
																									}
																								},
																								"id": 885,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16076:40:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 886,
																							"nodeType": "RevertStatement",
																							"src": "16069:47:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 890,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 868,
																			"src": "16165:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 891,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 864,
																			"src": "16173:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16165:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 893,
																	"nodeType": "DoWhileStatement",
																	"src": "15949:229:1"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 894,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 111,
																			"src": "16241:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 895,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 864,
																			"src": "16258:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16241:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 900,
																	"nodeType": "IfStatement",
																	"src": "16237:34:1",
																	"trueBody": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 897,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "16263:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16263:8:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 899,
																		"nodeType": "ExpressionStatement",
																		"src": "16263:8:1"
																	}
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "15246:390:1",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n   {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n See {_mint}.\n Emits a {Transfer} event for each mint."
									},
									"id": 905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "15650:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15677:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "15669:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "15697:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "15689:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15689:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "15728:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "15715:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 849,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15715:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15659:80:1"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15749:0:1"
									},
									"scope": 1664,
									"src": "15641:661:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "16617:1438:1",
										"statements": [
											{
												"assignments": [
													914
												],
												"declarations": [
													{
														"constant": false,
														"id": 914,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "16635:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "16627:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 913,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16627:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 916,
												"initialValue": {
													"id": 915,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 111,
													"src": "16650:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16627:36:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 917,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "16677:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16691:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16683:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 918,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16683:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16683:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16677:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 926,
												"nodeType": "IfStatement",
												"src": "16673:48:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 923,
															"name": "MintToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1682,
															"src": "16702:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 924,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16702:19:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 925,
													"nodeType": "RevertStatement",
													"src": "16695:26:1"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 927,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "16735:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 928,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16747:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16735:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 933,
												"nodeType": "IfStatement",
												"src": "16731:44:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 930,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1685,
															"src": "16757:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16757:18:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 932,
													"nodeType": "RevertStatement",
													"src": "16750:25:1"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16816:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16808:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 935,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "16808:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16808:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 939,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "16820:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 940,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "16824:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 941,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "16838:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 934,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1630,
														"src": "16786:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16786:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "ExpressionStatement",
												"src": "16786:61:1"
											},
											{
												"id": 1007,
												"nodeType": "UncheckedBlock",
												"src": "17030:949:1",
												"statements": [
													{
														"expression": {
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 944,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 125,
																	"src": "17250:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 946,
																"indexExpression": {
																	"id": 945,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "17269:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "17250:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 947,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "17276:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 950,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 948,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "17289:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 949,
																							"name": "BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 57,
																							"src": "17294:20:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "17289:25:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 951,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "17288:27:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 952,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "17318:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "17288:31:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 954,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "17287:33:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17276:44:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17250:70:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 957,
														"nodeType": "ExpressionStatement",
														"src": "17250:70:1"
													},
													{
														"expression": {
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 958,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "17556:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 960,
																"indexExpression": {
																	"id": 959,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 914,
																	"src": "17574:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "17556:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 962,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 908,
																		"src": "17626:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 974,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 964,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "17667:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 963,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 627,
																				"src": "17646:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 965,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17646:30:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 969,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "17702:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 968,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "17694:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 967,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "17694:7:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 970,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17694:10:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 971,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 908,
																					"src": "17706:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 972,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "17710:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 966,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1604,
																				"src": "17679:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17679:33:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17646:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 961,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 525,
																	"src": "17590:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17590:136:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17556:170:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 977,
														"nodeType": "ExpressionStatement",
														"src": "17556:170:1"
													},
													{
														"assignments": [
															979
														],
														"declarations": [
															{
																"constant": false,
																"id": 979,
																"mutability": "mutable",
																"name": "tokenId",
																"nameLocation": "17749:7:1",
																"nodeType": "VariableDeclaration",
																"scope": 1007,
																"src": "17741:15:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 978,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17741:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 981,
														"initialValue": {
															"id": 980,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "17759:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "17741:30:1"
													},
													{
														"assignments": [
															983
														],
														"declarations": [
															{
																"constant": false,
																"id": 983,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "17793:3:1",
																"nodeType": "VariableDeclaration",
																"scope": 1007,
																"src": "17785:11:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 982,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17785:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 987,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 984,
																"name": "startTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "17799:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 985,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "17814:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17799:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "17785:37:1"
													},
													{
														"body": {
															"id": 998,
															"nodeType": "Block",
															"src": "17839:73:1",
															"statements": [
																{
																	"eventCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "30",
																						"id": 991,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17879:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						}
																					],
																					"id": 990,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "17871:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 989,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "17871:7:1",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 992,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "17871:10:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 993,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 908,
																				"src": "17883:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 995,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "++",
																				"prefix": false,
																				"src": "17887:9:1",
																				"subExpression": {
																					"id": 994,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 979,
																					"src": "17887:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 988,
																			"name": "Transfer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1741,
																			"src": "17862:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 996,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17862:35:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 997,
																	"nodeType": "EmitStatement",
																	"src": "17857:40:1"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 999,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 979,
																"src": "17920:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1000,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "17930:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17920:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1002,
														"nodeType": "DoWhileStatement",
														"src": "17836:99:1"
													},
													{
														"expression": {
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1003,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "17949:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1004,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "17965:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17949:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1006,
														"nodeType": "ExpressionStatement",
														"src": "17949:19:1"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18017:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18009:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1009,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18009:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18009:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1013,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "18021:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1014,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "18025:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1015,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "18039:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1008,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "17988:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17988:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1017,
												"nodeType": "ExpressionStatement",
												"src": "17988:60:1"
											}
										]
									},
									"documentation": {
										"id": 906,
										"nodeType": "StructuredDocumentation",
										"src": "16308:250:1",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event for each mint."
									},
									"id": 1019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "16572:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16586:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "16578:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16578:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "16598:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "16590:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16590:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16577:30:1"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16617:0:1"
									},
									"scope": 1664,
									"src": "16563:1492:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1130,
										"nodeType": "Block",
										"src": "18956:1372:1",
										"statements": [
											{
												"assignments": [
													1028
												],
												"declarations": [
													{
														"constant": false,
														"id": 1028,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "18974:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 1130,
														"src": "18966:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1027,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18966:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1030,
												"initialValue": {
													"id": 1029,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 111,
													"src": "18989:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18966:36:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1031,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "19016:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1034,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19030:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19022:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1032,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "19022:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1035,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19022:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19016:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1040,
												"nodeType": "IfStatement",
												"src": "19012:48:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1037,
															"name": "MintToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1682,
															"src": "19041:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1038,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19041:19:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1039,
													"nodeType": "RevertStatement",
													"src": "19034:26:1"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1041,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "19074:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1042,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19086:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19074:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1047,
												"nodeType": "IfStatement",
												"src": "19070:44:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1044,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1685,
															"src": "19096:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19096:18:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1046,
													"nodeType": "RevertStatement",
													"src": "19089:25:1"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1048,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "19128:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1049,
														"name": "MAX_MINT_ERC2309_QUANTITY_LIMIT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "19139:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19128:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1054,
												"nodeType": "IfStatement",
												"src": "19124:88:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1051,
															"name": "MintERC2309QuantityExceedsLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "19179:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1052,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19179:33:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1053,
													"nodeType": "RevertStatement",
													"src": "19172:40:1"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19253:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19245:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1056,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19245:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19245:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1060,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "19257:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1061,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "19261:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1062,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "19275:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1055,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1630,
														"src": "19223:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19223:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "19223:61:1"
											},
											{
												"id": 1119,
												"nodeType": "UncheckedBlock",
												"src": "19393:859:1",
												"statements": [
													{
														"expression": {
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1065,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 125,
																	"src": "19613:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1067,
																"indexExpression": {
																	"id": 1066,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1022,
																	"src": "19632:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "19613:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1068,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1024,
																	"src": "19639:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1071,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1069,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "19652:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1070,
																							"name": "BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 57,
																							"src": "19657:20:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "19652:25:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1072,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "19651:27:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1073,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19681:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "19651:31:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1075,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "19650:33:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19639:44:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19613:70:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1078,
														"nodeType": "ExpressionStatement",
														"src": "19613:70:1"
													},
													{
														"expression": {
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1079,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "19919:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1081,
																"indexExpression": {
																	"id": 1080,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1028,
																	"src": "19937:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "19919:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1083,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1022,
																		"src": "19989:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1085,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1024,
																					"src": "20030:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1084,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 627,
																				"src": "20009:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1086,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "20009:30:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1090,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "20065:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1089,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "20057:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1088,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "20057:7:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1091,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "20057:10:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1092,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1022,
																					"src": "20069:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1093,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "20073:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1087,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1604,
																				"src": "20042:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1094,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "20042:33:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "20009:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1082,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 525,
																	"src": "19953:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19953:136:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19919:170:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1098,
														"nodeType": "ExpressionStatement",
														"src": "19919:170:1"
													},
													{
														"eventCall": {
															"arguments": [
																{
																	"id": 1100,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1028,
																	"src": "20129:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1101,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1028,
																			"src": "20143:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1102,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1024,
																			"src": "20158:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "20143:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20169:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "20143:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20180:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "20172:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1106,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "20172:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20172:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1110,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1022,
																	"src": "20184:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1099,
																"name": "ConsecutiveTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1872,
																"src": "20109:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
																	"typeString": "function (uint256,uint256,address,address)"
																}
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20109:78:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1112,
														"nodeType": "EmitStatement",
														"src": "20104:83:1"
													},
													{
														"expression": {
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1113,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "20202:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1114,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1028,
																	"src": "20218:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1115,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1024,
																	"src": "20233:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20218:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20202:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1118,
														"nodeType": "ExpressionStatement",
														"src": "20202:39:1"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20290:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20282:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1121,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20282:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20282:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1125,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "20294:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1126,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "20298:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1127,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "20312:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1120,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "20261:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20261:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "20261:60:1"
											}
										]
									},
									"documentation": {
										"id": 1020,
										"nodeType": "StructuredDocumentation",
										"src": "18061:829:1",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n This function is intended for efficient minting only during contract creation.\n It emits only one {ConsecutiveTransfer} as defined in\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n instead of a sequence of {Transfer} event(s).\n Calling this function outside of contract creation WILL make your contract\n non-compliant with the ERC721 standard.\n For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n {ConsecutiveTransfer} event is only permissible during contract creation.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {ConsecutiveTransfer} event."
									},
									"id": 1131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintERC2309",
									"nameLocation": "18904:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "18925:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "18917:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18917:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "18937:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "18929:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18929:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18916:30:1"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18956:0:1"
									},
									"scope": 1664,
									"src": "18895:1433:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1148,
										"nodeType": "Block",
										"src": "20586:487:1",
										"statements": [
											{
												"assignments": [
													1144
												],
												"declarations": [
													{
														"constant": false,
														"id": 1144,
														"mutability": "mutable",
														"name": "tokenApprovalsPtr",
														"nameLocation": "20632:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 1148,
														"src": "20596:53:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														},
														"typeName": {
															"id": 1143,
															"keyType": {
																"id": 1141,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "20604:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Mapping",
															"src": "20596:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															},
															"valueType": {
																"id": 1142,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20615:7:1",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1146,
												"initialValue": {
													"id": 1145,
													"name": "_tokenApprovals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 129,
													"src": "20652:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
														"typeString": "mapping(uint256 => address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20596:71:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "20774:293:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20828:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "tokenId",
																		"nodeType": "YulIdentifier",
																		"src": "20834:7:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20821:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20821:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20821:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20862:4:1",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "tokenApprovalsPtr.slot",
																		"nodeType": "YulIdentifier",
																		"src": "20868:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20855:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20855:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20855:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20904:44:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20937:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20943:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "20927:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20927:21:1"
															},
															"variableNames": [
																{
																	"name": "approvedAddressSlot",
																	"nodeType": "YulIdentifier",
																	"src": "20904:19:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21012:45:1",
															"value": {
																"arguments": [
																	{
																		"name": "approvedAddressSlot",
																		"nodeType": "YulIdentifier",
																		"src": "21037:19:1"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "21031:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21031:26:1"
															},
															"variableNames": [
																{
																	"name": "approvedAddress",
																	"nodeType": "YulIdentifier",
																	"src": "21012:15:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1139,
														"isOffset": false,
														"isSlot": false,
														"src": "21012:15:1",
														"valueSize": 1
													},
													{
														"declaration": 1137,
														"isOffset": false,
														"isSlot": false,
														"src": "20904:19:1",
														"valueSize": 1
													},
													{
														"declaration": 1137,
														"isOffset": false,
														"isSlot": false,
														"src": "21037:19:1",
														"valueSize": 1
													},
													{
														"declaration": 1144,
														"isOffset": false,
														"isSlot": true,
														"src": "20868:22:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1134,
														"isOffset": false,
														"isSlot": false,
														"src": "20834:7:1",
														"valueSize": 1
													}
												],
												"id": 1147,
												"nodeType": "InlineAssembly",
												"src": "20765:302:1"
											}
										]
									},
									"documentation": {
										"id": 1132,
										"nodeType": "StructuredDocumentation",
										"src": "20334:97:1",
										"text": " @dev Returns the storage slot and value for the approved address of `tokenId`."
									},
									"id": 1149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApprovedAddress",
									"nameLocation": "20445:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "20473:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "20465:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20465:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20464:17:1"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "approvedAddressSlot",
												"nameLocation": "20536:19:1",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "20528:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "20565:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "20557:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20527:54:1"
									},
									"scope": 1664,
									"src": "20436:637:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "21332:481:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "21351:456:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21460:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "from",
																		"nodeType": "YulIdentifier",
																		"src": "21472:4:1"
																	},
																	{
																		"name": "BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "21478:15:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "21468:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21468:26:1"
															},
															"variableNames": [
																{
																	"name": "from",
																	"nodeType": "YulIdentifier",
																	"src": "21460:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21607:44:1",
															"value": {
																"arguments": [
																	{
																		"name": "msgSender",
																		"nodeType": "YulIdentifier",
																		"src": "21624:9:1"
																	},
																	{
																		"name": "BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "21635:15:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "21620:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21620:31:1"
															},
															"variableNames": [
																{
																	"name": "msgSender",
																	"nodeType": "YulIdentifier",
																	"src": "21607:9:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21732:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "21748:9:1"
																			},
																			{
																				"name": "from",
																				"nodeType": "YulIdentifier",
																				"src": "21759:4:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21745:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21745:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "21769:9:1"
																			},
																			{
																				"name": "approvedAddress",
																				"nodeType": "YulIdentifier",
																				"src": "21780:15:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21766:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21766:30:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "21742:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21742:55:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "21732:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 106,
														"isOffset": false,
														"isSlot": false,
														"src": "21478:15:1",
														"valueSize": 1
													},
													{
														"declaration": 106,
														"isOffset": false,
														"isSlot": false,
														"src": "21635:15:1",
														"valueSize": 1
													},
													{
														"declaration": 1152,
														"isOffset": false,
														"isSlot": false,
														"src": "21780:15:1",
														"valueSize": 1
													},
													{
														"declaration": 1154,
														"isOffset": false,
														"isSlot": false,
														"src": "21460:4:1",
														"valueSize": 1
													},
													{
														"declaration": 1154,
														"isOffset": false,
														"isSlot": false,
														"src": "21472:4:1",
														"valueSize": 1
													},
													{
														"declaration": 1154,
														"isOffset": false,
														"isSlot": false,
														"src": "21759:4:1",
														"valueSize": 1
													},
													{
														"declaration": 1156,
														"isOffset": false,
														"isSlot": false,
														"src": "21607:9:1",
														"valueSize": 1
													},
													{
														"declaration": 1156,
														"isOffset": false,
														"isSlot": false,
														"src": "21624:9:1",
														"valueSize": 1
													},
													{
														"declaration": 1156,
														"isOffset": false,
														"isSlot": false,
														"src": "21748:9:1",
														"valueSize": 1
													},
													{
														"declaration": 1156,
														"isOffset": false,
														"isSlot": false,
														"src": "21769:9:1",
														"valueSize": 1
													},
													{
														"declaration": 1159,
														"isOffset": false,
														"isSlot": false,
														"src": "21732:6:1",
														"valueSize": 1
													}
												],
												"id": 1161,
												"nodeType": "InlineAssembly",
												"src": "21342:465:1"
											}
										]
									},
									"documentation": {
										"id": 1150,
										"nodeType": "StructuredDocumentation",
										"src": "21079:97:1",
										"text": " @dev Returns whether the `approvedAddress` is equals to `from` or `msgSender`."
									},
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isOwnerOrApproved",
									"nameLocation": "21190:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "21226:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "21218:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21218:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "21259:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "21251:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21251:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "msgSender",
												"nameLocation": "21281:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "21273:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21273:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21208:88:1"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "21324:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "21319:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1158,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21319:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21318:13:1"
									},
									"scope": 1664,
									"src": "21181:632:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1807
									],
									"body": {
										"id": 1307,
										"nodeType": "Block",
										"src": "22174:2620:1",
										"statements": [
											{
												"assignments": [
													1175
												],
												"declarations": [
													{
														"constant": false,
														"id": 1175,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "22192:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 1307,
														"src": "22184:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1174,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22184:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1179,
												"initialValue": {
													"arguments": [
														{
															"id": 1177,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "22233:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1176,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "22214:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22214:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22184:57:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1184,
																		"name": "prevOwnershipPacked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1175,
																		"src": "22272:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22264:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1182,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "22264:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22264:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22256:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1180,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "22256:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22256:37:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1187,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "22297:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22256:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1192,
												"nodeType": "IfStatement",
												"src": "22252:86:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1189,
															"name": "TransferFromIncorrectOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1694,
															"src": "22310:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22310:28:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1191,
													"nodeType": "RevertStatement",
													"src": "22303:35:1"
												}
											},
											{
												"assignments": [
													1194,
													1196
												],
												"declarations": [
													{
														"constant": false,
														"id": 1194,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "22358:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 1307,
														"src": "22350:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1193,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22350:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1196,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "22387:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 1307,
														"src": "22379:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1195,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "22379:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1200,
												"initialValue": {
													"arguments": [
														{
															"id": 1198,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "22426:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1197,
														"name": "_getApprovedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "22406:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22406:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22349:85:1"
											},
											{
												"condition": {
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "22530:63:1",
													"subExpression": {
														"arguments": [
															{
																"id": 1202,
																"name": "approvedAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1196,
																"src": "22550:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1203,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1166,
																"src": "22567:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1204,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1653,
																	"src": "22573:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22573:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1201,
															"name": "_isOwnerOrApproved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "22531:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address,address) pure returns (bool)"
															}
														},
														"id": 1206,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22531:62:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1218,
												"nodeType": "IfStatement",
												"src": "22526:173:1",
												"trueBody": {
													"condition": {
														"id": 1213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "22611:44:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 1209,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "22629:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1210,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1653,
																		"src": "22635:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22635:19:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1208,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 745,
																"src": "22612:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22612:43:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1217,
													"nodeType": "IfStatement",
													"src": "22607:92:1",
													"trueBody": {
														"errorCall": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1214,
																"name": "TransferCallerNotOwnerNorApproved",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1691,
																"src": "22664:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22664:35:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1216,
														"nodeType": "RevertStatement",
														"src": "22657:42:1"
													}
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1219,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "22714:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22728:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22720:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1220,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "22720:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1223,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22720:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22714:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1228,
												"nodeType": "IfStatement",
												"src": "22710:52:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1225,
															"name": "TransferToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1700,
															"src": "22739:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22739:23:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1227,
													"nodeType": "RevertStatement",
													"src": "22732:30:1"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1230,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "22795:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1231,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "22801:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1232,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "22805:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22814:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1229,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1630,
														"src": "22773:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22773:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1235,
												"nodeType": "ExpressionStatement",
												"src": "22773:43:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "22888:181:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22921:138:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "23022:19:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23043:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "23015:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23015:30:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23015:30:1"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "22905:15:1"
															},
															"nodeType": "YulIf",
															"src": "22902:157:1"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1196,
														"isOffset": false,
														"isSlot": false,
														"src": "22905:15:1",
														"valueSize": 1
													},
													{
														"declaration": 1194,
														"isOffset": false,
														"isSlot": false,
														"src": "23022:19:1",
														"valueSize": 1
													}
												],
												"id": 1236,
												"nodeType": "InlineAssembly",
												"src": "22879:190:1"
											},
											{
												"id": 1293,
												"nodeType": "UncheckedBlock",
												"src": "23334:1359:1",
												"statements": [
													{
														"expression": {
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "--",
															"prefix": true,
															"src": "23427:26:1",
															"subExpression": {
																"baseExpression": {
																	"id": 1237,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 125,
																	"src": "23429:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1239,
																"indexExpression": {
																	"id": 1238,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "23448:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "23429:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1241,
														"nodeType": "ExpressionStatement",
														"src": "23427:26:1"
													},
													{
														"expression": {
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "23495:24:1",
															"subExpression": {
																"baseExpression": {
																	"id": 1242,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 125,
																	"src": "23497:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1244,
																"indexExpression": {
																	"id": 1243,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1168,
																	"src": "23516:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "23497:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1246,
														"nodeType": "ExpressionStatement",
														"src": "23495:24:1"
													},
													{
														"expression": {
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1247,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "23783:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1249,
																"indexExpression": {
																	"id": 1248,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1170,
																	"src": "23801:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "23783:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1251,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1168,
																		"src": "23848:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1252,
																			"name": "BITMASK_NEXT_INITIALIZED",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 87,
																			"src": "23868:24:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1254,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1166,
																					"src": "23910:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1255,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1168,
																					"src": "23916:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1256,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1175,
																					"src": "23920:19:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1253,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1604,
																				"src": "23895:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23895:45:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "23868:72:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1250,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 525,
																	"src": "23812:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23812:142:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23783:171:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1261,
														"nodeType": "ExpressionStatement",
														"src": "23783:171:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1262,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1175,
																	"src": "24071:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1263,
																	"name": "BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 87,
																	"src": "24093:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24071:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1265,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24121:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "24071:51:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1292,
														"nodeType": "IfStatement",
														"src": "24067:616:1",
														"trueBody": {
															"id": 1291,
															"nodeType": "Block",
															"src": "24124:559:1",
															"statements": [
																{
																	"assignments": [
																		1268
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1268,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "24150:11:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 1291,
																			"src": "24142:19:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1267,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "24142:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1272,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1269,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1170,
																			"src": "24164:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24174:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "24164:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "24142:33:1"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1273,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 121,
																				"src": "24295:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1275,
																			"indexExpression": {
																				"id": 1274,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1268,
																				"src": "24313:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "24295:30:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1276,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24329:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "24295:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1290,
																	"nodeType": "IfStatement",
																	"src": "24291:378:1",
																	"trueBody": {
																		"id": 1289,
																		"nodeType": "Block",
																		"src": "24332:337:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1280,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1278,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1268,
																						"src": "24416:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1279,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 111,
																						"src": "24431:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "24416:28:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1288,
																				"nodeType": "IfStatement",
																				"src": "24412:239:1",
																				"trueBody": {
																					"id": 1287,
																					"nodeType": "Block",
																					"src": "24446:205:1",
																					"statements": [
																						{
																							"expression": {
																								"id": 1285,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1281,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 121,
																										"src": "24576:17:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1283,
																									"indexExpression": {
																										"id": 1282,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1268,
																										"src": "24594:11:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "24576:30:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1284,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1175,
																									"src": "24609:19:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "24576:52:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1286,
																							"nodeType": "ExpressionStatement",
																							"src": "24576:52:1"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1295,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "24717:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1296,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "24723:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1297,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "24727:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1294,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1741,
														"src": "24708:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24708:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1299,
												"nodeType": "EmitStatement",
												"src": "24703:32:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1301,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "24766:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1302,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "24772:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1303,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "24776:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24785:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1300,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "24745:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24745:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1306,
												"nodeType": "ExpressionStatement",
												"src": "24745:42:1"
											}
										]
									},
									"documentation": {
										"id": 1164,
										"nodeType": "StructuredDocumentation",
										"src": "21819:231:1",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "22064:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1172,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "22165:8:1"
									},
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "22094:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "22086:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22086:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22116:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "22108:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22108:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "22136:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "22128:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22128:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22076:73:1"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22174:0:1"
									},
									"scope": 1664,
									"src": "22055:2739:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1319,
										"nodeType": "Block",
										"src": "24916:38:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1315,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "24932:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24941:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1314,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1320,
															1472
														],
														"referencedDeclaration": 1472,
														"src": "24926:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24926:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1318,
												"nodeType": "ExpressionStatement",
												"src": "24926:21:1"
											}
										]
									},
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "24800:62:1",
										"text": " @dev Equivalent to `_burn(tokenId, false)`."
									},
									"id": 1320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "24876:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "24890:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "24882:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24882:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24881:17:1"
									},
									"returnParameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24916:0:1"
									},
									"scope": 1664,
									"src": "24867:87:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1471,
										"nodeType": "Block",
										"src": "25240:2928:1",
										"statements": [
											{
												"assignments": [
													1329
												],
												"declarations": [
													{
														"constant": false,
														"id": 1329,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "25258:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 1471,
														"src": "25250:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1328,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25250:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1333,
												"initialValue": {
													"arguments": [
														{
															"id": 1331,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "25299:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1330,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "25280:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25280:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25250:57:1"
											},
											{
												"assignments": [
													1335
												],
												"declarations": [
													{
														"constant": false,
														"id": 1335,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "25326:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 1471,
														"src": "25318:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1334,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "25318:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1343,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1340,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1329,
																	"src": "25349:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1339,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25341:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1338,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "25341:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25341:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1337,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "25333:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1336,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "25333:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25333:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25318:52:1"
											},
											{
												"assignments": [
													1345,
													1347
												],
												"declarations": [
													{
														"constant": false,
														"id": 1345,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "25390:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 1471,
														"src": "25382:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1344,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25382:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1347,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "25419:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 1471,
														"src": "25411:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1346,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "25411:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1351,
												"initialValue": {
													"arguments": [
														{
															"id": 1349,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "25458:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1348,
														"name": "_getApprovedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "25438:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25438:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25381:85:1"
											},
											{
												"condition": {
													"id": 1352,
													"name": "approvalCheck",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1325,
													"src": "25481:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1372,
												"nodeType": "IfStatement",
												"src": "25477:306:1",
												"trueBody": {
													"id": 1371,
													"nodeType": "Block",
													"src": "25496:287:1",
													"statements": [
														{
															"condition": {
																"id": 1359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "25599:63:1",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 1354,
																			"name": "approvedAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1347,
																			"src": "25619:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1355,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1335,
																			"src": "25636:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1356,
																				"name": "_msgSenderERC721A",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1653,
																				"src": "25642:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "25642:19:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1353,
																		"name": "_isOwnerOrApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1163,
																		"src": "25600:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address,address) pure returns (bool)"
																		}
																	},
																	"id": 1358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "25600:62:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1370,
															"nodeType": "IfStatement",
															"src": "25595:177:1",
															"trueBody": {
																"condition": {
																	"id": 1365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "25684:44:1",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1361,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1335,
																				"src": "25702:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1362,
																					"name": "_msgSenderERC721A",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1653,
																					"src": "25708:17:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1363,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "25708:19:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1360,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 745,
																			"src": "25685:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "25685:43:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1369,
																"nodeType": "IfStatement",
																"src": "25680:92:1",
																"trueBody": {
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1366,
																			"name": "TransferCallerNotOwnerNorApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1691,
																			"src": "25737:33:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "25737:35:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1368,
																	"nodeType": "RevertStatement",
																	"src": "25730:42:1"
																}
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1374,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "25815:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25829:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25821:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1375,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "25821:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25821:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1379,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "25833:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25842:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1373,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1630,
														"src": "25793:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25793:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1382,
												"nodeType": "ExpressionStatement",
												"src": "25793:51:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "25916:181:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25949:138:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "26050:19:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26071:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "26043:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26043:30:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26043:30:1"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "25933:15:1"
															},
															"nodeType": "YulIf",
															"src": "25930:157:1"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1347,
														"isOffset": false,
														"isSlot": false,
														"src": "25933:15:1",
														"valueSize": 1
													},
													{
														"declaration": 1345,
														"isOffset": false,
														"isSlot": false,
														"src": "26050:19:1",
														"valueSize": 1
													}
												],
												"id": 1383,
												"nodeType": "InlineAssembly",
												"src": "25907:190:1"
											},
											{
												"id": 1447,
												"nodeType": "UncheckedBlock",
												"src": "26364:1540:1",
												"statements": [
													{
														"expression": {
															"id": 1393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1384,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 125,
																	"src": "26675:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1386,
																"indexExpression": {
																	"id": 1385,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1335,
																	"src": "26694:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "26675:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1392,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1389,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 1387,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26704:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 1388,
																				"name": "BITPOS_NUMBER_BURNED",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 60,
																				"src": "26709:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "26704:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1390,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "26703:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26733:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "26703:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26675:59:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1394,
														"nodeType": "ExpressionStatement",
														"src": "26675:59:1"
													},
													{
														"expression": {
															"id": 1414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1395,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "26965:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1397,
																"indexExpression": {
																	"id": 1396,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1323,
																	"src": "26983:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "26965:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1399,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1335,
																		"src": "27030:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1402,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1400,
																						"name": "BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 79,
																						"src": "27053:14:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "|",
																					"rightExpression": {
																						"id": 1401,
																						"name": "BITMASK_NEXT_INITIALIZED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 87,
																						"src": "27070:24:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "27053:41:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1403,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "27052:43:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1405,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1335,
																					"src": "27113:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1408,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27127:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1407,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "27119:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1406,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "27119:7:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1409,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "27119:10:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1410,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1329,
																					"src": "27131:19:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1404,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1604,
																				"src": "27098:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27098:53:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "27052:99:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1398,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 525,
																	"src": "26994:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26994:171:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26965:200:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1415,
														"nodeType": "ExpressionStatement",
														"src": "26965:200:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1416,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1329,
																	"src": "27282:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1417,
																	"name": "BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 87,
																	"src": "27304:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "27282:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27332:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "27282:51:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1446,
														"nodeType": "IfStatement",
														"src": "27278:616:1",
														"trueBody": {
															"id": 1445,
															"nodeType": "Block",
															"src": "27335:559:1",
															"statements": [
																{
																	"assignments": [
																		1422
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1422,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "27361:11:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 1445,
																			"src": "27353:19:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1421,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "27353:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1426,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1423,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1323,
																			"src": "27375:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27385:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "27375:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "27353:33:1"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1427,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 121,
																				"src": "27506:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1429,
																			"indexExpression": {
																				"id": 1428,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1422,
																				"src": "27524:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "27506:30:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1430,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27540:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "27506:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1444,
																	"nodeType": "IfStatement",
																	"src": "27502:378:1",
																	"trueBody": {
																		"id": 1443,
																		"nodeType": "Block",
																		"src": "27543:337:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1434,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1432,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1422,
																						"src": "27627:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1433,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 111,
																						"src": "27642:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "27627:28:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1442,
																				"nodeType": "IfStatement",
																				"src": "27623:239:1",
																				"trueBody": {
																					"id": 1441,
																					"nodeType": "Block",
																					"src": "27657:205:1",
																					"statements": [
																						{
																							"expression": {
																								"id": 1439,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1435,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 121,
																										"src": "27787:17:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1437,
																									"indexExpression": {
																										"id": 1436,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1422,
																										"src": "27805:11:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "27787:30:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1438,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1329,
																									"src": "27820:19:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "27787:52:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1440,
																							"nodeType": "ExpressionStatement",
																							"src": "27787:52:1"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1449,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "27928:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27942:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27934:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1450,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "27934:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27934:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1454,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "27946:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1448,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1741,
														"src": "27919:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27919:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1456,
												"nodeType": "EmitStatement",
												"src": "27914:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1458,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "27985:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27999:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1460,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27991:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1459,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "27991:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27991:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1463,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "28003:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28012:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1457,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "27964:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27964:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1466,
												"nodeType": "ExpressionStatement",
												"src": "27964:50:1"
											},
											{
												"id": 1470,
												"nodeType": "UncheckedBlock",
												"src": "28113:49:1",
												"statements": [
													{
														"expression": {
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "28137:14:1",
															"subExpression": {
																"id": 1467,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "28137:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1469,
														"nodeType": "ExpressionStatement",
														"src": "28137:14:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1321,
										"nodeType": "StructuredDocumentation",
										"src": "24960:206:1",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "25180:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "25194:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "25186:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25186:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "25208:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "25203:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25203:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25185:37:1"
									},
									"returnParameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25240:0:1"
									},
									"scope": 1664,
									"src": "25171:2997:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1526,
										"nodeType": "Block",
										"src": "28813:533:1",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 1507,
															"nodeType": "Block",
															"src": "28962:96:1",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 1505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1499,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1497,
																			"src": "28983:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 1501,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1477,
																							"src": "29018:2:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1500,
																						"name": "ERC721A__IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 43,
																						"src": "28993:24:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$43_$",
																							"typeString": "type(contract ERC721A__IERC721Receiver)"
																						}
																					},
																					"id": 1502,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "28993:28:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$43",
																						"typeString": "contract ERC721A__IERC721Receiver"
																					}
																				},
																				"id": 1503,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 42,
																				"src": "28993:45:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 1504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "28993:54:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "28983:64:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 1485,
																	"id": 1506,
																	"nodeType": "Return",
																	"src": "28976:71:1"
																}
															]
														},
														"errorName": "",
														"id": 1508,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1498,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1497,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "28945:6:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1508,
																	"src": "28938:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 1496,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "28938:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "28924:37:1"
														},
														"src": "28916:142:1"
													},
													{
														"block": {
															"id": 1523,
															"nodeType": "Block",
															"src": "29087:253:1",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1512,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1510,
																				"src": "29105:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "29105:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29122:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "29105:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 1521,
																		"nodeType": "Block",
																		"src": "29211:119:1",
																		"statements": [
																			{
																				"AST": {
																					"nodeType": "YulBlock",
																					"src": "29238:78:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nodeType": "YulLiteral",
																												"src": "29271:2:1",
																												"type": "",
																												"value": "32"
																											},
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "29275:6:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "29267:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "29267:15:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "29290:6:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "29284:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "29284:13:1"
																									}
																								],
																								"functionName": {
																									"name": "revert",
																									"nodeType": "YulIdentifier",
																									"src": "29260:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "29260:38:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "29260:38:1"
																						}
																					]
																				},
																				"evmVersion": "london",
																				"externalReferences": [
																					{
																						"declaration": 1510,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "29275:6:1",
																						"valueSize": 1
																					},
																					{
																						"declaration": 1510,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "29290:6:1",
																						"valueSize": 1
																					}
																				],
																				"id": 1520,
																				"nodeType": "InlineAssembly",
																				"src": "29229:87:1"
																			}
																		]
																	},
																	"id": 1522,
																	"nodeType": "IfStatement",
																	"src": "29101:229:1",
																	"trueBody": {
																		"id": 1519,
																		"nodeType": "Block",
																		"src": "29125:80:1",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1516,
																						"name": "TransferToNonERC721ReceiverImplementer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1697,
																						"src": "29150:38:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 1517,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "29150:40:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1518,
																				"nodeType": "RevertStatement",
																				"src": "29143:47:1"
																			}
																		]
																	}
																}
															]
														},
														"errorName": "",
														"id": 1524,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1511,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1510,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "29079:6:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1524,
																	"src": "29066:19:1",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1509,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "29066:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "29065:21:1"
														},
														"src": "29059:281:1"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1490,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1653,
																"src": "28873:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28873:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1492,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1475,
															"src": "28894:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1493,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "28900:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1494,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1481,
															"src": "28909:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1487,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1477,
																	"src": "28852:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1486,
																"name": "ERC721A__IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "28827:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$43_$",
																	"typeString": "type(contract ERC721A__IERC721Receiver)"
																}
															},
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28827:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$43",
																"typeString": "contract ERC721A__IERC721Receiver"
															}
														},
														"id": 1489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 42,
														"src": "28827:45:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28827:88:1",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 1525,
												"nodeType": "TryStatement",
												"src": "28823:517:1"
											}
										]
									},
									"documentation": {
										"id": 1473,
										"nodeType": "StructuredDocumentation",
										"src": "28174:470:1",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 1527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "28658:30:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "28706:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "28698:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28698:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "28728:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "28720:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28720:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "28748:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "28740:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28740:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "28778:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "28765:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1480,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28765:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28688:101:1"
									},
									"returnParameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "28807:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1483,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28807:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28806:6:1"
									},
									"scope": 1664,
									"src": "28649:697:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1570,
										"nodeType": "Block",
										"src": "29508:445:1",
										"statements": [
											{
												"assignments": [
													1536
												],
												"declarations": [
													{
														"constant": false,
														"id": 1536,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "29526:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 1570,
														"src": "29518:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1535,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29518:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1540,
												"initialValue": {
													"baseExpression": {
														"id": 1537,
														"name": "_packedOwnerships",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "29535:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1539,
													"indexExpression": {
														"id": 1538,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1530,
														"src": "29553:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "29535:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29518:41:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1541,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1536,
														"src": "29573:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29583:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "29573:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1547,
												"nodeType": "IfStatement",
												"src": "29569:61:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1544,
															"name": "OwnershipNotInitializedForExtraData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1709,
															"src": "29593:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29593:37:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1546,
													"nodeType": "RevertStatement",
													"src": "29586:44:1"
												}
											},
											{
												"assignments": [
													1549
												],
												"declarations": [
													{
														"constant": false,
														"id": 1549,
														"mutability": "mutable",
														"name": "extraDataCasted",
														"nameLocation": "29648:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 1570,
														"src": "29640:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1548,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29640:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1550,
												"nodeType": "VariableDeclarationStatement",
												"src": "29640:23:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "29752:52:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29766:28:1",
															"value": {
																"name": "extraData",
																"nodeType": "YulIdentifier",
																"src": "29785:9:1"
															},
															"variableNames": [
																{
																	"name": "extraDataCasted",
																	"nodeType": "YulIdentifier",
																	"src": "29766:15:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1532,
														"isOffset": false,
														"isSlot": false,
														"src": "29785:9:1",
														"valueSize": 1
													},
													{
														"declaration": 1549,
														"isOffset": false,
														"isSlot": false,
														"src": "29766:15:1",
														"valueSize": 1
													}
												],
												"id": 1551,
												"nodeType": "InlineAssembly",
												"src": "29743:61:1"
											},
											{
												"expression": {
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1552,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1536,
														"src": "29813:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1553,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1536,
																		"src": "29823:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 1554,
																		"name": "BITMASK_EXTRA_DATA_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "29832:29:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "29823:38:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1556,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "29822:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1557,
																		"name": "extraDataCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1549,
																		"src": "29866:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 1558,
																		"name": "BITPOS_EXTRA_DATA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 90,
																		"src": "29885:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "29866:36:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1560,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "29865:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "29822:81:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29813:90:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1563,
												"nodeType": "ExpressionStatement",
												"src": "29813:90:1"
											},
											{
												"expression": {
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1564,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 121,
															"src": "29913:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1566,
														"indexExpression": {
															"id": 1565,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1530,
															"src": "29931:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "29913:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1567,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1536,
														"src": "29940:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29913:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1569,
												"nodeType": "ExpressionStatement",
												"src": "29913:33:1"
											}
										]
									},
									"documentation": {
										"id": 1528,
										"nodeType": "StructuredDocumentation",
										"src": "29352:84:1",
										"text": " @dev Directly sets the extra data for the ownership data `index`."
									},
									"id": 1571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setExtraDataAt",
									"nameLocation": "29450:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "29474:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "29466:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29466:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "extraData",
												"nameLocation": "29488:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "29481:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1531,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "29481:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29465:33:1"
									},
									"returnParameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29508:0:1"
									},
									"scope": 1664,
									"src": "29441:512:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1603,
										"nodeType": "Block",
										"src": "30239:162:1",
										"statements": [
											{
												"assignments": [
													1584
												],
												"declarations": [
													{
														"constant": false,
														"id": 1584,
														"mutability": "mutable",
														"name": "extraData",
														"nameLocation": "30256:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 1603,
														"src": "30249:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 1583,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "30249:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1591,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1587,
																"name": "prevOwnershipPacked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1578,
																"src": "30275:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 1588,
																"name": "BITPOS_EXTRA_DATA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "30298:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30275:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "30268:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 1585,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "30268:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30268:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30249:67:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1595,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1574,
																		"src": "30352:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1596,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1576,
																		"src": "30358:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1597,
																		"name": "extraData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1584,
																		"src": "30362:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"id": 1594,
																	"name": "_extraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1617,
																	"src": "30341:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_uint24_$",
																		"typeString": "function (address,address,uint24) view returns (uint24)"
																	}
																},
																"id": 1598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30341:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30333:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1592,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "30333:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30333:40:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 1600,
														"name": "BITPOS_EXTRA_DATA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "30377:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30333:61:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1582,
												"id": 1602,
												"nodeType": "Return",
												"src": "30326:68:1"
											}
										]
									},
									"documentation": {
										"id": 1572,
										"nodeType": "StructuredDocumentation",
										"src": "29959:135:1",
										"text": " @dev Returns the next extra data for the packed ownership data.\n The returned result is shifted into position."
									},
									"id": 1604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextExtraData",
									"nameLocation": "30108:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "30140:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "30132:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30132:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "30162:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "30154:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30154:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "prevOwnershipPacked",
												"nameLocation": "30182:19:1",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "30174:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30174:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30122:85:1"
									},
									"returnParameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "30230:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30230:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30229:9:1"
									},
									"scope": 1664,
									"src": "30099:302:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1616,
										"nodeType": "Block",
										"src": "31102:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1605,
										"nodeType": "StructuredDocumentation",
										"src": "30407:549:1",
										"text": " @dev Called during each token transfer to set the 24bit `extraData` field.\n Intended to be overridden by the cosumer contract.\n `previousExtraData` - the value of `extraData` before transfer.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extraData",
									"nameLocation": "30970:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "30998:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "30990:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30990:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "31020:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "31012:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31012:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "previousExtraData",
												"nameLocation": "31039:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "31032:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1610,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "31032:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30980:82:1"
									},
									"returnParameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "31094:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1613,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "31094:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31093:8:1"
									},
									"scope": 1664,
									"src": "30961:143:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1629,
										"nodeType": "Block",
										"src": "31894:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1618,
										"nodeType": "StructuredDocumentation",
										"src": "31110:627:1",
										"text": " @dev Hook that is called before a set of serially-ordered token ids are about to be transferred.\n This includes minting.\n And also called before burning one token.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "31751:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "31790:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "31782:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31782:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "31812:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "31804:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31804:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "31832:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "31824:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "31862:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "31854:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31854:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31772:104:1"
									},
									"returnParameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31894:0:1"
									},
									"scope": 1664,
									"src": "31742:154:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1642,
										"nodeType": "Block",
										"src": "32688:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1631,
										"nodeType": "StructuredDocumentation",
										"src": "31902:630:1",
										"text": " @dev Hook that is called after a set of serially-ordered token ids have been transferred.\n This includes minting.\n And also called after one token has been burned.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "32546:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "32584:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "32576:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32576:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "32606:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "32598:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32598:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "32626:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "32618:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32618:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "32656:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "32648:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32648:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32566:104:1"
									},
									"returnParameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32688:0:1"
									},
									"scope": 1664,
									"src": "32537:153:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1652,
										"nodeType": "Block",
										"src": "32943:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1649,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "32960:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "32960:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1648,
												"id": 1651,
												"nodeType": "Return",
												"src": "32953:17:1"
											}
										]
									},
									"documentation": {
										"id": 1644,
										"nodeType": "StructuredDocumentation",
										"src": "32696:173:1",
										"text": " @dev Returns the message sender (defaults to `msg.sender`).\n If you are writing GSN compatible contracts, you need to override this function."
									},
									"id": 1653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSenderERC721A",
									"nameLocation": "32883:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32900:2:1"
									},
									"returnParameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "32934:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32934:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32933:9:1"
									},
									"scope": 1664,
									"src": "32874:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1662,
										"nodeType": "Block",
										"src": "33154:1844:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "33173:1819:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "33524:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33541:4:1",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "33535:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33535:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33548:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "33531:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "33531:21:1"
															},
															"variableNames": [
																{
																	"name": "ptr",
																	"nodeType": "YulIdentifier",
																	"src": "33524:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33631:4:1",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "33637:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "33624:17:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33624:17:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "33729:14:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "33740:3:1"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "33733:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "34620:144:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "34679:18:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "34690:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "34695:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "34686:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34686:11:1"
																		},
																		"variableNames": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "34679:3:1"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "34722:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "34731:2:1",
																							"type": "",
																							"value": "48"
																						},
																						{
																							"arguments": [
																								{
																									"name": "temp",
																									"nodeType": "YulIdentifier",
																									"src": "34739:4:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "34745:2:1",
																									"type": "",
																									"value": "10"
																								}
																							],
																							"functionName": {
																								"name": "mod",
																								"nodeType": "YulIdentifier",
																								"src": "34735:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "34735:13:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "34727:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "34727:22:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "34714:7:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34714:36:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "34714:36:1"
																	}
																]
															},
															"condition": {
																"name": "temp",
																"nodeType": "YulIdentifier",
																"src": "34509:4:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "34514:105:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "34584:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "34596:4:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "34602:2:1",
																					"type": "",
																					"value": "10"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "34592:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34592:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "temp",
																				"nodeType": "YulIdentifier",
																				"src": "34584:4:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "34086:422:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "34176:17:1",
																		"value": {
																			"name": "value",
																			"nodeType": "YulIdentifier",
																			"src": "34188:5:1"
																		},
																		"variables": [
																			{
																				"name": "temp",
																				"nodeType": "YulTypedName",
																				"src": "34180:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "34300:18:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "34311:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "34316:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "34307:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34307:11:1"
																		},
																		"variableNames": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "34300:3:1"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "34428:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "34437:2:1",
																							"type": "",
																							"value": "48"
																						},
																						{
																							"arguments": [
																								{
																									"name": "temp",
																									"nodeType": "YulIdentifier",
																									"src": "34445:4:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "34451:2:1",
																									"type": "",
																									"value": "10"
																								}
																							],
																							"functionName": {
																								"name": "mod",
																								"nodeType": "YulIdentifier",
																								"src": "34441:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "34441:13:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "34433:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "34433:22:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "34420:7:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34420:36:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "34420:36:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "34473:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "34485:4:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "34491:2:1",
																					"type": "",
																					"value": "10"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "34481:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34481:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "temp",
																				"nodeType": "YulIdentifier",
																				"src": "34473:4:1"
																			}
																		]
																	}
																]
															},
															"src": "34082:682:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "34778:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "34796:3:1"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "34801:3:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "34792:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "34792:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "34782:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "34898:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "34909:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34914:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "34905:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "34905:12:1"
															},
															"variableNames": [
																{
																	"name": "ptr",
																	"nodeType": "YulIdentifier",
																	"src": "34898:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "34970:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "34975:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "34963:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "34963:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34963:19:1"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1659,
														"isOffset": false,
														"isSlot": false,
														"src": "33524:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1659,
														"isOffset": false,
														"isSlot": false,
														"src": "33637:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1659,
														"isOffset": false,
														"isSlot": false,
														"src": "33740:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1659,
														"isOffset": false,
														"isSlot": false,
														"src": "34300:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1659,
														"isOffset": false,
														"isSlot": false,
														"src": "34311:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1659,
														"isOffset": false,
														"isSlot": false,
														"src": "34428:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1659,
														"isOffset": false,
														"isSlot": false,
														"src": "34679:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1659,
														"isOffset": false,
														"isSlot": false,
														"src": "34690:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1659,
														"isOffset": false,
														"isSlot": false,
														"src": "34722:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1659,
														"isOffset": false,
														"isSlot": false,
														"src": "34801:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1659,
														"isOffset": false,
														"isSlot": false,
														"src": "34898:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1659,
														"isOffset": false,
														"isSlot": false,
														"src": "34909:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1659,
														"isOffset": false,
														"isSlot": false,
														"src": "34970:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1656,
														"isOffset": false,
														"isSlot": false,
														"src": "34188:5:1",
														"valueSize": 1
													}
												],
												"id": 1661,
												"nodeType": "InlineAssembly",
												"src": "33164:1828:1"
											}
										]
									},
									"documentation": {
										"id": 1654,
										"nodeType": "StructuredDocumentation",
										"src": "32983:90:1",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_toString",
									"nameLocation": "33087:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "33105:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "33097:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33097:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33096:15:1"
									},
									"returnParameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "ptr",
												"nameLocation": "33149:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "33135:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1658,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "33135:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33134:19:1"
									},
									"scope": 1664,
									"src": "33078:1920:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1665,
							"src": "885:34115:1",
							"usedErrors": [
								1670,
								1673,
								1676,
								1679,
								1682,
								1685,
								1688,
								1691,
								1694,
								1697,
								1700,
								1703,
								1706,
								1709
							]
						}
					],
					"src": "84:34917:1"
				},
				"id": 1
			},
			"erc721a/contracts/IERC721A.sol": {
				"ast": {
					"absolutePath": "erc721a/contracts/IERC721A.sol",
					"exportedSymbols": {
						"IERC721A": [
							1873
						]
					},
					"id": 1874,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1666,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1667,
								"nodeType": "StructuredDocumentation",
								"src": "109:59:2",
								"text": " @dev Interface of an ERC721A compliant contract."
							},
							"fullyImplemented": false,
							"id": 1873,
							"linearizedBaseContracts": [
								1873
							],
							"name": "IERC721A",
							"nameLocation": "179:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1668,
										"nodeType": "StructuredDocumentation",
										"src": "194:76:2",
										"text": " The caller must own the token or be an approved operator."
									},
									"id": 1670,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "281:33:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "314:2:2"
									},
									"src": "275:42:2"
								},
								{
									"documentation": {
										"id": 1671,
										"nodeType": "StructuredDocumentation",
										"src": "323:44:2",
										"text": " The token does not exist."
									},
									"id": 1673,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "378:32:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "410:2:2"
									},
									"src": "372:41:2"
								},
								{
									"documentation": {
										"id": 1674,
										"nodeType": "StructuredDocumentation",
										"src": "419:66:2",
										"text": " The caller cannot approve to their own address."
									},
									"id": 1676,
									"name": "ApproveToCaller",
									"nameLocation": "496:15:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "511:2:2"
									},
									"src": "490:24:2"
								},
								{
									"documentation": {
										"id": 1677,
										"nodeType": "StructuredDocumentation",
										"src": "520:65:2",
										"text": " Cannot query the balance for the zero address."
									},
									"id": 1679,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "596:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "622:2:2"
									},
									"src": "590:35:2"
								},
								{
									"documentation": {
										"id": 1680,
										"nodeType": "StructuredDocumentation",
										"src": "631:51:2",
										"text": " Cannot mint to the zero address."
									},
									"id": 1682,
									"name": "MintToZeroAddress",
									"nameLocation": "693:17:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "710:2:2"
									},
									"src": "687:26:2"
								},
								{
									"documentation": {
										"id": 1683,
										"nodeType": "StructuredDocumentation",
										"src": "719:72:2",
										"text": " The quantity of tokens minted must be more than zero."
									},
									"id": 1685,
									"name": "MintZeroQuantity",
									"nameLocation": "802:16:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "818:2:2"
									},
									"src": "796:25:2"
								},
								{
									"documentation": {
										"id": 1686,
										"nodeType": "StructuredDocumentation",
										"src": "827:44:2",
										"text": " The token does not exist."
									},
									"id": 1688,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "882:29:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:2:2"
									},
									"src": "876:38:2"
								},
								{
									"documentation": {
										"id": 1689,
										"nodeType": "StructuredDocumentation",
										"src": "920:76:2",
										"text": " The caller must own the token or be an approved operator."
									},
									"id": 1691,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "1007:33:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:2:2"
									},
									"src": "1001:42:2"
								},
								{
									"documentation": {
										"id": 1692,
										"nodeType": "StructuredDocumentation",
										"src": "1049:53:2",
										"text": " The token must be owned by `from`."
									},
									"id": 1694,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "1113:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1139:2:2"
									},
									"src": "1107:35:2"
								},
								{
									"documentation": {
										"id": 1695,
										"nodeType": "StructuredDocumentation",
										"src": "1148:109:2",
										"text": " Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
									},
									"id": 1697,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "1268:38:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1306:2:2"
									},
									"src": "1262:47:2"
								},
								{
									"documentation": {
										"id": 1698,
										"nodeType": "StructuredDocumentation",
										"src": "1315:55:2",
										"text": " Cannot transfer to the zero address."
									},
									"id": 1700,
									"name": "TransferToZeroAddress",
									"nameLocation": "1381:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1402:2:2"
									},
									"src": "1375:30:2"
								},
								{
									"documentation": {
										"id": 1701,
										"nodeType": "StructuredDocumentation",
										"src": "1411:44:2",
										"text": " The token does not exist."
									},
									"id": 1703,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "1466:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1493:2:2"
									},
									"src": "1460:36:2"
								},
								{
									"documentation": {
										"id": 1704,
										"nodeType": "StructuredDocumentation",
										"src": "1502:79:2",
										"text": " The `quantity` minted with ERC2309 exceeds the safety limit."
									},
									"id": 1706,
									"name": "MintERC2309QuantityExceedsLimit",
									"nameLocation": "1592:31:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1623:2:2"
									},
									"src": "1586:40:2"
								},
								{
									"documentation": {
										"id": 1707,
										"nodeType": "StructuredDocumentation",
										"src": "1632:83:2",
										"text": " The `extraData` cannot be set on an unintialized ownership slot."
									},
									"id": 1709,
									"name": "OwnershipNotInitializedForExtraData",
									"nameLocation": "1726:35:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1761:2:2"
									},
									"src": "1720:44:2"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 1718,
									"members": [
										{
											"constant": false,
											"id": 1711,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "1847:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 1718,
											"src": "1839:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1710,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1839:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1713,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "1960:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 1718,
											"src": "1953:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1712,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1953:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1715,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "2035:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1718,
											"src": "2030:11:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1714,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2030:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1717,
											"mutability": "mutable",
											"name": "extraData",
											"nameLocation": "2150:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 1718,
											"src": "2143:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1716,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "2143:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "1777:14:2",
									"nodeType": "StructDefinition",
									"scope": 1873,
									"src": "1770:396:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1719,
										"nodeType": "StructuredDocumentation",
										"src": "2172:193:2",
										"text": " @dev Returns the total amount of tokens stored by the contract.\n Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
									},
									"functionSelector": "18160ddd",
									"id": 1724,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2379:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2390:2:2"
									},
									"returnParameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "2416:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2416:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2415:9:2"
									},
									"scope": 1873,
									"src": "2370:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1725,
										"nodeType": "StructuredDocumentation",
										"src": "2534:340:2",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1732,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2888:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2913:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "2906:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1726,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2906:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2905:20:2"
									},
									"returnParameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "2949:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1729,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2949:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2948:6:2"
									},
									"scope": 1873,
									"src": "2879:76:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1733,
										"nodeType": "StructuredDocumentation",
										"src": "3064:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 1741,
									"name": "Transfer",
									"nameLocation": "3163:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3188:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "3172:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3172:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1737,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3210:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "3194:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1739,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3230:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "3214:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3214:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3171:67:2"
									},
									"src": "3157:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1742,
										"nodeType": "StructuredDocumentation",
										"src": "3245:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 1750,
									"name": "Approval",
									"nameLocation": "3350:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3375:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "3359:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3359:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3398:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "3382:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3382:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3424:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "3408:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3408:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3358:74:2"
									},
									"src": "3344:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1751,
										"nodeType": "StructuredDocumentation",
										"src": "3439:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 1759,
									"name": "ApprovalForAll",
									"nameLocation": "3567:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3598:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "3582:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1755,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3621:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "3605:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3605:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1757,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3636:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "3631:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1756,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3631:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3581:64:2"
									},
									"src": "3561:85:2"
								},
								{
									"documentation": {
										"id": 1760,
										"nodeType": "StructuredDocumentation",
										"src": "3652:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1767,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3742:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3760:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "3752:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3752:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3751:15:2"
									},
									"returnParameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "3798:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "3790:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3790:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3789:17:2"
									},
									"scope": 1873,
									"src": "3733:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1768,
										"nodeType": "StructuredDocumentation",
										"src": "3813:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1775,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "3958:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3974:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "3966:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3966:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3965:17:2"
									},
									"returnParameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4014:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "4006:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:15:2"
									},
									"scope": 1873,
									"src": "3949:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1776,
										"nodeType": "StructuredDocumentation",
										"src": "4027:556:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1787,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4597:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4631:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "4623:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4623:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4653:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "4645:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4645:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4673:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "4665:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4665:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4705:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "4690:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1783,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4690:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4613:102:2"
									},
									"returnParameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4724:0:2"
									},
									"scope": 1873,
									"src": "4588:137:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1788,
										"nodeType": "StructuredDocumentation",
										"src": "4731:690:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1797,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5435:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5469:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "5461:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5461:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5491:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "5483:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5483:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5511:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "5503:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5503:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5451:73:2"
									},
									"returnParameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5533:0:2"
									},
									"scope": 1873,
									"src": "5426:108:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1798,
										"nodeType": "StructuredDocumentation",
										"src": "5540:504:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1807,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6058:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6088:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "6080:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6080:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6110:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "6102:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6102:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6130:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "6122:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6122:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6070:73:2"
									},
									"returnParameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6152:0:2"
									},
									"scope": 1873,
									"src": "6049:104:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1808,
										"nodeType": "StructuredDocumentation",
										"src": "6159:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1815,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6625:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6641:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "6633:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6633:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6653:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "6645:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6645:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6632:29:2"
									},
									"returnParameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6670:0:2"
									},
									"scope": 1873,
									"src": "6616:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1816,
										"nodeType": "StructuredDocumentation",
										"src": "6677:309:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1823,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "7000:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7026:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "7018:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7018:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "7041:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "7036:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1819,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7036:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7017:34:2"
									},
									"returnParameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7060:0:2"
									},
									"scope": 1873,
									"src": "6991:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1824,
										"nodeType": "StructuredDocumentation",
										"src": "7067:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1831,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "7220:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7240:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "7232:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7232:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7231:17:2"
									},
									"returnParameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7280:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "7272:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7272:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7271:18:2"
									},
									"scope": 1873,
									"src": "7211:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1832,
										"nodeType": "StructuredDocumentation",
										"src": "7296:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1841,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "7448:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7473:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "7465:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7488:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "7480:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7480:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7464:33:2"
									},
									"returnParameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "7521:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1838,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7521:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7520:6:2"
									},
									"scope": 1873,
									"src": "7439:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1842,
										"nodeType": "StructuredDocumentation",
										"src": "7640:58:2",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1847,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "7712:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7716:2:2"
									},
									"returnParameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "7742:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1844,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7742:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7741:15:2"
									},
									"scope": 1873,
									"src": "7703:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1848,
										"nodeType": "StructuredDocumentation",
										"src": "7763:60:2",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1853,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "7837:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7843:2:2"
									},
									"returnParameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "7869:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1850,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7869:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7868:15:2"
									},
									"scope": 1873,
									"src": "7828:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1854,
										"nodeType": "StructuredDocumentation",
										"src": "7890:90:2",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1861,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "7994:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8011:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "8003:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8003:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8002:17:2"
									},
									"returnParameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "8043:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1858,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8043:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8042:15:2"
									},
									"scope": 1873,
									"src": "7985:73:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1862,
										"nodeType": "StructuredDocumentation",
										"src": "8168:203:2",
										"text": " @dev Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`,\n as defined in the ERC2309 standard. See `_mintERC2309` for more details."
									},
									"id": 1872,
									"name": "ConsecutiveTransfer",
									"nameLocation": "8382:19:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "8418:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "8402:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8402:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1866,
												"indexed": false,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "8439:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "8431:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8431:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1868,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8466:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "8450:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8450:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8488:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "8472:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8472:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8401:90:2"
									},
									"src": "8376:116:2"
								}
							],
							"scope": 1874,
							"src": "169:8325:2",
							"usedErrors": [
								1670,
								1673,
								1676,
								1679,
								1682,
								1685,
								1688,
								1691,
								1694,
								1697,
								1700,
								1703,
								1706,
								1709
							]
						}
					],
					"src": "84:8411:2"
				},
				"id": 2
			}
		}
	}
}