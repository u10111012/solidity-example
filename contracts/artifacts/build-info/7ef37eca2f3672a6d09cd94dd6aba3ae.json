{
	"id": "7ef37eca2f3672a6d09cd94dd6aba3ae",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Day8_IfElse.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.7;\n\ncontract IfElse{\n    function example (uint x) external pure returns (uint) {\n        if (x < 10){\n            return 1;\n        }\n        else if (x < 20){\n            return 2;\n        }\n        else {\n            return 3;\n        }\n    }\n    // 三元運ㄙㄨㄢ\n    function ternary (uint x) external pure returns (uint) {\n        // if (x < 10) {\n        //     return 1;\n        // }\n        // return 2;\n\n        return x < 10 ? 1 : 2;\n    } \n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Day8_IfElse.sol": {
				"IfElse": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "x",
									"type": "uint256"
								}
							],
							"name": "example",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "x",
									"type": "uint256"
								}
							],
							"name": "ternary",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Day8_IfElse.sol\":58:511  contract IfElse{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Day8_IfElse.sol\":58:511  contract IfElse{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x477e4a02\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x55278c5b\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Day8_IfElse.sol\":79:299  function example (uint x) external pure returns (uint) {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Day8_IfElse.sol\":330:508  function ternary (uint x) external pure returns (uint) {... */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_12:\n      tag_13\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Day8_IfElse.sol\":79:299  function example (uint x) external pure returns (uint) {... */\n    tag_8:\n        /* \"Day8_IfElse.sol\":128:132  uint */\n      0x00\n        /* \"Day8_IfElse.sol\":152:154  10 */\n      0x0a\n        /* \"Day8_IfElse.sol\":148:149  x */\n      dup3\n        /* \"Day8_IfElse.sol\":148:154  x < 10 */\n      lt\n        /* \"Day8_IfElse.sol\":144:293  if (x < 10){... */\n      iszero\n      tag_16\n      jumpi\n        /* \"Day8_IfElse.sol\":176:177  1 */\n      0x01\n        /* \"Day8_IfElse.sol\":169:177  return 1 */\n      swap1\n      pop\n      jump(tag_15)\n        /* \"Day8_IfElse.sol\":144:293  if (x < 10){... */\n    tag_16:\n        /* \"Day8_IfElse.sol\":210:212  20 */\n      0x14\n        /* \"Day8_IfElse.sol\":206:207  x */\n      dup3\n        /* \"Day8_IfElse.sol\":206:212  x < 20 */\n      lt\n        /* \"Day8_IfElse.sol\":202:293  if (x < 20){... */\n      iszero\n      tag_18\n      jumpi\n        /* \"Day8_IfElse.sol\":234:235  2 */\n      0x02\n        /* \"Day8_IfElse.sol\":227:235  return 2 */\n      swap1\n      pop\n      jump(tag_15)\n        /* \"Day8_IfElse.sol\":202:293  if (x < 20){... */\n    tag_18:\n        /* \"Day8_IfElse.sol\":281:282  3 */\n      0x03\n        /* \"Day8_IfElse.sol\":274:282  return 3 */\n      swap1\n      pop\n        /* \"Day8_IfElse.sol\":79:299  function example (uint x) external pure returns (uint) {... */\n    tag_15:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Day8_IfElse.sol\":330:508  function ternary (uint x) external pure returns (uint) {... */\n    tag_13:\n        /* \"Day8_IfElse.sol\":379:383  uint */\n      0x00\n        /* \"Day8_IfElse.sol\":491:493  10 */\n      0x0a\n        /* \"Day8_IfElse.sol\":487:488  x */\n      dup3\n        /* \"Day8_IfElse.sol\":487:493  x < 10 */\n      lt\n        /* \"Day8_IfElse.sol\":487:501  x < 10 ? 1 : 2 */\n      tag_21\n      jumpi\n        /* \"Day8_IfElse.sol\":500:501  2 */\n      0x02\n        /* \"Day8_IfElse.sol\":487:501  x < 10 ? 1 : 2 */\n      jump(tag_22)\n    tag_21:\n        /* \"Day8_IfElse.sol\":496:497  1 */\n      0x01\n        /* \"Day8_IfElse.sol\":487:501  x < 10 ? 1 : 2 */\n    tag_22:\n        /* \"Day8_IfElse.sol\":480:501  return x < 10 ? 1 : 2 */\n      0xff\n      and\n      swap1\n      pop\n        /* \"Day8_IfElse.sol\":330:508  function ternary (uint x) external pure returns (uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_24:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_26\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_27\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_7:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_29\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":228:347   */\n    tag_29:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_32\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_24\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:605   */\n    tag_33:\n        /* \"#utility.yul\":574:598   */\n      tag_35\n        /* \"#utility.yul\":592:597   */\n      dup2\n        /* \"#utility.yul\":574:598   */\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":569:572   */\n      dup3\n        /* \"#utility.yul\":562:599   */\n      mstore\n        /* \"#utility.yul\":487:605   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":611:833   */\n    tag_10:\n        /* \"#utility.yul\":704:708   */\n      0x00\n        /* \"#utility.yul\":742:744   */\n      0x20\n        /* \"#utility.yul\":731:740   */\n      dup3\n        /* \"#utility.yul\":727:745   */\n      add\n        /* \"#utility.yul\":719:745   */\n      swap1\n      pop\n        /* \"#utility.yul\":755:826   */\n      tag_38\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":812:821   */\n      dup4\n        /* \"#utility.yul\":808:825   */\n      add\n        /* \"#utility.yul\":799:805   */\n      dup5\n        /* \"#utility.yul\":755:826   */\n      tag_33\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":611:833   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":920:997   */\n    tag_36:\n        /* \"#utility.yul\":957:964   */\n      0x00\n        /* \"#utility.yul\":986:991   */\n      dup2\n        /* \"#utility.yul\":975:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":920:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1126:1243   */\n    tag_31:\n        /* \"#utility.yul\":1235:1236   */\n      0x00\n        /* \"#utility.yul\":1232:1233   */\n      dup1\n        /* \"#utility.yul\":1225:1237   */\n      revert\n        /* \"#utility.yul\":1249:1371   */\n    tag_27:\n        /* \"#utility.yul\":1322:1346   */\n      tag_46\n        /* \"#utility.yul\":1340:1345   */\n      dup2\n        /* \"#utility.yul\":1322:1346   */\n      tag_36\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":1315:1320   */\n      dup2\n        /* \"#utility.yul\":1312:1347   */\n      eq\n        /* \"#utility.yul\":1302:1365   */\n      tag_47\n      jumpi\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1358:1359   */\n      dup1\n        /* \"#utility.yul\":1351:1363   */\n      revert\n        /* \"#utility.yul\":1302:1365   */\n    tag_47:\n        /* \"#utility.yul\":1249:1371   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ef45c882f1ba27c5ea72a153bd59aab2b6bae7508f98132f1135c8eef4a2c9b764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101b1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063477e4a021461003b57806355278c5b1461006b575b600080fd5b610055600480360381019061005091906100fe565b61009b565b604051610062919061013a565b60405180910390f35b610085600480360381019061008091906100fe565b6100cb565b604051610092919061013a565b60405180910390f35b6000600a8210156100af57600190506100c6565b60148210156100c157600290506100c6565b600390505b919050565b6000600a82106100dc5760026100df565b60015b60ff169050919050565b6000813590506100f881610164565b92915050565b6000602082840312156101145761011361015f565b5b6000610122848285016100e9565b91505092915050565b61013481610155565b82525050565b600060208201905061014f600083018461012b565b92915050565b6000819050919050565b600080fd5b61016d81610155565b811461017857600080fd5b5056fea2646970667358221220ef45c882f1ba27c5ea72a153bd59aab2b6bae7508f98132f1135c8eef4a2c9b764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B1 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x477E4A02 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x55278C5B EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xFE JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x13A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x80 SWAP2 SWAP1 PUSH2 0xFE JUMP JUMPDEST PUSH2 0xCB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x13A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0xA DUP3 LT ISZERO PUSH2 0xAF JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xC6 JUMP JUMPDEST PUSH1 0x14 DUP3 LT ISZERO PUSH2 0xC1 JUMPI PUSH1 0x2 SWAP1 POP PUSH2 0xC6 JUMP JUMPDEST PUSH1 0x3 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA DUP3 LT PUSH2 0xDC JUMPI PUSH1 0x2 PUSH2 0xDF JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF8 DUP2 PUSH2 0x164 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x114 JUMPI PUSH2 0x113 PUSH2 0x15F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x122 DUP5 DUP3 DUP6 ADD PUSH2 0xE9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x134 DUP2 PUSH2 0x155 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16D DUP2 PUSH2 0x155 JUMP JUMPDEST DUP2 EQ PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF GASLIMIT 0xC8 DUP3 CALL 0xBA 0x27 0xC5 0xEA PUSH19 0xA153BD59AAB2B6BAE7508F98132F1135C8EEF4 LOG2 0xC9 0xB7 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "58:453:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@example_26": {
									"entryPoint": 155,
									"id": 26,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ternary_41": {
									"entryPoint": 203,
									"id": 41,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 351,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1374:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:1"
															},
															"nodeType": "YulIf",
															"src": "228:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:1",
														"type": ""
													}
												],
												"src": "152:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "569:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "592:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "574:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "574:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "562:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "540:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "547:3:1",
														"type": ""
													}
												],
												"src": "487:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "709:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "719:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "731:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "742:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "727:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "727:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "719:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "799:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "812:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "823:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "808:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "808:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "755:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "755:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "755:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "681:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "693:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "704:4:1",
														"type": ""
													}
												],
												"src": "611:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "879:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "889:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "905:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "899:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "899:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "889:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "872:6:1",
														"type": ""
													}
												],
												"src": "839:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "965:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "975:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "986:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "975:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "947:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "957:7:1",
														"type": ""
													}
												],
												"src": "920:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1092:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1109:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1112:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1102:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1102:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1102:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1003:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1215:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1232:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1235:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1225:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1225:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1225:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1126:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1292:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1349:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1358:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1361:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1351:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1351:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1351:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1315:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1340:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1322:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1322:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1312:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1312:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1305:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1305:43:1"
															},
															"nodeType": "YulIf",
															"src": "1302:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1285:5:1",
														"type": ""
													}
												],
												"src": "1249:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063477e4a021461003b57806355278c5b1461006b575b600080fd5b610055600480360381019061005091906100fe565b61009b565b604051610062919061013a565b60405180910390f35b610085600480360381019061008091906100fe565b6100cb565b604051610092919061013a565b60405180910390f35b6000600a8210156100af57600190506100c6565b60148210156100c157600290506100c6565b600390505b919050565b6000600a82106100dc5760026100df565b60015b60ff169050919050565b6000813590506100f881610164565b92915050565b6000602082840312156101145761011361015f565b5b6000610122848285016100e9565b91505092915050565b61013481610155565b82525050565b600060208201905061014f600083018461012b565b92915050565b6000819050919050565b600080fd5b61016d81610155565b811461017857600080fd5b5056fea2646970667358221220ef45c882f1ba27c5ea72a153bd59aab2b6bae7508f98132f1135c8eef4a2c9b764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x477E4A02 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x55278C5B EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xFE JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x13A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x80 SWAP2 SWAP1 PUSH2 0xFE JUMP JUMPDEST PUSH2 0xCB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x13A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0xA DUP3 LT ISZERO PUSH2 0xAF JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xC6 JUMP JUMPDEST PUSH1 0x14 DUP3 LT ISZERO PUSH2 0xC1 JUMPI PUSH1 0x2 SWAP1 POP PUSH2 0xC6 JUMP JUMPDEST PUSH1 0x3 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA DUP3 LT PUSH2 0xDC JUMPI PUSH1 0x2 PUSH2 0xDF JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF8 DUP2 PUSH2 0x164 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x114 JUMPI PUSH2 0x113 PUSH2 0x15F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x122 DUP5 DUP3 DUP6 ADD PUSH2 0xE9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x134 DUP2 PUSH2 0x155 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16D DUP2 PUSH2 0x155 JUMP JUMPDEST DUP2 EQ PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF GASLIMIT 0xC8 DUP3 CALL 0xBA 0x27 0xC5 0xEA PUSH19 0xA153BD59AAB2B6BAE7508F98132F1135C8EEF4 LOG2 0xC9 0xB7 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "58:453:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;79:220;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;330:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;79:220;128:4;152:2;148:1;:6;144:149;;;176:1;169:8;;;;144:149;210:2;206:1;:6;202:91;;;234:1;227:8;;;;202:91;281:1;274:8;;79:220;;;;:::o;330:178::-;379:4;491:2;487:1;:6;:14;;500:1;487:14;;;496:1;487:14;480:21;;;;330:178;;;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:118::-;574:24;592:5;574:24;:::i;:::-;569:3;562:37;487:118;;:::o;611:222::-;704:4;742:2;731:9;727:18;719:26;;755:71;823:1;812:9;808:17;799:6;755:71;:::i;:::-;611:222;;;;:::o;920:77::-;957:7;986:5;975:16;;920:77;;;:::o;1126:117::-;1235:1;1232;1225:12;1249:122;1322:24;1340:5;1322:24;:::i;:::-;1315:5;1312:35;1302:63;;1361:1;1358;1351:12;1302:63;1249:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "86600",
								"executionCost": "135",
								"totalCost": "86735"
							},
							"external": {
								"example(uint256)": "infinite",
								"ternary(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 511,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 511,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 511,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 511,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 511,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 511,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 58,
									"end": 511,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 511,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 58,
									"end": 511,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 511,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 511,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 58,
									"end": 511,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 511,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 58,
									"end": 511,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58,
									"end": 511,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 511,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 511,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 511,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 511,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 58,
									"end": 511,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 511,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ef45c882f1ba27c5ea72a153bd59aab2b6bae7508f98132f1135c8eef4a2c9b764736f6c63430008070033",
									".code": [
										{
											"begin": 58,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 511,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 511,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 511,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 511,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 511,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 511,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 511,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 511,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 511,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 58,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 58,
											"end": 511,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 58,
											"end": 511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "477E4A02"
										},
										{
											"begin": 58,
											"end": 511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58,
											"end": 511,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "55278C5B"
										},
										{
											"begin": 58,
											"end": 511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 511,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 511,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 511,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 79,
											"end": 299,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 79,
											"end": 299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 79,
											"end": 299,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 79,
											"end": 299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79,
											"end": 299,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 79,
											"end": 299,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 79,
											"end": 299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79,
											"end": 299,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79,
											"end": 299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 79,
											"end": 299,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79,
											"end": 299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 79,
											"end": 299,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 79,
											"end": 299,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 79,
											"end": 299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 79,
											"end": 299,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 79,
											"end": 299,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 79,
											"end": 299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79,
											"end": 299,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79,
											"end": 299,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 79,
											"end": 299,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79,
											"end": 299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 79,
											"end": 299,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 79,
											"end": 299,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 79,
											"end": 299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79,
											"end": 299,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79,
											"end": 299,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79,
											"end": 299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79,
											"end": 299,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79,
											"end": 299,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 79,
											"end": 299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79,
											"end": 299,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 330,
											"end": 508,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 330,
											"end": 508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 330,
											"end": 508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 330,
											"end": 508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 330,
											"end": 508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 330,
											"end": 508,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 330,
											"end": 508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 330,
											"end": 508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 330,
											"end": 508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 330,
											"end": 508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 330,
											"end": 508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 330,
											"end": 508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 330,
											"end": 508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 330,
											"end": 508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 330,
											"end": 508,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 330,
											"end": 508,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 330,
											"end": 508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 330,
											"end": 508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 330,
											"end": 508,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 330,
											"end": 508,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 330,
											"end": 508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 330,
											"end": 508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 330,
											"end": 508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 330,
											"end": 508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 330,
											"end": 508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 330,
											"end": 508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 330,
											"end": 508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 330,
											"end": 508,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 330,
											"end": 508,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 330,
											"end": 508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 330,
											"end": 508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 330,
											"end": 508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 330,
											"end": 508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 330,
											"end": 508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 330,
											"end": 508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 330,
											"end": 508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 330,
											"end": 508,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 79,
											"end": 299,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 79,
											"end": 299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 128,
											"end": 132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 152,
											"end": 154,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 148,
											"end": 149,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 148,
											"end": 154,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 144,
											"end": 293,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 144,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 144,
											"end": 293,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 176,
											"end": 177,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 169,
											"end": 177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 169,
											"end": 177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 169,
											"end": 177,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 144,
											"end": 293,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 144,
											"end": 293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 210,
											"end": 212,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 206,
											"end": 207,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 206,
											"end": 212,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 202,
											"end": 293,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 202,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 202,
											"end": 293,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 234,
											"end": 235,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 227,
											"end": 235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 227,
											"end": 235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 227,
											"end": 235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 227,
											"end": 235,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 202,
											"end": 293,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 202,
											"end": 293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 281,
											"end": 282,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 274,
											"end": 282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 274,
											"end": 282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79,
											"end": 299,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 79,
											"end": 299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79,
											"end": 299,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79,
											"end": 299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79,
											"end": 299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79,
											"end": 299,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 330,
											"end": 508,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 330,
											"end": 508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 379,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 493,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 487,
											"end": 488,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 487,
											"end": 493,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 487,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 487,
											"end": 501,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 500,
											"end": 501,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 487,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 487,
											"end": 501,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 487,
											"end": 501,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 487,
											"end": 501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 496,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 487,
											"end": 501,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 487,
											"end": 501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 480,
											"end": 501,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 480,
											"end": 501,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 480,
											"end": 501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 480,
											"end": 501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 330,
											"end": 508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 330,
											"end": 508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 330,
											"end": 508,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 330,
											"end": 508,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 592,
											"end": 597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 569,
											"end": 572,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 562,
											"end": 599,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 611,
											"end": 833,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 611,
											"end": 833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 704,
											"end": 708,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 744,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 731,
											"end": 740,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 727,
											"end": 745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 719,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 719,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 755,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 821,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 808,
											"end": 825,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 799,
											"end": 805,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 755,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 755,
											"end": 826,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 755,
											"end": 826,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 755,
											"end": 826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 611,
											"end": 833,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 611,
											"end": 833,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 611,
											"end": 833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 611,
											"end": 833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 611,
											"end": 833,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 920,
											"end": 997,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 920,
											"end": 997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 957,
											"end": 964,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 975,
											"end": 991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 975,
											"end": 991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 920,
											"end": 997,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 920,
											"end": 997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 920,
											"end": 997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 920,
											"end": 997,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1126,
											"end": 1243,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1126,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1236,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 1233,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1237,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1249,
											"end": 1371,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1249,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1340,
											"end": 1345,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1322,
											"end": 1346,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1322,
											"end": 1346,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1322,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1312,
											"end": 1347,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1302,
											"end": 1365,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1359,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1363,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1365,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1302,
											"end": 1365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1249,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1249,
											"end": 1371,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"example(uint256)": "477e4a02",
							"ternary(uint256)": "55278c5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"example\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"ternary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Day8_IfElse.sol\":\"IfElse\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Day8_IfElse.sol\":{\"keccak256\":\"0xa28fc7fcd01753f2adcd6d20d9114733abcfe9aa425c1eaba764dc48b6ceec76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://963b191a15d4c1397b4b0d83e63208d8a7d39fa7c67aa4337d6fec4525dfa793\",\"dweb:/ipfs/QmPKesXarCJW8W6JNvEdk8JawBJJdMqgdXTiXuLsatnB5e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Day8_IfElse.sol": {
				"ast": {
					"absolutePath": "Day8_IfElse.sol",
					"exportedSymbols": {
						"IfElse": [
							42
						]
					},
					"id": 43,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 42,
							"linearizedBaseContracts": [
								42
							],
							"name": "IfElse",
							"nameLocation": "67:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "134:165:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 8,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "148:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 9,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "152:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "148:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 14,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "206:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "3230",
															"id": 15,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "210:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															"value": "20"
														},
														"src": "206:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 22,
														"nodeType": "Block",
														"src": "260:33:0",
														"statements": [
															{
																"expression": {
																	"hexValue": "33",
																	"id": 20,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "281:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"functionReturnParameters": 7,
																"id": 21,
																"nodeType": "Return",
																"src": "274:8:0"
															}
														]
													},
													"id": 23,
													"nodeType": "IfStatement",
													"src": "202:91:0",
													"trueBody": {
														"id": 19,
														"nodeType": "Block",
														"src": "213:33:0",
														"statements": [
															{
																"expression": {
																	"hexValue": "32",
																	"id": 17,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "234:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"functionReturnParameters": 7,
																"id": 18,
																"nodeType": "Return",
																"src": "227:8:0"
															}
														]
													}
												},
												"id": 24,
												"nodeType": "IfStatement",
												"src": "144:149:0",
												"trueBody": {
													"id": 13,
													"nodeType": "Block",
													"src": "155:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "31",
																"id": 11,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "176:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"functionReturnParameters": 7,
															"id": 12,
															"nodeType": "Return",
															"src": "169:8:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "477e4a02",
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "example",
									"nameLocation": "88:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "102:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "97:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "97:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "96:8:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "128:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "128:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "127:6:0"
									},
									"scope": 42,
									"src": "79:220:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "385:123:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 33,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "487:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "3130",
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "491:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"src": "487:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "32",
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "500:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "487:14:0",
													"trueExpression": {
														"hexValue": "31",
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "496:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 32,
												"id": 39,
												"nodeType": "Return",
												"src": "480:21:0"
											}
										]
									},
									"functionSelector": "55278c5b",
									"id": 41,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ternary",
									"nameLocation": "339:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "353:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "348:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "348:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:8:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "379:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "379:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "378:6:0"
									},
									"scope": 42,
									"src": "330:178:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 43,
							"src": "58:453:0",
							"usedErrors": []
						}
					],
					"src": "33:478:0"
				},
				"id": 0
			}
		}
	}
}