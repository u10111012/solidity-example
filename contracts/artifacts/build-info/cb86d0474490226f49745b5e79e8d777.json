{
	"id": "cb86d0474490226f49745b5e79e8d777",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Day14_Outputs.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.7;\n\n// return mutiple outputs\n// Named outpus\n// Destructuring assignment\n\ncontract FunctionOutput {\n    function returnMany () public pure returns (uint , bool) {\n        return (1,true);\n    }\n\n    function named () public pure returns (uint x , bool y) {\n        return (1,true);\n    }\n\n    function assigned () public pure returns (uint x , bool y) {\n        x = 1;\n        y = true;\n    }\n\n    function destructuringAssignments () public pure returns (uint ) {\n        (uint x, bool y) = returnMany();\n        // (, bool _y) = returnMany();\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Day14_Outputs.sol": {
				"FunctionOutput": {
					"abi": [
						{
							"inputs": [],
							"name": "assigned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "x",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "y",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "destructuringAssignments",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "named",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "x",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "y",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "returnMany",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Day14_Outputs.sol\":129:607  contract FunctionOutput {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Day14_Outputs.sol\":129:607  contract FunctionOutput {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x45f907a8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x68873440\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x86887544\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xadb4d990\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Day14_Outputs.sol\":254:342  function named () public pure returns (uint x , bool y) {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_9\n      swap3\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Day14_Outputs.sol\":453:605  function destructuringAssignments () public pure returns (uint ) {... */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Day14_Outputs.sol\":159:248  function returnMany () public pure returns (uint , bool) {... */\n    tag_5:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap3\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Day14_Outputs.sol\":348:447  function assigned () public pure returns (uint x , bool y) {... */\n    tag_6:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap3\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Day14_Outputs.sol\":254:342  function named () public pure returns (uint x , bool y) {... */\n    tag_8:\n        /* \"Day14_Outputs.sol\":293:299  uint x */\n      0x00\n        /* \"Day14_Outputs.sol\":302:308  bool y */\n      dup1\n        /* \"Day14_Outputs.sol\":328:329  1 */\n      0x01\n        /* \"Day14_Outputs.sol\":330:334  true */\n      dup1\n        /* \"Day14_Outputs.sol\":320:335  return (1,true) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Day14_Outputs.sol\":254:342  function named () public pure returns (uint x , bool y) {... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"Day14_Outputs.sol\":453:605  function destructuringAssignments () public pure returns (uint ) {... */\n    tag_12:\n        /* \"Day14_Outputs.sol\":511:515  uint */\n      0x00\n        /* \"Day14_Outputs.sol\":529:535  uint x */\n      dup1\n        /* \"Day14_Outputs.sol\":537:543  bool y */\n      0x00\n        /* \"Day14_Outputs.sol\":547:559  returnMany() */\n      tag_23\n        /* \"Day14_Outputs.sol\":547:557  returnMany */\n      tag_16\n        /* \"Day14_Outputs.sol\":547:559  returnMany() */\n      jump\t// in\n    tag_23:\n        /* \"Day14_Outputs.sol\":528:559  (uint x, bool y) = returnMany() */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Day14_Outputs.sol\":518:605  {... */\n      pop\n      pop\n        /* \"Day14_Outputs.sol\":453:605  function destructuringAssignments () public pure returns (uint ) {... */\n      swap1\n      jump\t// out\n        /* \"Day14_Outputs.sol\":159:248  function returnMany () public pure returns (uint , bool) {... */\n    tag_16:\n        /* \"Day14_Outputs.sol\":203:207  uint */\n      0x00\n        /* \"Day14_Outputs.sol\":210:214  bool */\n      dup1\n        /* \"Day14_Outputs.sol\":234:235  1 */\n      0x01\n        /* \"Day14_Outputs.sol\":236:240  true */\n      dup1\n        /* \"Day14_Outputs.sol\":226:241  return (1,true) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Day14_Outputs.sol\":159:248  function returnMany () public pure returns (uint , bool) {... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"Day14_Outputs.sol\":348:447  function assigned () public pure returns (uint x , bool y) {... */\n    tag_19:\n        /* \"Day14_Outputs.sol\":390:396  uint x */\n      0x00\n        /* \"Day14_Outputs.sol\":399:405  bool y */\n      dup1\n        /* \"Day14_Outputs.sol\":421:422  1 */\n      0x01\n        /* \"Day14_Outputs.sol\":417:422  x = 1 */\n      swap2\n      pop\n        /* \"Day14_Outputs.sol\":436:440  true */\n      0x01\n        /* \"Day14_Outputs.sol\":432:440  y = true */\n      swap1\n      pop\n        /* \"Day14_Outputs.sol\":348:447  function assigned () public pure returns (uint x , bool y) {... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"#utility.yul\":7:116   */\n    tag_27:\n        /* \"#utility.yul\":88:109   */\n      tag_29\n        /* \"#utility.yul\":103:108   */\n      dup2\n        /* \"#utility.yul\":88:109   */\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":83:86   */\n      dup3\n        /* \"#utility.yul\":76:110   */\n      mstore\n        /* \"#utility.yul\":7:116   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":122:240   */\n    tag_31:\n        /* \"#utility.yul\":209:233   */\n      tag_33\n        /* \"#utility.yul\":227:232   */\n      dup2\n        /* \"#utility.yul\":209:233   */\n      tag_34\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":204:207   */\n      dup3\n        /* \"#utility.yul\":197:234   */\n      mstore\n        /* \"#utility.yul\":122:240   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":246:468   */\n    tag_14:\n        /* \"#utility.yul\":339:343   */\n      0x00\n        /* \"#utility.yul\":377:379   */\n      0x20\n        /* \"#utility.yul\":366:375   */\n      dup3\n        /* \"#utility.yul\":362:380   */\n      add\n        /* \"#utility.yul\":354:380   */\n      swap1\n      pop\n        /* \"#utility.yul\":390:461   */\n      tag_36\n        /* \"#utility.yul\":458:459   */\n      0x00\n        /* \"#utility.yul\":447:456   */\n      dup4\n        /* \"#utility.yul\":443:460   */\n      add\n        /* \"#utility.yul\":434:440   */\n      dup5\n        /* \"#utility.yul\":390:461   */\n      tag_31\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":246:468   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":474:794   */\n    tag_10:\n        /* \"#utility.yul\":589:593   */\n      0x00\n        /* \"#utility.yul\":627:629   */\n      0x40\n        /* \"#utility.yul\":616:625   */\n      dup3\n        /* \"#utility.yul\":612:630   */\n      add\n        /* \"#utility.yul\":604:630   */\n      swap1\n      pop\n        /* \"#utility.yul\":640:711   */\n      tag_38\n        /* \"#utility.yul\":708:709   */\n      0x00\n        /* \"#utility.yul\":697:706   */\n      dup4\n        /* \"#utility.yul\":693:710   */\n      add\n        /* \"#utility.yul\":684:690   */\n      dup6\n        /* \"#utility.yul\":640:711   */\n      tag_31\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":721:787   */\n      tag_39\n        /* \"#utility.yul\":783:785   */\n      0x20\n        /* \"#utility.yul\":772:781   */\n      dup4\n        /* \"#utility.yul\":768:786   */\n      add\n        /* \"#utility.yul\":759:765   */\n      dup5\n        /* \"#utility.yul\":721:787   */\n      tag_27\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":474:794   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:890   */\n    tag_30:\n        /* \"#utility.yul\":834:841   */\n      0x00\n        /* \"#utility.yul\":877:882   */\n      dup2\n        /* \"#utility.yul\":870:883   */\n      iszero\n        /* \"#utility.yul\":863:884   */\n      iszero\n        /* \"#utility.yul\":852:884   */\n      swap1\n      pop\n        /* \"#utility.yul\":800:890   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":896:973   */\n    tag_34:\n        /* \"#utility.yul\":933:940   */\n      0x00\n        /* \"#utility.yul\":962:967   */\n      dup2\n        /* \"#utility.yul\":951:967   */\n      swap1\n      pop\n        /* \"#utility.yul\":896:973   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fddb665a09f02d1b108dfe32d739621a9de4a20206fbcb48836ba09fcc523eb964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101bb806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806345f907a8146100515780636887344014610070578063868875441461008e578063adb4d990146100ad575b600080fd5b6100596100cc565b604051610067929190610146565b60405180910390f35b6100786100da565b604051610085919061012b565b60405180910390f35b6100966100f0565b6040516100a4929190610146565b60405180910390f35b6100b56100fe565b6040516100c3929190610146565b60405180910390f35b600080600180915091509091565b60008060006100e76100f0565b91509150505090565b600080600180915091509091565b60008060019150600190509091565b6101168161016f565b82525050565b6101258161017b565b82525050565b6000602082019050610140600083018461011c565b92915050565b600060408201905061015b600083018561011c565b610168602083018461010d565b9392505050565b60008115159050919050565b600081905091905056fea2646970667358221220fddb665a09f02d1b108dfe32d739621a9de4a20206fbcb48836ba09fcc523eb964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BB DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x45F907A8 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x68873440 EQ PUSH2 0x70 JUMPI DUP1 PUSH4 0x86887544 EQ PUSH2 0x8E JUMPI DUP1 PUSH4 0xADB4D990 EQ PUSH2 0xAD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67 SWAP3 SWAP2 SWAP1 PUSH2 0x146 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x78 PUSH2 0xDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x85 SWAP2 SWAP1 PUSH2 0x12B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x96 PUSH2 0xF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA4 SWAP3 SWAP2 SWAP1 PUSH2 0x146 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB5 PUSH2 0xFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP3 SWAP2 SWAP1 PUSH2 0x146 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP1 SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xE7 PUSH2 0xF0 JUMP JUMPDEST SWAP2 POP SWAP2 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP1 SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP2 POP PUSH1 0x1 SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x116 DUP2 PUSH2 0x16F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x125 DUP2 PUSH2 0x17B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x140 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x11C JUMP JUMPDEST PUSH2 0x168 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xDB PUSH7 0x5A09F02D1B108D INVALID ORIGIN 0xD7 CODECOPY PUSH3 0x1A9DE4 LOG2 MUL MOD 0xFB 0xCB BASEFEE DUP4 PUSH12 0xA09FCC523EB964736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "129:478:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@assigned_41": {
									"entryPoint": 254,
									"id": 41,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@destructuringAssignments_54": {
									"entryPoint": 218,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@named_25": {
									"entryPoint": 204,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@returnMany_13": {
									"entryPoint": 240,
									"id": 13,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 326,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:976:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "83:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "103:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "88:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "88:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "76:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "76:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "76:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "54:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "61:3:1",
														"type": ""
													}
												],
												"src": "7:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "187:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "204:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "227:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "209:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "209:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "197:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "197:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "197:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "175:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "182:3:1",
														"type": ""
													}
												],
												"src": "122:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "344:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "354:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "366:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "377:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "362:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "354:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "434:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "447:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "458:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "443:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "443:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "390:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "390:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "390:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "316:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "328:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "339:4:1",
														"type": ""
													}
												],
												"src": "246:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "594:200:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "604:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "616:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "627:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "612:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "612:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "604:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "684:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "697:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "708:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "693:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "693:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "640:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "640:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "640:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "759:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "772:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "783:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "768:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "768:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "721:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "721:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "721:66:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "558:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "570:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "578:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "589:4:1",
														"type": ""
													}
												],
												"src": "474:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "842:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "852:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "877:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "870:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "870:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "863:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "863:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "852:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "824:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "834:7:1",
														"type": ""
													}
												],
												"src": "800:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "941:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "951:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "962:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "951:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "923:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "933:7:1",
														"type": ""
													}
												],
												"src": "896:77:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c806345f907a8146100515780636887344014610070578063868875441461008e578063adb4d990146100ad575b600080fd5b6100596100cc565b604051610067929190610146565b60405180910390f35b6100786100da565b604051610085919061012b565b60405180910390f35b6100966100f0565b6040516100a4929190610146565b60405180910390f35b6100b56100fe565b6040516100c3929190610146565b60405180910390f35b600080600180915091509091565b60008060006100e76100f0565b91509150505090565b600080600180915091509091565b60008060019150600190509091565b6101168161016f565b82525050565b6101258161017b565b82525050565b6000602082019050610140600083018461011c565b92915050565b600060408201905061015b600083018561011c565b610168602083018461010d565b9392505050565b60008115159050919050565b600081905091905056fea2646970667358221220fddb665a09f02d1b108dfe32d739621a9de4a20206fbcb48836ba09fcc523eb964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x45F907A8 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x68873440 EQ PUSH2 0x70 JUMPI DUP1 PUSH4 0x86887544 EQ PUSH2 0x8E JUMPI DUP1 PUSH4 0xADB4D990 EQ PUSH2 0xAD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67 SWAP3 SWAP2 SWAP1 PUSH2 0x146 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x78 PUSH2 0xDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x85 SWAP2 SWAP1 PUSH2 0x12B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x96 PUSH2 0xF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA4 SWAP3 SWAP2 SWAP1 PUSH2 0x146 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB5 PUSH2 0xFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP3 SWAP2 SWAP1 PUSH2 0x146 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP1 SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xE7 PUSH2 0xF0 JUMP JUMPDEST SWAP2 POP SWAP2 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP1 SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP2 POP PUSH1 0x1 SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x116 DUP2 PUSH2 0x16F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x125 DUP2 PUSH2 0x17B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x140 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x11C JUMP JUMPDEST PUSH2 0x168 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xDB PUSH7 0x5A09F02D1B108D INVALID ORIGIN 0xD7 CODECOPY PUSH3 0x1A9DE4 LOG2 MUL MOD 0xFB 0xCB BASEFEE DUP4 PUSH12 0xA09FCC523EB964736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "129:478:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;254:88;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;453:152;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;159:89;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;348:99;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;254:88;293:6;302;328:1;330:4;320:15;;;;254:88;;:::o;453:152::-;511:4;529:6;537;547:12;:10;:12::i;:::-;528:31;;;;518:87;;453:152;:::o;159:89::-;203:4;210;234:1;236:4;226:15;;;;159:89;;:::o;348:99::-;390:6;399;421:1;417:5;;436:4;432:8;;348:99;;:::o;7:109:1:-;88:21;103:5;88:21;:::i;:::-;83:3;76:34;7:109;;:::o;122:118::-;209:24;227:5;209:24;:::i;:::-;204:3;197:37;122:118;;:::o;246:222::-;339:4;377:2;366:9;362:18;354:26;;390:71;458:1;447:9;443:17;434:6;390:71;:::i;:::-;246:222;;;;:::o;474:320::-;589:4;627:2;616:9;612:18;604:26;;640:71;708:1;697:9;693:17;684:6;640:71;:::i;:::-;721:66;783:2;772:9;768:18;759:6;721:66;:::i;:::-;474:320;;;;;:::o;800:90::-;834:7;877:5;870:13;863:21;852:32;;800:90;;;:::o;896:77::-;933:7;962:5;951:16;;896:77;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "88600",
								"executionCost": "135",
								"totalCost": "88735"
							},
							"external": {
								"assigned()": "501",
								"destructuringAssignments()": "401",
								"named()": "435",
								"returnMany()": "479"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 129,
									"end": 607,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 129,
									"end": 607,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 129,
									"end": 607,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 129,
									"end": 607,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 129,
									"end": 607,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 129,
									"end": 607,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 129,
									"end": 607,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 607,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 129,
									"end": 607,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 607,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 129,
									"end": 607,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 129,
									"end": 607,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 607,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 129,
									"end": 607,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 129,
									"end": 607,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 607,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 129,
									"end": 607,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 607,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 607,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 129,
									"end": 607,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 607,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fddb665a09f02d1b108dfe32d739621a9de4a20206fbcb48836ba09fcc523eb964736f6c63430008070033",
									".code": [
										{
											"begin": 129,
											"end": 607,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 129,
											"end": 607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 129,
											"end": 607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 129,
											"end": 607,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 129,
											"end": 607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 607,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 129,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 129,
											"end": 607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 607,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 129,
											"end": 607,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 129,
											"end": 607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 129,
											"end": 607,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 129,
											"end": 607,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 129,
											"end": 607,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 129,
											"end": 607,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 129,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 129,
											"end": 607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 607,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 129,
											"end": 607,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 129,
											"end": 607,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 129,
											"end": 607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 607,
											"name": "PUSH",
											"source": 0,
											"value": "45F907A8"
										},
										{
											"begin": 129,
											"end": 607,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 129,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 129,
											"end": 607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 607,
											"name": "PUSH",
											"source": 0,
											"value": "68873440"
										},
										{
											"begin": 129,
											"end": 607,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 129,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 129,
											"end": 607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 607,
											"name": "PUSH",
											"source": 0,
											"value": "86887544"
										},
										{
											"begin": 129,
											"end": 607,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 129,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 129,
											"end": 607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 607,
											"name": "PUSH",
											"source": 0,
											"value": "ADB4D990"
										},
										{
											"begin": 129,
											"end": 607,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 129,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 129,
											"end": 607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 129,
											"end": 607,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 129,
											"end": 607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 129,
											"end": 607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 607,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 254,
											"end": 342,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 254,
											"end": 342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 254,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 254,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 254,
											"end": 342,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 254,
											"end": 342,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 254,
											"end": 342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 254,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 254,
											"end": 342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 254,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 254,
											"end": 342,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 254,
											"end": 342,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 254,
											"end": 342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 254,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 254,
											"end": 342,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 254,
											"end": 342,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 254,
											"end": 342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 254,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 254,
											"end": 342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 254,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 254,
											"end": 342,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 254,
											"end": 342,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 254,
											"end": 342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 254,
											"end": 342,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 453,
											"end": 605,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 453,
											"end": 605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 453,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 453,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 453,
											"end": 605,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 453,
											"end": 605,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 453,
											"end": 605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 453,
											"end": 605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 453,
											"end": 605,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 453,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 453,
											"end": 605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 453,
											"end": 605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 453,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 453,
											"end": 605,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 453,
											"end": 605,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 453,
											"end": 605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 453,
											"end": 605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 453,
											"end": 605,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 453,
											"end": 605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 453,
											"end": 605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 453,
											"end": 605,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 453,
											"end": 605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 453,
											"end": 605,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 159,
											"end": 248,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 159,
											"end": 248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 159,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 159,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 159,
											"end": 248,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 159,
											"end": 248,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 159,
											"end": 248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 159,
											"end": 248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 159,
											"end": 248,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 159,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 159,
											"end": 248,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 159,
											"end": 248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 159,
											"end": 248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 159,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 159,
											"end": 248,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 159,
											"end": 248,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 159,
											"end": 248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 159,
											"end": 248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 159,
											"end": 248,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 159,
											"end": 248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 159,
											"end": 248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 159,
											"end": 248,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 159,
											"end": 248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 159,
											"end": 248,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 348,
											"end": 447,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 348,
											"end": 447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 348,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 348,
											"end": 447,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 348,
											"end": 447,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 348,
											"end": 447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 447,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 447,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 447,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 348,
											"end": 447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 348,
											"end": 447,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 348,
											"end": 447,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 447,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 447,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 447,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 348,
											"end": 447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 447,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 254,
											"end": 342,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 254,
											"end": 342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 293,
											"end": 299,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 328,
											"end": 329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 330,
											"end": 334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 320,
											"end": 335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 320,
											"end": 335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 320,
											"end": 335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 320,
											"end": 335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 254,
											"end": 342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 254,
											"end": 342,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 254,
											"end": 342,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 453,
											"end": 605,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 453,
											"end": 605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 511,
											"end": 515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 537,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 547,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 547,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 547,
											"end": 559,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 547,
											"end": 559,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 547,
											"end": 559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 528,
											"end": 559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 528,
											"end": 559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 528,
											"end": 559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 528,
											"end": 559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 518,
											"end": 605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 518,
											"end": 605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 453,
											"end": 605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 453,
											"end": 605,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 159,
											"end": 248,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 159,
											"end": 248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 203,
											"end": 207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 210,
											"end": 214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 234,
											"end": 235,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 236,
											"end": 240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 226,
											"end": 241,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 226,
											"end": 241,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 226,
											"end": 241,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 226,
											"end": 241,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 159,
											"end": 248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 159,
											"end": 248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 159,
											"end": 248,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 348,
											"end": 447,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 348,
											"end": 447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 390,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 421,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 417,
											"end": 422,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 417,
											"end": 422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 436,
											"end": 440,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 432,
											"end": 440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 432,
											"end": 440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 447,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 116,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 7,
											"end": 116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 88,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 103,
											"end": 108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 88,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 83,
											"end": 86,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 76,
											"end": 110,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 122,
											"end": 240,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 122,
											"end": 240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 209,
											"end": 233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 227,
											"end": 232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 209,
											"end": 233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 209,
											"end": 233,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 209,
											"end": 233,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 209,
											"end": 233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 204,
											"end": 207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 197,
											"end": 234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 122,
											"end": 240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 122,
											"end": 240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 122,
											"end": 240,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 246,
											"end": 468,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 246,
											"end": 468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 339,
											"end": 343,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 379,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 366,
											"end": 375,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 362,
											"end": 380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 354,
											"end": 380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 354,
											"end": 380,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 390,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 458,
											"end": 459,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 447,
											"end": 456,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 443,
											"end": 460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 434,
											"end": 440,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 390,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 390,
											"end": 461,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 390,
											"end": 461,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 390,
											"end": 461,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 246,
											"end": 468,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 246,
											"end": 468,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 246,
											"end": 468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 246,
											"end": 468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 246,
											"end": 468,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 474,
											"end": 794,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 474,
											"end": 794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 589,
											"end": 593,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 627,
											"end": 629,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 616,
											"end": 625,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 612,
											"end": 630,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 604,
											"end": 630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 604,
											"end": 630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 708,
											"end": 709,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 706,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 693,
											"end": 710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 684,
											"end": 690,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 640,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 640,
											"end": 711,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 640,
											"end": 711,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 640,
											"end": 711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 721,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 783,
											"end": 785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 772,
											"end": 781,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 768,
											"end": 786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 759,
											"end": 765,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 721,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 721,
											"end": 787,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 721,
											"end": 787,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 721,
											"end": 787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 474,
											"end": 794,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 474,
											"end": 794,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 474,
											"end": 794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 474,
											"end": 794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 474,
											"end": 794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 474,
											"end": 794,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 800,
											"end": 890,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 800,
											"end": 890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 834,
											"end": 841,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 882,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 870,
											"end": 883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 863,
											"end": 884,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 852,
											"end": 884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 852,
											"end": 884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 890,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 800,
											"end": 890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 800,
											"end": 890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 890,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 896,
											"end": 973,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 896,
											"end": 973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 933,
											"end": 940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 962,
											"end": 967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 951,
											"end": 967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 951,
											"end": 967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 896,
											"end": 973,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 896,
											"end": 973,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 896,
											"end": 973,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 896,
											"end": 973,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"assigned()": "adb4d990",
							"destructuringAssignments()": "68873440",
							"named()": "45f907a8",
							"returnMany()": "86887544"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"assigned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"y\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"destructuringAssignments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"named\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"y\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"returnMany\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Day14_Outputs.sol\":\"FunctionOutput\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Day14_Outputs.sol\":{\"keccak256\":\"0x806e2d98ac523983e08b42c610651ff1dc87e345ed18ecc97c31f1846050fd4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7453e2c042c6fab11687bb5879bdf74bf316adb319d8867fae011e5e9407673\",\"dweb:/ipfs/QmWhK5c5xq86s71RG5Vcap31WpvkifS2yB7nWpEaszzHx2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  --> Day14_Outputs.sol:23:63:\n   |\n23 |     function destructuringAssignments () public pure returns (uint ) {\n   |                                                               ^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 515,
					"file": "Day14_Outputs.sol",
					"start": 511
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> Day14_Outputs.sol:24:10:\n   |\n24 |         (uint x, bool y) = returnMany();\n   |          ^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 535,
					"file": "Day14_Outputs.sol",
					"start": 529
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> Day14_Outputs.sol:24:18:\n   |\n24 |         (uint x, bool y) = returnMany();\n   |                  ^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 543,
					"file": "Day14_Outputs.sol",
					"start": 537
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Day14_Outputs.sol": {
				"ast": {
					"absolutePath": "Day14_Outputs.sol",
					"exportedSymbols": {
						"FunctionOutput": [
							55
						]
					},
					"id": 56,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 55,
							"linearizedBaseContracts": [
								55
							],
							"name": "FunctionOutput",
							"nameLocation": "138:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 12,
										"nodeType": "Block",
										"src": "216:32:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"hexValue": "31",
															"id": 8,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "234:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "74727565",
															"id": 9,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "236:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"id": 10,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "233:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_rational_1_by_1_$_t_bool_$",
														"typeString": "tuple(int_const 1,bool)"
													}
												},
												"functionReturnParameters": 7,
												"id": 11,
												"nodeType": "Return",
												"src": "226:15:0"
											}
										]
									},
									"functionSelector": "86887544",
									"id": 13,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "returnMany",
									"nameLocation": "168:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "179:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "203:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "203:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "210:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "210:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "202:13:0"
									},
									"scope": 55,
									"src": "159:89:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "310:32:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"hexValue": "31",
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "328:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "74727565",
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "330:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"id": 22,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "327:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_rational_1_by_1_$_t_bool_$",
														"typeString": "tuple(int_const 1,bool)"
													}
												},
												"functionReturnParameters": 19,
												"id": 23,
												"nodeType": "Return",
												"src": "320:15:0"
											}
										]
									},
									"functionSelector": "45f907a8",
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "named",
									"nameLocation": "263:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "269:2:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "298:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "293:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "293:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "307:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "302:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "302:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "292:17:0"
									},
									"scope": 55,
									"src": "254:88:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "407:40:0",
										"statements": [
											{
												"expression": {
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 32,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "417:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "421:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "417:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "417:5:0"
											},
											{
												"expression": {
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 36,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "432:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "436:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "432:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "432:8:0"
											}
										]
									},
									"functionSelector": "adb4d990",
									"id": 41,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "assigned",
									"nameLocation": "357:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "366:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "395:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "390:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "390:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "404:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "399:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "399:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "389:17:0"
									},
									"scope": 55,
									"src": "348:99:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "518:87:0",
										"statements": [
											{
												"assignments": [
													47,
													49
												],
												"declarations": [
													{
														"constant": false,
														"id": 47,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "534:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 53,
														"src": "529:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 46,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "529:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 49,
														"mutability": "mutable",
														"name": "y",
														"nameLocation": "542:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 53,
														"src": "537:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 48,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "537:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 52,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 50,
														"name": "returnMany",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "547:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$_t_bool_$",
															"typeString": "function () pure returns (uint256,bool)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "547:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
														"typeString": "tuple(uint256,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "528:31:0"
											}
										]
									},
									"functionSelector": "68873440",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "destructuringAssignments",
									"nameLocation": "462:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "487:2:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "511:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "511:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "510:7:0"
									},
									"scope": 55,
									"src": "453:152:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 56,
							"src": "129:478:0",
							"usedErrors": []
						}
					],
					"src": "33:574:0"
				},
				"id": 0
			}
		}
	}
}