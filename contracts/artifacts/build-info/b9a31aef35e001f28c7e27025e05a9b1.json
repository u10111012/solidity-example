{
	"id": "b9a31aef35e001f28c7e27025e05a9b1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"Day50_ERC721A.sol": {
				"content": "pragma solidity ^0.8.4;\n\nimport \"erc721a/contracts/ERC721A.sol\";\n\ncontract Azuki is ERC721A {\n  constructor() ERC721A(\"Azuki\", \"AZUKI\") {}\n\n  function mint(uint256 quantity) external payable {\n    // _safeMint's second argument now takes in a quantity, not a tokenId.\n    _safeMint(msg.sender, quantity);\n  }\n}"
			},
			"erc721a/contracts/ERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.1.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721A.sol';\n\n/**\n * @dev ERC721 token receiver interface.\n */\ninterface ERC721A__IERC721Receiver {\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard,\n * including the Metadata extension. Built to optimize for lower gas during batch mints.\n *\n * Assumes serials are sequentially minted starting at `_startTokenId()`\n * (defaults to 0, e.g. 0, 1, 2, 3..).\n *\n * Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n *\n * Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).\n */\ncontract ERC721A is IERC721A {\n    // Mask of an entry in packed address data.\n    uint256 private constant BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\n\n    // The bit position of `numberMinted` in packed address data.\n    uint256 private constant BITPOS_NUMBER_MINTED = 64;\n\n    // The bit position of `numberBurned` in packed address data.\n    uint256 private constant BITPOS_NUMBER_BURNED = 128;\n\n    // The bit position of `aux` in packed address data.\n    uint256 private constant BITPOS_AUX = 192;\n\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\n    uint256 private constant BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\n\n    // The bit position of `startTimestamp` in packed ownership.\n    uint256 private constant BITPOS_START_TIMESTAMP = 160;\n\n    // The bit mask of the `burned` bit in packed ownership.\n    uint256 private constant BITMASK_BURNED = 1 << 224;\n\n    // The bit position of the `nextInitialized` bit in packed ownership.\n    uint256 private constant BITPOS_NEXT_INITIALIZED = 225;\n\n    // The bit mask of the `nextInitialized` bit in packed ownership.\n    uint256 private constant BITMASK_NEXT_INITIALIZED = 1 << 225;\n\n    // The bit position of `extraData` in packed ownership.\n    uint256 private constant BITPOS_EXTRA_DATA = 232;\n\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\n    uint256 private constant BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\n\n    // The mask of the lower 160 bits for addresses.\n    uint256 private constant BITMASK_ADDRESS = (1 << 160) - 1;\n\n    // The maximum `quantity` that can be minted with `_mintERC2309`.\n    // This limit is to prevent overflows on the address data entries.\n    // For a limit of 5000, a total of 3.689e15 calls to `_mintERC2309`\n    // is required to cause an overflow, which is unrealistic.\n    uint256 private constant MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\n\n    // The tokenId of the next token to be minted.\n    uint256 private _currentIndex;\n\n    // The number of tokens burned.\n    uint256 private _burnCounter;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to ownership details\n    // An empty struct value does not necessarily mean the token is unowned.\n    // See `_packedOwnershipOf` implementation for details.\n    //\n    // Bits Layout:\n    // - [0..159]   `addr`\n    // - [160..223] `startTimestamp`\n    // - [224]      `burned`\n    // - [225]      `nextInitialized`\n    // - [232..255] `extraData`\n    mapping(uint256 => uint256) private _packedOwnerships;\n\n    // Mapping owner address to address data.\n    //\n    // Bits Layout:\n    // - [0..63]    `balance`\n    // - [64..127]  `numberMinted`\n    // - [128..191] `numberBurned`\n    // - [192..255] `aux`\n    mapping(address => uint256) private _packedAddressData;\n\n    // Mapping from token ID to approved address.\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _currentIndex = _startTokenId();\n    }\n\n    /**\n     * @dev Returns the starting token ID.\n     * To change the starting token ID, please override this function.\n     */\n    function _startTokenId() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev Returns the next token ID to be minted.\n     */\n    function _nextTokenId() internal view returns (uint256) {\n        return _currentIndex;\n    }\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see `_totalMinted`.\n     */\n    function totalSupply() public view override returns (uint256) {\n        // Counter underflow is impossible as _burnCounter cannot be incremented\n        // more than `_currentIndex - _startTokenId()` times.\n        unchecked {\n            return _currentIndex - _burnCounter - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total amount of tokens minted in the contract.\n     */\n    function _totalMinted() internal view returns (uint256) {\n        // Counter underflow is impossible as _currentIndex does not decrement,\n        // and it is initialized to `_startTokenId()`\n        unchecked {\n            return _currentIndex - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total number of tokens burned.\n     */\n    function _totalBurned() internal view returns (uint256) {\n        return _burnCounter;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        // The interface IDs are constants representing the first 4 bytes of the XOR of\n        // all function selectors in the interface. See: https://eips.ethereum.org/EIPS/eip-165\n        // e.g. `bytes4(i.functionA.selector ^ i.functionB.selector ^ ...)`\n        return\n            interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\n            interfaceId == 0x80ac58cd || // ERC165 interface ID for ERC721.\n            interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view override returns (uint256) {\n        if (owner == address(0)) revert BalanceQueryForZeroAddress();\n        return _packedAddressData[owner] & BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens minted by `owner`.\n     */\n    function _numberMinted(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> BITPOS_NUMBER_MINTED) & BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens burned by or on behalf of `owner`.\n     */\n    function _numberBurned(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> BITPOS_NUMBER_BURNED) & BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     */\n    function _getAux(address owner) internal view returns (uint64) {\n        return uint64(_packedAddressData[owner] >> BITPOS_AUX);\n    }\n\n    /**\n     * Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     * If there are multiple variables, please pack them into a uint64.\n     */\n    function _setAux(address owner, uint64 aux) internal {\n        uint256 packed = _packedAddressData[owner];\n        uint256 auxCasted;\n        // Cast `aux` with assembly to avoid redundant masking.\n        assembly {\n            auxCasted := aux\n        }\n        packed = (packed & BITMASK_AUX_COMPLEMENT) | (auxCasted << BITPOS_AUX);\n        _packedAddressData[owner] = packed;\n    }\n\n    /**\n     * Returns the packed ownership data of `tokenId`.\n     */\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {\n        uint256 curr = tokenId;\n\n        unchecked {\n            if (_startTokenId() <= curr)\n                if (curr < _currentIndex) {\n                    uint256 packed = _packedOwnerships[curr];\n                    // If not burned.\n                    if (packed & BITMASK_BURNED == 0) {\n                        // Invariant:\n                        // There will always be an ownership that has an address and is not burned\n                        // before an ownership that does not have an address and is not burned.\n                        // Hence, curr will not underflow.\n                        //\n                        // We can directly compare the packed value.\n                        // If the address is zero, packed is zero.\n                        while (packed == 0) {\n                            packed = _packedOwnerships[--curr];\n                        }\n                        return packed;\n                    }\n                }\n        }\n        revert OwnerQueryForNonexistentToken();\n    }\n\n    /**\n     * Returns the unpacked `TokenOwnership` struct from `packed`.\n     */\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\n        ownership.addr = address(uint160(packed));\n        ownership.startTimestamp = uint64(packed >> BITPOS_START_TIMESTAMP);\n        ownership.burned = packed & BITMASK_BURNED != 0;\n        ownership.extraData = uint24(packed >> BITPOS_EXTRA_DATA);\n    }\n\n    /**\n     * Returns the unpacked `TokenOwnership` struct at `index`.\n     */\n    function _ownershipAt(uint256 index) internal view returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnerships[index]);\n    }\n\n    /**\n     * @dev Initializes the ownership slot minted at `index` for efficiency purposes.\n     */\n    function _initializeOwnershipAt(uint256 index) internal {\n        if (_packedOwnerships[index] == 0) {\n            _packedOwnerships[index] = _packedOwnershipOf(index);\n        }\n    }\n\n    /**\n     * Gas spent here starts off proportional to the maximum mint batch size.\n     * It gradually moves to O(1) as tokens get transferred around in the collection over time.\n     */\n    function _ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\n    }\n\n    /**\n     * @dev Packs ownership data into a single uint256.\n     */\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, BITMASK_ADDRESS)\n            // `owner | (block.timestamp << BITPOS_START_TIMESTAMP) | flags`.\n            result := or(owner, or(shl(BITPOS_START_TIMESTAMP, timestamp()), flags))\n        }\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view override returns (address) {\n        return address(uint160(_packedOwnershipOf(tokenId)));\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        if (!_exists(tokenId)) revert URIQueryForNonexistentToken();\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, it can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return '';\n    }\n\n    /**\n     * @dev Returns the `nextInitialized` flag set if `quantity` equals 1.\n     */\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\n        // For branchless setting of the `nextInitialized` flag.\n        assembly {\n            // `(quantity == 1) << BITPOS_NEXT_INITIALIZED`.\n            result := shl(BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\n        }\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public override {\n        address owner = ownerOf(tokenId);\n\n        if (_msgSenderERC721A() != owner)\n            if (!isApprovedForAll(owner, _msgSenderERC721A())) {\n                revert ApprovalCallerNotOwnerNorApproved();\n            }\n\n        _tokenApprovals[tokenId] = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view override returns (address) {\n        if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken();\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        if (operator == _msgSenderERC721A()) revert ApproveToCaller();\n\n        _operatorApprovals[_msgSenderERC721A()][operator] = approved;\n        emit ApprovalForAll(_msgSenderERC721A(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, '');\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        transferFrom(from, to, tokenId);\n        if (to.code.length != 0)\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\n                revert TransferToNonERC721ReceiverImplementer();\n            }\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     */\n    function _exists(uint256 tokenId) internal view returns (bool) {\n        return\n            _startTokenId() <= tokenId &&\n            tokenId < _currentIndex && // If within bounds,\n            _packedOwnerships[tokenId] & BITMASK_BURNED == 0; // and not burned.\n    }\n\n    /**\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\n     */\n    function _safeMint(address to, uint256 quantity) internal {\n        _safeMint(to, quantity, '');\n    }\n\n    /**\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement\n     *   {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n     * - `quantity` must be greater than 0.\n     *\n     * See {_mint}.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _safeMint(\n        address to,\n        uint256 quantity,\n        bytes memory _data\n    ) internal {\n        _mint(to, quantity);\n\n        unchecked {\n            if (to.code.length != 0) {\n                uint256 end = _currentIndex;\n                uint256 index = end - quantity;\n                do {\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\n                        revert TransferToNonERC721ReceiverImplementer();\n                    }\n                } while (index < end);\n                // Reentrancy protection.\n                if (_currentIndex != end) revert();\n            }\n        }\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _mint(address to, uint256 quantity) internal {\n        uint256 startTokenId = _currentIndex;\n        if (to == address(0)) revert MintToZeroAddress();\n        if (quantity == 0) revert MintZeroQuantity();\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are incredibly unrealistic.\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\n        // `tokenId` has a maximum limit of 2**256.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            uint256 tokenId = startTokenId;\n            uint256 end = startTokenId + quantity;\n            do {\n                emit Transfer(address(0), to, tokenId++);\n            } while (tokenId < end);\n\n            _currentIndex = end;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * This function is intended for efficient minting only during contract creation.\n     *\n     * It emits only one {ConsecutiveTransfer} as defined in\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n     * instead of a sequence of {Transfer} event(s).\n     *\n     * Calling this function outside of contract creation WILL make your contract\n     * non-compliant with the ERC721 standard.\n     * For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n     * {ConsecutiveTransfer} event is only permissible during contract creation.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {ConsecutiveTransfer} event.\n     */\n    function _mintERC2309(address to, uint256 quantity) internal {\n        uint256 startTokenId = _currentIndex;\n        if (to == address(0)) revert MintToZeroAddress();\n        if (quantity == 0) revert MintZeroQuantity();\n        if (quantity > MAX_MINT_ERC2309_QUANTITY_LIMIT) revert MintERC2309QuantityExceedsLimit();\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\n\n            _currentIndex = startTokenId + quantity;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Returns the storage slot and value for the approved address of `tokenId`.\n     */\n    function _getApprovedAddress(uint256 tokenId)\n        private\n        view\n        returns (uint256 approvedAddressSlot, address approvedAddress)\n    {\n        mapping(uint256 => address) storage tokenApprovalsPtr = _tokenApprovals;\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId]`.\n        assembly {\n            // Compute the slot.\n            mstore(0x00, tokenId)\n            mstore(0x20, tokenApprovalsPtr.slot)\n            approvedAddressSlot := keccak256(0x00, 0x40)\n            // Load the slot's value from storage.\n            approvedAddress := sload(approvedAddressSlot)\n        }\n    }\n\n    /**\n     * @dev Returns whether the `approvedAddress` is equals to `from` or `msgSender`.\n     */\n    function _isOwnerOrApproved(\n        address approvedAddress,\n        address from,\n        address msgSender\n    ) private pure returns (bool result) {\n        assembly {\n            // Mask `from` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            from := and(from, BITMASK_ADDRESS)\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            msgSender := and(msgSender, BITMASK_ADDRESS)\n            // `msgSender == from || msgSender == approvedAddress`.\n            result := or(eq(msgSender, from), eq(msgSender, approvedAddress))\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner();\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedAddress(tokenId);\n\n        // The nested ifs save around 20+ gas over a compound boolean condition.\n        if (!_isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()))\n            if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\n\n        if (to == address(0)) revert TransferToZeroAddress();\n\n        _beforeTokenTransfers(from, to, tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as tokenId would have to be 2**256.\n        unchecked {\n            // We can directly increment and decrement the balances.\n            --_packedAddressData[from]; // Updates: `balance -= 1`.\n            ++_packedAddressData[to]; // Updates: `balance += 1`.\n\n            // Updates:\n            // - `address` to the next owner.\n            // - `startTimestamp` to the timestamp of transfering.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                to,\n                BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, to, tokenId);\n        _afterTokenTransfers(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Equivalent to `_burn(tokenId, false)`.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        _burn(tokenId, false);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        address from = address(uint160(prevOwnershipPacked));\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedAddress(tokenId);\n\n        if (approvalCheck) {\n            // The nested ifs save around 20+ gas over a compound boolean condition.\n            if (!_isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()))\n                if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\n        }\n\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // Updates:\n            // - `balance -= 1`.\n            // - `numberBurned += 1`.\n            //\n            // We can directly decrement the balance, and increment the number burned.\n            // This is equivalent to `packed -= 1; packed += 1 << BITPOS_NUMBER_BURNED;`.\n            _packedAddressData[from] += (1 << BITPOS_NUMBER_BURNED) - 1;\n\n            // Updates:\n            // - `address` to the last owner.\n            // - `startTimestamp` to the timestamp of burning.\n            // - `burned` to `true`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                from,\n                (BITMASK_BURNED | BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, address(0), tokenId);\n        _afterTokenTransfers(from, address(0), tokenId, 1);\n\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\n        unchecked {\n            _burnCounter++;\n        }\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkContractOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\n            bytes4 retval\n        ) {\n            return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector;\n        } catch (bytes memory reason) {\n            if (reason.length == 0) {\n                revert TransferToNonERC721ReceiverImplementer();\n            } else {\n                assembly {\n                    revert(add(32, reason), mload(reason))\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Directly sets the extra data for the ownership data `index`.\n     */\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal {\n        uint256 packed = _packedOwnerships[index];\n        if (packed == 0) revert OwnershipNotInitializedForExtraData();\n        uint256 extraDataCasted;\n        // Cast `extraData` with assembly to avoid redundant masking.\n        assembly {\n            extraDataCasted := extraData\n        }\n        packed = (packed & BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << BITPOS_EXTRA_DATA);\n        _packedOwnerships[index] = packed;\n    }\n\n    /**\n     * @dev Returns the next extra data for the packed ownership data.\n     * The returned result is shifted into position.\n     */\n    function _nextExtraData(\n        address from,\n        address to,\n        uint256 prevOwnershipPacked\n    ) private view returns (uint256) {\n        uint24 extraData = uint24(prevOwnershipPacked >> BITPOS_EXTRA_DATA);\n        return uint256(_extraData(from, to, extraData)) << BITPOS_EXTRA_DATA;\n    }\n\n    /**\n     * @dev Called during each token transfer to set the 24bit `extraData` field.\n     * Intended to be overridden by the cosumer contract.\n     *\n     * `previousExtraData` - the value of `extraData` before transfer.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _extraData(\n        address from,\n        address to,\n        uint24 previousExtraData\n    ) internal view virtual returns (uint24) {}\n\n    /**\n     * @dev Hook that is called before a set of serially-ordered token ids are about to be transferred.\n     * This includes minting.\n     * And also called before burning one token.\n     *\n     * startTokenId - the first token id to be transferred\n     * quantity - the amount to be transferred\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after a set of serially-ordered token ids have been transferred.\n     * This includes minting.\n     * And also called after one token has been burned.\n     *\n     * startTokenId - the first token id to be transferred\n     * quantity - the amount to be transferred\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` has been minted for `to`.\n     * - When `to` is zero, `tokenId` has been burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _afterTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Returns the message sender (defaults to `msg.sender`).\n     *\n     * If you are writing GSN compatible contracts, you need to override this function.\n     */\n    function _msgSenderERC721A() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function _toString(uint256 value) internal pure returns (string memory ptr) {\n        assembly {\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit),\n            // but we allocate 128 bytes to keep the free memory pointer 32-byte word aliged.\n            // We will need 1 32-byte word to store the length,\n            // and 3 32-byte words to store a maximum of 78 digits. Total: 32 + 3 * 32 = 128.\n            ptr := add(mload(0x40), 128)\n            // Update the free memory pointer to allocate.\n            mstore(0x40, ptr)\n\n            // Cache the end of the memory to calculate the length later.\n            let end := ptr\n\n            // We write the string from the rightmost digit to the leftmost digit.\n            // The following is essentially a do-while loop that also handles the zero case.\n            // Costs a bit more than early returning for the zero case,\n            // but cheaper in terms of deployment and overall runtime costs.\n            for {\n                // Initialize and perform the first pass without check.\n                let temp := value\n                // Move the pointer 1 byte leftwards to point to an empty character slot.\n                ptr := sub(ptr, 1)\n                // Write the character to the pointer. 48 is the ASCII index of '0'.\n                mstore8(ptr, add(48, mod(temp, 10)))\n                temp := div(temp, 10)\n            } temp {\n                // Keep dividing `temp` until zero.\n                temp := div(temp, 10)\n            } {\n                // Body of the for loop.\n                ptr := sub(ptr, 1)\n                mstore8(ptr, add(48, mod(temp, 10)))\n            }\n\n            let length := sub(end, ptr)\n            // Move the pointer 32 bytes leftwards to make room for the length.\n            ptr := sub(ptr, 32)\n            // Store the length.\n            mstore(ptr, length)\n        }\n    }\n}\n"
			},
			"erc721a/contracts/IERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.1.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n/**\n * @dev Interface of an ERC721A compliant contract.\n */\ninterface IERC721A {\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error ApprovalCallerNotOwnerNorApproved();\n\n    /**\n     * The token does not exist.\n     */\n    error ApprovalQueryForNonexistentToken();\n\n    /**\n     * The caller cannot approve to their own address.\n     */\n    error ApproveToCaller();\n\n    /**\n     * Cannot query the balance for the zero address.\n     */\n    error BalanceQueryForZeroAddress();\n\n    /**\n     * Cannot mint to the zero address.\n     */\n    error MintToZeroAddress();\n\n    /**\n     * The quantity of tokens minted must be more than zero.\n     */\n    error MintZeroQuantity();\n\n    /**\n     * The token does not exist.\n     */\n    error OwnerQueryForNonexistentToken();\n\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error TransferCallerNotOwnerNorApproved();\n\n    /**\n     * The token must be owned by `from`.\n     */\n    error TransferFromIncorrectOwner();\n\n    /**\n     * Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\n     */\n    error TransferToNonERC721ReceiverImplementer();\n\n    /**\n     * Cannot transfer to the zero address.\n     */\n    error TransferToZeroAddress();\n\n    /**\n     * The token does not exist.\n     */\n    error URIQueryForNonexistentToken();\n\n    /**\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\n     */\n    error MintERC2309QuantityExceedsLimit();\n\n    /**\n     * The `extraData` cannot be set on an unintialized ownership slot.\n     */\n    error OwnershipNotInitializedForExtraData();\n\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Keeps track of the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n        // Arbitrary data similar to `startTimestamp` that can be set through `_extraData`.\n        uint24 extraData;\n    }\n\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     *\n     * Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // ==============================\n    //            IERC165\n    // ==============================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n\n    // ==============================\n    //            IERC721\n    // ==============================\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    // ==============================\n    //        IERC721Metadata\n    // ==============================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n\n    // ==============================\n    //            IERC2309\n    // ==============================\n\n    /**\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`,\n     * as defined in the ERC2309 standard. See `_mintERC2309` for more details.\n     */\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Day50_ERC721A.sol": {
				"Azuki": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see `_totalMinted`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Day50_ERC721A.sol\":66:310  contract Azuki is ERC721A {... */\n  mstore(0x40, 0x80)\n    /* \"Day50_ERC721A.sol\":96:138  constructor() ERC721A(\"Azuki\", \"AZUKI\") {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":3986:4140  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x417a756b69000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x415a554b49000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":4060:4065  name_ */\n  dup2\n    /* \"erc721a/contracts/ERC721A.sol\":4052:4057  _name */\n  0x02\n    /* \"erc721a/contracts/ERC721A.sol\":4052:4065  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":4085:4092  symbol_ */\n  dup1\n    /* \"erc721a/contracts/ERC721A.sol\":4075:4082  _symbol */\n  0x03\n    /* \"erc721a/contracts/ERC721A.sol\":4075:4092  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":4118:4133  _startTokenId() */\n  tag_8\n    /* \"erc721a/contracts/ERC721A.sol\":4118:4131  _startTokenId */\n  shl(0x20, tag_9)\n    /* \"erc721a/contracts/ERC721A.sol\":4118:4133  _startTokenId() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"erc721a/contracts/ERC721A.sol\":4102:4115  _currentIndex */\n  0x00\n    /* \"erc721a/contracts/ERC721A.sol\":4102:4133  _currentIndex = _startTokenId() */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":3986:4140  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"Day50_ERC721A.sol\":66:310  contract Azuki is ERC721A {... */\n  jump(tag_11)\n    /* \"erc721a/contracts/ERC721A.sol\":4276:4366  function _startTokenId() internal view virtual returns (uint256) {... */\ntag_9:\n    /* \"erc721a/contracts/ERC721A.sol\":4332:4339  uint256 */\n  0x00\n    /* \"erc721a/contracts/ERC721A.sol\":4276:4366  function _startTokenId() internal view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_13:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_14:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_15:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_16:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_38:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_40\n  tag_15\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":714:798   */\ntag_39:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_17:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_18:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_19:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_20:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_45\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_19\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1429:1468   */\n  tag_46\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_19\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_21:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_22:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_23:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_50\n    /* \"#utility.yul\":1818:1852   */\n  tag_51\n    /* \"#utility.yul\":1827:1851   */\n  tag_52\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_21\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1818:1852   */\n  tag_22\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1800:1853   */\n  tag_21\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_24:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_25:\n    /* \"#utility.yul\":2056:2095   */\n  tag_55\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_23\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2117:2208   */\n  tag_56\n    /* \"#utility.yul\":2166:2207   */\n  tag_57\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_24\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_20\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_26:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_27:\n    /* \"#utility.yul\":2377:2409   */\n  tag_60\n  tag_26\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":2418:2483   */\n  tag_61\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_25\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_28:\n    /* \"#utility.yul\":2555:2675   */\ntag_63:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_66\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_27\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_63)\ntag_65:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_29:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_69\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_17\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2906:2935   */\n  tag_70\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_18\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_71:\n    /* \"#utility.yul\":3133:3213   */\n  tag_72\n    /* \"#utility.yul\":3189:3211   */\n  tag_73\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_18\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_28\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_68:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_30:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_31:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_76\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_30\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_32:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_78\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_31\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_6:\n    /* \"#utility.yul\":3950:3987   */\n  tag_80\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_13\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_82\n  tag_14\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":4038:4094   */\ntag_81:\n    /* \"#utility.yul\":4118:4156   */\n  tag_83\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_16\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":4203:4270   */\n  tag_84\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_29\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_86\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_87:\n    /* \"#utility.yul\":5144:5211   */\n  tag_88\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_32\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_85)\n    /* \"#utility.yul\":4365:4983   */\ntag_86:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_89\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_17\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_90:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_90)\ntag_92:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_94\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_31\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_93:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_85:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"Day50_ERC721A.sol\":66:310  contract Azuki is ERC721A {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Day50_ERC721A.sol\":66:310  contract Azuki is ERC721A {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_16\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_12\n      jumpi\n      jump(tag_1)\n    tag_17:\n      dup1\n      0x095ea7b3\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_19:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":5653:6260  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":11161:11259  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":13048:13248  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":12611:12987  function approve(address to, uint256 tokenId) public override {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"erc721a/contracts/ERC721A.sol\":4736:5045  function totalSupply() public view override returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":22055:24794  function transferFrom(... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      stop\n        /* \"erc721a/contracts/ERC721A.sol\":13912:14091  function safeTransferFrom(... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"erc721a/contracts/ERC721A.sol\":10957:11099  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":6319:6540  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":11323:11425  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Day50_ERC721A.sol\":142:308  function mint(uint256 quantity) external payable {... */\n    tag_12:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"erc721a/contracts/ERC721A.sol\":13315:13618  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n    tag_77:\n      stop\n        /* \"erc721a/contracts/ERC721A.sol\":14157:14545  function safeTransferFrom(... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n    tag_82:\n      stop\n        /* \"erc721a/contracts/ERC721A.sol\":11491:11804  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":13684:13846  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":5653:6260  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_24:\n        /* \"erc721a/contracts/ERC721A.sol\":5738:5742  bool */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":6048:6058  0x01ffc9a7 */\n      0x01ffc9a7\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6058  interfaceId == 0x01ffc9a7 */\n      0xe0\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6044  interfaceId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6058  interfaceId == 0x01ffc9a7 */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6134  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_98\n      jumpi\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":6124:6134  0x80ac58cd */\n      0x80ac58cd\n        /* \"erc721a/contracts/ERC721A.sol\":6109:6134  interfaceId == 0x80ac58cd */\n      0xe0\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":6109:6120  interfaceId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":6109:6134  interfaceId == 0x80ac58cd */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6134  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_98:\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6210  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_99\n      jumpi\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":6200:6210  0x5b5e139f */\n      0x5b5e139f\n        /* \"erc721a/contracts/ERC721A.sol\":6185:6210  interfaceId == 0x5b5e139f */\n      0xe0\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":6185:6196  interfaceId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":6185:6210  interfaceId == 0x5b5e139f */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6210  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_99:\n        /* \"erc721a/contracts/ERC721A.sol\":6014:6210  return... */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":5653:6260  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":11161:11259  function name() public view virtual override returns (string memory) {... */\n    tag_29:\n        /* \"erc721a/contracts/ERC721A.sol\":11215:11228  string memory */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":11247:11252  _name */\n      0x02\n        /* \"erc721a/contracts/ERC721A.sol\":11240:11252  return _name */\n      dup1\n      sload\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_103\n      swap1\n      tag_102\n      jump\t// in\n    tag_103:\n      dup1\n      iszero\n      tag_104\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_105\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_104)\n    tag_105:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_106:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_106\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":11161:11259  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":13048:13248  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_36:\n        /* \"erc721a/contracts/ERC721A.sol\":13116:13123  address */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13140:13156  _exists(tokenId) */\n      tag_108\n        /* \"erc721a/contracts/ERC721A.sol\":13148:13155  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":13140:13147  _exists */\n      tag_109\n        /* \"erc721a/contracts/ERC721A.sol\":13140:13156  _exists(tokenId) */\n      jump\t// in\n    tag_108:\n        /* \"erc721a/contracts/ERC721A.sol\":13135:13199  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_110\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":13165:13199  ApprovalQueryForNonexistentToken() */\n      mload(0x40)\n      0xcf4700e400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":13135:13199  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_110:\n        /* \"erc721a/contracts/ERC721A.sol\":13217:13232  _tokenApprovals */\n      0x06\n        /* \"erc721a/contracts/ERC721A.sol\":13217:13241  _tokenApprovals[tokenId] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13233:13240  tokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":13217:13241  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":13210:13241  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":13048:13248  function getApproved(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":12611:12987  function approve(address to, uint256 tokenId) public override {... */\n    tag_43:\n        /* \"erc721a/contracts/ERC721A.sol\":12683:12696  address owner */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":12699:12715  ownerOf(tokenId) */\n      tag_112\n        /* \"erc721a/contracts/ERC721A.sol\":12707:12714  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":12699:12706  ownerOf */\n      tag_61\n        /* \"erc721a/contracts/ERC721A.sol\":12699:12715  ownerOf(tokenId) */\n      jump\t// in\n    tag_112:\n        /* \"erc721a/contracts/ERC721A.sol\":12683:12715  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":12753:12758  owner */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":12730:12758  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":12730:12749  _msgSenderERC721A() */\n      tag_113\n        /* \"erc721a/contracts/ERC721A.sol\":12730:12747  _msgSenderERC721A */\n      tag_114\n        /* \"erc721a/contracts/ERC721A.sol\":12730:12749  _msgSenderERC721A() */\n      jump\t// in\n    tag_113:\n        /* \"erc721a/contracts/ERC721A.sol\":12730:12758  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":12726:12898  if (_msgSenderERC721A() != owner)... */\n      tag_115\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":12777:12821  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_116\n        /* \"erc721a/contracts/ERC721A.sol\":12794:12799  owner */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":12801:12820  _msgSenderERC721A() */\n      tag_117\n        /* \"erc721a/contracts/ERC721A.sol\":12801:12818  _msgSenderERC721A */\n      tag_114\n        /* \"erc721a/contracts/ERC721A.sol\":12801:12820  _msgSenderERC721A() */\n      jump\t// in\n    tag_117:\n        /* \"erc721a/contracts/ERC721A.sol\":12777:12793  isApprovedForAll */\n      tag_95\n        /* \"erc721a/contracts/ERC721A.sol\":12777:12821  isApprovedForAll(owner, _msgSenderERC721A()) */\n      jump\t// in\n    tag_116:\n        /* \"erc721a/contracts/ERC721A.sol\":12772:12898  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_118\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":12848:12883  ApprovalCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0xcfb3b94200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":12772:12898  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n    tag_118:\n        /* \"erc721a/contracts/ERC721A.sol\":12726:12898  if (_msgSenderERC721A() != owner)... */\n    tag_115:\n        /* \"erc721a/contracts/ERC721A.sol\":12935:12937  to */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12923  _tokenApprovals */\n      0x06\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12932  _tokenApprovals[tokenId] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":12924:12931  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12932  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12937  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":12972:12979  tokenId */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":12968:12970  to */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":12952:12980  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":12961:12966  owner */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":12952:12980  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"erc721a/contracts/ERC721A.sol\":12673:12987  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":12611:12987  function approve(address to, uint256 tokenId) public override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":4736:5045  function totalSupply() public view override returns (uint256) {... */\n    tag_46:\n        /* \"erc721a/contracts/ERC721A.sol\":4789:4796  uint256 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":5013:5028  _startTokenId() */\n      tag_120\n        /* \"erc721a/contracts/ERC721A.sol\":5013:5026  _startTokenId */\n      tag_121\n        /* \"erc721a/contracts/ERC721A.sol\":5013:5028  _startTokenId() */\n      jump\t// in\n    tag_120:\n        /* \"erc721a/contracts/ERC721A.sol\":4998:5010  _burnCounter */\n      sload(0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":4982:4995  _currentIndex */\n      sload(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":4982:5010  _currentIndex - _burnCounter */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":4982:5028  _currentIndex - _burnCounter - _startTokenId() */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":4975:5028  return _currentIndex - _burnCounter - _startTokenId() */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":4736:5045  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":22055:24794  function transferFrom(... */\n    tag_53:\n        /* \"erc721a/contracts/ERC721A.sol\":22184:22211  uint256 prevOwnershipPacked */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":22214:22241  _packedOwnershipOf(tokenId) */\n      tag_123\n        /* \"erc721a/contracts/ERC721A.sol\":22233:22240  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":22214:22232  _packedOwnershipOf */\n      tag_124\n        /* \"erc721a/contracts/ERC721A.sol\":22214:22241  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_123:\n        /* \"erc721a/contracts/ERC721A.sol\":22184:22241  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":22297:22301  from */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":22256:22301  address(uint160(prevOwnershipPacked)) != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":22272:22291  prevOwnershipPacked */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":22256:22301  address(uint160(prevOwnershipPacked)) != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":22252:22338  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n      tag_125\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22310:22338  TransferFromIncorrectOwner() */\n      mload(0x40)\n      0xa114810000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":22252:22338  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n    tag_125:\n        /* \"erc721a/contracts/ERC721A.sol\":22350:22377  uint256 approvedAddressSlot */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":22379:22402  address approvedAddress */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":22406:22434  _getApprovedAddress(tokenId) */\n      tag_126\n        /* \"erc721a/contracts/ERC721A.sol\":22426:22433  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":22406:22425  _getApprovedAddress */\n      tag_127\n        /* \"erc721a/contracts/ERC721A.sol\":22406:22434  _getApprovedAddress(tokenId) */\n      jump\t// in\n    tag_126:\n        /* \"erc721a/contracts/ERC721A.sol\":22349:22434  (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedAddress(tokenId) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":22531:22593  _isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()) */\n      tag_128\n        /* \"erc721a/contracts/ERC721A.sol\":22550:22565  approvedAddress */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":22567:22571  from */\n      dup8\n        /* \"erc721a/contracts/ERC721A.sol\":22573:22592  _msgSenderERC721A() */\n      tag_129\n        /* \"erc721a/contracts/ERC721A.sol\":22573:22590  _msgSenderERC721A */\n      tag_114\n        /* \"erc721a/contracts/ERC721A.sol\":22573:22592  _msgSenderERC721A() */\n      jump\t// in\n    tag_129:\n        /* \"erc721a/contracts/ERC721A.sol\":22531:22549  _isOwnerOrApproved */\n      tag_130\n        /* \"erc721a/contracts/ERC721A.sol\":22531:22593  _isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_128:\n        /* \"erc721a/contracts/ERC721A.sol\":22526:22699  if (!_isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_131\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22612:22655  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_132\n        /* \"erc721a/contracts/ERC721A.sol\":22629:22633  from */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":22635:22654  _msgSenderERC721A() */\n      tag_133\n        /* \"erc721a/contracts/ERC721A.sol\":22635:22652  _msgSenderERC721A */\n      tag_114\n        /* \"erc721a/contracts/ERC721A.sol\":22635:22654  _msgSenderERC721A() */\n      jump\t// in\n    tag_133:\n        /* \"erc721a/contracts/ERC721A.sol\":22612:22628  isApprovedForAll */\n      tag_95\n        /* \"erc721a/contracts/ERC721A.sol\":22612:22655  isApprovedForAll(from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_132:\n        /* \"erc721a/contracts/ERC721A.sol\":22607:22699  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n      tag_134\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22664:22699  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0x59c896be00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":22607:22699  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n    tag_134:\n        /* \"erc721a/contracts/ERC721A.sol\":22526:22699  if (!_isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()))... */\n    tag_131:\n        /* \"erc721a/contracts/ERC721A.sol\":22728:22729  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":22714:22730  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":22714:22716  to */\n      dup6\n        /* \"erc721a/contracts/ERC721A.sol\":22714:22730  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":22710:22762  if (to == address(0)) revert TransferToZeroAddress() */\n      tag_135\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22739:22762  TransferToZeroAddress() */\n      mload(0x40)\n      0xea553b3400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":22710:22762  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_135:\n        /* \"erc721a/contracts/ERC721A.sol\":22773:22816  _beforeTokenTransfers(from, to, tokenId, 1) */\n      tag_136\n        /* \"erc721a/contracts/ERC721A.sol\":22795:22799  from */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":22801:22803  to */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":22805:22812  tokenId */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":22814:22815  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":22773:22794  _beforeTokenTransfers */\n      tag_137\n        /* \"erc721a/contracts/ERC721A.sol\":22773:22816  _beforeTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_136:\n        /* \"erc721a/contracts/ERC721A.sol\":22905:22920  approvedAddress */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":22902:23059  if approvedAddress {... */\n      iszero\n      tag_138\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":23043:23044  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":23022:23041  approvedAddressSlot */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":23015:23045  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":22902:23059  if approvedAddress {... */\n    tag_138:\n        /* \"erc721a/contracts/ERC721A.sol\":23429:23447  _packedAddressData */\n      0x05\n        /* \"erc721a/contracts/ERC721A.sol\":23429:23453  _packedAddressData[from] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":23448:23452  from */\n      dup8\n        /* \"erc721a/contracts/ERC721A.sol\":23429:23453  _packedAddressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":23427:23453  --_packedAddressData[from] */\n      dup2\n      sload\n      0x01\n      swap1\n      sub\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":23497:23515  _packedAddressData */\n      0x05\n        /* \"erc721a/contracts/ERC721A.sol\":23497:23519  _packedAddressData[to] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":23516:23518  to */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":23497:23519  _packedAddressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":23495:23519  ++_packedAddressData[to] */\n      dup2\n      sload\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":23812:23954  _packOwnershipData(... */\n      tag_139\n        /* \"erc721a/contracts/ERC721A.sol\":23848:23850  to */\n      dup6\n        /* \"erc721a/contracts/ERC721A.sol\":23895:23940  _nextExtraData(from, to, prevOwnershipPacked) */\n      tag_140\n        /* \"erc721a/contracts/ERC721A.sol\":23910:23914  from */\n      dup9\n        /* \"erc721a/contracts/ERC721A.sol\":23916:23918  to */\n      dup9\n        /* \"erc721a/contracts/ERC721A.sol\":23920:23939  prevOwnershipPacked */\n      dup8\n        /* \"erc721a/contracts/ERC721A.sol\":23895:23909  _nextExtraData */\n      tag_141\n        /* \"erc721a/contracts/ERC721A.sol\":23895:23940  _nextExtraData(from, to, prevOwnershipPacked) */\n      jump\t// in\n    tag_140:\n        /* \"erc721a/contracts/ERC721A.sol\":2046:2054  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"erc721a/contracts/ERC721A.sol\":23868:23940  BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked) */\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":23812:23830  _packOwnershipData */\n      tag_142\n        /* \"erc721a/contracts/ERC721A.sol\":23812:23954  _packOwnershipData(... */\n      jump\t// in\n    tag_139:\n        /* \"erc721a/contracts/ERC721A.sol\":23783:23800  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":23783:23809  _packedOwnerships[tokenId] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":23801:23808  tokenId */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":23783:23809  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":23783:23954  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":24121:24122  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":2046:2054  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"erc721a/contracts/ERC721A.sol\":24071:24090  prevOwnershipPacked */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":24071:24117  prevOwnershipPacked & BITMASK_NEXT_INITIALIZED */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":24071:24122  prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0 */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":24067:24683  if (prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0) {... */\n      tag_143\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":24142:24161  uint256 nextTokenId */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":24174:24175  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":24164:24171  tokenId */\n      dup6\n        /* \"erc721a/contracts/ERC721A.sol\":24164:24175  tokenId + 1 */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":24142:24175  uint256 nextTokenId = tokenId + 1 */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":24329:24330  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":24295:24312  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":24295:24325  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":24313:24324  nextTokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":24295:24325  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":24295:24330  _packedOwnerships[nextTokenId] == 0 */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":24291:24669  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_144\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":24431:24444  _currentIndex */\n      sload(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":24416:24427  nextTokenId */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":24416:24444  nextTokenId != _currentIndex */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":24412:24651  if (nextTokenId != _currentIndex) {... */\n      tag_145\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":24609:24628  prevOwnershipPacked */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":24576:24593  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":24576:24606  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":24594:24605  nextTokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":24576:24606  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":24576:24628  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":24412:24651  if (nextTokenId != _currentIndex) {... */\n    tag_145:\n        /* \"erc721a/contracts/ERC721A.sol\":24291:24669  if (_packedOwnerships[nextTokenId] == 0) {... */\n    tag_144:\n        /* \"erc721a/contracts/ERC721A.sol\":24124:24683  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":24067:24683  if (prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_143:\n        /* \"erc721a/contracts/ERC721A.sol\":24727:24734  tokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":24723:24725  to */\n      dup6\n        /* \"erc721a/contracts/ERC721A.sol\":24708:24735  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":24717:24721  from */\n      dup8\n        /* \"erc721a/contracts/ERC721A.sol\":24708:24735  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"erc721a/contracts/ERC721A.sol\":24745:24787  _afterTokenTransfers(from, to, tokenId, 1) */\n      tag_146\n        /* \"erc721a/contracts/ERC721A.sol\":24766:24770  from */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":24772:24774  to */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":24776:24783  tokenId */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":24785:24786  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":24745:24765  _afterTokenTransfers */\n      tag_147\n        /* \"erc721a/contracts/ERC721A.sol\":24745:24787  _afterTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_146:\n        /* \"erc721a/contracts/ERC721A.sol\":22174:24794  {... */\n      pop\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":22055:24794  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":13912:14091  function safeTransferFrom(... */\n    tag_57:\n        /* \"erc721a/contracts/ERC721A.sol\":14045:14084  safeTransferFrom(from, to, tokenId, '') */\n      tag_149\n        /* \"erc721a/contracts/ERC721A.sol\":14062:14066  from */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":14068:14070  to */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":14072:14079  tokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":14045:14084  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":14045:14061  safeTransferFrom */\n      tag_85\n        /* \"erc721a/contracts/ERC721A.sol\":14045:14084  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_149:\n        /* \"erc721a/contracts/ERC721A.sol\":13912:14091  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":10957:11099  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_61:\n        /* \"erc721a/contracts/ERC721A.sol\":11021:11028  address */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":11063:11090  _packedOwnershipOf(tokenId) */\n      tag_151\n        /* \"erc721a/contracts/ERC721A.sol\":11082:11089  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":11063:11081  _packedOwnershipOf */\n      tag_124\n        /* \"erc721a/contracts/ERC721A.sol\":11063:11090  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_151:\n        /* \"erc721a/contracts/ERC721A.sol\":11040:11092  return address(uint160(_packedOwnershipOf(tokenId))) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":10957:11099  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":6319:6540  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_67:\n        /* \"erc721a/contracts/ERC721A.sol\":6383:6390  uint256 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":6423:6424  0 */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":6406:6425  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":6406:6411  owner */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":6406:6425  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":6402:6462  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      tag_153\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":6434:6462  BalanceQueryForZeroAddress() */\n      mload(0x40)\n      0x8f4eb60400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":6402:6462  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_153:\n        /* \"erc721a/contracts/ERC721A.sol\":1022:1035  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"erc721a/contracts/ERC721A.sol\":6479:6497  _packedAddressData */\n      0x05\n        /* \"erc721a/contracts/ERC721A.sol\":6479:6504  _packedAddressData[owner] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":6498:6503  owner */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":6479:6504  _packedAddressData[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":6479:6533  _packedAddressData[owner] & BITMASK_ADDRESS_DATA_ENTRY */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":6472:6533  return _packedAddressData[owner] & BITMASK_ADDRESS_DATA_ENTRY */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":6319:6540  function balanceOf(address owner) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":11323:11425  function symbol() public view virtual override returns (string memory) {... */\n    tag_71:\n        /* \"erc721a/contracts/ERC721A.sol\":11379:11392  string memory */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":11411:11418  _symbol */\n      0x03\n        /* \"erc721a/contracts/ERC721A.sol\":11404:11418  return _symbol */\n      dup1\n      sload\n      tag_155\n      swap1\n      tag_102\n      jump\t// in\n    tag_155:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_156\n      swap1\n      tag_102\n      jump\t// in\n    tag_156:\n      dup1\n      iszero\n      tag_157\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_158\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_157)\n    tag_158:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_159:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_159\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_157:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":11323:11425  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Day50_ERC721A.sol\":142:308  function mint(uint256 quantity) external payable {... */\n    tag_75:\n        /* \"Day50_ERC721A.sol\":272:303  _safeMint(msg.sender, quantity) */\n      tag_161\n        /* \"Day50_ERC721A.sol\":282:292  msg.sender */\n      caller\n        /* \"Day50_ERC721A.sol\":294:302  quantity */\n      dup3\n        /* \"Day50_ERC721A.sol\":272:281  _safeMint */\n      tag_162\n        /* \"Day50_ERC721A.sol\":272:303  _safeMint(msg.sender, quantity) */\n      jump\t// in\n    tag_161:\n        /* \"Day50_ERC721A.sol\":142:308  function mint(uint256 quantity) external payable {... */\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":13315:13618  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_80:\n        /* \"erc721a/contracts/ERC721A.sol\":13425:13444  _msgSenderERC721A() */\n      tag_164\n        /* \"erc721a/contracts/ERC721A.sol\":13425:13442  _msgSenderERC721A */\n      tag_114\n        /* \"erc721a/contracts/ERC721A.sol\":13425:13444  _msgSenderERC721A() */\n      jump\t// in\n    tag_164:\n        /* \"erc721a/contracts/ERC721A.sol\":13413:13444  operator == _msgSenderERC721A() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":13413:13421  operator */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":13413:13444  operator == _msgSenderERC721A() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":13409:13470  if (operator == _msgSenderERC721A()) revert ApproveToCaller() */\n      tag_165\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":13453:13470  ApproveToCaller() */\n      mload(0x40)\n      0xb06307db00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":13409:13470  if (operator == _msgSenderERC721A()) revert ApproveToCaller() */\n    tag_165:\n        /* \"erc721a/contracts/ERC721A.sol\":13533:13541  approved */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13499  _operatorApprovals */\n      0x07\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13520  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13500:13519  _msgSenderERC721A() */\n      tag_166\n        /* \"erc721a/contracts/ERC721A.sol\":13500:13517  _msgSenderERC721A */\n      tag_114\n        /* \"erc721a/contracts/ERC721A.sol\":13500:13519  _msgSenderERC721A() */\n      jump\t// in\n    tag_166:\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13520  _operatorApprovals[_msgSenderERC721A()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13530  _operatorApprovals[_msgSenderERC721A()][operator] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13521:13529  operator */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13530  _operatorApprovals[_msgSenderERC721A()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13541  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":13592:13600  operator */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":13556:13611  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":13571:13590  _msgSenderERC721A() */\n      tag_167\n        /* \"erc721a/contracts/ERC721A.sol\":13571:13588  _msgSenderERC721A */\n      tag_114\n        /* \"erc721a/contracts/ERC721A.sol\":13571:13590  _msgSenderERC721A() */\n      jump\t// in\n    tag_167:\n        /* \"erc721a/contracts/ERC721A.sol\":13556:13611  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"erc721a/contracts/ERC721A.sol\":13602:13610  approved */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":13556:13611  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      tag_168\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"erc721a/contracts/ERC721A.sol\":13315:13618  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":14157:14545  function safeTransferFrom(... */\n    tag_85:\n        /* \"erc721a/contracts/ERC721A.sol\":14318:14349  transferFrom(from, to, tokenId) */\n      tag_170\n        /* \"erc721a/contracts/ERC721A.sol\":14331:14335  from */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14337:14339  to */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14341:14348  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14318:14330  transferFrom */\n      tag_53\n        /* \"erc721a/contracts/ERC721A.sol\":14318:14349  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_170:\n        /* \"erc721a/contracts/ERC721A.sol\":14381:14382  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":14363:14365  to */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":14363:14377  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"erc721a/contracts/ERC721A.sol\":14363:14382  to.code.length != 0 */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":14359:14539  if (to.code.length != 0)... */\n      tag_171\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":14401:14457  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_172\n        /* \"erc721a/contracts/ERC721A.sol\":14432:14436  from */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14438:14440  to */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14442:14449  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14451:14456  _data */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14401:14431  _checkContractOnERC721Received */\n      tag_173\n        /* \"erc721a/contracts/ERC721A.sol\":14401:14457  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_172:\n        /* \"erc721a/contracts/ERC721A.sol\":14396:14539  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_174\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":14484:14524  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":14396:14539  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_174:\n        /* \"erc721a/contracts/ERC721A.sol\":14359:14539  if (to.code.length != 0)... */\n    tag_171:\n        /* \"erc721a/contracts/ERC721A.sol\":14157:14545  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":11491:11804  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_89:\n        /* \"erc721a/contracts/ERC721A.sol\":11564:11577  string memory */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":11594:11610  _exists(tokenId) */\n      tag_176\n        /* \"erc721a/contracts/ERC721A.sol\":11602:11609  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":11594:11601  _exists */\n      tag_109\n        /* \"erc721a/contracts/ERC721A.sol\":11594:11610  _exists(tokenId) */\n      jump\t// in\n    tag_176:\n        /* \"erc721a/contracts/ERC721A.sol\":11589:11648  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n      tag_177\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":11619:11648  URIQueryForNonexistentToken() */\n      mload(0x40)\n      0xa14c4b5000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":11589:11648  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n    tag_177:\n        /* \"erc721a/contracts/ERC721A.sol\":11659:11680  string memory baseURI */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":11683:11693  _baseURI() */\n      tag_178\n        /* \"erc721a/contracts/ERC721A.sol\":11683:11691  _baseURI */\n      tag_179\n        /* \"erc721a/contracts/ERC721A.sol\":11683:11693  _baseURI() */\n      jump\t// in\n    tag_178:\n        /* \"erc721a/contracts/ERC721A.sol\":11659:11693  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":11735:11736  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":11716:11723  baseURI */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":11710:11731  bytes(baseURI).length */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":11710:11736  bytes(baseURI).length != 0 */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":11710:11797  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      tag_180\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_181)\n    tag_180:\n        /* \"erc721a/contracts/ERC721A.sol\":11763:11770  baseURI */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":11772:11790  _toString(tokenId) */\n      tag_182\n        /* \"erc721a/contracts/ERC721A.sol\":11782:11789  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":11772:11781  _toString */\n      tag_183\n        /* \"erc721a/contracts/ERC721A.sol\":11772:11790  _toString(tokenId) */\n      jump\t// in\n    tag_182:\n        /* \"erc721a/contracts/ERC721A.sol\":11746:11791  abi.encodePacked(baseURI, _toString(tokenId)) */\n      add(0x20, mload(0x40))\n      tag_184\n      swap3\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":11710:11797  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n    tag_181:\n        /* \"erc721a/contracts/ERC721A.sol\":11703:11797  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      swap2\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":11491:11804  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":13684:13846  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_95:\n        /* \"erc721a/contracts/ERC721A.sol\":13781:13785  bool */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13822  _operatorApprovals */\n      0x07\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13829  _operatorApprovals[owner] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13823:13828  owner */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13829  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13839  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13830:13838  operator */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13839  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":13797:13839  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":13684:13846  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":14791:15059  function _exists(uint256 tokenId) internal view returns (bool) {... */\n    tag_109:\n        /* \"erc721a/contracts/ERC721A.sol\":14848:14852  bool */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":14902:14909  tokenId */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":14883:14898  _startTokenId() */\n      tag_188\n        /* \"erc721a/contracts/ERC721A.sol\":14883:14896  _startTokenId */\n      tag_121\n        /* \"erc721a/contracts/ERC721A.sol\":14883:14898  _startTokenId() */\n      jump\t// in\n    tag_188:\n        /* \"erc721a/contracts/ERC721A.sol\":14883:14909  _startTokenId() <= tokenId */\n      gt\n      iszero\n        /* \"erc721a/contracts/ERC721A.sol\":14883:14948  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_189\n      jumpi\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":14935:14948  _currentIndex */\n      sload(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":14925:14932  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":14925:14948  tokenId < _currentIndex */\n      lt\n        /* \"erc721a/contracts/ERC721A.sol\":14883:14948  _startTokenId() <= tokenId &&... */\n    tag_189:\n        /* \"erc721a/contracts/ERC721A.sol\":14883:15033  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_190\n      jumpi\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":15032:15033  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":1774:1782  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15002  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15011  _packedOwnerships[tokenId] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":15003:15010  tokenId */\n      dup6\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15011  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15028  _packedOwnerships[tokenId] & BITMASK_BURNED */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15033  _packedOwnerships[tokenId] & BITMASK_BURNED == 0 */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":14883:15033  _startTokenId() <= tokenId &&... */\n    tag_190:\n        /* \"erc721a/contracts/ERC721A.sol\":14864:15033  return... */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":14791:15059  function _exists(uint256 tokenId) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":32874:32977  function _msgSenderERC721A() internal view virtual returns (address) {... */\n    tag_114:\n        /* \"erc721a/contracts/ERC721A.sol\":32934:32941  address */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n        /* \"erc721a/contracts/ERC721A.sol\":32953:32970  return msg.sender */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":32874:32977  function _msgSenderERC721A() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":4276:4366  function _startTokenId() internal view virtual returns (uint256) {... */\n    tag_121:\n        /* \"erc721a/contracts/ERC721A.sol\":4332:4339  uint256 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":4276:4366  function _startTokenId() internal view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":7949:9054  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {... */\n    tag_124:\n        /* \"erc721a/contracts/ERC721A.sol\":8016:8023  uint256 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":8035:8047  uint256 curr */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":8050:8057  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":8035:8057  uint256 curr = tokenId */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":8115:8119  curr */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":8096:8111  _startTokenId() */\n      tag_194\n        /* \"erc721a/contracts/ERC721A.sol\":8096:8109  _startTokenId */\n      tag_121\n        /* \"erc721a/contracts/ERC721A.sol\":8096:8111  _startTokenId() */\n      jump\t// in\n    tag_194:\n        /* \"erc721a/contracts/ERC721A.sol\":8096:8119  _startTokenId() <= curr */\n      gt\n        /* \"erc721a/contracts/ERC721A.sol\":8092:8990  if (_startTokenId() <= curr)... */\n      tag_195\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":8148:8161  _currentIndex */\n      sload(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":8141:8145  curr */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":8141:8161  curr < _currentIndex */\n      lt\n        /* \"erc721a/contracts/ERC721A.sol\":8137:8990  if (curr < _currentIndex) {... */\n      iszero\n      tag_196\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":8185:8199  uint256 packed */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":8202:8219  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":8202:8225  _packedOwnerships[curr] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":8220:8224  curr */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":8202:8225  _packedOwnerships[curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":8185:8225  uint256 packed = _packedOwnerships[curr] */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":8316:8317  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":1774:1782  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"erc721a/contracts/ERC721A.sol\":8289:8295  packed */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":8289:8312  packed & BITMASK_BURNED */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":8289:8317  packed & BITMASK_BURNED == 0 */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":8285:8972  if (packed & BITMASK_BURNED == 0) {... */\n      tag_197\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":8800:8911  while (packed == 0) {... */\n    tag_198:\n        /* \"erc721a/contracts/ERC721A.sol\":8817:8818  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":8807:8813  packed */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":8807:8818  packed == 0 */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":8800:8911  while (packed == 0) {... */\n      tag_199\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":8859:8876  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":8859:8884  _packedOwnerships[--curr] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":8877:8883  --curr */\n      dup4\n      0x01\n      swap1\n      sub\n      swap4\n      pop\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":8859:8884  _packedOwnerships[--curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":8850:8884  packed = _packedOwnerships[--curr] */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":8800:8911  while (packed == 0) {... */\n      jump(tag_198)\n    tag_199:\n        /* \"erc721a/contracts/ERC721A.sol\":8943:8949  packed */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":8936:8949  return packed */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_193)\n        /* \"erc721a/contracts/ERC721A.sol\":8285:8972  if (packed & BITMASK_BURNED == 0) {... */\n    tag_197:\n        /* \"erc721a/contracts/ERC721A.sol\":8163:8990  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":8137:8990  if (curr < _currentIndex) {... */\n    tag_196:\n        /* \"erc721a/contracts/ERC721A.sol\":8092:8990  if (_startTokenId() <= curr)... */\n    tag_195:\n        /* \"erc721a/contracts/ERC721A.sol\":9016:9047  OwnerQueryForNonexistentToken() */\n      mload(0x40)\n      0xdf2d9b4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":7949:9054  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {... */\n    tag_193:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":20436:21073  function _getApprovedAddress(uint256 tokenId)... */\n    tag_127:\n        /* \"erc721a/contracts/ERC721A.sol\":20528:20555  uint256 approvedAddressSlot */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":20557:20580  address approvedAddress */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":20596:20649  mapping(uint256 => address) storage tokenApprovalsPtr */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":20652:20667  _tokenApprovals */\n      0x06\n        /* \"erc721a/contracts/ERC721A.sol\":20596:20667  mapping(uint256 => address) storage tokenApprovalsPtr = _tokenApprovals */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":20834:20841  tokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":20828:20832  0x00 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":20821:20842  mstore(0x00, tokenId) */\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":20868:20890  tokenApprovalsPtr.slot */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":20862:20866  0x20 */\n      0x20\n        /* \"erc721a/contracts/ERC721A.sol\":20855:20891  mstore(0x20, tokenApprovalsPtr.slot) */\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":20943:20947  0x40 */\n      0x40\n        /* \"erc721a/contracts/ERC721A.sol\":20937:20941  0x00 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":20927:20948  keccak256(0x00, 0x40) */\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":20904:20948  approvedAddressSlot := keccak256(0x00, 0x40) */\n      swap3\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":21037:21056  approvedAddressSlot */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":21031:21057  sload(approvedAddressSlot) */\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":21012:21057  approvedAddress := sload(approvedAddressSlot) */\n      swap2\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":20774:21067  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":20436:21073  function _getApprovedAddress(uint256 tokenId)... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":21181:21813  function _isOwnerOrApproved(... */\n    tag_130:\n        /* \"erc721a/contracts/ERC721A.sol\":21319:21330  bool result */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":21478:21493  BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"erc721a/contracts/ERC721A.sol\":21472:21476  from */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":21468:21494  and(from, BITMASK_ADDRESS) */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":21460:21494  from := and(from, BITMASK_ADDRESS) */\n      swap3\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":21635:21650  BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"erc721a/contracts/ERC721A.sol\":21624:21633  msgSender */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":21620:21651  and(msgSender, BITMASK_ADDRESS) */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":21607:21651  msgSender := and(msgSender, BITMASK_ADDRESS) */\n      swap2\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":21780:21795  approvedAddress */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":21769:21778  msgSender */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":21766:21796  eq(msgSender, approvedAddress) */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":21759:21763  from */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":21748:21757  msgSender */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":21745:21764  eq(msgSender, from) */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":21742:21797  or(eq(msgSender, from), eq(msgSender, approvedAddress)) */\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":21732:21797  result := or(eq(msgSender, from), eq(msgSender, approvedAddress)) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":21181:21813  function _isOwnerOrApproved(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":31742:31896  function _beforeTokenTransfers(... */\n    tag_137:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":30099:30401  function _nextExtraData(... */\n    tag_141:\n        /* \"erc721a/contracts/ERC721A.sol\":30230:30237  uint256 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":30249:30265  uint24 extraData */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":2166:2169  232 */\n      0xe8\n        /* \"erc721a/contracts/ERC721A.sol\":30275:30294  prevOwnershipPacked */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":30275:30315  prevOwnershipPacked >> BITPOS_EXTRA_DATA */\n      swap1\n      shr\n        /* \"erc721a/contracts/ERC721A.sol\":30249:30316  uint24 extraData = uint24(prevOwnershipPacked >> BITPOS_EXTRA_DATA) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":2166:2169  232 */\n      0xe8\n        /* \"erc721a/contracts/ERC721A.sol\":30341:30372  _extraData(from, to, extraData) */\n      tag_204\n        /* \"erc721a/contracts/ERC721A.sol\":30352:30356  from */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":30358:30360  to */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":30362:30371  extraData */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":30341:30351  _extraData */\n      tag_205\n        /* \"erc721a/contracts/ERC721A.sol\":30341:30372  _extraData(from, to, extraData) */\n      jump\t// in\n    tag_204:\n        /* \"erc721a/contracts/ERC721A.sol\":30333:30373  uint256(_extraData(from, to, extraData)) */\n      0xffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":30333:30394  uint256(_extraData(from, to, extraData)) << BITPOS_EXTRA_DATA */\n      swap1\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":30326:30394  return uint256(_extraData(from, to, extraData)) << BITPOS_EXTRA_DATA */\n      swap2\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":30099:30401  function _nextExtraData(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":10460:10900  function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {... */\n    tag_142:\n        /* \"erc721a/contracts/ERC721A.sol\":10540:10554  uint256 result */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":10705:10720  BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"erc721a/contracts/ERC721A.sol\":10698:10703  owner */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":10694:10721  and(owner, BITMASK_ADDRESS) */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":10685:10721  owner := and(owner, BITMASK_ADDRESS) */\n      swap3\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":10877:10882  flags */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":10863:10874  timestamp() */\n      timestamp\n        /* \"erc721a/contracts/ERC721A.sol\":10839:10861  BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"erc721a/contracts/ERC721A.sol\":10835:10875  shl(BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":10832:10883  or(shl(BITPOS_START_TIMESTAMP, timestamp()), flags) */\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":10825:10830  owner */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":10822:10884  or(owner, or(shl(BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":10812:10884  result := or(owner, or(shl(BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":10460:10900  function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":32537:32690  function _afterTokenTransfers(... */\n    tag_147:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":15138:15240  function _safeMint(address to, uint256 quantity) internal {... */\n    tag_162:\n        /* \"erc721a/contracts/ERC721A.sol\":15206:15233  _safeMint(to, quantity, '') */\n      tag_209\n        /* \"erc721a/contracts/ERC721A.sol\":15216:15218  to */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":15220:15228  quantity */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":15206:15233  _safeMint(to, quantity, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":15206:15215  _safeMint */\n      tag_210\n        /* \"erc721a/contracts/ERC721A.sol\":15206:15233  _safeMint(to, quantity, '') */\n      jump\t// in\n    tag_209:\n        /* \"erc721a/contracts/ERC721A.sol\":15138:15240  function _safeMint(address to, uint256 quantity) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":28649:29346  function _checkContractOnERC721Received(... */\n    tag_173:\n        /* \"erc721a/contracts/ERC721A.sol\":28807:28811  bool */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":28852:28854  to */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":28827:28872  ERC721A__IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"erc721a/contracts/ERC721A.sol\":28873:28892  _msgSenderERC721A() */\n      tag_212\n        /* \"erc721a/contracts/ERC721A.sol\":28873:28890  _msgSenderERC721A */\n      tag_114\n        /* \"erc721a/contracts/ERC721A.sol\":28873:28892  _msgSenderERC721A() */\n      jump\t// in\n    tag_212:\n        /* \"erc721a/contracts/ERC721A.sol\":28894:28898  from */\n      dup8\n        /* \"erc721a/contracts/ERC721A.sol\":28900:28907  tokenId */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":28909:28914  _data */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":28827:28915  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_213:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_215\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_216\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n      0x01\n    tag_215:\n        /* \"erc721a/contracts/ERC721A.sol\":28823:29340  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_218\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_223\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_222)\n    tag_223:\n      0x60\n      swap2\n      pop\n    tag_222:\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":29122:29123  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":29105:29111  reason */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":29105:29118  reason.length */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":29105:29123  reason.length == 0 */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":29101:29330  if (reason.length == 0) {... */\n      tag_224\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":29150:29190  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":29101:29330  if (reason.length == 0) {... */\n    tag_224:\n        /* \"erc721a/contracts/ERC721A.sol\":29290:29296  reason */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":29284:29297  mload(reason) */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":29275:29281  reason */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":29271:29273  32 */\n      0x20\n        /* \"erc721a/contracts/ERC721A.sol\":29267:29282  add(32, reason) */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":29260:29298  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":28823:29340  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_218:\n        /* \"erc721a/contracts/ERC721A.sol\":28993:29047  ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"erc721a/contracts/ERC721A.sol\":28983:29047  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":28983:28989  retval */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":28983:29047  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":28976:29047  return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      swap2\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":28649:29346  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":12049:12141  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_179:\n        /* \"erc721a/contracts/ERC721A.sol\":12100:12113  string memory */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":12125:12134  return '' */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":12049:12141  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":33078:34998  function _toString(uint256 value) internal pure returns (string memory ptr) {... */\n    tag_183:\n        /* \"erc721a/contracts/ERC721A.sol\":33135:33152  string memory ptr */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":33548:33551  128 */\n      0x80\n        /* \"erc721a/contracts/ERC721A.sol\":33541:33545  0x40 */\n      0x40\n        /* \"erc721a/contracts/ERC721A.sol\":33535:33546  mload(0x40) */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":33531:33552  add(mload(0x40), 128) */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":33524:33552  ptr := add(mload(0x40), 128) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":33637:33640  ptr */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":33631:33635  0x40 */\n      0x40\n        /* \"erc721a/contracts/ERC721A.sol\":33624:33641  mstore(0x40, ptr) */\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":33740:33743  ptr */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":34188:34193  value */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":34316:34317  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":34311:34314  ptr */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":34307:34318  sub(ptr, 1) */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":34300:34318  ptr := sub(ptr, 1) */\n      swap3\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":34451:34453  10 */\n      0x0a\n        /* \"erc721a/contracts/ERC721A.sol\":34445:34449  temp */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":34441:34454  mod(temp, 10) */\n      mod\n        /* \"erc721a/contracts/ERC721A.sol\":34437:34439  48 */\n      0x30\n        /* \"erc721a/contracts/ERC721A.sol\":34433:34455  add(48, mod(temp, 10)) */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":34428:34431  ptr */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":34420:34456  mstore8(ptr, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"erc721a/contracts/ERC721A.sol\":34491:34493  10 */\n      0x0a\n        /* \"erc721a/contracts/ERC721A.sol\":34485:34489  temp */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":34481:34494  div(temp, 10) */\n      div\n        /* \"erc721a/contracts/ERC721A.sol\":34473:34494  temp := div(temp, 10) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":34082:34764  for {... */\n    tag_229:\n        /* \"erc721a/contracts/ERC721A.sol\":34509:34513  temp */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":34082:34764  for {... */\n      iszero\n      tag_231\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":34695:34696  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":34690:34693  ptr */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":34686:34697  sub(ptr, 1) */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":34679:34697  ptr := sub(ptr, 1) */\n      swap3\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":34745:34747  10 */\n      0x0a\n        /* \"erc721a/contracts/ERC721A.sol\":34739:34743  temp */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":34735:34748  mod(temp, 10) */\n      mod\n        /* \"erc721a/contracts/ERC721A.sol\":34731:34733  48 */\n      0x30\n        /* \"erc721a/contracts/ERC721A.sol\":34727:34749  add(48, mod(temp, 10)) */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":34722:34725  ptr */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":34714:34750  mstore8(ptr, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"erc721a/contracts/ERC721A.sol\":34602:34604  10 */\n      0x0a\n        /* \"erc721a/contracts/ERC721A.sol\":34596:34600  temp */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":34592:34605  div(temp, 10) */\n      div\n        /* \"erc721a/contracts/ERC721A.sol\":34584:34605  temp := div(temp, 10) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":34082:34764  for {... */\n      jump(tag_229)\n    tag_231:\n        /* \"erc721a/contracts/ERC721A.sol\":34086:34508  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":34801:34804  ptr */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":34796:34799  end */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":34792:34805  sub(end, ptr) */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":34914:34916  32 */\n      0x20\n        /* \"erc721a/contracts/ERC721A.sol\":34909:34912  ptr */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":34905:34917  sub(ptr, 32) */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":34898:34917  ptr := sub(ptr, 32) */\n      swap3\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":34975:34981  length */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":34970:34973  ptr */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":34963:34982  mstore(ptr, length) */\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":33173:34992  {... */\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":33078:34998  function _toString(uint256 value) internal pure returns (string memory ptr) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":30961:31104  function _extraData(... */\n    tag_205:\n        /* \"erc721a/contracts/ERC721A.sol\":31094:31100  uint24 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":30961:31104  function _extraData(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":15641:16302  function _safeMint(... */\n    tag_210:\n        /* \"erc721a/contracts/ERC721A.sol\":15759:15778  _mint(to, quantity) */\n      tag_234\n        /* \"erc721a/contracts/ERC721A.sol\":15765:15767  to */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":15769:15777  quantity */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":15759:15764  _mint */\n      tag_235\n        /* \"erc721a/contracts/ERC721A.sol\":15759:15778  _mint(to, quantity) */\n      jump\t// in\n    tag_234:\n        /* \"erc721a/contracts/ERC721A.sol\":15835:15836  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":15817:15819  to */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":15817:15831  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"erc721a/contracts/ERC721A.sol\":15817:15836  to.code.length != 0 */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":15813:16286  if (to.code.length != 0) {... */\n      tag_236\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":15856:15867  uint256 end */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":15870:15883  _currentIndex */\n      dup1\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":15856:15883  uint256 end = _currentIndex */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":15901:15914  uint256 index */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":15923:15931  quantity */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":15917:15920  end */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":15917:15931  end - quantity */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":15901:15931  uint256 index = end - quantity */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":15949:16178  do {... */\n    tag_237:\n        /* \"erc721a/contracts/ERC721A.sol\":15979:16041  _checkContractOnERC721Received(address(0), to, index++, _data) */\n      tag_240\n        /* \"erc721a/contracts/ERC721A.sol\":16018:16019  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":16022:16024  to */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":16026:16033  index++ */\n      dup4\n      dup1\n      0x01\n      add\n      swap5\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":16035:16040  _data */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":15979:16009  _checkContractOnERC721Received */\n      tag_173\n        /* \"erc721a/contracts/ERC721A.sol\":15979:16041  _checkContractOnERC721Received(address(0), to, index++, _data) */\n      jump\t// in\n    tag_240:\n        /* \"erc721a/contracts/ERC721A.sol\":15974:16139  if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {... */\n      tag_241\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":16076:16116  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":15974:16139  if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {... */\n    tag_241:\n        /* \"erc721a/contracts/ERC721A.sol\":16173:16176  end */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":16165:16170  index */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":16165:16176  index < end */\n      lt\n        /* \"erc721a/contracts/ERC721A.sol\":15949:16178  do {... */\n      tag_237\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":16258:16261  end */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":16241:16254  _currentIndex */\n      sload(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":16241:16261  _currentIndex != end */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":16237:16271  if (_currentIndex != end) revert() */\n      tag_242\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":16263:16271  revert() */\n      0x00\n      dup1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":16237:16271  if (_currentIndex != end) revert() */\n    tag_242:\n        /* \"erc721a/contracts/ERC721A.sol\":15838:16286  {... */\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":15813:16286  if (to.code.length != 0) {... */\n    tag_236:\n        /* \"erc721a/contracts/ERC721A.sol\":15641:16302  function _safeMint(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":16563:18055  function _mint(address to, uint256 quantity) internal {... */\n    tag_235:\n        /* \"erc721a/contracts/ERC721A.sol\":16627:16647  uint256 startTokenId */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":16650:16663  _currentIndex */\n      dup1\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":16627:16663  uint256 startTokenId = _currentIndex */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":16691:16692  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":16677:16693  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":16677:16679  to */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":16677:16693  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":16673:16721  if (to == address(0)) revert MintToZeroAddress() */\n      tag_244\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":16702:16721  MintToZeroAddress() */\n      mload(0x40)\n      0x2e07630000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":16673:16721  if (to == address(0)) revert MintToZeroAddress() */\n    tag_244:\n        /* \"erc721a/contracts/ERC721A.sol\":16747:16748  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":16735:16743  quantity */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":16735:16748  quantity == 0 */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":16731:16775  if (quantity == 0) revert MintZeroQuantity() */\n      tag_245\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":16757:16775  MintZeroQuantity() */\n      mload(0x40)\n      0xb562e8dd00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":16731:16775  if (quantity == 0) revert MintZeroQuantity() */\n    tag_245:\n        /* \"erc721a/contracts/ERC721A.sol\":16786:16847  _beforeTokenTransfers(address(0), to, startTokenId, quantity) */\n      tag_246\n        /* \"erc721a/contracts/ERC721A.sol\":16816:16817  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":16820:16822  to */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":16824:16836  startTokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":16838:16846  quantity */\n      dup6\n        /* \"erc721a/contracts/ERC721A.sol\":16786:16807  _beforeTokenTransfers */\n      tag_137\n        /* \"erc721a/contracts/ERC721A.sol\":16786:16847  _beforeTokenTransfers(address(0), to, startTokenId, quantity) */\n      jump\t// in\n    tag_246:\n        /* \"erc721a/contracts/ERC721A.sol\":17318:17319  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":1156:1158  64 */\n      0x40\n        /* \"erc721a/contracts/ERC721A.sol\":17289:17290  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":17289:17314  1 << BITPOS_NUMBER_MINTED */\n      swap1\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":17288:17319  (1 << BITPOS_NUMBER_MINTED) | 1 */\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":17276:17284  quantity */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":17276:17320  quantity * ((1 << BITPOS_NUMBER_MINTED) | 1) */\n      mul\n        /* \"erc721a/contracts/ERC721A.sol\":17250:17268  _packedAddressData */\n      0x05\n        /* \"erc721a/contracts/ERC721A.sol\":17250:17272  _packedAddressData[to] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":17269:17271  to */\n      dup6\n        /* \"erc721a/contracts/ERC721A.sol\":17250:17272  _packedAddressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":17250:17320  _packedAddressData[to] += quantity * ((1 << BITPOS_NUMBER_MINTED) | 1) */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":17590:17726  _packOwnershipData(... */\n      tag_247\n        /* \"erc721a/contracts/ERC721A.sol\":17626:17628  to */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":17679:17712  _nextExtraData(address(0), to, 0) */\n      tag_248\n        /* \"erc721a/contracts/ERC721A.sol\":17702:17703  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":17706:17708  to */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":17710:17711  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":17679:17693  _nextExtraData */\n      tag_141\n        /* \"erc721a/contracts/ERC721A.sol\":17679:17712  _nextExtraData(address(0), to, 0) */\n      jump\t// in\n    tag_248:\n        /* \"erc721a/contracts/ERC721A.sol\":17646:17676  _nextInitializedFlag(quantity) */\n      tag_249\n        /* \"erc721a/contracts/ERC721A.sol\":17667:17675  quantity */\n      dup6\n        /* \"erc721a/contracts/ERC721A.sol\":17646:17666  _nextInitializedFlag */\n      tag_250\n        /* \"erc721a/contracts/ERC721A.sol\":17646:17676  _nextInitializedFlag(quantity) */\n      jump\t// in\n    tag_249:\n        /* \"erc721a/contracts/ERC721A.sol\":17646:17712  _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0) */\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":17590:17608  _packOwnershipData */\n      tag_142\n        /* \"erc721a/contracts/ERC721A.sol\":17590:17726  _packOwnershipData(... */\n      jump\t// in\n    tag_247:\n        /* \"erc721a/contracts/ERC721A.sol\":17556:17573  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":17556:17587  _packedOwnerships[startTokenId] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":17574:17586  startTokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":17556:17587  _packedOwnerships[startTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":17556:17726  _packedOwnerships[startTokenId] = _packOwnershipData(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":17741:17756  uint256 tokenId */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":17759:17771  startTokenId */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":17741:17771  uint256 tokenId = startTokenId */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":17785:17796  uint256 end */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":17814:17822  quantity */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":17799:17811  startTokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":17799:17822  startTokenId + quantity */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":17785:17822  uint256 end = startTokenId + quantity */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":17836:17935  do {... */\n    tag_251:\n        /* \"erc721a/contracts/ERC721A.sol\":17887:17896  tokenId++ */\n      dup2\n      dup1\n      0x01\n      add\n      swap3\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":17883:17885  to */\n      dup6\n        /* \"erc721a/contracts/ERC721A.sol\":17862:17897  Transfer(address(0), to, tokenId++) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":17879:17880  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":17862:17897  Transfer(address(0), to, tokenId++) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"erc721a/contracts/ERC721A.sol\":17930:17933  end */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":17920:17927  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":17920:17933  tokenId < end */\n      lt\n        /* \"erc721a/contracts/ERC721A.sol\":17836:17935  do {... */\n      tag_251\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":17965:17968  end */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":17949:17962  _currentIndex */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":17949:17968  _currentIndex = end */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":17030:17979  unchecked {... */\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":17988:18048  _afterTokenTransfers(address(0), to, startTokenId, quantity) */\n      tag_254\n        /* \"erc721a/contracts/ERC721A.sol\":18017:18018  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":18021:18023  to */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":18025:18037  startTokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":18039:18047  quantity */\n      dup6\n        /* \"erc721a/contracts/ERC721A.sol\":17988:18008  _afterTokenTransfers */\n      tag_147\n        /* \"erc721a/contracts/ERC721A.sol\":17988:18048  _afterTokenTransfers(address(0), to, startTokenId, quantity) */\n      jump\t// in\n    tag_254:\n        /* \"erc721a/contracts/ERC721A.sol\":16617:18055  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":16563:18055  function _mint(address to, uint256 quantity) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":12238:12554  function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {... */\n    tag_250:\n        /* \"erc721a/contracts/ERC721A.sol\":12308:12322  uint256 result */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":12535:12536  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":12525:12533  quantity */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":12522:12537  eq(quantity, 1) */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":12497:12520  BITPOS_NEXT_INITIALIZED */\n      0xe1\n        /* \"erc721a/contracts/ERC721A.sol\":12493:12538  shl(BITPOS_NEXT_INITIALIZED, eq(quantity, 1)) */\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":12483:12538  result := shl(BITPOS_NEXT_INITIALIZED, eq(quantity, 1)) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":12238:12554  function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_256:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_257:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_258:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_259:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_260:\n        /* \"#utility.yul\":561:584   */\n      tag_302\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_259\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_303\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_303:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_261:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_305\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_260\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_23:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_308\n      tag_257\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":833:952   */\n    tag_307:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_309\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_261\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_262:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_263:\n        /* \"#utility.yul\":1268:1289   */\n      tag_312\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_262\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_26:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_314\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_263\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_264:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_265:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2105   */\n    tag_266:\n        /* \"#utility.yul\":1866:1867   */\n      0x00\n        /* \"#utility.yul\":1876:1989   */\n    tag_318:\n        /* \"#utility.yul\":1890:1896   */\n      dup4\n        /* \"#utility.yul\":1887:1888   */\n      dup2\n        /* \"#utility.yul\":1884:1897   */\n      lt\n        /* \"#utility.yul\":1876:1989   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":1975:1976   */\n      dup1\n        /* \"#utility.yul\":1970:1973   */\n      dup3\n        /* \"#utility.yul\":1966:1977   */\n      add\n        /* \"#utility.yul\":1960:1978   */\n      mload\n        /* \"#utility.yul\":1956:1957   */\n      dup2\n        /* \"#utility.yul\":1951:1954   */\n      dup5\n        /* \"#utility.yul\":1947:1958   */\n      add\n        /* \"#utility.yul\":1940:1979   */\n      mstore\n        /* \"#utility.yul\":1912:1914   */\n      0x20\n        /* \"#utility.yul\":1909:1910   */\n      dup2\n        /* \"#utility.yul\":1905:1915   */\n      add\n        /* \"#utility.yul\":1900:1915   */\n      swap1\n      pop\n        /* \"#utility.yul\":1876:1989   */\n      jump(tag_318)\n    tag_320:\n        /* \"#utility.yul\":2007:2013   */\n      dup4\n        /* \"#utility.yul\":2004:2005   */\n      dup2\n        /* \"#utility.yul\":2001:2014   */\n      gt\n        /* \"#utility.yul\":1998:2099   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":2087:2088   */\n      0x00\n        /* \"#utility.yul\":2078:2084   */\n      dup5\n        /* \"#utility.yul\":2073:2076   */\n      dup5\n        /* \"#utility.yul\":2069:2085   */\n      add\n        /* \"#utility.yul\":2062:2089   */\n      mstore\n        /* \"#utility.yul\":1998:2099   */\n    tag_321:\n        /* \"#utility.yul\":1847:2105   */\n      pop\n        /* \"#utility.yul\":1798:2105   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2111:2213   */\n    tag_267:\n        /* \"#utility.yul\":2152:2158   */\n      0x00\n        /* \"#utility.yul\":2203:2205   */\n      0x1f\n        /* \"#utility.yul\":2199:2206   */\n      not\n        /* \"#utility.yul\":2194:2196   */\n      0x1f\n        /* \"#utility.yul\":2187:2192   */\n      dup4\n        /* \"#utility.yul\":2183:2197   */\n      add\n        /* \"#utility.yul\":2179:2207   */\n      and\n        /* \"#utility.yul\":2169:2207   */\n      swap1\n      pop\n        /* \"#utility.yul\":2111:2213   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2583   */\n    tag_268:\n        /* \"#utility.yul\":2307:2310   */\n      0x00\n        /* \"#utility.yul\":2335:2374   */\n      tag_324\n        /* \"#utility.yul\":2368:2373   */\n      dup3\n        /* \"#utility.yul\":2335:2374   */\n      tag_264\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":2390:2461   */\n      tag_325\n        /* \"#utility.yul\":2454:2460   */\n      dup2\n        /* \"#utility.yul\":2449:2452   */\n      dup6\n        /* \"#utility.yul\":2390:2461   */\n      tag_265\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":2383:2461   */\n      swap4\n      pop\n        /* \"#utility.yul\":2470:2522   */\n      tag_326\n        /* \"#utility.yul\":2515:2521   */\n      dup2\n        /* \"#utility.yul\":2510:2513   */\n      dup6\n        /* \"#utility.yul\":2503:2507   */\n      0x20\n        /* \"#utility.yul\":2496:2501   */\n      dup7\n        /* \"#utility.yul\":2492:2508   */\n      add\n        /* \"#utility.yul\":2470:2522   */\n      tag_266\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":2547:2576   */\n      tag_327\n        /* \"#utility.yul\":2569:2575   */\n      dup2\n        /* \"#utility.yul\":2547:2576   */\n      tag_267\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":2542:2545   */\n      dup5\n        /* \"#utility.yul\":2538:2577   */\n      add\n        /* \"#utility.yul\":2531:2577   */\n      swap2\n      pop\n        /* \"#utility.yul\":2311:2583   */\n      pop\n        /* \"#utility.yul\":2219:2583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2589:2902   */\n    tag_31:\n        /* \"#utility.yul\":2702:2706   */\n      0x00\n        /* \"#utility.yul\":2740:2742   */\n      0x20\n        /* \"#utility.yul\":2729:2738   */\n      dup3\n        /* \"#utility.yul\":2725:2743   */\n      add\n        /* \"#utility.yul\":2717:2743   */\n      swap1\n      pop\n        /* \"#utility.yul\":2789:2798   */\n      dup2\n        /* \"#utility.yul\":2783:2787   */\n      dup2\n        /* \"#utility.yul\":2779:2799   */\n      sub\n        /* \"#utility.yul\":2775:2776   */\n      0x00\n        /* \"#utility.yul\":2764:2773   */\n      dup4\n        /* \"#utility.yul\":2760:2777   */\n      add\n        /* \"#utility.yul\":2753:2800   */\n      mstore\n        /* \"#utility.yul\":2817:2895   */\n      tag_329\n        /* \"#utility.yul\":2890:2894   */\n      dup2\n        /* \"#utility.yul\":2881:2887   */\n      dup5\n        /* \"#utility.yul\":2817:2895   */\n      tag_268\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":2809:2895   */\n      swap1\n      pop\n        /* \"#utility.yul\":2589:2902   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2908:2985   */\n    tag_269:\n        /* \"#utility.yul\":2945:2952   */\n      0x00\n        /* \"#utility.yul\":2974:2979   */\n      dup2\n        /* \"#utility.yul\":2963:2979   */\n      swap1\n      pop\n        /* \"#utility.yul\":2908:2985   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2991:3113   */\n    tag_270:\n        /* \"#utility.yul\":3064:3088   */\n      tag_332\n        /* \"#utility.yul\":3082:3087   */\n      dup2\n        /* \"#utility.yul\":3064:3088   */\n      tag_269\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":3057:3062   */\n      dup2\n        /* \"#utility.yul\":3054:3089   */\n      eq\n        /* \"#utility.yul\":3044:3107   */\n      tag_333\n      jumpi\n        /* \"#utility.yul\":3103:3104   */\n      0x00\n        /* \"#utility.yul\":3100:3101   */\n      dup1\n        /* \"#utility.yul\":3093:3105   */\n      revert\n        /* \"#utility.yul\":3044:3107   */\n    tag_333:\n        /* \"#utility.yul\":2991:3113   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3119:3258   */\n    tag_271:\n        /* \"#utility.yul\":3165:3170   */\n      0x00\n        /* \"#utility.yul\":3203:3209   */\n      dup2\n        /* \"#utility.yul\":3190:3210   */\n      calldataload\n        /* \"#utility.yul\":3181:3210   */\n      swap1\n      pop\n        /* \"#utility.yul\":3219:3252   */\n      tag_335\n        /* \"#utility.yul\":3246:3251   */\n      dup2\n        /* \"#utility.yul\":3219:3252   */\n      tag_270\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":3119:3258   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3264:3593   */\n    tag_35:\n        /* \"#utility.yul\":3323:3329   */\n      0x00\n        /* \"#utility.yul\":3372:3374   */\n      0x20\n        /* \"#utility.yul\":3360:3369   */\n      dup3\n        /* \"#utility.yul\":3351:3358   */\n      dup5\n        /* \"#utility.yul\":3347:3370   */\n      sub\n        /* \"#utility.yul\":3343:3375   */\n      slt\n        /* \"#utility.yul\":3340:3459   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":3378:3457   */\n      tag_338\n      tag_257\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":3340:3459   */\n    tag_337:\n        /* \"#utility.yul\":3498:3499   */\n      0x00\n        /* \"#utility.yul\":3523:3576   */\n      tag_339\n        /* \"#utility.yul\":3568:3575   */\n      dup5\n        /* \"#utility.yul\":3559:3565   */\n      dup3\n        /* \"#utility.yul\":3548:3557   */\n      dup6\n        /* \"#utility.yul\":3544:3566   */\n      add\n        /* \"#utility.yul\":3523:3576   */\n      tag_271\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":3513:3576   */\n      swap2\n      pop\n        /* \"#utility.yul\":3469:3586   */\n      pop\n        /* \"#utility.yul\":3264:3593   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3599:3725   */\n    tag_272:\n        /* \"#utility.yul\":3636:3643   */\n      0x00\n        /* \"#utility.yul\":3676:3718   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3669:3674   */\n      dup3\n        /* \"#utility.yul\":3665:3719   */\n      and\n        /* \"#utility.yul\":3654:3719   */\n      swap1\n      pop\n        /* \"#utility.yul\":3599:3725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3731:3827   */\n    tag_273:\n        /* \"#utility.yul\":3768:3775   */\n      0x00\n        /* \"#utility.yul\":3797:3821   */\n      tag_342\n        /* \"#utility.yul\":3815:3820   */\n      dup3\n        /* \"#utility.yul\":3797:3821   */\n      tag_272\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":3786:3821   */\n      swap1\n      pop\n        /* \"#utility.yul\":3731:3827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3833:3951   */\n    tag_274:\n        /* \"#utility.yul\":3920:3944   */\n      tag_344\n        /* \"#utility.yul\":3938:3943   */\n      dup2\n        /* \"#utility.yul\":3920:3944   */\n      tag_273\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":3915:3918   */\n      dup3\n        /* \"#utility.yul\":3908:3945   */\n      mstore\n        /* \"#utility.yul\":3833:3951   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3957:4179   */\n    tag_38:\n        /* \"#utility.yul\":4050:4054   */\n      0x00\n        /* \"#utility.yul\":4088:4090   */\n      0x20\n        /* \"#utility.yul\":4077:4086   */\n      dup3\n        /* \"#utility.yul\":4073:4091   */\n      add\n        /* \"#utility.yul\":4065:4091   */\n      swap1\n      pop\n        /* \"#utility.yul\":4101:4172   */\n      tag_346\n        /* \"#utility.yul\":4169:4170   */\n      0x00\n        /* \"#utility.yul\":4158:4167   */\n      dup4\n        /* \"#utility.yul\":4154:4171   */\n      add\n        /* \"#utility.yul\":4145:4151   */\n      dup5\n        /* \"#utility.yul\":4101:4172   */\n      tag_274\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":3957:4179   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4185:4307   */\n    tag_275:\n        /* \"#utility.yul\":4258:4282   */\n      tag_348\n        /* \"#utility.yul\":4276:4281   */\n      dup2\n        /* \"#utility.yul\":4258:4282   */\n      tag_273\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":4251:4256   */\n      dup2\n        /* \"#utility.yul\":4248:4283   */\n      eq\n        /* \"#utility.yul\":4238:4301   */\n      tag_349\n      jumpi\n        /* \"#utility.yul\":4297:4298   */\n      0x00\n        /* \"#utility.yul\":4294:4295   */\n      dup1\n        /* \"#utility.yul\":4287:4299   */\n      revert\n        /* \"#utility.yul\":4238:4301   */\n    tag_349:\n        /* \"#utility.yul\":4185:4307   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4313:4452   */\n    tag_276:\n        /* \"#utility.yul\":4359:4364   */\n      0x00\n        /* \"#utility.yul\":4397:4403   */\n      dup2\n        /* \"#utility.yul\":4384:4404   */\n      calldataload\n        /* \"#utility.yul\":4375:4404   */\n      swap1\n      pop\n        /* \"#utility.yul\":4413:4446   */\n      tag_351\n        /* \"#utility.yul\":4440:4445   */\n      dup2\n        /* \"#utility.yul\":4413:4446   */\n      tag_275\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":4313:4452   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4458:4932   */\n    tag_42:\n        /* \"#utility.yul\":4526:4532   */\n      0x00\n        /* \"#utility.yul\":4534:4540   */\n      dup1\n        /* \"#utility.yul\":4583:4585   */\n      0x40\n        /* \"#utility.yul\":4571:4580   */\n      dup4\n        /* \"#utility.yul\":4562:4569   */\n      dup6\n        /* \"#utility.yul\":4558:4581   */\n      sub\n        /* \"#utility.yul\":4554:4586   */\n      slt\n        /* \"#utility.yul\":4551:4670   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":4589:4668   */\n      tag_354\n      tag_257\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":4551:4670   */\n    tag_353:\n        /* \"#utility.yul\":4709:4710   */\n      0x00\n        /* \"#utility.yul\":4734:4787   */\n      tag_355\n        /* \"#utility.yul\":4779:4786   */\n      dup6\n        /* \"#utility.yul\":4770:4776   */\n      dup3\n        /* \"#utility.yul\":4759:4768   */\n      dup7\n        /* \"#utility.yul\":4755:4777   */\n      add\n        /* \"#utility.yul\":4734:4787   */\n      tag_276\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":4724:4787   */\n      swap3\n      pop\n        /* \"#utility.yul\":4680:4797   */\n      pop\n        /* \"#utility.yul\":4836:4838   */\n      0x20\n        /* \"#utility.yul\":4862:4915   */\n      tag_356\n        /* \"#utility.yul\":4907:4914   */\n      dup6\n        /* \"#utility.yul\":4898:4904   */\n      dup3\n        /* \"#utility.yul\":4887:4896   */\n      dup7\n        /* \"#utility.yul\":4883:4905   */\n      add\n        /* \"#utility.yul\":4862:4915   */\n      tag_271\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":4852:4915   */\n      swap2\n      pop\n        /* \"#utility.yul\":4807:4925   */\n      pop\n        /* \"#utility.yul\":4458:4932   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4938:5056   */\n    tag_277:\n        /* \"#utility.yul\":5025:5049   */\n      tag_358\n        /* \"#utility.yul\":5043:5048   */\n      dup2\n        /* \"#utility.yul\":5025:5049   */\n      tag_269\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":5020:5023   */\n      dup3\n        /* \"#utility.yul\":5013:5050   */\n      mstore\n        /* \"#utility.yul\":4938:5056   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5062:5284   */\n    tag_48:\n        /* \"#utility.yul\":5155:5159   */\n      0x00\n        /* \"#utility.yul\":5193:5195   */\n      0x20\n        /* \"#utility.yul\":5182:5191   */\n      dup3\n        /* \"#utility.yul\":5178:5196   */\n      add\n        /* \"#utility.yul\":5170:5196   */\n      swap1\n      pop\n        /* \"#utility.yul\":5206:5277   */\n      tag_360\n        /* \"#utility.yul\":5274:5275   */\n      0x00\n        /* \"#utility.yul\":5263:5272   */\n      dup4\n        /* \"#utility.yul\":5259:5276   */\n      add\n        /* \"#utility.yul\":5250:5256   */\n      dup5\n        /* \"#utility.yul\":5206:5277   */\n      tag_277\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":5062:5284   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5290:5909   */\n    tag_52:\n        /* \"#utility.yul\":5367:5373   */\n      0x00\n        /* \"#utility.yul\":5375:5381   */\n      dup1\n        /* \"#utility.yul\":5383:5389   */\n      0x00\n        /* \"#utility.yul\":5432:5434   */\n      0x60\n        /* \"#utility.yul\":5420:5429   */\n      dup5\n        /* \"#utility.yul\":5411:5418   */\n      dup7\n        /* \"#utility.yul\":5407:5430   */\n      sub\n        /* \"#utility.yul\":5403:5435   */\n      slt\n        /* \"#utility.yul\":5400:5519   */\n      iszero\n      tag_362\n      jumpi\n        /* \"#utility.yul\":5438:5517   */\n      tag_363\n      tag_257\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":5400:5519   */\n    tag_362:\n        /* \"#utility.yul\":5558:5559   */\n      0x00\n        /* \"#utility.yul\":5583:5636   */\n      tag_364\n        /* \"#utility.yul\":5628:5635   */\n      dup7\n        /* \"#utility.yul\":5619:5625   */\n      dup3\n        /* \"#utility.yul\":5608:5617   */\n      dup8\n        /* \"#utility.yul\":5604:5626   */\n      add\n        /* \"#utility.yul\":5583:5636   */\n      tag_276\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":5573:5636   */\n      swap4\n      pop\n        /* \"#utility.yul\":5529:5646   */\n      pop\n        /* \"#utility.yul\":5685:5687   */\n      0x20\n        /* \"#utility.yul\":5711:5764   */\n      tag_365\n        /* \"#utility.yul\":5756:5763   */\n      dup7\n        /* \"#utility.yul\":5747:5753   */\n      dup3\n        /* \"#utility.yul\":5736:5745   */\n      dup8\n        /* \"#utility.yul\":5732:5754   */\n      add\n        /* \"#utility.yul\":5711:5764   */\n      tag_276\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":5701:5764   */\n      swap3\n      pop\n        /* \"#utility.yul\":5656:5774   */\n      pop\n        /* \"#utility.yul\":5813:5815   */\n      0x40\n        /* \"#utility.yul\":5839:5892   */\n      tag_366\n        /* \"#utility.yul\":5884:5891   */\n      dup7\n        /* \"#utility.yul\":5875:5881   */\n      dup3\n        /* \"#utility.yul\":5864:5873   */\n      dup8\n        /* \"#utility.yul\":5860:5882   */\n      add\n        /* \"#utility.yul\":5839:5892   */\n      tag_271\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":5829:5892   */\n      swap2\n      pop\n        /* \"#utility.yul\":5784:5902   */\n      pop\n        /* \"#utility.yul\":5290:5909   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5915:6244   */\n    tag_66:\n        /* \"#utility.yul\":5974:5980   */\n      0x00\n        /* \"#utility.yul\":6023:6025   */\n      0x20\n        /* \"#utility.yul\":6011:6020   */\n      dup3\n        /* \"#utility.yul\":6002:6009   */\n      dup5\n        /* \"#utility.yul\":5998:6021   */\n      sub\n        /* \"#utility.yul\":5994:6026   */\n      slt\n        /* \"#utility.yul\":5991:6110   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":6029:6108   */\n      tag_369\n      tag_257\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":5991:6110   */\n    tag_368:\n        /* \"#utility.yul\":6149:6150   */\n      0x00\n        /* \"#utility.yul\":6174:6227   */\n      tag_370\n        /* \"#utility.yul\":6219:6226   */\n      dup5\n        /* \"#utility.yul\":6210:6216   */\n      dup3\n        /* \"#utility.yul\":6199:6208   */\n      dup6\n        /* \"#utility.yul\":6195:6217   */\n      add\n        /* \"#utility.yul\":6174:6227   */\n      tag_276\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":6164:6227   */\n      swap2\n      pop\n        /* \"#utility.yul\":6120:6237   */\n      pop\n        /* \"#utility.yul\":5915:6244   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6250:6366   */\n    tag_278:\n        /* \"#utility.yul\":6320:6341   */\n      tag_372\n        /* \"#utility.yul\":6335:6340   */\n      dup2\n        /* \"#utility.yul\":6320:6341   */\n      tag_262\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":6313:6318   */\n      dup2\n        /* \"#utility.yul\":6310:6342   */\n      eq\n        /* \"#utility.yul\":6300:6360   */\n      tag_373\n      jumpi\n        /* \"#utility.yul\":6356:6357   */\n      0x00\n        /* \"#utility.yul\":6353:6354   */\n      dup1\n        /* \"#utility.yul\":6346:6358   */\n      revert\n        /* \"#utility.yul\":6300:6360   */\n    tag_373:\n        /* \"#utility.yul\":6250:6366   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6372:6505   */\n    tag_279:\n        /* \"#utility.yul\":6415:6420   */\n      0x00\n        /* \"#utility.yul\":6453:6459   */\n      dup2\n        /* \"#utility.yul\":6440:6460   */\n      calldataload\n        /* \"#utility.yul\":6431:6460   */\n      swap1\n      pop\n        /* \"#utility.yul\":6469:6499   */\n      tag_375\n        /* \"#utility.yul\":6493:6498   */\n      dup2\n        /* \"#utility.yul\":6469:6499   */\n      tag_278\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":6372:6505   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6511:6979   */\n    tag_79:\n        /* \"#utility.yul\":6576:6582   */\n      0x00\n        /* \"#utility.yul\":6584:6590   */\n      dup1\n        /* \"#utility.yul\":6633:6635   */\n      0x40\n        /* \"#utility.yul\":6621:6630   */\n      dup4\n        /* \"#utility.yul\":6612:6619   */\n      dup6\n        /* \"#utility.yul\":6608:6631   */\n      sub\n        /* \"#utility.yul\":6604:6636   */\n      slt\n        /* \"#utility.yul\":6601:6720   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":6639:6718   */\n      tag_378\n      tag_257\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":6601:6720   */\n    tag_377:\n        /* \"#utility.yul\":6759:6760   */\n      0x00\n        /* \"#utility.yul\":6784:6837   */\n      tag_379\n        /* \"#utility.yul\":6829:6836   */\n      dup6\n        /* \"#utility.yul\":6820:6826   */\n      dup3\n        /* \"#utility.yul\":6809:6818   */\n      dup7\n        /* \"#utility.yul\":6805:6827   */\n      add\n        /* \"#utility.yul\":6784:6837   */\n      tag_276\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":6774:6837   */\n      swap3\n      pop\n        /* \"#utility.yul\":6730:6847   */\n      pop\n        /* \"#utility.yul\":6886:6888   */\n      0x20\n        /* \"#utility.yul\":6912:6962   */\n      tag_380\n        /* \"#utility.yul\":6954:6961   */\n      dup6\n        /* \"#utility.yul\":6945:6951   */\n      dup3\n        /* \"#utility.yul\":6934:6943   */\n      dup7\n        /* \"#utility.yul\":6930:6952   */\n      add\n        /* \"#utility.yul\":6912:6962   */\n      tag_279\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":6902:6962   */\n      swap2\n      pop\n        /* \"#utility.yul\":6857:6972   */\n      pop\n        /* \"#utility.yul\":6511:6979   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6985:7102   */\n    tag_280:\n        /* \"#utility.yul\":7094:7095   */\n      0x00\n        /* \"#utility.yul\":7091:7092   */\n      dup1\n        /* \"#utility.yul\":7084:7096   */\n      revert\n        /* \"#utility.yul\":7108:7225   */\n    tag_281:\n        /* \"#utility.yul\":7217:7218   */\n      0x00\n        /* \"#utility.yul\":7214:7215   */\n      dup1\n        /* \"#utility.yul\":7207:7219   */\n      revert\n        /* \"#utility.yul\":7231:7411   */\n    tag_282:\n        /* \"#utility.yul\":7279:7356   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7276:7277   */\n      0x00\n        /* \"#utility.yul\":7269:7357   */\n      mstore\n        /* \"#utility.yul\":7376:7380   */\n      0x41\n        /* \"#utility.yul\":7373:7374   */\n      0x04\n        /* \"#utility.yul\":7366:7381   */\n      mstore\n        /* \"#utility.yul\":7400:7404   */\n      0x24\n        /* \"#utility.yul\":7397:7398   */\n      0x00\n        /* \"#utility.yul\":7390:7405   */\n      revert\n        /* \"#utility.yul\":7417:7698   */\n    tag_283:\n        /* \"#utility.yul\":7500:7527   */\n      tag_385\n        /* \"#utility.yul\":7522:7526   */\n      dup3\n        /* \"#utility.yul\":7500:7527   */\n      tag_267\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":7492:7498   */\n      dup2\n        /* \"#utility.yul\":7488:7528   */\n      add\n        /* \"#utility.yul\":7630:7636   */\n      dup2\n        /* \"#utility.yul\":7618:7628   */\n      dup2\n        /* \"#utility.yul\":7615:7637   */\n      lt\n        /* \"#utility.yul\":7594:7612   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7582:7592   */\n      dup3\n        /* \"#utility.yul\":7579:7613   */\n      gt\n        /* \"#utility.yul\":7576:7638   */\n      or\n        /* \"#utility.yul\":7573:7661   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":7641:7659   */\n      tag_387\n      tag_282\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":7573:7661   */\n    tag_386:\n        /* \"#utility.yul\":7681:7691   */\n      dup1\n        /* \"#utility.yul\":7677:7679   */\n      0x40\n        /* \"#utility.yul\":7670:7692   */\n      mstore\n        /* \"#utility.yul\":7460:7698   */\n      pop\n        /* \"#utility.yul\":7417:7698   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7704:7833   */\n    tag_284:\n        /* \"#utility.yul\":7738:7744   */\n      0x00\n        /* \"#utility.yul\":7765:7785   */\n      tag_389\n      tag_256\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":7755:7785   */\n      swap1\n      pop\n        /* \"#utility.yul\":7794:7827   */\n      tag_390\n        /* \"#utility.yul\":7822:7826   */\n      dup3\n        /* \"#utility.yul\":7814:7820   */\n      dup3\n        /* \"#utility.yul\":7794:7827   */\n      tag_283\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":7704:7833   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7839:8146   */\n    tag_285:\n        /* \"#utility.yul\":7900:7904   */\n      0x00\n        /* \"#utility.yul\":7990:8008   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7982:7988   */\n      dup3\n        /* \"#utility.yul\":7979:8009   */\n      gt\n        /* \"#utility.yul\":7976:8032   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":8012:8030   */\n      tag_393\n      tag_282\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":7976:8032   */\n    tag_392:\n        /* \"#utility.yul\":8050:8079   */\n      tag_394\n        /* \"#utility.yul\":8072:8078   */\n      dup3\n        /* \"#utility.yul\":8050:8079   */\n      tag_267\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":8042:8079   */\n      swap1\n      pop\n        /* \"#utility.yul\":8134:8138   */\n      0x20\n        /* \"#utility.yul\":8128:8132   */\n      dup2\n        /* \"#utility.yul\":8124:8139   */\n      add\n        /* \"#utility.yul\":8116:8139   */\n      swap1\n      pop\n        /* \"#utility.yul\":7839:8146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8152:8306   */\n    tag_286:\n        /* \"#utility.yul\":8236:8242   */\n      dup3\n        /* \"#utility.yul\":8231:8234   */\n      dup2\n        /* \"#utility.yul\":8226:8229   */\n      dup4\n        /* \"#utility.yul\":8213:8243   */\n      calldatacopy\n        /* \"#utility.yul\":8298:8299   */\n      0x00\n        /* \"#utility.yul\":8289:8295   */\n      dup4\n        /* \"#utility.yul\":8284:8287   */\n      dup4\n        /* \"#utility.yul\":8280:8296   */\n      add\n        /* \"#utility.yul\":8273:8300   */\n      mstore\n        /* \"#utility.yul\":8152:8306   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8312:8722   */\n    tag_287:\n        /* \"#utility.yul\":8389:8394   */\n      0x00\n        /* \"#utility.yul\":8414:8479   */\n      tag_397\n        /* \"#utility.yul\":8430:8478   */\n      tag_398\n        /* \"#utility.yul\":8471:8477   */\n      dup5\n        /* \"#utility.yul\":8430:8478   */\n      tag_285\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":8414:8479   */\n      tag_284\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":8405:8479   */\n      swap1\n      pop\n        /* \"#utility.yul\":8502:8508   */\n      dup3\n        /* \"#utility.yul\":8495:8500   */\n      dup2\n        /* \"#utility.yul\":8488:8509   */\n      mstore\n        /* \"#utility.yul\":8540:8544   */\n      0x20\n        /* \"#utility.yul\":8533:8538   */\n      dup2\n        /* \"#utility.yul\":8529:8545   */\n      add\n        /* \"#utility.yul\":8578:8581   */\n      dup5\n        /* \"#utility.yul\":8569:8575   */\n      dup5\n        /* \"#utility.yul\":8564:8567   */\n      dup5\n        /* \"#utility.yul\":8560:8576   */\n      add\n        /* \"#utility.yul\":8557:8582   */\n      gt\n        /* \"#utility.yul\":8554:8666   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":8585:8664   */\n      tag_400\n      tag_281\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":8554:8666   */\n    tag_399:\n        /* \"#utility.yul\":8675:8716   */\n      tag_401\n        /* \"#utility.yul\":8709:8715   */\n      dup5\n        /* \"#utility.yul\":8704:8707   */\n      dup3\n        /* \"#utility.yul\":8699:8702   */\n      dup6\n        /* \"#utility.yul\":8675:8716   */\n      tag_286\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":8395:8722   */\n      pop\n        /* \"#utility.yul\":8312:8722   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8741:9079   */\n    tag_288:\n        /* \"#utility.yul\":8796:8801   */\n      0x00\n        /* \"#utility.yul\":8845:8848   */\n      dup3\n        /* \"#utility.yul\":8838:8842   */\n      0x1f\n        /* \"#utility.yul\":8830:8836   */\n      dup4\n        /* \"#utility.yul\":8826:8843   */\n      add\n        /* \"#utility.yul\":8822:8849   */\n      slt\n        /* \"#utility.yul\":8812:8934   */\n      tag_403\n      jumpi\n        /* \"#utility.yul\":8853:8932   */\n      tag_404\n      tag_280\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":8812:8934   */\n    tag_403:\n        /* \"#utility.yul\":8970:8976   */\n      dup2\n        /* \"#utility.yul\":8957:8977   */\n      calldataload\n        /* \"#utility.yul\":8995:9073   */\n      tag_405\n        /* \"#utility.yul\":9069:9072   */\n      dup5\n        /* \"#utility.yul\":9061:9067   */\n      dup3\n        /* \"#utility.yul\":9054:9058   */\n      0x20\n        /* \"#utility.yul\":9046:9052   */\n      dup7\n        /* \"#utility.yul\":9042:9059   */\n      add\n        /* \"#utility.yul\":8995:9073   */\n      tag_287\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":8986:9073   */\n      swap2\n      pop\n        /* \"#utility.yul\":8802:9079   */\n      pop\n        /* \"#utility.yul\":8741:9079   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9085:10028   */\n    tag_84:\n        /* \"#utility.yul\":9180:9186   */\n      0x00\n        /* \"#utility.yul\":9188:9194   */\n      dup1\n        /* \"#utility.yul\":9196:9202   */\n      0x00\n        /* \"#utility.yul\":9204:9210   */\n      dup1\n        /* \"#utility.yul\":9253:9256   */\n      0x80\n        /* \"#utility.yul\":9241:9250   */\n      dup6\n        /* \"#utility.yul\":9232:9239   */\n      dup8\n        /* \"#utility.yul\":9228:9251   */\n      sub\n        /* \"#utility.yul\":9224:9257   */\n      slt\n        /* \"#utility.yul\":9221:9341   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":9260:9339   */\n      tag_408\n      tag_257\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":9221:9341   */\n    tag_407:\n        /* \"#utility.yul\":9380:9381   */\n      0x00\n        /* \"#utility.yul\":9405:9458   */\n      tag_409\n        /* \"#utility.yul\":9450:9457   */\n      dup8\n        /* \"#utility.yul\":9441:9447   */\n      dup3\n        /* \"#utility.yul\":9430:9439   */\n      dup9\n        /* \"#utility.yul\":9426:9448   */\n      add\n        /* \"#utility.yul\":9405:9458   */\n      tag_276\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":9395:9458   */\n      swap5\n      pop\n        /* \"#utility.yul\":9351:9468   */\n      pop\n        /* \"#utility.yul\":9507:9509   */\n      0x20\n        /* \"#utility.yul\":9533:9586   */\n      tag_410\n        /* \"#utility.yul\":9578:9585   */\n      dup8\n        /* \"#utility.yul\":9569:9575   */\n      dup3\n        /* \"#utility.yul\":9558:9567   */\n      dup9\n        /* \"#utility.yul\":9554:9576   */\n      add\n        /* \"#utility.yul\":9533:9586   */\n      tag_276\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":9523:9586   */\n      swap4\n      pop\n        /* \"#utility.yul\":9478:9596   */\n      pop\n        /* \"#utility.yul\":9635:9637   */\n      0x40\n        /* \"#utility.yul\":9661:9714   */\n      tag_411\n        /* \"#utility.yul\":9706:9713   */\n      dup8\n        /* \"#utility.yul\":9697:9703   */\n      dup3\n        /* \"#utility.yul\":9686:9695   */\n      dup9\n        /* \"#utility.yul\":9682:9704   */\n      add\n        /* \"#utility.yul\":9661:9714   */\n      tag_271\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":9651:9714   */\n      swap3\n      pop\n        /* \"#utility.yul\":9606:9724   */\n      pop\n        /* \"#utility.yul\":9791:9793   */\n      0x60\n        /* \"#utility.yul\":9780:9789   */\n      dup6\n        /* \"#utility.yul\":9776:9794   */\n      add\n        /* \"#utility.yul\":9763:9795   */\n      calldataload\n        /* \"#utility.yul\":9822:9840   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9814:9820   */\n      dup2\n        /* \"#utility.yul\":9811:9841   */\n      gt\n        /* \"#utility.yul\":9808:9925   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":9844:9923   */\n      tag_413\n      tag_258\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":9808:9925   */\n    tag_412:\n        /* \"#utility.yul\":9949:10011   */\n      tag_414\n        /* \"#utility.yul\":10003:10010   */\n      dup8\n        /* \"#utility.yul\":9994:10000   */\n      dup3\n        /* \"#utility.yul\":9983:9992   */\n      dup9\n        /* \"#utility.yul\":9979:10001   */\n      add\n        /* \"#utility.yul\":9949:10011   */\n      tag_288\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":9939:10011   */\n      swap2\n      pop\n        /* \"#utility.yul\":9734:10021   */\n      pop\n        /* \"#utility.yul\":9085:10028   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10034:10508   */\n    tag_94:\n        /* \"#utility.yul\":10102:10108   */\n      0x00\n        /* \"#utility.yul\":10110:10116   */\n      dup1\n        /* \"#utility.yul\":10159:10161   */\n      0x40\n        /* \"#utility.yul\":10147:10156   */\n      dup4\n        /* \"#utility.yul\":10138:10145   */\n      dup6\n        /* \"#utility.yul\":10134:10157   */\n      sub\n        /* \"#utility.yul\":10130:10162   */\n      slt\n        /* \"#utility.yul\":10127:10246   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":10165:10244   */\n      tag_417\n      tag_257\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":10127:10246   */\n    tag_416:\n        /* \"#utility.yul\":10285:10286   */\n      0x00\n        /* \"#utility.yul\":10310:10363   */\n      tag_418\n        /* \"#utility.yul\":10355:10362   */\n      dup6\n        /* \"#utility.yul\":10346:10352   */\n      dup3\n        /* \"#utility.yul\":10335:10344   */\n      dup7\n        /* \"#utility.yul\":10331:10353   */\n      add\n        /* \"#utility.yul\":10310:10363   */\n      tag_276\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":10300:10363   */\n      swap3\n      pop\n        /* \"#utility.yul\":10256:10373   */\n      pop\n        /* \"#utility.yul\":10412:10414   */\n      0x20\n        /* \"#utility.yul\":10438:10491   */\n      tag_419\n        /* \"#utility.yul\":10483:10490   */\n      dup6\n        /* \"#utility.yul\":10474:10480   */\n      dup3\n        /* \"#utility.yul\":10463:10472   */\n      dup7\n        /* \"#utility.yul\":10459:10481   */\n      add\n        /* \"#utility.yul\":10438:10491   */\n      tag_276\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":10428:10491   */\n      swap2\n      pop\n        /* \"#utility.yul\":10383:10501   */\n      pop\n        /* \"#utility.yul\":10034:10508   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10514:10694   */\n    tag_289:\n        /* \"#utility.yul\":10562:10639   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10559:10560   */\n      0x00\n        /* \"#utility.yul\":10552:10640   */\n      mstore\n        /* \"#utility.yul\":10659:10663   */\n      0x22\n        /* \"#utility.yul\":10656:10657   */\n      0x04\n        /* \"#utility.yul\":10649:10664   */\n      mstore\n        /* \"#utility.yul\":10683:10687   */\n      0x24\n        /* \"#utility.yul\":10680:10681   */\n      0x00\n        /* \"#utility.yul\":10673:10688   */\n      revert\n        /* \"#utility.yul\":10700:11020   */\n    tag_102:\n        /* \"#utility.yul\":10744:10750   */\n      0x00\n        /* \"#utility.yul\":10781:10782   */\n      0x02\n        /* \"#utility.yul\":10775:10779   */\n      dup3\n        /* \"#utility.yul\":10771:10783   */\n      div\n        /* \"#utility.yul\":10761:10783   */\n      swap1\n      pop\n        /* \"#utility.yul\":10828:10829   */\n      0x01\n        /* \"#utility.yul\":10822:10826   */\n      dup3\n        /* \"#utility.yul\":10818:10830   */\n      and\n        /* \"#utility.yul\":10849:10867   */\n      dup1\n        /* \"#utility.yul\":10839:10920   */\n      tag_422\n      jumpi\n        /* \"#utility.yul\":10905:10909   */\n      0x7f\n        /* \"#utility.yul\":10897:10903   */\n      dup3\n        /* \"#utility.yul\":10893:10910   */\n      and\n        /* \"#utility.yul\":10883:10910   */\n      swap2\n      pop\n        /* \"#utility.yul\":10839:10920   */\n    tag_422:\n        /* \"#utility.yul\":10967:10969   */\n      0x20\n        /* \"#utility.yul\":10959:10965   */\n      dup3\n        /* \"#utility.yul\":10956:10970   */\n      lt\n        /* \"#utility.yul\":10936:10954   */\n      dup2\n        /* \"#utility.yul\":10933:10971   */\n      sub\n        /* \"#utility.yul\":10930:11014   */\n      tag_423\n      jumpi\n        /* \"#utility.yul\":10986:11004   */\n      tag_424\n      tag_289\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":10930:11014   */\n    tag_423:\n        /* \"#utility.yul\":10751:11020   */\n      pop\n        /* \"#utility.yul\":10700:11020   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11026:11174   */\n    tag_290:\n        /* \"#utility.yul\":11128:11139   */\n      0x00\n        /* \"#utility.yul\":11165:11168   */\n      dup2\n        /* \"#utility.yul\":11150:11168   */\n      swap1\n      pop\n        /* \"#utility.yul\":11026:11174   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11180:11557   */\n    tag_291:\n        /* \"#utility.yul\":11286:11289   */\n      0x00\n        /* \"#utility.yul\":11314:11353   */\n      tag_427\n        /* \"#utility.yul\":11347:11352   */\n      dup3\n        /* \"#utility.yul\":11314:11353   */\n      tag_264\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":11369:11458   */\n      tag_428\n        /* \"#utility.yul\":11451:11457   */\n      dup2\n        /* \"#utility.yul\":11446:11449   */\n      dup6\n        /* \"#utility.yul\":11369:11458   */\n      tag_290\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":11362:11458   */\n      swap4\n      pop\n        /* \"#utility.yul\":11467:11519   */\n      tag_429\n        /* \"#utility.yul\":11512:11518   */\n      dup2\n        /* \"#utility.yul\":11507:11510   */\n      dup6\n        /* \"#utility.yul\":11500:11504   */\n      0x20\n        /* \"#utility.yul\":11493:11498   */\n      dup7\n        /* \"#utility.yul\":11489:11505   */\n      add\n        /* \"#utility.yul\":11467:11519   */\n      tag_266\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":11544:11550   */\n      dup1\n        /* \"#utility.yul\":11539:11542   */\n      dup5\n        /* \"#utility.yul\":11535:11551   */\n      add\n        /* \"#utility.yul\":11528:11551   */\n      swap2\n      pop\n        /* \"#utility.yul\":11290:11557   */\n      pop\n        /* \"#utility.yul\":11180:11557   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11563:11998   */\n    tag_185:\n        /* \"#utility.yul\":11743:11746   */\n      0x00\n        /* \"#utility.yul\":11765:11860   */\n      tag_431\n        /* \"#utility.yul\":11856:11859   */\n      dup3\n        /* \"#utility.yul\":11847:11853   */\n      dup6\n        /* \"#utility.yul\":11765:11860   */\n      tag_291\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":11758:11860   */\n      swap2\n      pop\n        /* \"#utility.yul\":11877:11972   */\n      tag_432\n        /* \"#utility.yul\":11968:11971   */\n      dup3\n        /* \"#utility.yul\":11959:11965   */\n      dup5\n        /* \"#utility.yul\":11877:11972   */\n      tag_291\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":11870:11972   */\n      swap2\n      pop\n        /* \"#utility.yul\":11989:11992   */\n      dup2\n        /* \"#utility.yul\":11982:11992   */\n      swap1\n      pop\n        /* \"#utility.yul\":11563:11998   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12004:12102   */\n    tag_292:\n        /* \"#utility.yul\":12055:12061   */\n      0x00\n        /* \"#utility.yul\":12089:12094   */\n      dup2\n        /* \"#utility.yul\":12083:12095   */\n      mload\n        /* \"#utility.yul\":12073:12095   */\n      swap1\n      pop\n        /* \"#utility.yul\":12004:12102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12108:12276   */\n    tag_293:\n        /* \"#utility.yul\":12191:12202   */\n      0x00\n        /* \"#utility.yul\":12225:12231   */\n      dup3\n        /* \"#utility.yul\":12220:12223   */\n      dup3\n        /* \"#utility.yul\":12213:12232   */\n      mstore\n        /* \"#utility.yul\":12265:12269   */\n      0x20\n        /* \"#utility.yul\":12260:12263   */\n      dup3\n        /* \"#utility.yul\":12256:12270   */\n      add\n        /* \"#utility.yul\":12241:12270   */\n      swap1\n      pop\n        /* \"#utility.yul\":12108:12276   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12282:12642   */\n    tag_294:\n        /* \"#utility.yul\":12368:12371   */\n      0x00\n        /* \"#utility.yul\":12396:12434   */\n      tag_436\n        /* \"#utility.yul\":12428:12433   */\n      dup3\n        /* \"#utility.yul\":12396:12434   */\n      tag_292\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":12450:12520   */\n      tag_437\n        /* \"#utility.yul\":12513:12519   */\n      dup2\n        /* \"#utility.yul\":12508:12511   */\n      dup6\n        /* \"#utility.yul\":12450:12520   */\n      tag_293\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":12443:12520   */\n      swap4\n      pop\n        /* \"#utility.yul\":12529:12581   */\n      tag_438\n        /* \"#utility.yul\":12574:12580   */\n      dup2\n        /* \"#utility.yul\":12569:12572   */\n      dup6\n        /* \"#utility.yul\":12562:12566   */\n      0x20\n        /* \"#utility.yul\":12555:12560   */\n      dup7\n        /* \"#utility.yul\":12551:12567   */\n      add\n        /* \"#utility.yul\":12529:12581   */\n      tag_266\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":12606:12635   */\n      tag_439\n        /* \"#utility.yul\":12628:12634   */\n      dup2\n        /* \"#utility.yul\":12606:12635   */\n      tag_267\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":12601:12604   */\n      dup5\n        /* \"#utility.yul\":12597:12636   */\n      add\n        /* \"#utility.yul\":12590:12636   */\n      swap2\n      pop\n        /* \"#utility.yul\":12372:12642   */\n      pop\n        /* \"#utility.yul\":12282:12642   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12648:13288   */\n    tag_214:\n        /* \"#utility.yul\":12843:12847   */\n      0x00\n        /* \"#utility.yul\":12881:12884   */\n      0x80\n        /* \"#utility.yul\":12870:12879   */\n      dup3\n        /* \"#utility.yul\":12866:12885   */\n      add\n        /* \"#utility.yul\":12858:12885   */\n      swap1\n      pop\n        /* \"#utility.yul\":12895:12966   */\n      tag_441\n        /* \"#utility.yul\":12963:12964   */\n      0x00\n        /* \"#utility.yul\":12952:12961   */\n      dup4\n        /* \"#utility.yul\":12948:12965   */\n      add\n        /* \"#utility.yul\":12939:12945   */\n      dup8\n        /* \"#utility.yul\":12895:12966   */\n      tag_274\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":12976:13048   */\n      tag_442\n        /* \"#utility.yul\":13044:13046   */\n      0x20\n        /* \"#utility.yul\":13033:13042   */\n      dup4\n        /* \"#utility.yul\":13029:13047   */\n      add\n        /* \"#utility.yul\":13020:13026   */\n      dup7\n        /* \"#utility.yul\":12976:13048   */\n      tag_274\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":13058:13130   */\n      tag_443\n        /* \"#utility.yul\":13126:13128   */\n      0x40\n        /* \"#utility.yul\":13115:13124   */\n      dup4\n        /* \"#utility.yul\":13111:13129   */\n      add\n        /* \"#utility.yul\":13102:13108   */\n      dup6\n        /* \"#utility.yul\":13058:13130   */\n      tag_277\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":13177:13186   */\n      dup2\n        /* \"#utility.yul\":13171:13175   */\n      dup2\n        /* \"#utility.yul\":13167:13187   */\n      sub\n        /* \"#utility.yul\":13162:13164   */\n      0x60\n        /* \"#utility.yul\":13151:13160   */\n      dup4\n        /* \"#utility.yul\":13147:13165   */\n      add\n        /* \"#utility.yul\":13140:13188   */\n      mstore\n        /* \"#utility.yul\":13205:13281   */\n      tag_444\n        /* \"#utility.yul\":13276:13280   */\n      dup2\n        /* \"#utility.yul\":13267:13273   */\n      dup5\n        /* \"#utility.yul\":13205:13281   */\n      tag_294\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":13197:13281   */\n      swap1\n      pop\n        /* \"#utility.yul\":12648:13288   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13294:13435   */\n    tag_295:\n        /* \"#utility.yul\":13350:13355   */\n      0x00\n        /* \"#utility.yul\":13381:13387   */\n      dup2\n        /* \"#utility.yul\":13375:13388   */\n      mload\n        /* \"#utility.yul\":13366:13388   */\n      swap1\n      pop\n        /* \"#utility.yul\":13397:13429   */\n      tag_446\n        /* \"#utility.yul\":13423:13428   */\n      dup2\n        /* \"#utility.yul\":13397:13429   */\n      tag_260\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":13294:13435   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13441:13790   */\n    tag_217:\n        /* \"#utility.yul\":13510:13516   */\n      0x00\n        /* \"#utility.yul\":13559:13561   */\n      0x20\n        /* \"#utility.yul\":13547:13556   */\n      dup3\n        /* \"#utility.yul\":13538:13545   */\n      dup5\n        /* \"#utility.yul\":13534:13557   */\n      sub\n        /* \"#utility.yul\":13530:13562   */\n      slt\n        /* \"#utility.yul\":13527:13646   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":13565:13644   */\n      tag_449\n      tag_257\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":13527:13646   */\n    tag_448:\n        /* \"#utility.yul\":13685:13686   */\n      0x00\n        /* \"#utility.yul\":13710:13773   */\n      tag_450\n        /* \"#utility.yul\":13765:13772   */\n      dup5\n        /* \"#utility.yul\":13756:13762   */\n      dup3\n        /* \"#utility.yul\":13745:13754   */\n      dup6\n        /* \"#utility.yul\":13741:13763   */\n      add\n        /* \"#utility.yul\":13710:13773   */\n      tag_295\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":13700:13773   */\n      swap2\n      pop\n        /* \"#utility.yul\":13656:13783   */\n      pop\n        /* \"#utility.yul\":13441:13790   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ff8f2194903594cb3b298e83eaff81e1ba12adb2b9ad01fb778847acc07f8ce064736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_156": {
									"entryPoint": null,
									"id": 156,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_165": {
									"entryPoint": 192,
									"id": 165,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 676,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 376,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 255,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 208,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 405,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 561,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 604,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5231:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:3",
														"type": ""
													}
												],
												"src": "7:99:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "140:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "157:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "160:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "150:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "150:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "254:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "257:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "247:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "281:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "271:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "326:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "346:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:4:3",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "467:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "457:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "457:15:3"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "535:269:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "545:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "565:1:3",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "612:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "602:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "580:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "653:51:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "689:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:26:3"
															},
															"nodeType": "YulIf",
															"src": "623:81:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "756:42:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "751:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:38:3"
															},
															"nodeType": "YulIf",
															"src": "714:84:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "519:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "528:6:3",
														"type": ""
													}
												],
												"src": "484:320:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "864:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "874:11:3",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "882:3:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "902:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "895:14:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "895:14:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "918:26:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "936:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "926:18:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:3"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "851:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "859:4:3",
														"type": ""
													}
												],
												"src": "810:141:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1001:49:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1011:33:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1021:23:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:3"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "984:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "994:6:3",
														"type": ""
													}
												],
												"src": "957:93:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1119:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:3"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:3"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:16:3"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:3"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "1084:4:3",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1090:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "1100:8:3",
														"type": ""
													}
												],
												"src": "1056:107:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1245:317:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:3",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:18:3"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:3",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:97:3"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1417:51:3",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:3"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:3"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:39:3"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1477:30:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:3"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:21:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1516:40:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:3"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:30:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:3"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1206:5:3",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "1213:10:3",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "1225:8:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1238:6:3",
														"type": ""
													}
												],
												"src": "1169:393:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1634:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1595:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1605:7:3",
														"type": ""
													}
												],
												"src": "1568:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1683:28:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1693:12:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1700:5:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:3"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1669:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1679:3:3",
														"type": ""
													}
												],
												"src": "1651:60:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1777:82:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1787:66:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:3"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:53:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1757:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1767:9:3",
														"type": ""
													}
												],
												"src": "1717:142:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1912:28:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1922:12:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1929:5:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:3"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1898:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1908:3:3",
														"type": ""
													}
												],
												"src": "1865:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2022:193:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:3",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:39:3"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:3"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:3"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:3"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:3"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:3"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:105:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:3"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1999:4:3",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2005:6:3",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "2013:7:3",
														"type": ""
													}
												],
												"src": "1946:269:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2270:24:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2280:8:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2287:1:3",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:3"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2266:3:3",
														"type": ""
													}
												],
												"src": "2221:73:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2353:136:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:3",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2377:32:3"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:3"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:3"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:3"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:3"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2339:4:3",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2345:6:3",
														"type": ""
													}
												],
												"src": "2300:189:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2545:136:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2612:63:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:14:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2577:26:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2579:22:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:3"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2559:2:3",
																"statements": []
															},
															"src": "2555:120:3"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "2533:5:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2540:3:3",
														"type": ""
													}
												],
												"src": "2495:186:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2766:464:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2792:431:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:3"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:3"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:3"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:3"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:3"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3093:27:3",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3095:23:3",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:3"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:3"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:3",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:3"
																		},
																		"nodeType": "YulIf",
																		"src": "3071:49:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:3"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:3"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:3"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:3"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2780:11:3"
															},
															"nodeType": "YulIf",
															"src": "2777:446:3"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2742:5:3",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2749:3:3",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2754:10:3",
														"type": ""
													}
												],
												"src": "2687:543:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3299:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3309:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:3"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:3"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:16:3"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:3"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "3274:4:3",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3280:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "3290:8:3",
														"type": ""
													}
												],
												"src": "3236:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3410:118:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:3",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:3"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:3"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3432:56:3"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3497:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:3"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3507:15:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:3"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3387:4:3",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "3393:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3403:6:3",
														"type": ""
													}
												],
												"src": "3359:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3614:214:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3747:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:3"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:3"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3755:29:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:3",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:3"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:21:3"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:3"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3595:4:3",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3601:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "3609:4:3",
														"type": ""
													}
												],
												"src": "3533:295:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3925:1303:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:3",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3950:37:3"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4072:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:30:3"
															},
															"nodeType": "YulIf",
															"src": "4038:56:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:3"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:3"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4118:38:3"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:3"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:3"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:3"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4203:67:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4297:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4308:17:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4321:4:3",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:3"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4372:611:3",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:3",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:3"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:3",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:3"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:3"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:3",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:3"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:3"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:3",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:3",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4569:163:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:3"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:3"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:3"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:3"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:3"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:3"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:3"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:3"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4646:24:3",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:3"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:3"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4687:31:3",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:3",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:3"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:3"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:3"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:3"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:3"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "4547:21:3",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4549:17:3",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:3",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:3"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:3"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "4528:3:3",
																					"statements": []
																				},
																				"src": "4524:208:3"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4768:156:3",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:3",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:3"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:3"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:3"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:3"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:3",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:3"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:3"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:3"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:3",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:3"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:3"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:3"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:3"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:3"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:3"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:3"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:3"
																				},
																				"nodeType": "YulIf",
																				"src": "4745:179:3"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:3"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:3"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:3",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:3"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:3",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:3"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:3"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4365:618:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:3",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5000:222:3",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:3",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:3",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5051:67:3",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5069:35:3",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:3"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:3"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:3"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:3"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:3"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:3"
																				},
																				"nodeType": "YulIf",
																				"src": "5041:77:3"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:3"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:3"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:3"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:3"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:3"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4992:230:3",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4342:14:3"
															},
															"nodeType": "YulSwitch",
															"src": "4335:887:3"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3914:4:3",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3920:3:3",
														"type": ""
													}
												],
												"src": "3833:1395:3"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040518060400160405280600581526020017f417a756b690000000000000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f415a554b4900000000000000000000000000000000000000000000000000000081525081600290816200008f91906200033f565b508060039081620000a191906200033f565b50620000b2620000c060201b60201c565b600081905550505062000426565b600090565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200014757607f821691505b6020821081036200015d576200015c620000ff565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001c77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000188565b620001d3868362000188565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620002206200021a6200021484620001eb565b620001f5565b620001eb565b9050919050565b6000819050919050565b6200023c83620001ff565b620002546200024b8262000227565b84845462000195565b825550505050565b600090565b6200026b6200025c565b6200027881848462000231565b505050565b5b81811015620002a0576200029460008262000261565b6001810190506200027e565b5050565b601f821115620002ef57620002b98162000163565b620002c48462000178565b81016020851015620002d4578190505b620002ec620002e38562000178565b8301826200027d565b50505b505050565b600082821c905092915050565b60006200031460001984600802620002f4565b1980831691505092915050565b60006200032f838362000301565b9150826002028217905092915050565b6200034a82620000c5565b67ffffffffffffffff811115620003665762000365620000d0565b5b6200037282546200012e565b6200037f828285620002a4565b600060209050601f831160018114620003b75760008415620003a2578287015190505b620003ae858262000321565b8655506200041e565b601f198416620003c78662000163565b60005b82811015620003f157848901518255600182019150602085019450602081019050620003ca565b868310156200041157848901516200040d601f89168262000301565b8355505b6001600288020188555050505b505050505050565b611c8480620004366000396000f3fe6080604052600436106100e85760003560e01c80636352211e1161008a578063a22cb46511610059578063a22cb465146102f9578063b88d4fde14610322578063c87b56dd1461034b578063e985e9c514610388576100e8565b80636352211e1461023857806370a082311461027557806395d89b41146102b2578063a0712d68146102dd576100e8565b8063095ea7b3116100c6578063095ea7b31461019257806318160ddd146101bb57806323b872dd146101e657806342842e0e1461020f576100e8565b806301ffc9a7146100ed57806306fdde031461012a578063081812fc14610155575b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f9190611554565b6103c5565b604051610121919061159c565b60405180910390f35b34801561013657600080fd5b5061013f610457565b60405161014c9190611650565b60405180910390f35b34801561016157600080fd5b5061017c600480360381019061017791906116a8565b6104e9565b6040516101899190611716565b60405180910390f35b34801561019e57600080fd5b506101b960048036038101906101b4919061175d565b610565565b005b3480156101c757600080fd5b506101d06106a6565b6040516101dd91906117ac565b60405180910390f35b3480156101f257600080fd5b5061020d600480360381019061020891906117c7565b6106bd565b005b34801561021b57600080fd5b50610236600480360381019061023191906117c7565b6109df565b005b34801561024457600080fd5b5061025f600480360381019061025a91906116a8565b6109ff565b60405161026c9190611716565b60405180910390f35b34801561028157600080fd5b5061029c6004803603810190610297919061181a565b610a11565b6040516102a991906117ac565b60405180910390f35b3480156102be57600080fd5b506102c7610ac9565b6040516102d49190611650565b60405180910390f35b6102f760048036038101906102f291906116a8565b610b5b565b005b34801561030557600080fd5b50610320600480360381019061031b9190611873565b610b68565b005b34801561032e57600080fd5b50610349600480360381019061034491906119e8565b610cdf565b005b34801561035757600080fd5b50610372600480360381019061036d91906116a8565b610d52565b60405161037f9190611650565b60405180910390f35b34801561039457600080fd5b506103af60048036038101906103aa9190611a6b565b610df0565b6040516103bc919061159c565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061042057506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104505750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606002805461046690611ada565b80601f016020809104026020016040519081016040528092919081815260200182805461049290611ada565b80156104df5780601f106104b4576101008083540402835291602001916104df565b820191906000526020600020905b8154815290600101906020018083116104c257829003601f168201915b5050505050905090565b60006104f482610e84565b61052a576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610570826109ff565b90508073ffffffffffffffffffffffffffffffffffffffff16610591610ee3565b73ffffffffffffffffffffffffffffffffffffffff16146105f4576105bd816105b8610ee3565b610df0565b6105f3576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826006600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60006106b0610eeb565b6001546000540303905090565b60006106c882610ef0565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461072f576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008061073b84610fbc565b91509150610751818761074c610ee3565b610fde565b61079d5761076686610761610ee3565b610df0565b61079c576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610803576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108108686866001611022565b801561081b57600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154600101919050819055506108e9856108c5888887611028565b7c020000000000000000000000000000000000000000000000000000000017611050565b600460008681526020019081526020016000208190555060007c020000000000000000000000000000000000000000000000000000000084160361096f576000600185019050600060046000838152602001908152602001600020540361096d57600054811461096c578360046000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46109d7868686600161107b565b505050505050565b6109fa83838360405180602001604052806000815250610cdf565b505050565b6000610a0a82610ef0565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a78576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b606060038054610ad890611ada565b80601f0160208091040260200160405190810160405280929190818152602001828054610b0490611ada565b8015610b515780601f10610b2657610100808354040283529160200191610b51565b820191906000526020600020905b815481529060010190602001808311610b3457829003601f168201915b5050505050905090565b610b653382611081565b50565b610b70610ee3565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bd4576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060076000610be1610ee3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610c8e610ee3565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610cd3919061159c565b60405180910390a35050565b610cea8484846106bd565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610d4c57610d158484848461109f565b610d4b576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6060610d5d82610e84565b610d93576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610d9d6111ef565b90506000815103610dbd5760405180602001604052806000815250610de8565b80610dc784611206565b604051602001610dd8929190611b47565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081610e8f610eeb565b11158015610e9e575060005482105b8015610edc575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b600033905090565b600090565b60008082905080610eff610eeb565b11610f8557600054811015610f845760006004600083815260200190815260200160002054905060007c0100000000000000000000000000000000000000000000000000000000821603610f82575b60008103610f78576004600083600190039350838152602001908152602001600020549050610f4e565b8092505050610fb7565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000806000600690508360005280602052604060002092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e861103f868684611260565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b61109b828260405180602001604052806000815250611269565b5050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a026110c5610ee3565b8786866040518563ffffffff1660e01b81526004016110e79493929190611bc0565b6020604051808303816000875af192505050801561112357506040513d601f19601f820116820180604052508101906111209190611c21565b60015b61119c573d8060008114611153576040519150601f19603f3d011682016040523d82523d6000602084013e611158565b606091505b506000815103611194576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b60606080604051019050806040528082600183039250600a81066030018353600a810490505b801561124c57600183039250600a81066030018353600a8104905061122c565b508181036020830392508083525050919050565b60009392505050565b6112738383611306565b60008373ffffffffffffffffffffffffffffffffffffffff163b1461130157600080549050600083820390505b6112b3600086838060010194508661109f565b6112e9576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8181106112a05781600054146112fe57600080fd5b50505b505050565b600080549050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611372576040517f2e07630000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082036113ac576040517fb562e8dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6113b96000848385611022565b600160406001901b178202600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550611430836114216000866000611028565b61142a856114d8565b17611050565b60046000838152602001908152602001600020819055506000819050600083830190505b818060010192508573ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4808210611454578060008190555050506114d3600084838561107b565b505050565b60006001821460e11b9050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611531816114fc565b811461153c57600080fd5b50565b60008135905061154e81611528565b92915050565b60006020828403121561156a576115696114f2565b5b60006115788482850161153f565b91505092915050565b60008115159050919050565b61159681611581565b82525050565b60006020820190506115b1600083018461158d565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156115f15780820151818401526020810190506115d6565b83811115611600576000848401525b50505050565b6000601f19601f8301169050919050565b6000611622826115b7565b61162c81856115c2565b935061163c8185602086016115d3565b61164581611606565b840191505092915050565b6000602082019050818103600083015261166a8184611617565b905092915050565b6000819050919050565b61168581611672565b811461169057600080fd5b50565b6000813590506116a28161167c565b92915050565b6000602082840312156116be576116bd6114f2565b5b60006116cc84828501611693565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611700826116d5565b9050919050565b611710816116f5565b82525050565b600060208201905061172b6000830184611707565b92915050565b61173a816116f5565b811461174557600080fd5b50565b60008135905061175781611731565b92915050565b60008060408385031215611774576117736114f2565b5b600061178285828601611748565b925050602061179385828601611693565b9150509250929050565b6117a681611672565b82525050565b60006020820190506117c1600083018461179d565b92915050565b6000806000606084860312156117e0576117df6114f2565b5b60006117ee86828701611748565b93505060206117ff86828701611748565b925050604061181086828701611693565b9150509250925092565b6000602082840312156118305761182f6114f2565b5b600061183e84828501611748565b91505092915050565b61185081611581565b811461185b57600080fd5b50565b60008135905061186d81611847565b92915050565b6000806040838503121561188a576118896114f2565b5b600061189885828601611748565b92505060206118a98582860161185e565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6118f582611606565b810181811067ffffffffffffffff82111715611914576119136118bd565b5b80604052505050565b60006119276114e8565b905061193382826118ec565b919050565b600067ffffffffffffffff821115611953576119526118bd565b5b61195c82611606565b9050602081019050919050565b82818337600083830152505050565b600061198b61198684611938565b61191d565b9050828152602081018484840111156119a7576119a66118b8565b5b6119b2848285611969565b509392505050565b600082601f8301126119cf576119ce6118b3565b5b81356119df848260208601611978565b91505092915050565b60008060008060808587031215611a0257611a016114f2565b5b6000611a1087828801611748565b9450506020611a2187828801611748565b9350506040611a3287828801611693565b925050606085013567ffffffffffffffff811115611a5357611a526114f7565b5b611a5f878288016119ba565b91505092959194509250565b60008060408385031215611a8257611a816114f2565b5b6000611a9085828601611748565b9250506020611aa185828601611748565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611af257607f821691505b602082108103611b0557611b04611aab565b5b50919050565b600081905092915050565b6000611b21826115b7565b611b2b8185611b0b565b9350611b3b8185602086016115d3565b80840191505092915050565b6000611b538285611b16565b9150611b5f8284611b16565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000611b9282611b6b565b611b9c8185611b76565b9350611bac8185602086016115d3565b611bb581611606565b840191505092915050565b6000608082019050611bd56000830187611707565b611be26020830186611707565b611bef604083018561179d565b8181036060830152611c018184611b87565b905095945050505050565b600081519050611c1b81611528565b92915050565b600060208284031215611c3757611c366114f2565b5b6000611c4584828501611c0c565b9150509291505056fea2646970667358221220ff8f2194903594cb3b298e83eaff81e1ba12adb2b9ad01fb778847acc07f8ce064736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x417A756B69000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x415A554B49000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x2 SWAP1 DUP2 PUSH3 0x8F SWAP2 SWAP1 PUSH3 0x33F JUMP JUMPDEST POP DUP1 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xA1 SWAP2 SWAP1 PUSH3 0x33F JUMP JUMPDEST POP PUSH3 0xB2 PUSH3 0xC0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x426 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x147 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x15D JUMPI PUSH3 0x15C PUSH3 0xFF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x1C7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x188 JUMP JUMPDEST PUSH3 0x1D3 DUP7 DUP4 PUSH3 0x188 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x220 PUSH3 0x21A PUSH3 0x214 DUP5 PUSH3 0x1EB JUMP JUMPDEST PUSH3 0x1F5 JUMP JUMPDEST PUSH3 0x1EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x23C DUP4 PUSH3 0x1FF JUMP JUMPDEST PUSH3 0x254 PUSH3 0x24B DUP3 PUSH3 0x227 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x195 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x26B PUSH3 0x25C JUMP JUMPDEST PUSH3 0x278 DUP2 DUP5 DUP5 PUSH3 0x231 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x2A0 JUMPI PUSH3 0x294 PUSH1 0x0 DUP3 PUSH3 0x261 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x27E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x2EF JUMPI PUSH3 0x2B9 DUP2 PUSH3 0x163 JUMP JUMPDEST PUSH3 0x2C4 DUP5 PUSH3 0x178 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x2D4 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x2EC PUSH3 0x2E3 DUP6 PUSH3 0x178 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x27D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x314 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x2F4 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x32F DUP4 DUP4 PUSH3 0x301 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x34A DUP3 PUSH3 0xC5 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x366 JUMPI PUSH3 0x365 PUSH3 0xD0 JUMP JUMPDEST JUMPDEST PUSH3 0x372 DUP3 SLOAD PUSH3 0x12E JUMP JUMPDEST PUSH3 0x37F DUP3 DUP3 DUP6 PUSH3 0x2A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x3B7 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x3A2 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x3AE DUP6 DUP3 PUSH3 0x321 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x41E JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x3C7 DUP7 PUSH3 0x163 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x3F1 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x3CA JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x411 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x40D PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x301 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1C84 DUP1 PUSH3 0x436 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x388 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x2DD JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x20F JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x155 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x1554 JUMP JUMPDEST PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x159C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x457 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x1650 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x16A8 JUMP JUMPDEST PUSH2 0x4E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x175D JUMP JUMPDEST PUSH2 0x565 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x6A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x17C7 JUMP JUMPDEST PUSH2 0x6BD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x236 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x17C7 JUMP JUMPDEST PUSH2 0x9DF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x16A8 JUMP JUMPDEST PUSH2 0x9FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x181A JUMP JUMPDEST PUSH2 0xA11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C7 PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x1650 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x16A8 JUMP JUMPDEST PUSH2 0xB5B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x320 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x1873 JUMP JUMPDEST PUSH2 0xB68 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x19E8 JUMP JUMPDEST PUSH2 0xCDF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x372 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x16A8 JUMP JUMPDEST PUSH2 0xD52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x1650 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x1A6B JUMP JUMPDEST PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x159C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x420 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x450 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x466 SWAP1 PUSH2 0x1ADA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x492 SWAP1 PUSH2 0x1ADA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4DF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4DF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F4 DUP3 PUSH2 0xE84 JUMP JUMPDEST PUSH2 0x52A JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x570 DUP3 PUSH2 0x9FF JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x591 PUSH2 0xEE3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5F4 JUMPI PUSH2 0x5BD DUP2 PUSH2 0x5B8 PUSH2 0xEE3 JUMP JUMPDEST PUSH2 0xDF0 JUMP JUMPDEST PUSH2 0x5F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B0 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C8 DUP3 PUSH2 0xEF0 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x72F JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x73B DUP5 PUSH2 0xFBC JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x751 DUP2 DUP8 PUSH2 0x74C PUSH2 0xEE3 JUMP JUMPDEST PUSH2 0xFDE JUMP JUMPDEST PUSH2 0x79D JUMPI PUSH2 0x766 DUP7 PUSH2 0x761 PUSH2 0xEE3 JUMP JUMPDEST PUSH2 0xDF0 JUMP JUMPDEST PUSH2 0x79C JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x803 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x810 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0x1022 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x81B JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x8E9 DUP6 PUSH2 0x8C5 DUP9 DUP9 DUP8 PUSH2 0x1028 JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH2 0x1050 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND SUB PUSH2 0x96F JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x96D JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x96C JUMPI DUP4 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x9D7 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0x107B JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9FA DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xCDF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA0A DUP3 PUSH2 0xEF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0xAD8 SWAP1 PUSH2 0x1ADA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB04 SWAP1 PUSH2 0x1ADA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB51 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB26 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB51 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB34 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB65 CALLER DUP3 PUSH2 0x1081 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xB70 PUSH2 0xEE3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06307DB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0xBE1 PUSH2 0xEE3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC8E PUSH2 0xEE3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCD3 SWAP2 SWAP1 PUSH2 0x159C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xCEA DUP5 DUP5 DUP5 PUSH2 0x6BD JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0xD4C JUMPI PUSH2 0xD15 DUP5 DUP5 DUP5 DUP5 PUSH2 0x109F JUMP JUMPDEST PUSH2 0xD4B JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD5D DUP3 PUSH2 0xE84 JUMP JUMPDEST PUSH2 0xD93 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD9D PUSH2 0x11EF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xDBD JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xDE8 JUMP JUMPDEST DUP1 PUSH2 0xDC7 DUP5 PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDD8 SWAP3 SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xE8F PUSH2 0xEEB JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xE9E JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0xEDC JUMPI POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP DUP1 PUSH2 0xEFF PUSH2 0xEEB JUMP JUMPDEST GT PUSH2 0xF85 JUMPI PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0xF84 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND SUB PUSH2 0xF82 JUMPI JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0xF78 JUMPI PUSH1 0x4 PUSH1 0x0 DUP4 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0xF4E JUMP JUMPDEST DUP1 SWAP3 POP POP POP PUSH2 0xFB7 JUMP JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 SWAP1 POP DUP4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 POP DUP3 SLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 POP DUP4 DUP3 EQ DUP4 DUP4 EQ OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE8 DUP4 SWAP1 SHR SWAP1 POP PUSH1 0xE8 PUSH2 0x103F DUP7 DUP7 DUP5 PUSH2 0x1260 JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 SHL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP DUP2 TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x109B DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1269 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x10C5 PUSH2 0xEE3 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BC0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1123 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1120 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x119C JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1153 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1158 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1194 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x80 PUSH1 0x40 MLOAD ADD SWAP1 POP DUP1 PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP JUMPDEST DUP1 ISZERO PUSH2 0x124C JUMPI PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP PUSH2 0x122C JUMP JUMPDEST POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 SUB SWAP3 POP DUP1 DUP4 MSTORE POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1273 DUP4 DUP4 PUSH2 0x1306 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0x1301 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 DUP4 DUP3 SUB SWAP1 POP JUMPDEST PUSH2 0x12B3 PUSH1 0x0 DUP7 DUP4 DUP1 PUSH1 0x1 ADD SWAP5 POP DUP7 PUSH2 0x109F JUMP JUMPDEST PUSH2 0x12E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x12A0 JUMPI DUP2 PUSH1 0x0 SLOAD EQ PUSH2 0x12FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1372 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2E07630000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 SUB PUSH2 0x13AC JUMPI PUSH1 0x40 MLOAD PUSH32 0xB562E8DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13B9 PUSH1 0x0 DUP5 DUP4 DUP6 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x40 PUSH1 0x1 SWAP1 SHL OR DUP3 MUL PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1430 DUP4 PUSH2 0x1421 PUSH1 0x0 DUP7 PUSH1 0x0 PUSH2 0x1028 JUMP JUMPDEST PUSH2 0x142A DUP6 PUSH2 0x14D8 JUMP JUMPDEST OR PUSH2 0x1050 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP4 DUP4 ADD SWAP1 POP JUMPDEST DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 DUP3 LT PUSH2 0x1454 JUMPI DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x14D3 PUSH1 0x0 DUP5 DUP4 DUP6 PUSH2 0x107B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH1 0xE1 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1531 DUP2 PUSH2 0x14FC JUMP JUMPDEST DUP2 EQ PUSH2 0x153C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x154E DUP2 PUSH2 0x1528 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x156A JUMPI PUSH2 0x1569 PUSH2 0x14F2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1578 DUP5 DUP3 DUP6 ADD PUSH2 0x153F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1596 DUP2 PUSH2 0x1581 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15B1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x158D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15F1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15D6 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1600 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1622 DUP3 PUSH2 0x15B7 JUMP JUMPDEST PUSH2 0x162C DUP2 DUP6 PUSH2 0x15C2 JUMP JUMPDEST SWAP4 POP PUSH2 0x163C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0x1645 DUP2 PUSH2 0x1606 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x166A DUP2 DUP5 PUSH2 0x1617 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1685 DUP2 PUSH2 0x1672 JUMP JUMPDEST DUP2 EQ PUSH2 0x1690 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16A2 DUP2 PUSH2 0x167C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16BE JUMPI PUSH2 0x16BD PUSH2 0x14F2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16CC DUP5 DUP3 DUP6 ADD PUSH2 0x1693 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1700 DUP3 PUSH2 0x16D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1710 DUP2 PUSH2 0x16F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x172B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1707 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x173A DUP2 PUSH2 0x16F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1757 DUP2 PUSH2 0x1731 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1774 JUMPI PUSH2 0x1773 PUSH2 0x14F2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1782 DUP6 DUP3 DUP7 ADD PUSH2 0x1748 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1793 DUP6 DUP3 DUP7 ADD PUSH2 0x1693 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x17A6 DUP2 PUSH2 0x1672 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17C1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x179D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17E0 JUMPI PUSH2 0x17DF PUSH2 0x14F2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17EE DUP7 DUP3 DUP8 ADD PUSH2 0x1748 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x17FF DUP7 DUP3 DUP8 ADD PUSH2 0x1748 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1810 DUP7 DUP3 DUP8 ADD PUSH2 0x1693 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1830 JUMPI PUSH2 0x182F PUSH2 0x14F2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x183E DUP5 DUP3 DUP6 ADD PUSH2 0x1748 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1850 DUP2 PUSH2 0x1581 JUMP JUMPDEST DUP2 EQ PUSH2 0x185B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x186D DUP2 PUSH2 0x1847 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x188A JUMPI PUSH2 0x1889 PUSH2 0x14F2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1898 DUP6 DUP3 DUP7 ADD PUSH2 0x1748 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18A9 DUP6 DUP3 DUP7 ADD PUSH2 0x185E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x18F5 DUP3 PUSH2 0x1606 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1914 JUMPI PUSH2 0x1913 PUSH2 0x18BD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1927 PUSH2 0x14E8 JUMP JUMPDEST SWAP1 POP PUSH2 0x1933 DUP3 DUP3 PUSH2 0x18EC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1953 JUMPI PUSH2 0x1952 PUSH2 0x18BD JUMP JUMPDEST JUMPDEST PUSH2 0x195C DUP3 PUSH2 0x1606 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x198B PUSH2 0x1986 DUP5 PUSH2 0x1938 JUMP JUMPDEST PUSH2 0x191D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x19A7 JUMPI PUSH2 0x19A6 PUSH2 0x18B8 JUMP JUMPDEST JUMPDEST PUSH2 0x19B2 DUP5 DUP3 DUP6 PUSH2 0x1969 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19CF JUMPI PUSH2 0x19CE PUSH2 0x18B3 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x19DF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1978 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1A02 JUMPI PUSH2 0x1A01 PUSH2 0x14F2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A10 DUP8 DUP3 DUP9 ADD PUSH2 0x1748 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1A21 DUP8 DUP3 DUP9 ADD PUSH2 0x1748 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1A32 DUP8 DUP3 DUP9 ADD PUSH2 0x1693 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A53 JUMPI PUSH2 0x1A52 PUSH2 0x14F7 JUMP JUMPDEST JUMPDEST PUSH2 0x1A5F DUP8 DUP3 DUP9 ADD PUSH2 0x19BA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A82 JUMPI PUSH2 0x1A81 PUSH2 0x14F2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A90 DUP6 DUP3 DUP7 ADD PUSH2 0x1748 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AA1 DUP6 DUP3 DUP7 ADD PUSH2 0x1748 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1AF2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1B05 JUMPI PUSH2 0x1B04 PUSH2 0x1AAB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B21 DUP3 PUSH2 0x15B7 JUMP JUMPDEST PUSH2 0x1B2B DUP2 DUP6 PUSH2 0x1B0B JUMP JUMPDEST SWAP4 POP PUSH2 0x1B3B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15D3 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B53 DUP3 DUP6 PUSH2 0x1B16 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B5F DUP3 DUP5 PUSH2 0x1B16 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B92 DUP3 PUSH2 0x1B6B JUMP JUMPDEST PUSH2 0x1B9C DUP2 DUP6 PUSH2 0x1B76 JUMP JUMPDEST SWAP4 POP PUSH2 0x1BAC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0x1BB5 DUP2 PUSH2 0x1606 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1BD5 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1707 JUMP JUMPDEST PUSH2 0x1BE2 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1707 JUMP JUMPDEST PUSH2 0x1BEF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x179D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1C01 DUP2 DUP5 PUSH2 0x1B87 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C1B DUP2 PUSH2 0x1528 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C37 JUMPI PUSH2 0x1C36 PUSH2 0x14F2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C45 DUP5 DUP3 DUP6 ADD PUSH2 0x1C0C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT DUP16 0x21 SWAP5 SWAP1 CALLDATALOAD SWAP5 0xCB EXTCODESIZE 0x29 DUP15 DUP4 0xEA SELFDESTRUCT DUP2 0xE1 0xBA SLT 0xAD 0xB2 0xB9 0xAD ADD 0xFB PUSH24 0x8847ACC07F8CE064736F6C634300080F0033000000000000 ",
							"sourceMap": "66:244:0:-:0;;;96:42;;;;;;;;;;3986:154:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4060:5;4052;:13;;;;;;:::i;:::-;;4085:7;4075;:17;;;;;;:::i;:::-;;4118:15;:13;;;:15;;:::i;:::-;4102:13;:31;;;;3986:154;;66:244:0;;4276:90:1;4332:7;4276:90;:::o;7:99:3:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;66:244:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_1643": {
									"entryPoint": 4219,
									"id": 1643,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_617": {
									"entryPoint": 4591,
									"id": 617,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1630": {
									"entryPoint": 4130,
									"id": 1630,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_1527": {
									"entryPoint": 4255,
									"id": 1527,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_828": {
									"entryPoint": 3716,
									"id": 828,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_1617": {
									"entryPoint": 4704,
									"id": 1617,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedAddress_1149": {
									"entryPoint": 4028,
									"id": 1149,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isOwnerOrApproved_1163": {
									"entryPoint": 4062,
									"id": 1163,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_1019": {
									"entryPoint": 4870,
									"id": 1019,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSenderERC721A_1653": {
									"entryPoint": 3811,
									"id": 1653,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_1604": {
									"entryPoint": 4136,
									"id": 1604,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_nextInitializedFlag_627": {
									"entryPoint": 5336,
									"id": 627,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_packOwnershipData_525": {
									"entryPoint": 4176,
									"id": 525,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_405": {
									"entryPoint": 3824,
									"id": 405,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_843": {
									"entryPoint": 4225,
									"id": 843,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_905": {
									"entryPoint": 4713,
									"id": 905,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_startTokenId_165": {
									"entryPoint": 3819,
									"id": 165,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_toString_1663": {
									"entryPoint": 4614,
									"id": 1663,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@approve_671": {
									"entryPoint": 1381,
									"id": 671,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_260": {
									"entryPoint": 2577,
									"id": 260,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_693": {
									"entryPoint": 1257,
									"id": 693,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_745": {
									"entryPoint": 3568,
									"id": 745,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_24": {
									"entryPoint": 2907,
									"id": 24,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_555": {
									"entryPoint": 1111,
									"id": 555,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_545": {
									"entryPoint": 2559,
									"id": 545,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_764": {
									"entryPoint": 2527,
									"id": 764,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_802": {
									"entryPoint": 3295,
									"id": 802,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_727": {
									"entryPoint": 2920,
									"id": 727,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_234": {
									"entryPoint": 965,
									"id": 234,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_565": {
									"entryPoint": 2761,
									"id": 565,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_608": {
									"entryPoint": 3410,
									"id": 608,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_190": {
									"entryPoint": 1702,
									"id": 190,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1308": {
									"entryPoint": 1725,
									"id": 1308,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 6520,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 7180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 6586,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6763,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6087,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 6632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 7201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 7047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6983,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5910,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7104,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6060,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5352,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 6456,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 7019,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 7030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6923,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 6505,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 5587,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6827,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6333,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6323,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6328,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5367,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5362,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 5937,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5756,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13793:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:3",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:3",
														"type": ""
													}
												],
												"src": "334:149:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:3"
															},
															"nodeType": "YulIf",
															"src": "541:62:3"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:3",
														"type": ""
													}
												],
												"src": "489:120:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:3"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:3",
														"type": ""
													}
												],
												"src": "615:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:3"
															},
															"nodeType": "YulIf",
															"src": "833:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:3",
														"type": ""
													}
												],
												"src": "758:327:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:3",
														"type": ""
													}
												],
												"src": "1091:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:3",
														"type": ""
													}
												],
												"src": "1187:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:3",
														"type": ""
													}
												],
												"src": "1302:210:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:3",
														"type": ""
													}
												],
												"src": "1518:99:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:3",
														"type": ""
													}
												],
												"src": "1623:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1847:258:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1857:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1866:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1861:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1926:63:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1951:3:3"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1956:1:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1947:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1947:11:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1970:3:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1975:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1966:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1966:11:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1960:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:18:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1940:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1940:39:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1940:39:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1887:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1890:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1884:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1884:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1898:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1900:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1909:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1912:2:3",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1905:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1905:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1900:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1880:3:3",
																"statements": []
															},
															"src": "1876:113:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2023:76:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2073:3:3"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2078:6:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2069:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2069:16:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2087:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2062:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2062:27:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2062:27:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2004:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2007:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2001:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2001:13:3"
															},
															"nodeType": "YulIf",
															"src": "1998:101:3"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1829:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1834:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1839:6:3",
														"type": ""
													}
												],
												"src": "1798:307:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2159:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2169:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2187:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2194:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2183:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2183:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2203:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2199:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2199:7:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2179:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2179:28:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2169:6:3"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2142:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2152:6:3",
														"type": ""
													}
												],
												"src": "2111:102:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2311:272:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2321:53:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2368:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2335:32:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2335:39:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2325:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2383:78:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2449:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2454:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2390:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2390:71:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2496:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2503:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2492:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2492:16:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2510:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2515:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2470:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2470:52:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2470:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2531:46:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2542:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2569:6:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2547:21:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2547:29:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2538:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2538:39:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2292:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2299:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2307:3:3",
														"type": ""
													}
												],
												"src": "2219:364:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2707:195:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2717:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2729:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2740:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2725:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2725:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2717:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2764:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2775:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2760:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2760:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2783:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2789:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2779:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2779:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2753:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2753:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2753:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2809:86:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2881:6:3"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2890:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2817:63:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2817:78:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2809:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2679:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2691:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2702:4:3",
														"type": ""
													}
												],
												"src": "2589:313:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2953:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2963:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2974:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2963:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2935:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2945:7:3",
														"type": ""
													}
												],
												"src": "2908:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3034:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3091:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3100:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3103:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3093:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3093:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3093:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3057:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3082:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3064:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3064:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3054:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3054:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3047:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3047:43:3"
															},
															"nodeType": "YulIf",
															"src": "3044:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3027:5:3",
														"type": ""
													}
												],
												"src": "2991:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3171:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3181:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3203:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3190:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3190:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3181:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3246:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3219:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3219:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3219:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3149:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3157:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3165:5:3",
														"type": ""
													}
												],
												"src": "3119:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3330:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3376:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3378:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3378:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3378:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3351:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3360:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3347:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3347:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3372:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3343:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3343:32:3"
															},
															"nodeType": "YulIf",
															"src": "3340:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "3469:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3484:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3498:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3488:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3513:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3548:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3559:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3544:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3544:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3568:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3523:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3523:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3513:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3300:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3311:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3323:6:3",
														"type": ""
													}
												],
												"src": "3264:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3644:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3654:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3669:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3676:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3665:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3665:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3654:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3626:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3636:7:3",
														"type": ""
													}
												],
												"src": "3599:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3776:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3786:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3815:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3797:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3797:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3786:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3758:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3768:7:3",
														"type": ""
													}
												],
												"src": "3731:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3915:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3938:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3920:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3920:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3908:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3908:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3908:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3886:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3893:3:3",
														"type": ""
													}
												],
												"src": "3833:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4055:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4065:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4077:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4088:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4073:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4073:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4065:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4145:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4158:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4169:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4154:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4154:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4101:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4101:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4101:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4027:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4039:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4050:4:3",
														"type": ""
													}
												],
												"src": "3957:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4228:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4285:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4294:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4297:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4287:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4287:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4287:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4251:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4276:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4258:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4258:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4248:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4248:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4241:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4241:43:3"
															},
															"nodeType": "YulIf",
															"src": "4238:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4221:5:3",
														"type": ""
													}
												],
												"src": "4185:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4365:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4375:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4397:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4384:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4384:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4375:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4440:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4413:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4413:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4413:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4343:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4351:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4359:5:3",
														"type": ""
													}
												],
												"src": "4313:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4541:391:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4587:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4589:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4589:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4589:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4562:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4571:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4558:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4558:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4583:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4554:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4554:32:3"
															},
															"nodeType": "YulIf",
															"src": "4551:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "4680:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4695:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4709:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4699:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4724:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4759:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4770:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4755:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4755:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4779:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4734:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4734:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4724:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4807:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4822:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4836:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4826:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4852:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4887:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4898:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4883:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4883:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4907:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4862:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4862:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4852:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4503:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4514:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4526:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4534:6:3",
														"type": ""
													}
												],
												"src": "4458:474:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5003:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5020:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5043:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5025:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5025:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5013:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5013:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5013:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4991:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4998:3:3",
														"type": ""
													}
												],
												"src": "4938:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5160:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5170:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5182:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5193:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5178:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5178:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5170:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5250:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5263:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5274:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5259:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5259:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5206:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5206:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5206:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5132:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5144:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5155:4:3",
														"type": ""
													}
												],
												"src": "5062:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5390:519:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5436:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5438:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5438:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5438:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5411:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5420:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5407:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5407:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5432:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5403:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5403:32:3"
															},
															"nodeType": "YulIf",
															"src": "5400:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "5529:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5544:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5558:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5548:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5573:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5608:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5619:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5604:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5604:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5628:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5583:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5583:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5573:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5656:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5671:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5685:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5675:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5701:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5736:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5747:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5732:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5732:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5756:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5711:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5711:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5701:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5784:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5799:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5813:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5803:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5829:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5864:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5875:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5860:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5860:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5884:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5839:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5839:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5829:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5344:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5355:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5367:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5375:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5383:6:3",
														"type": ""
													}
												],
												"src": "5290:619:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5981:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6027:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6029:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6029:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6029:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6002:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6011:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5998:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5998:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6023:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5994:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5994:32:3"
															},
															"nodeType": "YulIf",
															"src": "5991:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "6120:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6135:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6149:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6139:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6164:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6199:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6210:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6195:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6195:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6219:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6174:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6174:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6164:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5951:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5962:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5974:6:3",
														"type": ""
													}
												],
												"src": "5915:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6290:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6344:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6353:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6356:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6346:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6346:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6346:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6313:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6335:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6320:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6320:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6310:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6310:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6303:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6303:40:3"
															},
															"nodeType": "YulIf",
															"src": "6300:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6283:5:3",
														"type": ""
													}
												],
												"src": "6250:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6421:84:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6431:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6453:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6440:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6440:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6431:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6493:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6469:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6469:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6469:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6399:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6407:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6415:5:3",
														"type": ""
													}
												],
												"src": "6372:133:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6591:388:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6637:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6639:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6639:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6639:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6612:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6621:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6608:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6608:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6633:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6604:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6604:32:3"
															},
															"nodeType": "YulIf",
															"src": "6601:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "6730:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6745:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6759:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6749:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6774:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6809:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6820:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6805:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6805:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6829:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6784:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6784:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6774:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6857:115:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6872:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6886:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6876:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6902:60:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6934:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6945:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6930:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6930:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6954:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6912:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6912:50:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6902:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6553:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6564:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6576:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6584:6:3",
														"type": ""
													}
												],
												"src": "6511:468:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7074:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7091:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7094:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7084:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7084:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7084:12:3"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "6985:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7197:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7214:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7217:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7207:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7207:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7207:12:3"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7108:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7259:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7276:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7279:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7269:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7269:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7269:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7373:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7376:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7366:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7366:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7366:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7397:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7400:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7390:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7390:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7390:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7231:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7460:238:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7470:58:3",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7492:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7522:4:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7500:21:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7500:27:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7488:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7488:40:3"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7474:10:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7639:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7641:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7641:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7641:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7582:10:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7594:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7579:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7579:34:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7618:10:3"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7630:6:3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7615:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7615:22:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7576:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7576:62:3"
															},
															"nodeType": "YulIf",
															"src": "7573:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7677:2:3",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7681:10:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7670:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7670:22:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7670:22:3"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7446:6:3",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7454:4:3",
														"type": ""
													}
												],
												"src": "7417:281:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7745:88:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7755:30:3",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "7765:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7765:20:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7755:6:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7814:6:3"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7822:4:3"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7794:19:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7794:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7794:33:3"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7729:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7738:6:3",
														"type": ""
													}
												],
												"src": "7704:129:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7905:241:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8010:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8012:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8012:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8012:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7982:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7990:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7979:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7979:30:3"
															},
															"nodeType": "YulIf",
															"src": "7976:56:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8042:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8072:6:3"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "8050:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8050:29:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8042:4:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8116:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8128:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8134:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8124:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8124:15:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8116:4:3"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7889:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7900:4:3",
														"type": ""
													}
												],
												"src": "7839:307:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8203:103:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8226:3:3"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8231:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8236:6:3"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8213:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8213:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8213:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8284:3:3"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8289:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8280:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8280:16:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8298:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8273:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8273:27:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8273:27:3"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8185:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8190:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8195:6:3",
														"type": ""
													}
												],
												"src": "8152:154:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8395:327:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8405:74:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8471:6:3"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8430:40:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8430:48:3"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8414:15:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8414:65:3"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8405:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8495:5:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8502:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8488:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8488:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8488:21:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8518:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8533:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8540:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8529:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8529:16:3"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8522:3:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8583:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8585:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8585:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8585:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8564:3:3"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8569:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8560:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8560:16:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8578:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8557:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8557:25:3"
															},
															"nodeType": "YulIf",
															"src": "8554:112:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8699:3:3"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8704:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8709:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8675:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8675:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8675:41:3"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8368:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8373:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8381:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8389:5:3",
														"type": ""
													}
												],
												"src": "8312:410:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8802:277:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8851:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8853:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8853:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8853:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8830:6:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8838:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8826:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8826:17:3"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8845:3:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8822:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8822:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8815:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8815:35:3"
															},
															"nodeType": "YulIf",
															"src": "8812:122:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8943:34:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8970:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8957:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8957:20:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8947:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8986:87:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9046:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9054:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9042:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9042:17:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9061:6:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9069:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8995:46:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8995:78:3"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8986:5:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8780:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8788:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8796:5:3",
														"type": ""
													}
												],
												"src": "8741:338:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9211:817:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9258:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9260:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9260:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9260:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9232:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9241:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9228:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9228:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9253:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9224:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9224:33:3"
															},
															"nodeType": "YulIf",
															"src": "9221:120:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "9351:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9366:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9380:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9370:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9395:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9430:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9441:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9426:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9426:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9450:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9405:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9405:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9395:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9478:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9493:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9507:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9497:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9523:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9558:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9569:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9554:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9554:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9578:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9533:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9533:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9523:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9606:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9621:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9635:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9625:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9651:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9686:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9697:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9682:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9682:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9706:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9661:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9661:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9651:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9734:287:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9749:46:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9780:9:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9791:2:3",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9776:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9776:18:3"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9763:12:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9763:32:3"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9753:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9842:83:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9844:77:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9844:79:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9844:79:3"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9814:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9822:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9811:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9811:30:3"
																	},
																	"nodeType": "YulIf",
																	"src": "9808:117:3"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9939:72:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9983:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9994:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9979:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9979:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10003:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9949:29:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9949:62:3"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9939:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9157:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9168:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9180:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9188:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9196:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9204:6:3",
														"type": ""
													}
												],
												"src": "9085:943:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10117:391:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10163:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10165:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10165:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10165:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10138:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10147:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10134:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10134:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10159:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10130:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10130:32:3"
															},
															"nodeType": "YulIf",
															"src": "10127:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "10256:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10271:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10285:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10275:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10300:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10335:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10346:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10331:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10331:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10355:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10310:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10310:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10300:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10383:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10398:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10412:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10402:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10428:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10463:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10474:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10459:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10459:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10483:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10438:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10438:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10428:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10079:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10090:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10102:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10110:6:3",
														"type": ""
													}
												],
												"src": "10034:474:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10542:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10559:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10562:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10552:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10552:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10552:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10656:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10659:4:3",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10649:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10649:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10649:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10680:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10683:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10673:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10673:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10673:15:3"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "10514:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10751:269:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10761:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10775:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10781:1:3",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10771:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10771:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10761:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10792:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10822:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10828:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10818:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10818:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10796:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10869:51:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10883:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "10897:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10905:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10893:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10893:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10883:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10849:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10842:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10842:26:3"
															},
															"nodeType": "YulIf",
															"src": "10839:81:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10972:42:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "10986:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10986:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10986:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10936:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10959:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10967:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10956:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10956:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10933:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10933:38:3"
															},
															"nodeType": "YulIf",
															"src": "10930:84:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10735:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10744:6:3",
														"type": ""
													}
												],
												"src": "10700:320:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11140:34:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11150:18:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11165:3:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11150:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11112:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11117:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11128:11:3",
														"type": ""
													}
												],
												"src": "11026:148:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11290:267:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11300:53:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11347:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11314:32:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11314:39:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11304:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11362:96:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11446:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11451:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11369:76:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11369:89:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11362:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11493:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11500:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11489:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11489:16:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11507:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11512:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11467:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11467:52:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11467:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11528:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11539:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11544:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11535:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11535:16:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11528:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11271:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11278:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11286:3:3",
														"type": ""
													}
												],
												"src": "11180:377:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11747:251:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11758:102:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11847:6:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11856:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11765:81:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11765:95:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11758:3:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11870:102:3",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11959:6:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11968:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11877:81:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11877:95:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11870:3:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11982:10:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11989:3:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11982:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11718:3:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11724:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11732:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11743:3:3",
														"type": ""
													}
												],
												"src": "11563:435:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12062:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12073:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12089:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12083:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12083:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12073:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12045:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12055:6:3",
														"type": ""
													}
												],
												"src": "12004:98:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12203:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12220:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12225:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12213:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12213:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12213:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12241:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12260:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12265:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12256:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12256:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "12241:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12175:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12180:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "12191:11:3",
														"type": ""
													}
												],
												"src": "12108:168:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12372:270:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12382:52:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12428:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12396:31:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12396:38:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12386:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12443:77:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12508:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12513:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12450:57:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12450:70:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12443:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12555:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12562:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12551:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12551:16:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12569:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12574:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "12529:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12529:52:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12529:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12590:46:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12601:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12628:6:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "12606:21:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12606:29:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12597:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12597:39:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12590:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12353:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12360:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12368:3:3",
														"type": ""
													}
												],
												"src": "12282:360:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12848:440:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12858:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12870:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12881:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12866:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12866:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12858:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12939:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12952:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12963:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12948:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12948:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12895:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12895:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12895:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13020:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13033:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13044:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13029:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13029:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12976:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12976:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12976:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13102:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13115:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13126:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13111:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13111:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13058:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13058:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13058:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13151:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13162:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13147:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13147:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13171:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13177:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13167:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13167:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13140:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13140:48:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13140:48:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13197:84:3",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "13267:6:3"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13276:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13205:61:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13205:76:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13197:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12796:9:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12808:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12816:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12824:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12832:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12843:4:3",
														"type": ""
													}
												],
												"src": "12648:640:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13356:79:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13366:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "13381:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13375:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13375:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "13366:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13423:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "13397:25:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13397:32:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13397:32:3"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "13334:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13342:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13350:5:3",
														"type": ""
													}
												],
												"src": "13294:141:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13517:273:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13563:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "13565:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13565:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13565:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13538:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13547:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13534:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13534:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13559:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13530:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13530:32:3"
															},
															"nodeType": "YulIf",
															"src": "13527:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "13656:127:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13671:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13685:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13675:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13700:73:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13745:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13756:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13741:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13741:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13765:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "13710:30:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13710:63:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "13700:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13487:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13498:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13510:6:3",
														"type": ""
													}
												],
												"src": "13441:349:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100e85760003560e01c80636352211e1161008a578063a22cb46511610059578063a22cb465146102f9578063b88d4fde14610322578063c87b56dd1461034b578063e985e9c514610388576100e8565b80636352211e1461023857806370a082311461027557806395d89b41146102b2578063a0712d68146102dd576100e8565b8063095ea7b3116100c6578063095ea7b31461019257806318160ddd146101bb57806323b872dd146101e657806342842e0e1461020f576100e8565b806301ffc9a7146100ed57806306fdde031461012a578063081812fc14610155575b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f9190611554565b6103c5565b604051610121919061159c565b60405180910390f35b34801561013657600080fd5b5061013f610457565b60405161014c9190611650565b60405180910390f35b34801561016157600080fd5b5061017c600480360381019061017791906116a8565b6104e9565b6040516101899190611716565b60405180910390f35b34801561019e57600080fd5b506101b960048036038101906101b4919061175d565b610565565b005b3480156101c757600080fd5b506101d06106a6565b6040516101dd91906117ac565b60405180910390f35b3480156101f257600080fd5b5061020d600480360381019061020891906117c7565b6106bd565b005b34801561021b57600080fd5b50610236600480360381019061023191906117c7565b6109df565b005b34801561024457600080fd5b5061025f600480360381019061025a91906116a8565b6109ff565b60405161026c9190611716565b60405180910390f35b34801561028157600080fd5b5061029c6004803603810190610297919061181a565b610a11565b6040516102a991906117ac565b60405180910390f35b3480156102be57600080fd5b506102c7610ac9565b6040516102d49190611650565b60405180910390f35b6102f760048036038101906102f291906116a8565b610b5b565b005b34801561030557600080fd5b50610320600480360381019061031b9190611873565b610b68565b005b34801561032e57600080fd5b50610349600480360381019061034491906119e8565b610cdf565b005b34801561035757600080fd5b50610372600480360381019061036d91906116a8565b610d52565b60405161037f9190611650565b60405180910390f35b34801561039457600080fd5b506103af60048036038101906103aa9190611a6b565b610df0565b6040516103bc919061159c565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061042057506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104505750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606002805461046690611ada565b80601f016020809104026020016040519081016040528092919081815260200182805461049290611ada565b80156104df5780601f106104b4576101008083540402835291602001916104df565b820191906000526020600020905b8154815290600101906020018083116104c257829003601f168201915b5050505050905090565b60006104f482610e84565b61052a576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610570826109ff565b90508073ffffffffffffffffffffffffffffffffffffffff16610591610ee3565b73ffffffffffffffffffffffffffffffffffffffff16146105f4576105bd816105b8610ee3565b610df0565b6105f3576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826006600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60006106b0610eeb565b6001546000540303905090565b60006106c882610ef0565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461072f576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008061073b84610fbc565b91509150610751818761074c610ee3565b610fde565b61079d5761076686610761610ee3565b610df0565b61079c576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610803576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108108686866001611022565b801561081b57600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154600101919050819055506108e9856108c5888887611028565b7c020000000000000000000000000000000000000000000000000000000017611050565b600460008681526020019081526020016000208190555060007c020000000000000000000000000000000000000000000000000000000084160361096f576000600185019050600060046000838152602001908152602001600020540361096d57600054811461096c578360046000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46109d7868686600161107b565b505050505050565b6109fa83838360405180602001604052806000815250610cdf565b505050565b6000610a0a82610ef0565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a78576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b606060038054610ad890611ada565b80601f0160208091040260200160405190810160405280929190818152602001828054610b0490611ada565b8015610b515780601f10610b2657610100808354040283529160200191610b51565b820191906000526020600020905b815481529060010190602001808311610b3457829003601f168201915b5050505050905090565b610b653382611081565b50565b610b70610ee3565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bd4576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060076000610be1610ee3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610c8e610ee3565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610cd3919061159c565b60405180910390a35050565b610cea8484846106bd565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610d4c57610d158484848461109f565b610d4b576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6060610d5d82610e84565b610d93576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610d9d6111ef565b90506000815103610dbd5760405180602001604052806000815250610de8565b80610dc784611206565b604051602001610dd8929190611b47565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081610e8f610eeb565b11158015610e9e575060005482105b8015610edc575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b600033905090565b600090565b60008082905080610eff610eeb565b11610f8557600054811015610f845760006004600083815260200190815260200160002054905060007c0100000000000000000000000000000000000000000000000000000000821603610f82575b60008103610f78576004600083600190039350838152602001908152602001600020549050610f4e565b8092505050610fb7565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000806000600690508360005280602052604060002092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e861103f868684611260565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b61109b828260405180602001604052806000815250611269565b5050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a026110c5610ee3565b8786866040518563ffffffff1660e01b81526004016110e79493929190611bc0565b6020604051808303816000875af192505050801561112357506040513d601f19601f820116820180604052508101906111209190611c21565b60015b61119c573d8060008114611153576040519150601f19603f3d011682016040523d82523d6000602084013e611158565b606091505b506000815103611194576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b60606080604051019050806040528082600183039250600a81066030018353600a810490505b801561124c57600183039250600a81066030018353600a8104905061122c565b508181036020830392508083525050919050565b60009392505050565b6112738383611306565b60008373ffffffffffffffffffffffffffffffffffffffff163b1461130157600080549050600083820390505b6112b3600086838060010194508661109f565b6112e9576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8181106112a05781600054146112fe57600080fd5b50505b505050565b600080549050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611372576040517f2e07630000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082036113ac576040517fb562e8dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6113b96000848385611022565b600160406001901b178202600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550611430836114216000866000611028565b61142a856114d8565b17611050565b60046000838152602001908152602001600020819055506000819050600083830190505b818060010192508573ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4808210611454578060008190555050506114d3600084838561107b565b505050565b60006001821460e11b9050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611531816114fc565b811461153c57600080fd5b50565b60008135905061154e81611528565b92915050565b60006020828403121561156a576115696114f2565b5b60006115788482850161153f565b91505092915050565b60008115159050919050565b61159681611581565b82525050565b60006020820190506115b1600083018461158d565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156115f15780820151818401526020810190506115d6565b83811115611600576000848401525b50505050565b6000601f19601f8301169050919050565b6000611622826115b7565b61162c81856115c2565b935061163c8185602086016115d3565b61164581611606565b840191505092915050565b6000602082019050818103600083015261166a8184611617565b905092915050565b6000819050919050565b61168581611672565b811461169057600080fd5b50565b6000813590506116a28161167c565b92915050565b6000602082840312156116be576116bd6114f2565b5b60006116cc84828501611693565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611700826116d5565b9050919050565b611710816116f5565b82525050565b600060208201905061172b6000830184611707565b92915050565b61173a816116f5565b811461174557600080fd5b50565b60008135905061175781611731565b92915050565b60008060408385031215611774576117736114f2565b5b600061178285828601611748565b925050602061179385828601611693565b9150509250929050565b6117a681611672565b82525050565b60006020820190506117c1600083018461179d565b92915050565b6000806000606084860312156117e0576117df6114f2565b5b60006117ee86828701611748565b93505060206117ff86828701611748565b925050604061181086828701611693565b9150509250925092565b6000602082840312156118305761182f6114f2565b5b600061183e84828501611748565b91505092915050565b61185081611581565b811461185b57600080fd5b50565b60008135905061186d81611847565b92915050565b6000806040838503121561188a576118896114f2565b5b600061189885828601611748565b92505060206118a98582860161185e565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6118f582611606565b810181811067ffffffffffffffff82111715611914576119136118bd565b5b80604052505050565b60006119276114e8565b905061193382826118ec565b919050565b600067ffffffffffffffff821115611953576119526118bd565b5b61195c82611606565b9050602081019050919050565b82818337600083830152505050565b600061198b61198684611938565b61191d565b9050828152602081018484840111156119a7576119a66118b8565b5b6119b2848285611969565b509392505050565b600082601f8301126119cf576119ce6118b3565b5b81356119df848260208601611978565b91505092915050565b60008060008060808587031215611a0257611a016114f2565b5b6000611a1087828801611748565b9450506020611a2187828801611748565b9350506040611a3287828801611693565b925050606085013567ffffffffffffffff811115611a5357611a526114f7565b5b611a5f878288016119ba565b91505092959194509250565b60008060408385031215611a8257611a816114f2565b5b6000611a9085828601611748565b9250506020611aa185828601611748565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611af257607f821691505b602082108103611b0557611b04611aab565b5b50919050565b600081905092915050565b6000611b21826115b7565b611b2b8185611b0b565b9350611b3b8185602086016115d3565b80840191505092915050565b6000611b538285611b16565b9150611b5f8284611b16565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000611b9282611b6b565b611b9c8185611b76565b9350611bac8185602086016115d3565b611bb581611606565b840191505092915050565b6000608082019050611bd56000830187611707565b611be26020830186611707565b611bef604083018561179d565b8181036060830152611c018184611b87565b905095945050505050565b600081519050611c1b81611528565b92915050565b600060208284031215611c3757611c366114f2565b5b6000611c4584828501611c0c565b9150509291505056fea2646970667358221220ff8f2194903594cb3b298e83eaff81e1ba12adb2b9ad01fb778847acc07f8ce064736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x388 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x2DD JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x20F JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x155 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x1554 JUMP JUMPDEST PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x159C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x457 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x1650 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x16A8 JUMP JUMPDEST PUSH2 0x4E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x175D JUMP JUMPDEST PUSH2 0x565 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x6A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x17C7 JUMP JUMPDEST PUSH2 0x6BD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x236 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x17C7 JUMP JUMPDEST PUSH2 0x9DF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x16A8 JUMP JUMPDEST PUSH2 0x9FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x181A JUMP JUMPDEST PUSH2 0xA11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C7 PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x1650 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x16A8 JUMP JUMPDEST PUSH2 0xB5B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x320 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x1873 JUMP JUMPDEST PUSH2 0xB68 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x19E8 JUMP JUMPDEST PUSH2 0xCDF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x372 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x16A8 JUMP JUMPDEST PUSH2 0xD52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x1650 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x1A6B JUMP JUMPDEST PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x159C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x420 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x450 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x466 SWAP1 PUSH2 0x1ADA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x492 SWAP1 PUSH2 0x1ADA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4DF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4DF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F4 DUP3 PUSH2 0xE84 JUMP JUMPDEST PUSH2 0x52A JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x570 DUP3 PUSH2 0x9FF JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x591 PUSH2 0xEE3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5F4 JUMPI PUSH2 0x5BD DUP2 PUSH2 0x5B8 PUSH2 0xEE3 JUMP JUMPDEST PUSH2 0xDF0 JUMP JUMPDEST PUSH2 0x5F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B0 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C8 DUP3 PUSH2 0xEF0 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x72F JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x73B DUP5 PUSH2 0xFBC JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x751 DUP2 DUP8 PUSH2 0x74C PUSH2 0xEE3 JUMP JUMPDEST PUSH2 0xFDE JUMP JUMPDEST PUSH2 0x79D JUMPI PUSH2 0x766 DUP7 PUSH2 0x761 PUSH2 0xEE3 JUMP JUMPDEST PUSH2 0xDF0 JUMP JUMPDEST PUSH2 0x79C JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x803 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x810 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0x1022 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x81B JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x8E9 DUP6 PUSH2 0x8C5 DUP9 DUP9 DUP8 PUSH2 0x1028 JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH2 0x1050 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND SUB PUSH2 0x96F JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x96D JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x96C JUMPI DUP4 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x9D7 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0x107B JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9FA DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xCDF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA0A DUP3 PUSH2 0xEF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0xAD8 SWAP1 PUSH2 0x1ADA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB04 SWAP1 PUSH2 0x1ADA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB51 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB26 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB51 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB34 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB65 CALLER DUP3 PUSH2 0x1081 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xB70 PUSH2 0xEE3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06307DB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0xBE1 PUSH2 0xEE3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC8E PUSH2 0xEE3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCD3 SWAP2 SWAP1 PUSH2 0x159C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xCEA DUP5 DUP5 DUP5 PUSH2 0x6BD JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0xD4C JUMPI PUSH2 0xD15 DUP5 DUP5 DUP5 DUP5 PUSH2 0x109F JUMP JUMPDEST PUSH2 0xD4B JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD5D DUP3 PUSH2 0xE84 JUMP JUMPDEST PUSH2 0xD93 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD9D PUSH2 0x11EF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xDBD JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xDE8 JUMP JUMPDEST DUP1 PUSH2 0xDC7 DUP5 PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDD8 SWAP3 SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xE8F PUSH2 0xEEB JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xE9E JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0xEDC JUMPI POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP DUP1 PUSH2 0xEFF PUSH2 0xEEB JUMP JUMPDEST GT PUSH2 0xF85 JUMPI PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0xF84 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND SUB PUSH2 0xF82 JUMPI JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0xF78 JUMPI PUSH1 0x4 PUSH1 0x0 DUP4 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0xF4E JUMP JUMPDEST DUP1 SWAP3 POP POP POP PUSH2 0xFB7 JUMP JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 SWAP1 POP DUP4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 POP DUP3 SLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 POP DUP4 DUP3 EQ DUP4 DUP4 EQ OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE8 DUP4 SWAP1 SHR SWAP1 POP PUSH1 0xE8 PUSH2 0x103F DUP7 DUP7 DUP5 PUSH2 0x1260 JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 SHL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP DUP2 TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x109B DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1269 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x10C5 PUSH2 0xEE3 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BC0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1123 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1120 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x119C JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1153 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1158 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1194 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x80 PUSH1 0x40 MLOAD ADD SWAP1 POP DUP1 PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP JUMPDEST DUP1 ISZERO PUSH2 0x124C JUMPI PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP PUSH2 0x122C JUMP JUMPDEST POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 SUB SWAP3 POP DUP1 DUP4 MSTORE POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1273 DUP4 DUP4 PUSH2 0x1306 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0x1301 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 DUP4 DUP3 SUB SWAP1 POP JUMPDEST PUSH2 0x12B3 PUSH1 0x0 DUP7 DUP4 DUP1 PUSH1 0x1 ADD SWAP5 POP DUP7 PUSH2 0x109F JUMP JUMPDEST PUSH2 0x12E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x12A0 JUMPI DUP2 PUSH1 0x0 SLOAD EQ PUSH2 0x12FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1372 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2E07630000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 SUB PUSH2 0x13AC JUMPI PUSH1 0x40 MLOAD PUSH32 0xB562E8DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13B9 PUSH1 0x0 DUP5 DUP4 DUP6 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x40 PUSH1 0x1 SWAP1 SHL OR DUP3 MUL PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1430 DUP4 PUSH2 0x1421 PUSH1 0x0 DUP7 PUSH1 0x0 PUSH2 0x1028 JUMP JUMPDEST PUSH2 0x142A DUP6 PUSH2 0x14D8 JUMP JUMPDEST OR PUSH2 0x1050 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP4 DUP4 ADD SWAP1 POP JUMPDEST DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 DUP3 LT PUSH2 0x1454 JUMPI DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x14D3 PUSH1 0x0 DUP5 DUP4 DUP6 PUSH2 0x107B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH1 0xE1 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1531 DUP2 PUSH2 0x14FC JUMP JUMPDEST DUP2 EQ PUSH2 0x153C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x154E DUP2 PUSH2 0x1528 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x156A JUMPI PUSH2 0x1569 PUSH2 0x14F2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1578 DUP5 DUP3 DUP6 ADD PUSH2 0x153F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1596 DUP2 PUSH2 0x1581 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15B1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x158D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15F1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15D6 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1600 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1622 DUP3 PUSH2 0x15B7 JUMP JUMPDEST PUSH2 0x162C DUP2 DUP6 PUSH2 0x15C2 JUMP JUMPDEST SWAP4 POP PUSH2 0x163C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0x1645 DUP2 PUSH2 0x1606 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x166A DUP2 DUP5 PUSH2 0x1617 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1685 DUP2 PUSH2 0x1672 JUMP JUMPDEST DUP2 EQ PUSH2 0x1690 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16A2 DUP2 PUSH2 0x167C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16BE JUMPI PUSH2 0x16BD PUSH2 0x14F2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16CC DUP5 DUP3 DUP6 ADD PUSH2 0x1693 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1700 DUP3 PUSH2 0x16D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1710 DUP2 PUSH2 0x16F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x172B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1707 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x173A DUP2 PUSH2 0x16F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1757 DUP2 PUSH2 0x1731 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1774 JUMPI PUSH2 0x1773 PUSH2 0x14F2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1782 DUP6 DUP3 DUP7 ADD PUSH2 0x1748 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1793 DUP6 DUP3 DUP7 ADD PUSH2 0x1693 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x17A6 DUP2 PUSH2 0x1672 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17C1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x179D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17E0 JUMPI PUSH2 0x17DF PUSH2 0x14F2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17EE DUP7 DUP3 DUP8 ADD PUSH2 0x1748 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x17FF DUP7 DUP3 DUP8 ADD PUSH2 0x1748 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1810 DUP7 DUP3 DUP8 ADD PUSH2 0x1693 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1830 JUMPI PUSH2 0x182F PUSH2 0x14F2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x183E DUP5 DUP3 DUP6 ADD PUSH2 0x1748 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1850 DUP2 PUSH2 0x1581 JUMP JUMPDEST DUP2 EQ PUSH2 0x185B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x186D DUP2 PUSH2 0x1847 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x188A JUMPI PUSH2 0x1889 PUSH2 0x14F2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1898 DUP6 DUP3 DUP7 ADD PUSH2 0x1748 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18A9 DUP6 DUP3 DUP7 ADD PUSH2 0x185E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x18F5 DUP3 PUSH2 0x1606 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1914 JUMPI PUSH2 0x1913 PUSH2 0x18BD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1927 PUSH2 0x14E8 JUMP JUMPDEST SWAP1 POP PUSH2 0x1933 DUP3 DUP3 PUSH2 0x18EC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1953 JUMPI PUSH2 0x1952 PUSH2 0x18BD JUMP JUMPDEST JUMPDEST PUSH2 0x195C DUP3 PUSH2 0x1606 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x198B PUSH2 0x1986 DUP5 PUSH2 0x1938 JUMP JUMPDEST PUSH2 0x191D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x19A7 JUMPI PUSH2 0x19A6 PUSH2 0x18B8 JUMP JUMPDEST JUMPDEST PUSH2 0x19B2 DUP5 DUP3 DUP6 PUSH2 0x1969 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19CF JUMPI PUSH2 0x19CE PUSH2 0x18B3 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x19DF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1978 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1A02 JUMPI PUSH2 0x1A01 PUSH2 0x14F2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A10 DUP8 DUP3 DUP9 ADD PUSH2 0x1748 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1A21 DUP8 DUP3 DUP9 ADD PUSH2 0x1748 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1A32 DUP8 DUP3 DUP9 ADD PUSH2 0x1693 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A53 JUMPI PUSH2 0x1A52 PUSH2 0x14F7 JUMP JUMPDEST JUMPDEST PUSH2 0x1A5F DUP8 DUP3 DUP9 ADD PUSH2 0x19BA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A82 JUMPI PUSH2 0x1A81 PUSH2 0x14F2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A90 DUP6 DUP3 DUP7 ADD PUSH2 0x1748 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AA1 DUP6 DUP3 DUP7 ADD PUSH2 0x1748 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1AF2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1B05 JUMPI PUSH2 0x1B04 PUSH2 0x1AAB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B21 DUP3 PUSH2 0x15B7 JUMP JUMPDEST PUSH2 0x1B2B DUP2 DUP6 PUSH2 0x1B0B JUMP JUMPDEST SWAP4 POP PUSH2 0x1B3B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15D3 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B53 DUP3 DUP6 PUSH2 0x1B16 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B5F DUP3 DUP5 PUSH2 0x1B16 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B92 DUP3 PUSH2 0x1B6B JUMP JUMPDEST PUSH2 0x1B9C DUP2 DUP6 PUSH2 0x1B76 JUMP JUMPDEST SWAP4 POP PUSH2 0x1BAC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0x1BB5 DUP2 PUSH2 0x1606 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1BD5 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1707 JUMP JUMPDEST PUSH2 0x1BE2 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1707 JUMP JUMPDEST PUSH2 0x1BEF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x179D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1C01 DUP2 DUP5 PUSH2 0x1B87 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C1B DUP2 PUSH2 0x1528 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C37 JUMPI PUSH2 0x1C36 PUSH2 0x14F2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C45 DUP5 DUP3 DUP6 ADD PUSH2 0x1C0C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT DUP16 0x21 SWAP5 SWAP1 CALLDATALOAD SWAP5 0xCB EXTCODESIZE 0x29 DUP15 DUP4 0xEA SELFDESTRUCT DUP2 0xE1 0xBA SLT 0xAD 0xB2 0xB9 0xAD ADD 0xFB PUSH24 0x8847ACC07F8CE064736F6C634300080F0033000000000000 ",
							"sourceMap": "66:244:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5653:607:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11161:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13048:200;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12611:376;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4736:309;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22055:2739;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13912:179;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10957:142;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6319:221;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11323:102;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;142:166:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13315:303:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14157:388;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11491:313;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13684:162;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5653:607;5738:4;6048:10;6033:25;;:11;:25;;;;:101;;;;6124:10;6109:25;;:11;:25;;;;6033:101;:177;;;;6200:10;6185:25;;:11;:25;;;;6033:177;6014:196;;5653:607;;;:::o;11161:98::-;11215:13;11247:5;11240:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11161:98;:::o;13048:200::-;13116:7;13140:16;13148:7;13140;:16::i;:::-;13135:64;;13165:34;;;;;;;;;;;;;;13135:64;13217:15;:24;13233:7;13217:24;;;;;;;;;;;;;;;;;;;;;13210:31;;13048:200;;;:::o;12611:376::-;12683:13;12699:16;12707:7;12699;:16::i;:::-;12683:32;;12753:5;12730:28;;:19;:17;:19::i;:::-;:28;;;12726:172;;12777:44;12794:5;12801:19;:17;:19::i;:::-;12777:16;:44::i;:::-;12772:126;;12848:35;;;;;;;;;;;;;;12772:126;12726:172;12935:2;12908:15;:24;12924:7;12908:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12972:7;12968:2;12952:28;;12961:5;12952:28;;;;;;;;;;;;12673:314;12611:376;;:::o;4736:309::-;4789:7;5013:15;:13;:15::i;:::-;4998:12;;4982:13;;:28;:46;4975:53;;4736:309;:::o;22055:2739::-;22184:27;22214;22233:7;22214:18;:27::i;:::-;22184:57;;22297:4;22256:45;;22272:19;22256:45;;;22252:86;;22310:28;;;;;;;;;;;;;;22252:86;22350:27;22379:23;22406:28;22426:7;22406:19;:28::i;:::-;22349:85;;;;22531:62;22550:15;22567:4;22573:19;:17;:19::i;:::-;22531:18;:62::i;:::-;22526:173;;22612:43;22629:4;22635:19;:17;:19::i;:::-;22612:16;:43::i;:::-;22607:92;;22664:35;;;;;;;;;;;;;;22607:92;22526:173;22728:1;22714:16;;:2;:16;;;22710:52;;22739:23;;;;;;;;;;;;;;22710:52;22773:43;22795:4;22801:2;22805:7;22814:1;22773:21;:43::i;:::-;22905:15;22902:157;;;23043:1;23022:19;23015:30;22902:157;23429:18;:24;23448:4;23429:24;;;;;;;;;;;;;;;;23427:26;;;;;;;;;;;;23497:18;:22;23516:2;23497:22;;;;;;;;;;;;;;;;23495:24;;;;;;;;;;;23812:142;23848:2;23895:45;23910:4;23916:2;23920:19;23895:14;:45::i;:::-;2046:8;23868:72;23812:18;:142::i;:::-;23783:17;:26;23801:7;23783:26;;;;;;;;;;;:171;;;;24121:1;2046:8;24071:19;:46;:51;24067:616;;24142:19;24174:1;24164:7;:11;24142:33;;24329:1;24295:17;:30;24313:11;24295:30;;;;;;;;;;;;:35;24291:378;;24431:13;;24416:11;:28;24412:239;;24609:19;24576:17;:30;24594:11;24576:30;;;;;;;;;;;:52;;;;24412:239;24291:378;24124:559;24067:616;24727:7;24723:2;24708:27;;24717:4;24708:27;;;;;;;;;;;;24745:42;24766:4;24772:2;24776:7;24785:1;24745:20;:42::i;:::-;22174:2620;;;22055:2739;;;:::o;13912:179::-;14045:39;14062:4;14068:2;14072:7;14045:39;;;;;;;;;;;;:16;:39::i;:::-;13912:179;;;:::o;10957:142::-;11021:7;11063:27;11082:7;11063:18;:27::i;:::-;11040:52;;10957:142;;;:::o;6319:221::-;6383:7;6423:1;6406:19;;:5;:19;;;6402:60;;6434:28;;;;;;;;;;;;;;6402:60;1022:13;6479:18;:25;6498:5;6479:25;;;;;;;;;;;;;;;;:54;6472:61;;6319:221;;;:::o;11323:102::-;11379:13;11411:7;11404:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11323:102;:::o;142:166:0:-;272:31;282:10;294:8;272:9;:31::i;:::-;142:166;:::o;13315:303:1:-;13425:19;:17;:19::i;:::-;13413:31;;:8;:31;;;13409:61;;13453:17;;;;;;;;;;;;;;13409:61;13533:8;13481:18;:39;13500:19;:17;:19::i;:::-;13481:39;;;;;;;;;;;;;;;:49;13521:8;13481:49;;;;;;;;;;;;;;;;:60;;;;;;;;;;;;;;;;;;13592:8;13556:55;;13571:19;:17;:19::i;:::-;13556:55;;;13602:8;13556:55;;;;;;:::i;:::-;;;;;;;;13315:303;;:::o;14157:388::-;14318:31;14331:4;14337:2;14341:7;14318:12;:31::i;:::-;14381:1;14363:2;:14;;;:19;14359:180;;14401:56;14432:4;14438:2;14442:7;14451:5;14401:30;:56::i;:::-;14396:143;;14484:40;;;;;;;;;;;;;;14396:143;14359:180;14157:388;;;;:::o;11491:313::-;11564:13;11594:16;11602:7;11594;:16::i;:::-;11589:59;;11619:29;;;;;;;;;;;;;;11589:59;11659:21;11683:10;:8;:10::i;:::-;11659:34;;11735:1;11716:7;11710:21;:26;:87;;;;;;;;;;;;;;;;;11763:7;11772:18;11782:7;11772:9;:18::i;:::-;11746:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11710:87;11703:94;;;11491:313;;;:::o;13684:162::-;13781:4;13804:18;:25;13823:5;13804:25;;;;;;;;;;;;;;;:35;13830:8;13804:35;;;;;;;;;;;;;;;;;;;;;;;;;13797:42;;13684:162;;;;:::o;14791:268::-;14848:4;14902:7;14883:15;:13;:15::i;:::-;:26;;:65;;;;;14935:13;;14925:7;:23;14883:65;:150;;;;;15032:1;1774:8;14985:17;:26;15003:7;14985:26;;;;;;;;;;;;:43;:48;14883:150;14864:169;;14791:268;;;:::o;32874:103::-;32934:7;32960:10;32953:17;;32874:103;:::o;4276:90::-;4332:7;4276:90;:::o;7949:1105::-;8016:7;8035:12;8050:7;8035:22;;8115:4;8096:15;:13;:15::i;:::-;:23;8092:898;;8148:13;;8141:4;:20;8137:853;;;8185:14;8202:17;:23;8220:4;8202:23;;;;;;;;;;;;8185:40;;8316:1;1774:8;8289:6;:23;:28;8285:687;;8800:111;8817:1;8807:6;:11;8800:111;;8859:17;:25;8877:6;;;;;;;8859:25;;;;;;;;;;;;8850:34;;8800:111;;;8943:6;8936:13;;;;;;8285:687;8163:827;8137:853;8092:898;9016:31;;;;;;;;;;;;;;7949:1105;;;;:::o;20436:637::-;20528:27;20557:23;20596:53;20652:15;20596:71;;20834:7;20828:4;20821:21;20868:22;20862:4;20855:36;20943:4;20937;20927:21;20904:44;;21037:19;21031:26;21012:45;;20774:293;20436:637;;;:::o;21181:632::-;21319:11;21478:15;21472:4;21468:26;21460:34;;21635:15;21624:9;21620:31;21607:44;;21780:15;21769:9;21766:30;21759:4;21748:9;21745:19;21742:55;21732:65;;21181:632;;;;;:::o;31742:154::-;;;;;:::o;30099:302::-;30230:7;30249:16;2166:3;30275:19;:40;;30249:67;;2166:3;30341:31;30352:4;30358:2;30362:9;30341:10;:31::i;:::-;30333:40;;:61;;30326:68;;;30099:302;;;;;:::o;10460:440::-;10540:14;10705:15;10698:5;10694:27;10685:36;;10877:5;10863:11;10839:22;10835:40;10832:51;10825:5;10822:62;10812:72;;10460:440;;;;:::o;32537:153::-;;;;;:::o;15138:102::-;15206:27;15216:2;15220:8;15206:27;;;;;;;;;;;;:9;:27::i;:::-;15138:102;;:::o;28649:697::-;28807:4;28852:2;28827:45;;;28873:19;:17;:19::i;:::-;28894:4;28900:7;28909:5;28827:88;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;28823:517;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29122:1;29105:6;:13;:18;29101:229;;29150:40;;;;;;;;;;;;;;29101:229;29290:6;29284:13;29275:6;29271:2;29267:15;29260:38;28823:517;28993:54;;;28983:64;;;:6;:64;;;;28976:71;;;28649:697;;;;;;:::o;12049:92::-;12100:13;12125:9;;;;;;;;;;;;;;12049:92;:::o;33078:1920::-;33135:17;33548:3;33541:4;33535:11;33531:21;33524:28;;33637:3;33631:4;33624:17;33740:3;34188:5;34316:1;34311:3;34307:11;34300:18;;34451:2;34445:4;34441:13;34437:2;34433:22;34428:3;34420:36;34491:2;34485:4;34481:13;34473:21;;34082:682;34509:4;34082:682;;;34695:1;34690:3;34686:11;34679:18;;34745:2;34739:4;34735:13;34731:2;34727:22;34722:3;34714:36;34602:2;34596:4;34592:13;34584:21;;34082:682;;;34086:422;34801:3;34796;34792:13;34914:2;34909:3;34905:12;34898:19;;34975:6;34970:3;34963:19;33173:1819;;33078:1920;;;:::o;30961:143::-;31094:6;30961:143;;;;;:::o;15641:661::-;15759:19;15765:2;15769:8;15759:5;:19::i;:::-;15835:1;15817:2;:14;;;:19;15813:473;;15856:11;15870:13;;15856:27;;15901:13;15923:8;15917:3;:14;15901:30;;15949:229;15979:62;16018:1;16022:2;16026:7;;;;;;16035:5;15979:30;:62::i;:::-;15974:165;;16076:40;;;;;;;;;;;;;;15974:165;16173:3;16165:5;:11;15949:229;;16258:3;16241:13;;:20;16237:34;;16263:8;;;16237:34;15838:448;;15813:473;15641:661;;;:::o;16563:1492::-;16627:20;16650:13;;16627:36;;16691:1;16677:16;;:2;:16;;;16673:48;;16702:19;;;;;;;;;;;;;;16673:48;16747:1;16735:8;:13;16731:44;;16757:18;;;;;;;;;;;;;;16731:44;16786:61;16816:1;16820:2;16824:12;16838:8;16786:21;:61::i;:::-;17318:1;1156:2;17289:1;:25;;17288:31;17276:8;:44;17250:18;:22;17269:2;17250:22;;;;;;;;;;;;;;;;:70;;;;;;;;;;;17590:136;17626:2;17679:33;17702:1;17706:2;17710:1;17679:14;:33::i;:::-;17646:30;17667:8;17646:20;:30::i;:::-;:66;17590:18;:136::i;:::-;17556:17;:31;17574:12;17556:31;;;;;;;;;;;:170;;;;17741:15;17759:12;17741:30;;17785:11;17814:8;17799:12;:23;17785:37;;17836:99;17887:9;;;;;;17883:2;17862:35;;17879:1;17862:35;;;;;;;;;;;;17930:3;17920:7;:13;17836:99;;17965:3;17949:13;:19;;;;17030:949;;17988:60;18017:1;18021:2;18025:12;18039:8;17988:20;:60::i;:::-;16617:1438;16563:1492;;:::o;12238:316::-;12308:14;12535:1;12525:8;12522:15;12497:23;12493:45;12483:55;;12238:316;;;:::o;7:75:3:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:118::-;5025:24;5043:5;5025:24;:::i;:::-;5020:3;5013:37;4938:118;;:::o;5062:222::-;5155:4;5193:2;5182:9;5178:18;5170:26;;5206:71;5274:1;5263:9;5259:17;5250:6;5206:71;:::i;:::-;5062:222;;;;:::o;5290:619::-;5367:6;5375;5383;5432:2;5420:9;5411:7;5407:23;5403:32;5400:119;;;5438:79;;:::i;:::-;5400:119;5558:1;5583:53;5628:7;5619:6;5608:9;5604:22;5583:53;:::i;:::-;5573:63;;5529:117;5685:2;5711:53;5756:7;5747:6;5736:9;5732:22;5711:53;:::i;:::-;5701:63;;5656:118;5813:2;5839:53;5884:7;5875:6;5864:9;5860:22;5839:53;:::i;:::-;5829:63;;5784:118;5290:619;;;;;:::o;5915:329::-;5974:6;6023:2;6011:9;6002:7;5998:23;5994:32;5991:119;;;6029:79;;:::i;:::-;5991:119;6149:1;6174:53;6219:7;6210:6;6199:9;6195:22;6174:53;:::i;:::-;6164:63;;6120:117;5915:329;;;;:::o;6250:116::-;6320:21;6335:5;6320:21;:::i;:::-;6313:5;6310:32;6300:60;;6356:1;6353;6346:12;6300:60;6250:116;:::o;6372:133::-;6415:5;6453:6;6440:20;6431:29;;6469:30;6493:5;6469:30;:::i;:::-;6372:133;;;;:::o;6511:468::-;6576:6;6584;6633:2;6621:9;6612:7;6608:23;6604:32;6601:119;;;6639:79;;:::i;:::-;6601:119;6759:1;6784:53;6829:7;6820:6;6809:9;6805:22;6784:53;:::i;:::-;6774:63;;6730:117;6886:2;6912:50;6954:7;6945:6;6934:9;6930:22;6912:50;:::i;:::-;6902:60;;6857:115;6511:468;;;;;:::o;6985:117::-;7094:1;7091;7084:12;7108:117;7217:1;7214;7207:12;7231:180;7279:77;7276:1;7269:88;7376:4;7373:1;7366:15;7400:4;7397:1;7390:15;7417:281;7500:27;7522:4;7500:27;:::i;:::-;7492:6;7488:40;7630:6;7618:10;7615:22;7594:18;7582:10;7579:34;7576:62;7573:88;;;7641:18;;:::i;:::-;7573:88;7681:10;7677:2;7670:22;7460:238;7417:281;;:::o;7704:129::-;7738:6;7765:20;;:::i;:::-;7755:30;;7794:33;7822:4;7814:6;7794:33;:::i;:::-;7704:129;;;:::o;7839:307::-;7900:4;7990:18;7982:6;7979:30;7976:56;;;8012:18;;:::i;:::-;7976:56;8050:29;8072:6;8050:29;:::i;:::-;8042:37;;8134:4;8128;8124:15;8116:23;;7839:307;;;:::o;8152:154::-;8236:6;8231:3;8226;8213:30;8298:1;8289:6;8284:3;8280:16;8273:27;8152:154;;;:::o;8312:410::-;8389:5;8414:65;8430:48;8471:6;8430:48;:::i;:::-;8414:65;:::i;:::-;8405:74;;8502:6;8495:5;8488:21;8540:4;8533:5;8529:16;8578:3;8569:6;8564:3;8560:16;8557:25;8554:112;;;8585:79;;:::i;:::-;8554:112;8675:41;8709:6;8704:3;8699;8675:41;:::i;:::-;8395:327;8312:410;;;;;:::o;8741:338::-;8796:5;8845:3;8838:4;8830:6;8826:17;8822:27;8812:122;;8853:79;;:::i;:::-;8812:122;8970:6;8957:20;8995:78;9069:3;9061:6;9054:4;9046:6;9042:17;8995:78;:::i;:::-;8986:87;;8802:277;8741:338;;;;:::o;9085:943::-;9180:6;9188;9196;9204;9253:3;9241:9;9232:7;9228:23;9224:33;9221:120;;;9260:79;;:::i;:::-;9221:120;9380:1;9405:53;9450:7;9441:6;9430:9;9426:22;9405:53;:::i;:::-;9395:63;;9351:117;9507:2;9533:53;9578:7;9569:6;9558:9;9554:22;9533:53;:::i;:::-;9523:63;;9478:118;9635:2;9661:53;9706:7;9697:6;9686:9;9682:22;9661:53;:::i;:::-;9651:63;;9606:118;9791:2;9780:9;9776:18;9763:32;9822:18;9814:6;9811:30;9808:117;;;9844:79;;:::i;:::-;9808:117;9949:62;10003:7;9994:6;9983:9;9979:22;9949:62;:::i;:::-;9939:72;;9734:287;9085:943;;;;;;;:::o;10034:474::-;10102:6;10110;10159:2;10147:9;10138:7;10134:23;10130:32;10127:119;;;10165:79;;:::i;:::-;10127:119;10285:1;10310:53;10355:7;10346:6;10335:9;10331:22;10310:53;:::i;:::-;10300:63;;10256:117;10412:2;10438:53;10483:7;10474:6;10463:9;10459:22;10438:53;:::i;:::-;10428:63;;10383:118;10034:474;;;;;:::o;10514:180::-;10562:77;10559:1;10552:88;10659:4;10656:1;10649:15;10683:4;10680:1;10673:15;10700:320;10744:6;10781:1;10775:4;10771:12;10761:22;;10828:1;10822:4;10818:12;10849:18;10839:81;;10905:4;10897:6;10893:17;10883:27;;10839:81;10967:2;10959:6;10956:14;10936:18;10933:38;10930:84;;10986:18;;:::i;:::-;10930:84;10751:269;10700:320;;;:::o;11026:148::-;11128:11;11165:3;11150:18;;11026:148;;;;:::o;11180:377::-;11286:3;11314:39;11347:5;11314:39;:::i;:::-;11369:89;11451:6;11446:3;11369:89;:::i;:::-;11362:96;;11467:52;11512:6;11507:3;11500:4;11493:5;11489:16;11467:52;:::i;:::-;11544:6;11539:3;11535:16;11528:23;;11290:267;11180:377;;;;:::o;11563:435::-;11743:3;11765:95;11856:3;11847:6;11765:95;:::i;:::-;11758:102;;11877:95;11968:3;11959:6;11877:95;:::i;:::-;11870:102;;11989:3;11982:10;;11563:435;;;;;:::o;12004:98::-;12055:6;12089:5;12083:12;12073:22;;12004:98;;;:::o;12108:168::-;12191:11;12225:6;12220:3;12213:19;12265:4;12260:3;12256:14;12241:29;;12108:168;;;;:::o;12282:360::-;12368:3;12396:38;12428:5;12396:38;:::i;:::-;12450:70;12513:6;12508:3;12450:70;:::i;:::-;12443:77;;12529:52;12574:6;12569:3;12562:4;12555:5;12551:16;12529:52;:::i;:::-;12606:29;12628:6;12606:29;:::i;:::-;12601:3;12597:39;12590:46;;12372:270;12282:360;;;;:::o;12648:640::-;12843:4;12881:3;12870:9;12866:19;12858:27;;12895:71;12963:1;12952:9;12948:17;12939:6;12895:71;:::i;:::-;12976:72;13044:2;13033:9;13029:18;13020:6;12976:72;:::i;:::-;13058;13126:2;13115:9;13111:18;13102:6;13058:72;:::i;:::-;13177:9;13171:4;13167:20;13162:2;13151:9;13147:18;13140:48;13205:76;13276:4;13267:6;13205:76;:::i;:::-;13197:84;;12648:640;;;;;;;:::o;13294:141::-;13350:5;13381:6;13375:13;13366:22;;13397:32;13423:5;13397:32;:::i;:::-;13294:141;;;;:::o;13441:349::-;13510:6;13559:2;13547:9;13538:7;13534:23;13530:32;13527:119;;;13565:79;;:::i;:::-;13527:119;13685:1;13710:63;13765:7;13756:6;13745:9;13741:22;13710:63;:::i;:::-;13700:73;;13656:127;13441:349;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1460000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2927",
								"getApproved(uint256)": "7375",
								"isApprovedForAll(address,address)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "745",
								"symbol()": "infinite",
								"tokenURI(uint256)": "5542",
								"totalSupply()": "4621",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 66,
									"end": 310,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 66,
									"end": 310,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 66,
									"end": 310,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 96,
									"end": 138,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 96,
									"end": 138,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 96,
									"end": 138,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 96,
									"end": 138,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 96,
									"end": 138,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 96,
									"end": 138,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 96,
									"end": 138,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 96,
									"end": 138,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 96,
									"end": 138,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 96,
									"end": 138,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 96,
									"end": 138,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 1,
									"value": "417A756B69000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 1,
									"value": "415A554B49000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4060,
									"end": 4065,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4057,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 4052,
									"end": 4065,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4085,
									"end": 4092,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4082,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 4075,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4133,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 4118,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 4118,
									"end": 4131,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4118,
									"end": 4131,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4133,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4118,
									"end": 4133,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4133,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4133,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 4118,
									"end": 4133,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4102,
									"end": 4115,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4102,
									"end": 4133,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4102,
									"end": 4133,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4102,
									"end": 4133,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4102,
									"end": 4133,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 66,
									"end": 310,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 66,
									"end": 310,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4276,
									"end": 4366,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 4276,
									"end": 4366,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4332,
									"end": 4339,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4276,
									"end": 4366,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4276,
									"end": 4366,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 3,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "45"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 3,
									"value": "45"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "46"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 3,
									"value": "46"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 3
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "50"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 3,
									"value": "50"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "55"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 3,
									"value": "55"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "56"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "57"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 3,
									"value": "57"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 3,
									"value": "56"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 3,
									"value": "63"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "65"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "66"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 3,
									"value": "66"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "63"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 3,
									"value": "65"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "68"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "69"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 3,
									"value": "69"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "70"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 3,
									"value": "70"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "71"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 3,
									"value": "71"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "72"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 3,
									"value": "72"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 3,
									"value": "68"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "76"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 3,
									"value": "76"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "78"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 3,
									"value": "78"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "81"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "82"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 3,
									"value": "82"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 3,
									"value": "81"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "83"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 3,
									"value": "83"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "84"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 3,
									"value": "84"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "86"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "87"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 3,
									"value": "87"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "88"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 3,
									"value": "88"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "85"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 3,
									"value": "86"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "89"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 3,
									"value": "89"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 3,
									"value": "90"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "92"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 3
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 3
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "90"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 3,
									"value": "92"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "93"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 3
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "94"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 3
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 3,
									"value": "94"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 3,
									"value": "93"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 3
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 3
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 3,
									"value": "85"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 66,
									"end": 310,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 66,
									"end": 310,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 66,
									"end": 310,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 310,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 310,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 310,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 310,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 66,
									"end": 310,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 310,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ff8f2194903594cb3b298e83eaff81e1ba12adb2b9ad01fb778847acc07f8ce064736f6c634300080f0033",
									".code": [
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "A0712D68"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 310,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5653,
											"end": 6260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5653,
											"end": 6260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5653,
											"end": 6260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 11161,
											"end": 11259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 11161,
											"end": 11259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 13048,
											"end": 13248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 13048,
											"end": 13248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 13048,
											"end": 13248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 12611,
											"end": 12987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 12611,
											"end": 12987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4736,
											"end": 5045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4736,
											"end": 5045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 22055,
											"end": 24794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 22055,
											"end": 24794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 13912,
											"end": 14091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 13912,
											"end": 14091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 10957,
											"end": 11099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 10957,
											"end": 11099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 10957,
											"end": 11099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 6319,
											"end": 6540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 6319,
											"end": 6540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 6319,
											"end": 6540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 11323,
											"end": 11425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 11323,
											"end": 11425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 142,
											"end": 308,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 142,
											"end": 308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 142,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 142,
											"end": 308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 142,
											"end": 308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 308,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 142,
											"end": 308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 142,
											"end": 308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 142,
											"end": 308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 142,
											"end": 308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 142,
											"end": 308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 142,
											"end": 308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 142,
											"end": 308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 142,
											"end": 308,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 142,
											"end": 308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 142,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 142,
											"end": 308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 142,
											"end": 308,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 142,
											"end": 308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 142,
											"end": 308,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 13315,
											"end": 13618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 13315,
											"end": 13618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 14157,
											"end": 14545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 14157,
											"end": 14545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 11491,
											"end": 11804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 11491,
											"end": 11804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 11491,
											"end": 11804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 13684,
											"end": 13846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 13684,
											"end": 13846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 13684,
											"end": 13846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6048,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A7"
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6044,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6124,
											"end": 6134,
											"name": "PUSH",
											"source": 1,
											"value": "80AC58CD"
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6120,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6200,
											"end": 6210,
											"name": "PUSH",
											"source": 1,
											"value": "5B5E139F"
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6185,
											"end": 6196,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6014,
											"end": 6210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6014,
											"end": 6210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11228,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11247,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 11240,
											"end": 11252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 11240,
											"end": 11252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13116,
											"end": 13123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13140,
											"end": 13156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 13148,
											"end": 13155,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13140,
											"end": 13147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 13140,
											"end": 13156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13140,
											"end": 13156,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 13140,
											"end": 13156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13135,
											"end": 13199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 13135,
											"end": 13199,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "PUSH",
											"source": 1,
											"value": "CF4700E400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13135,
											"end": 13199,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 13135,
											"end": 13199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13232,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13233,
											"end": 13240,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13210,
											"end": 13241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13210,
											"end": 13241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12683,
											"end": 12696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12699,
											"end": 12715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 12707,
											"end": 12714,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 12699,
											"end": 12715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12699,
											"end": 12715,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 12699,
											"end": 12715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12683,
											"end": 12715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12683,
											"end": 12715,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12753,
											"end": 12758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12730,
											"end": 12758,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12730,
											"end": 12758,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12730,
											"end": 12749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 12730,
											"end": 12747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 12730,
											"end": 12749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12730,
											"end": 12749,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 12730,
											"end": 12749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12730,
											"end": 12758,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12730,
											"end": 12758,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12730,
											"end": 12758,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12726,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 12726,
											"end": 12898,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12777,
											"end": 12821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 12794,
											"end": 12799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12801,
											"end": 12820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 12801,
											"end": 12818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 12801,
											"end": 12820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12801,
											"end": 12820,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 12801,
											"end": 12820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12777,
											"end": 12793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 12777,
											"end": 12821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12777,
											"end": 12821,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 12777,
											"end": 12821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12772,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 12772,
											"end": 12898,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "PUSH",
											"source": 1,
											"value": "CFB3B94200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12772,
											"end": 12898,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 12772,
											"end": 12898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12726,
											"end": 12898,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 12726,
											"end": 12898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12935,
											"end": 12937,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12923,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12924,
											"end": 12931,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12972,
											"end": 12979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12968,
											"end": 12970,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12961,
											"end": 12966,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 12673,
											"end": 12987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4789,
											"end": 4796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5013,
											"end": 5026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5013,
											"end": 5028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5010,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4998,
											"end": 5010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4982,
											"end": 4995,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4982,
											"end": 4995,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4982,
											"end": 5010,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4982,
											"end": 5028,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4975,
											"end": 5028,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4975,
											"end": 5028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22184,
											"end": 22211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22214,
											"end": 22241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 22233,
											"end": 22240,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22214,
											"end": 22232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 22214,
											"end": 22241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22214,
											"end": 22241,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 22214,
											"end": 22241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22184,
											"end": 22241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22184,
											"end": 22241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22297,
											"end": 22301,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22256,
											"end": 22301,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22256,
											"end": 22301,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22272,
											"end": 22291,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22256,
											"end": 22301,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22256,
											"end": 22301,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22256,
											"end": 22301,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 22252,
											"end": 22338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 22252,
											"end": 22338,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "PUSH",
											"source": 1,
											"value": "A114810000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22252,
											"end": 22338,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 22252,
											"end": 22338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22350,
											"end": 22377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22379,
											"end": 22402,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22406,
											"end": 22434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 22426,
											"end": 22433,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 22406,
											"end": 22425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 22406,
											"end": 22434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22406,
											"end": 22434,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 22406,
											"end": 22434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22349,
											"end": 22434,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22349,
											"end": 22434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22349,
											"end": 22434,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22349,
											"end": 22434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22531,
											"end": 22593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 22550,
											"end": 22565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22567,
											"end": 22571,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 22573,
											"end": 22592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 22573,
											"end": 22590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 22573,
											"end": 22592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22573,
											"end": 22592,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 22573,
											"end": 22592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22531,
											"end": 22549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 22531,
											"end": 22593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22531,
											"end": 22593,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 22531,
											"end": 22593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22526,
											"end": 22699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 22526,
											"end": 22699,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22612,
											"end": 22655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 22629,
											"end": 22633,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22635,
											"end": 22654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 22635,
											"end": 22652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 22635,
											"end": 22654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22635,
											"end": 22654,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 22635,
											"end": 22654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22612,
											"end": 22628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 22612,
											"end": 22655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22612,
											"end": 22655,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 22612,
											"end": 22655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22607,
											"end": 22699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 22607,
											"end": 22699,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "PUSH",
											"source": 1,
											"value": "59C896BE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22607,
											"end": 22699,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 22607,
											"end": 22699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22526,
											"end": 22699,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 22526,
											"end": 22699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22728,
											"end": 22729,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22714,
											"end": 22730,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22714,
											"end": 22730,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22714,
											"end": 22716,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 22714,
											"end": 22730,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22714,
											"end": 22730,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22714,
											"end": 22730,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22710,
											"end": 22762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 22710,
											"end": 22762,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "PUSH",
											"source": 1,
											"value": "EA553B3400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22710,
											"end": 22762,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 22710,
											"end": 22762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22773,
											"end": 22816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 22795,
											"end": 22799,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22801,
											"end": 22803,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22805,
											"end": 22812,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22814,
											"end": 22815,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 22773,
											"end": 22794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 22773,
											"end": 22816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22773,
											"end": 22816,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 22773,
											"end": 22816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22905,
											"end": 22920,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23043,
											"end": 23044,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23022,
											"end": 23041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23015,
											"end": 23045,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23447,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23448,
											"end": 23452,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23515,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23516,
											"end": 23518,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23812,
											"end": 23954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 23848,
											"end": 23850,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 23895,
											"end": 23940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 23910,
											"end": 23914,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 23916,
											"end": 23918,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 23920,
											"end": 23939,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 23895,
											"end": 23909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 23895,
											"end": 23940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23895,
											"end": 23940,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 23895,
											"end": 23940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2054,
											"name": "PUSH",
											"source": 1,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23868,
											"end": 23940,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 23812,
											"end": 23830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 23812,
											"end": 23954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23812,
											"end": 23954,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 23812,
											"end": 23954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23800,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23801,
											"end": 23808,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23954,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24121,
											"end": 24122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2054,
											"name": "PUSH",
											"source": 1,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24071,
											"end": 24090,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24071,
											"end": 24117,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24071,
											"end": 24122,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24067,
											"end": 24683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 24067,
											"end": 24683,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24142,
											"end": 24161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24174,
											"end": 24175,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 24164,
											"end": 24171,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 24164,
											"end": 24175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24142,
											"end": 24175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24142,
											"end": 24175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24329,
											"end": 24330,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24295,
											"end": 24312,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24313,
											"end": 24324,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24330,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24291,
											"end": 24669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 24291,
											"end": 24669,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24431,
											"end": 24444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24431,
											"end": 24444,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 24416,
											"end": 24427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24416,
											"end": 24444,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 24412,
											"end": 24651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 24412,
											"end": 24651,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24609,
											"end": 24628,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24593,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24594,
											"end": 24605,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24628,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24412,
											"end": 24651,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 24412,
											"end": 24651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24291,
											"end": 24669,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 24291,
											"end": 24669,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24124,
											"end": 24683,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24067,
											"end": 24683,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 24067,
											"end": 24683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24727,
											"end": 24734,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24723,
											"end": 24725,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24717,
											"end": 24721,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 24745,
											"end": 24787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 24766,
											"end": 24770,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 24772,
											"end": 24774,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 24776,
											"end": 24783,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 24785,
											"end": 24786,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 24745,
											"end": 24765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 24745,
											"end": 24787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24745,
											"end": 24787,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 24745,
											"end": 24787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22174,
											"end": 24794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22174,
											"end": 24794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22174,
											"end": 24794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 14062,
											"end": 14066,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14068,
											"end": 14070,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14072,
											"end": 14079,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 14045,
											"end": 14084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11021,
											"end": 11028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11063,
											"end": 11090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 11082,
											"end": 11089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11063,
											"end": 11081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 11063,
											"end": 11090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11063,
											"end": 11090,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 11063,
											"end": 11090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11040,
											"end": 11092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11040,
											"end": 11092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6383,
											"end": 6390,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6423,
											"end": 6424,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6406,
											"end": 6411,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6402,
											"end": 6462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 6402,
											"end": 6462,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "PUSH",
											"source": 1,
											"value": "8F4EB60400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6402,
											"end": 6462,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 6402,
											"end": 6462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1035,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6479,
											"end": 6497,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6498,
											"end": 6503,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6533,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6472,
											"end": 6533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6472,
											"end": 6533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11379,
											"end": 11392,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11411,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 11404,
											"end": 11418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 11404,
											"end": 11418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 142,
											"end": 308,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 142,
											"end": 308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 272,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 282,
											"end": 292,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 294,
											"end": 302,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 272,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 272,
											"end": 303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 272,
											"end": 303,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 272,
											"end": 303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 142,
											"end": 308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 142,
											"end": 308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13425,
											"end": 13444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 13425,
											"end": 13442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 13425,
											"end": 13444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13425,
											"end": 13444,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 13425,
											"end": 13444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13413,
											"end": 13444,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13413,
											"end": 13444,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13413,
											"end": 13421,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13413,
											"end": 13444,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13413,
											"end": 13444,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13413,
											"end": 13444,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13409,
											"end": 13470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 13409,
											"end": 13470,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "PUSH",
											"source": 1,
											"value": "B06307DB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13409,
											"end": 13470,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 13409,
											"end": 13470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13533,
											"end": 13541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13500,
											"end": 13519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 13500,
											"end": 13517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 13500,
											"end": 13519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13500,
											"end": 13519,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 13500,
											"end": 13519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13521,
											"end": 13529,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13600,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13571,
											"end": 13590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 13571,
											"end": 13588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 13571,
											"end": 13590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13571,
											"end": 13590,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 13571,
											"end": 13590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13602,
											"end": 13610,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 13556,
											"end": 13611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14318,
											"end": 14349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 14331,
											"end": 14335,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14337,
											"end": 14339,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14341,
											"end": 14348,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14318,
											"end": 14330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 14318,
											"end": 14349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14318,
											"end": 14349,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 14318,
											"end": 14349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14381,
											"end": 14382,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14363,
											"end": 14365,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14363,
											"end": 14377,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14363,
											"end": 14377,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14363,
											"end": 14377,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 14363,
											"end": 14382,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14359,
											"end": 14539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 14359,
											"end": 14539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14401,
											"end": 14457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 14432,
											"end": 14436,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14438,
											"end": 14440,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14442,
											"end": 14449,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14451,
											"end": 14456,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14401,
											"end": 14431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 14401,
											"end": 14457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14401,
											"end": 14457,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 14401,
											"end": 14457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14396,
											"end": 14539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 14396,
											"end": 14539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "PUSH",
											"source": 1,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14396,
											"end": 14539,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 14396,
											"end": 14539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14359,
											"end": 14539,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 14359,
											"end": 14539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11564,
											"end": 11577,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11594,
											"end": 11610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 11602,
											"end": 11609,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11594,
											"end": 11601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 11594,
											"end": 11610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11594,
											"end": 11610,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 11594,
											"end": 11610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11589,
											"end": 11648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 11589,
											"end": 11648,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "PUSH",
											"source": 1,
											"value": "A14C4B5000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11589,
											"end": 11648,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 11589,
											"end": 11648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11659,
											"end": 11680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11683,
											"end": 11693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 11683,
											"end": 11691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 11683,
											"end": 11693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11683,
											"end": 11693,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 11683,
											"end": 11693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11659,
											"end": 11693,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11659,
											"end": 11693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11735,
											"end": 11736,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11716,
											"end": 11723,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11731,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11736,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11763,
											"end": 11770,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11772,
											"end": 11790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 11782,
											"end": 11789,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11772,
											"end": 11781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 11772,
											"end": 11790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11772,
											"end": 11790,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 11772,
											"end": 11790,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 11746,
											"end": 11791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11703,
											"end": 11797,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11703,
											"end": 11797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11703,
											"end": 11797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13781,
											"end": 13785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13804,
											"end": 13822,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13823,
											"end": 13828,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13830,
											"end": 13838,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13797,
											"end": 13839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13797,
											"end": 13839,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 15059,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 14791,
											"end": 15059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14848,
											"end": 14852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14902,
											"end": 14909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 14883,
											"end": 14896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 14883,
											"end": 14898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14898,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 14883,
											"end": 14898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14909,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14909,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14935,
											"end": 14948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14935,
											"end": 14948,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 14925,
											"end": 14932,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14925,
											"end": 14948,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15032,
											"end": 15033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1774,
											"end": 1782,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14985,
											"end": 15002,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15003,
											"end": 15010,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15028,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15033,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14864,
											"end": 15033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14864,
											"end": 15033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 15059,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 15059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 15059,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 15059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32874,
											"end": 32977,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 32874,
											"end": 32977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32934,
											"end": 32941,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 32953,
											"end": 32970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32953,
											"end": 32970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32874,
											"end": 32977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32874,
											"end": 32977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4366,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 4276,
											"end": 4366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4332,
											"end": 4339,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8016,
											"end": 8023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8035,
											"end": 8047,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8050,
											"end": 8057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8035,
											"end": 8057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8035,
											"end": 8057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8115,
											"end": 8119,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8096,
											"end": 8111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 8096,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 8096,
											"end": 8111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8096,
											"end": 8111,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 8096,
											"end": 8111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8096,
											"end": 8119,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8092,
											"end": 8990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 8092,
											"end": 8990,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8148,
											"end": 8161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8148,
											"end": 8161,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8141,
											"end": 8145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8141,
											"end": 8161,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8199,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8202,
											"end": 8219,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8220,
											"end": 8224,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8225,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8316,
											"end": 8317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1774,
											"end": 1782,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8289,
											"end": 8295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8289,
											"end": 8312,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8289,
											"end": 8317,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8285,
											"end": 8972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 8285,
											"end": 8972,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8817,
											"end": 8818,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8807,
											"end": 8813,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8807,
											"end": 8818,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8876,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8877,
											"end": 8883,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8877,
											"end": 8883,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8877,
											"end": 8883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8877,
											"end": 8883,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8877,
											"end": 8883,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8877,
											"end": 8883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8877,
											"end": 8883,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8850,
											"end": 8884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8850,
											"end": 8884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8943,
											"end": 8949,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8936,
											"end": 8949,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8936,
											"end": 8949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8936,
											"end": 8949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8936,
											"end": 8949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8936,
											"end": 8949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 8936,
											"end": 8949,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8285,
											"end": 8972,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 8285,
											"end": 8972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8092,
											"end": 8990,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 8092,
											"end": 8990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "PUSH",
											"source": 1,
											"value": "DF2D9B4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 9054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20436,
											"end": 21073,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 20436,
											"end": 21073,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20528,
											"end": 20555,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20557,
											"end": 20580,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20596,
											"end": 20649,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20652,
											"end": 20667,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 20596,
											"end": 20667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20596,
											"end": 20667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20834,
											"end": 20841,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20828,
											"end": 20832,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20821,
											"end": 20842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20868,
											"end": 20890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20862,
											"end": 20866,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20855,
											"end": 20891,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20943,
											"end": 20947,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20937,
											"end": 20941,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20927,
											"end": 20948,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 20904,
											"end": 20948,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20904,
											"end": 20948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21037,
											"end": 21056,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21031,
											"end": 21057,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 21012,
											"end": 21057,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21012,
											"end": 21057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20774,
											"end": 21067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20436,
											"end": 21073,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20436,
											"end": 21073,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20436,
											"end": 21073,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20436,
											"end": 21073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21181,
											"end": 21813,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 21181,
											"end": 21813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21319,
											"end": 21330,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21478,
											"end": 21493,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21472,
											"end": 21476,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21468,
											"end": 21494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21460,
											"end": 21494,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21460,
											"end": 21494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21635,
											"end": 21650,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21624,
											"end": 21633,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21620,
											"end": 21651,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21607,
											"end": 21651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21607,
											"end": 21651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21780,
											"end": 21795,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21769,
											"end": 21778,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21766,
											"end": 21796,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 21759,
											"end": 21763,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21748,
											"end": 21757,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21745,
											"end": 21764,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 21742,
											"end": 21797,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 21732,
											"end": 21797,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21732,
											"end": 21797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21181,
											"end": 21813,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 21181,
											"end": 21813,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21181,
											"end": 21813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21181,
											"end": 21813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21181,
											"end": 21813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21181,
											"end": 21813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31742,
											"end": 31896,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 31742,
											"end": 31896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31742,
											"end": 31896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31742,
											"end": 31896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31742,
											"end": 31896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31742,
											"end": 31896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31742,
											"end": 31896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30099,
											"end": 30401,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 30099,
											"end": 30401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30230,
											"end": 30237,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30249,
											"end": 30265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "E8"
										},
										{
											"begin": 30275,
											"end": 30294,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30275,
											"end": 30315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30275,
											"end": 30315,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 30249,
											"end": 30316,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30249,
											"end": 30316,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "E8"
										},
										{
											"begin": 30341,
											"end": 30372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 30352,
											"end": 30356,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 30358,
											"end": 30360,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 30362,
											"end": 30371,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 30341,
											"end": 30351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 30341,
											"end": 30372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30341,
											"end": 30372,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 30341,
											"end": 30372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30333,
											"end": 30373,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFF"
										},
										{
											"begin": 30333,
											"end": 30373,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30333,
											"end": 30394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30333,
											"end": 30394,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 30326,
											"end": 30394,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30326,
											"end": 30394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30326,
											"end": 30394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30099,
											"end": 30401,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 30099,
											"end": 30401,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 30099,
											"end": 30401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30099,
											"end": 30401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30099,
											"end": 30401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30099,
											"end": 30401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10900,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 10460,
											"end": 10900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10540,
											"end": 10554,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10705,
											"end": 10720,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10698,
											"end": 10703,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10694,
											"end": 10721,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10685,
											"end": 10721,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10685,
											"end": 10721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10877,
											"end": 10882,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10863,
											"end": 10874,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 10839,
											"end": 10861,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 10835,
											"end": 10875,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 10832,
											"end": 10883,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 10825,
											"end": 10830,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10822,
											"end": 10884,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 10812,
											"end": 10884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10812,
											"end": 10884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10900,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10900,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32537,
											"end": 32690,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 32537,
											"end": 32690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32537,
											"end": 32690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32537,
											"end": 32690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32537,
											"end": 32690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32537,
											"end": 32690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32537,
											"end": 32690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15138,
											"end": 15240,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 15138,
											"end": 15240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 15216,
											"end": 15218,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15220,
											"end": 15228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15206,
											"end": 15215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 15206,
											"end": 15233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 15206,
											"end": 15233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15138,
											"end": 15240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15138,
											"end": 15240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15138,
											"end": 15240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28807,
											"end": 28811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28852,
											"end": 28854,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28872,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28827,
											"end": 28872,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28872,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 28873,
											"end": 28892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 28873,
											"end": 28890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 28873,
											"end": 28892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28873,
											"end": 28892,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 28873,
											"end": 28892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28894,
											"end": 28898,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 28900,
											"end": 28907,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 28909,
											"end": 28914,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 28827,
											"end": 28915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 28827,
											"end": 28915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29122,
											"end": 29123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29105,
											"end": 29111,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29105,
											"end": 29118,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 29105,
											"end": 29123,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 29101,
											"end": 29330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 29101,
											"end": 29330,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "PUSH",
											"source": 1,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 29101,
											"end": 29330,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 29101,
											"end": 29330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29290,
											"end": 29296,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29284,
											"end": 29297,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 29275,
											"end": 29281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29271,
											"end": 29273,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29267,
											"end": 29282,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29260,
											"end": 29298,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28993,
											"end": 29047,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 28993,
											"end": 29047,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 28993,
											"end": 29047,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28983,
											"end": 28989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28976,
											"end": 29047,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28976,
											"end": 29047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28976,
											"end": 29047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12049,
											"end": 12141,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 12049,
											"end": 12141,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12100,
											"end": 12113,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12049,
											"end": 12141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12049,
											"end": 12141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 33078,
											"end": 34998,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 33078,
											"end": 34998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33135,
											"end": 33152,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 33548,
											"end": 33551,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 33541,
											"end": 33545,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33535,
											"end": 33546,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 33531,
											"end": 33552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33524,
											"end": 33552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33524,
											"end": 33552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33637,
											"end": 33640,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33631,
											"end": 33635,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33624,
											"end": 33641,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33740,
											"end": 33743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34188,
											"end": 34193,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 34316,
											"end": 34317,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 34311,
											"end": 34314,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34307,
											"end": 34318,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34300,
											"end": 34318,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34300,
											"end": 34318,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34451,
											"end": 34453,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 34445,
											"end": 34449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34441,
											"end": 34454,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 34437,
											"end": 34439,
											"name": "PUSH",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 34433,
											"end": 34455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34428,
											"end": 34431,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34420,
											"end": 34456,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 34491,
											"end": 34493,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 34485,
											"end": 34489,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34481,
											"end": 34494,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 34473,
											"end": 34494,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34473,
											"end": 34494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34509,
											"end": 34513,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 34695,
											"end": 34696,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 34690,
											"end": 34693,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34686,
											"end": 34697,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34679,
											"end": 34697,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34679,
											"end": 34697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34745,
											"end": 34747,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 34739,
											"end": 34743,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34735,
											"end": 34748,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 34731,
											"end": 34733,
											"name": "PUSH",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 34727,
											"end": 34749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34722,
											"end": 34725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34714,
											"end": 34750,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 34602,
											"end": 34604,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 34596,
											"end": 34600,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34592,
											"end": 34605,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 34584,
											"end": 34605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34584,
											"end": 34605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34086,
											"end": 34508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34801,
											"end": 34804,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34796,
											"end": 34799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34792,
											"end": 34805,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34914,
											"end": 34916,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34909,
											"end": 34912,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34905,
											"end": 34917,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34898,
											"end": 34917,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34898,
											"end": 34917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34975,
											"end": 34981,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34970,
											"end": 34973,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34963,
											"end": 34982,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33173,
											"end": 34992,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33173,
											"end": 34992,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33078,
											"end": 34998,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33078,
											"end": 34998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33078,
											"end": 34998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33078,
											"end": 34998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30961,
											"end": 31104,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 30961,
											"end": 31104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31094,
											"end": 31100,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30961,
											"end": 31104,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 30961,
											"end": 31104,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 30961,
											"end": 31104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30961,
											"end": 31104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30961,
											"end": 31104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30961,
											"end": 31104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15641,
											"end": 16302,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 15641,
											"end": 16302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15759,
											"end": 15778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 15765,
											"end": 15767,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15769,
											"end": 15777,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15759,
											"end": 15764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 15759,
											"end": 15778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15759,
											"end": 15778,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 15759,
											"end": 15778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15835,
											"end": 15836,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15817,
											"end": 15819,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15817,
											"end": 15831,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15817,
											"end": 15831,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15817,
											"end": 15831,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 15817,
											"end": 15836,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15813,
											"end": 16286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 15813,
											"end": 16286,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15856,
											"end": 15867,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15870,
											"end": 15883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15870,
											"end": 15883,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 15856,
											"end": 15883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15856,
											"end": 15883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15901,
											"end": 15914,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15923,
											"end": 15931,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15917,
											"end": 15920,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15917,
											"end": 15931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15901,
											"end": 15931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15901,
											"end": 15931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15949,
											"end": 16178,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 15949,
											"end": 16178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15979,
											"end": 16041,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 16018,
											"end": 16019,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16022,
											"end": 16024,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16026,
											"end": 16033,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16026,
											"end": 16033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16026,
											"end": 16033,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 16026,
											"end": 16033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16026,
											"end": 16033,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 16026,
											"end": 16033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16035,
											"end": 16040,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15979,
											"end": 16009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 15979,
											"end": 16041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15979,
											"end": 16041,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 15979,
											"end": 16041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15974,
											"end": 16139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 15974,
											"end": 16139,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "PUSH",
											"source": 1,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16076,
											"end": 16116,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15974,
											"end": 16139,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 15974,
											"end": 16139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16173,
											"end": 16176,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16165,
											"end": 16170,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16165,
											"end": 16176,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 15949,
											"end": 16178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 15949,
											"end": 16178,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16258,
											"end": 16261,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16241,
											"end": 16254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16241,
											"end": 16254,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 16241,
											"end": 16261,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 16237,
											"end": 16271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 16237,
											"end": 16271,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16263,
											"end": 16271,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16263,
											"end": 16271,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16263,
											"end": 16271,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16237,
											"end": 16271,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 16237,
											"end": 16271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 16286,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 16286,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15813,
											"end": 16286,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 15813,
											"end": 16286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15641,
											"end": 16302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15641,
											"end": 16302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15641,
											"end": 16302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15641,
											"end": 16302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16563,
											"end": 18055,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 16563,
											"end": 18055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16627,
											"end": 16647,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16650,
											"end": 16663,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16650,
											"end": 16663,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 16627,
											"end": 16663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16627,
											"end": 16663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16691,
											"end": 16692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16677,
											"end": 16693,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16677,
											"end": 16693,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16677,
											"end": 16679,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16677,
											"end": 16693,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16677,
											"end": 16693,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16677,
											"end": 16693,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16673,
											"end": 16721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 16673,
											"end": 16721,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "PUSH",
											"source": 1,
											"value": "2E07630000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16702,
											"end": 16721,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16673,
											"end": 16721,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 16673,
											"end": 16721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16747,
											"end": 16748,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16735,
											"end": 16743,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16735,
											"end": 16748,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16731,
											"end": 16775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 16731,
											"end": 16775,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "PUSH",
											"source": 1,
											"value": "B562E8DD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16731,
											"end": 16775,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 16731,
											"end": 16775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16786,
											"end": 16847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 16816,
											"end": 16817,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16820,
											"end": 16822,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16824,
											"end": 16836,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16838,
											"end": 16846,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16786,
											"end": 16807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 16786,
											"end": 16847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16786,
											"end": 16847,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 16786,
											"end": 16847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17318,
											"end": 17319,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1156,
											"end": 1158,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17289,
											"end": 17290,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 17289,
											"end": 17314,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17289,
											"end": 17314,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 17288,
											"end": 17319,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 17276,
											"end": 17284,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17276,
											"end": 17320,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17268,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17269,
											"end": 17271,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17250,
											"end": 17320,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17320,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17320,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17320,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17320,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17320,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 17250,
											"end": 17320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17590,
											"end": 17726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 17626,
											"end": 17628,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17679,
											"end": 17712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 17702,
											"end": 17703,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17706,
											"end": 17708,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17710,
											"end": 17711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17679,
											"end": 17693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 17679,
											"end": 17712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17679,
											"end": 17712,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 17679,
											"end": 17712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 17667,
											"end": 17675,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 17646,
											"end": 17676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17676,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 17646,
											"end": 17676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17646,
											"end": 17712,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 17590,
											"end": 17608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 17590,
											"end": 17726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17590,
											"end": 17726,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 17590,
											"end": 17726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17556,
											"end": 17573,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17556,
											"end": 17587,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17574,
											"end": 17586,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17556,
											"end": 17587,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17556,
											"end": 17587,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17556,
											"end": 17587,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17556,
											"end": 17587,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17556,
											"end": 17587,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17556,
											"end": 17587,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17556,
											"end": 17587,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17556,
											"end": 17587,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17556,
											"end": 17587,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17556,
											"end": 17587,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17556,
											"end": 17587,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 17556,
											"end": 17726,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17556,
											"end": 17726,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17556,
											"end": 17726,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 17556,
											"end": 17726,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17741,
											"end": 17756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17759,
											"end": 17771,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17741,
											"end": 17771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17741,
											"end": 17771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17785,
											"end": 17796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17814,
											"end": 17822,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17799,
											"end": 17811,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17799,
											"end": 17822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17785,
											"end": 17822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17785,
											"end": 17822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17836,
											"end": 17935,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 17836,
											"end": 17935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17887,
											"end": 17896,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17887,
											"end": 17896,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17887,
											"end": 17896,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 17887,
											"end": 17896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17887,
											"end": 17896,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17887,
											"end": 17896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17883,
											"end": 17885,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17879,
											"end": 17880,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17862,
											"end": 17897,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 17930,
											"end": 17933,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17920,
											"end": 17927,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17920,
											"end": 17933,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 17836,
											"end": 17935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 17836,
											"end": 17935,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17965,
											"end": 17968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17949,
											"end": 17962,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17949,
											"end": 17968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17949,
											"end": 17968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17949,
											"end": 17968,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 17949,
											"end": 17968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17030,
											"end": 17979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17030,
											"end": 17979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17988,
											"end": 18048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 18017,
											"end": 18018,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18021,
											"end": 18023,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 18025,
											"end": 18037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18039,
											"end": 18047,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17988,
											"end": 18008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 17988,
											"end": 18048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17988,
											"end": 18048,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 17988,
											"end": 18048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16617,
											"end": 18055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16563,
											"end": 18055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16563,
											"end": 18055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16563,
											"end": 18055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12238,
											"end": 12554,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 12238,
											"end": 12554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12308,
											"end": 12322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12535,
											"end": 12536,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12525,
											"end": 12533,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12522,
											"end": 12537,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12497,
											"end": 12520,
											"name": "PUSH",
											"source": 1,
											"value": "E1"
										},
										{
											"begin": 12493,
											"end": 12538,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 12483,
											"end": 12538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12483,
											"end": 12538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12238,
											"end": 12554,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12238,
											"end": 12554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12238,
											"end": 12554,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12238,
											"end": 12554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1866,
											"end": 1867,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "tag",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1887,
											"end": 1888,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 1897,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 1976,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1970,
											"end": 1973,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1966,
											"end": 1977,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1960,
											"end": 1978,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 1957,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1951,
											"end": 1954,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1947,
											"end": 1958,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1914,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1909,
											"end": 1910,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1905,
											"end": 1915,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "tag",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2007,
											"end": 2013,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2004,
											"end": 2005,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2001,
											"end": 2014,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2087,
											"end": 2088,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2076,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2069,
											"end": 2085,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2062,
											"end": 2089,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "tag",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 2105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1798,
											"end": 2105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2152,
											"end": 2158,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2205,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2196,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2187,
											"end": 2192,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2197,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2179,
											"end": 2207,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2169,
											"end": 2207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2169,
											"end": 2207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2307,
											"end": 2310,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 2368,
											"end": 2373,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 2335,
											"end": 2374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "tag",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 2454,
											"end": 2460,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2452,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 2390,
											"end": 2461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "tag",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2383,
											"end": 2461,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2383,
											"end": 2461,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 2515,
											"end": 2521,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2513,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2503,
											"end": 2507,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2496,
											"end": 2501,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2508,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 2470,
											"end": 2522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "tag",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 2569,
											"end": 2575,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 2547,
											"end": 2576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "tag",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2542,
											"end": 2545,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2577,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2577,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2577,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2311,
											"end": 2583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2702,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2740,
											"end": 2742,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2729,
											"end": 2738,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2725,
											"end": 2743,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2717,
											"end": 2743,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2717,
											"end": 2743,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2789,
											"end": 2798,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2787,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2779,
											"end": 2799,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2775,
											"end": 2776,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2760,
											"end": 2777,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2753,
											"end": 2800,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 2890,
											"end": 2894,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2887,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 2817,
											"end": 2895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "tag",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2895,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2895,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2945,
											"end": 2952,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2974,
											"end": 2979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2963,
											"end": 2979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2963,
											"end": 2979,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2908,
											"end": 2985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2991,
											"end": 3113,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 2991,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 3082,
											"end": 3087,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 3064,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "tag",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3057,
											"end": 3062,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3089,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3103,
											"end": 3104,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3101,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3093,
											"end": 3105,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "tag",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2991,
											"end": 3113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2991,
											"end": 3113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3165,
											"end": 3170,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3209,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3190,
											"end": 3210,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3181,
											"end": 3210,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3181,
											"end": 3210,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 3246,
											"end": 3251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 3219,
											"end": 3252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "tag",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3119,
											"end": 3258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3329,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3372,
											"end": 3374,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3360,
											"end": 3369,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3351,
											"end": 3358,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3370,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 3378,
											"end": 3457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "tag",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "tag",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3498,
											"end": 3499,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 3568,
											"end": 3575,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 3565,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3548,
											"end": 3557,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3544,
											"end": 3566,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 3523,
											"end": 3576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "tag",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3513,
											"end": 3576,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3513,
											"end": 3576,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3469,
											"end": 3586,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3264,
											"end": 3593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3718,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3719,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3654,
											"end": 3719,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3654,
											"end": 3719,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3599,
											"end": 3725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3768,
											"end": 3775,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 3815,
											"end": 3820,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 3797,
											"end": 3821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "tag",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3786,
											"end": 3821,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3786,
											"end": 3821,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 3938,
											"end": 3943,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 3920,
											"end": 3944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "tag",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3915,
											"end": 3918,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 3945,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3833,
											"end": 3951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4050,
											"end": 4054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4088,
											"end": 4090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4077,
											"end": 4086,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4073,
											"end": 4091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4065,
											"end": 4091,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4065,
											"end": 4091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 4169,
											"end": 4170,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4158,
											"end": 4167,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4154,
											"end": 4171,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4145,
											"end": 4151,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 4101,
											"end": 4172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "tag",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4185,
											"end": 4307,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 4185,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 4276,
											"end": 4281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 4258,
											"end": 4282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "tag",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4251,
											"end": 4256,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4248,
											"end": 4283,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4297,
											"end": 4298,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4287,
											"end": 4299,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "tag",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4185,
											"end": 4307,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4185,
											"end": 4307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4364,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4397,
											"end": 4403,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4384,
											"end": 4404,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4404,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4404,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 4440,
											"end": 4445,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 4413,
											"end": 4446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "tag",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4313,
											"end": 4452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4526,
											"end": 4532,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4534,
											"end": 4540,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4583,
											"end": 4585,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4571,
											"end": 4580,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4558,
											"end": 4581,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4554,
											"end": 4586,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 4589,
											"end": 4668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "tag",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "tag",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4710,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 4779,
											"end": 4786,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4770,
											"end": 4776,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4768,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4755,
											"end": 4777,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 4734,
											"end": 4787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "tag",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4724,
											"end": 4787,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4724,
											"end": 4787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4836,
											"end": 4838,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 4907,
											"end": 4914,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4898,
											"end": 4904,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4887,
											"end": 4896,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4883,
											"end": 4905,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 4862,
											"end": 4915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "tag",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4852,
											"end": 4915,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4852,
											"end": 4915,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4807,
											"end": 4925,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4458,
											"end": 4932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4938,
											"end": 5056,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 4938,
											"end": 5056,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5025,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 5043,
											"end": 5048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5025,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 5025,
											"end": 5049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5025,
											"end": 5049,
											"name": "tag",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 5025,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5020,
											"end": 5023,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5050,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4938,
											"end": 5056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4938,
											"end": 5056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4938,
											"end": 5056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5155,
											"end": 5159,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5193,
											"end": 5195,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5182,
											"end": 5191,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5178,
											"end": 5196,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5170,
											"end": 5196,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5170,
											"end": 5196,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 5274,
											"end": 5275,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5263,
											"end": 5272,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5259,
											"end": 5276,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5250,
											"end": 5256,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 5206,
											"end": 5277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "tag",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5062,
											"end": 5284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5373,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5375,
											"end": 5381,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5383,
											"end": 5389,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5432,
											"end": 5434,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5420,
											"end": 5429,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5411,
											"end": 5418,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5407,
											"end": 5430,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5403,
											"end": 5435,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5438,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 5438,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 5438,
											"end": 5517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5438,
											"end": 5517,
											"name": "tag",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 5438,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "tag",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5558,
											"end": 5559,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 5628,
											"end": 5635,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5619,
											"end": 5625,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5608,
											"end": 5617,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5604,
											"end": 5626,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5583,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 5583,
											"end": 5636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5583,
											"end": 5636,
											"name": "tag",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 5583,
											"end": 5636,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5573,
											"end": 5636,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5573,
											"end": 5636,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5529,
											"end": 5646,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5685,
											"end": 5687,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5711,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 5756,
											"end": 5763,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5747,
											"end": 5753,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5736,
											"end": 5745,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5732,
											"end": 5754,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5711,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 5711,
											"end": 5764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5711,
											"end": 5764,
											"name": "tag",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 5711,
											"end": 5764,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5701,
											"end": 5764,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5701,
											"end": 5764,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5774,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5813,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5839,
											"end": 5892,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 5884,
											"end": 5891,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5875,
											"end": 5881,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5864,
											"end": 5873,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5860,
											"end": 5882,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5839,
											"end": 5892,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 5839,
											"end": 5892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5839,
											"end": 5892,
											"name": "tag",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 5839,
											"end": 5892,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5829,
											"end": 5892,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5829,
											"end": 5892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5784,
											"end": 5902,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5290,
											"end": 5909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5974,
											"end": 5980,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6023,
											"end": 6025,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6011,
											"end": 6020,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6009,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5998,
											"end": 6021,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5994,
											"end": 6026,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6029,
											"end": 6108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 6029,
											"end": 6108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 6029,
											"end": 6108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6029,
											"end": 6108,
											"name": "tag",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 6029,
											"end": 6108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "tag",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6149,
											"end": 6150,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6174,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 6219,
											"end": 6226,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6210,
											"end": 6216,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6199,
											"end": 6208,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6195,
											"end": 6217,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6174,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 6174,
											"end": 6227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6174,
											"end": 6227,
											"name": "tag",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 6174,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6164,
											"end": 6227,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6164,
											"end": 6227,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6120,
											"end": 6237,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5915,
											"end": 6244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6250,
											"end": 6366,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 6250,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 6320,
											"end": 6341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "tag",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6313,
											"end": 6318,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6310,
											"end": 6342,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6357,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6353,
											"end": 6354,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6346,
											"end": 6358,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "tag",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6250,
											"end": 6366,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6250,
											"end": 6366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6415,
											"end": 6420,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6453,
											"end": 6459,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6440,
											"end": 6460,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 6431,
											"end": 6460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6431,
											"end": 6460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 6493,
											"end": 6498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 6469,
											"end": 6499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "tag",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6372,
											"end": 6505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6576,
											"end": 6582,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6584,
											"end": 6590,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6633,
											"end": 6635,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6621,
											"end": 6630,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6612,
											"end": 6619,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6631,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6604,
											"end": 6636,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 6639,
											"end": 6718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "tag",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "tag",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6759,
											"end": 6760,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 6829,
											"end": 6836,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6820,
											"end": 6826,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6809,
											"end": 6818,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6805,
											"end": 6827,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 6784,
											"end": 6837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "tag",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6774,
											"end": 6837,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6774,
											"end": 6837,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6730,
											"end": 6847,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6886,
											"end": 6888,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 6954,
											"end": 6961,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6945,
											"end": 6951,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6934,
											"end": 6943,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6930,
											"end": 6952,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 6912,
											"end": 6962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "tag",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6902,
											"end": 6962,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6902,
											"end": 6962,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6857,
											"end": 6972,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6511,
											"end": 6979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6985,
											"end": 7102,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 6985,
											"end": 7102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7094,
											"end": 7095,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7091,
											"end": 7092,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7084,
											"end": 7096,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7108,
											"end": 7225,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 7108,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7217,
											"end": 7218,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7214,
											"end": 7215,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7207,
											"end": 7219,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7231,
											"end": 7411,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 7231,
											"end": 7411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7279,
											"end": 7356,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7276,
											"end": 7277,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7269,
											"end": 7357,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7376,
											"end": 7380,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 7373,
											"end": 7374,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7366,
											"end": 7381,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7400,
											"end": 7404,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 7397,
											"end": 7398,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7390,
											"end": 7405,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 7522,
											"end": 7526,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 7500,
											"end": 7527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "tag",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7492,
											"end": 7498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7630,
											"end": 7636,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7618,
											"end": 7628,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7615,
											"end": 7637,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7594,
											"end": 7612,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7582,
											"end": 7592,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7579,
											"end": 7613,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 7576,
											"end": 7638,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 7641,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "tag",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "tag",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7681,
											"end": 7691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7677,
											"end": 7679,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7670,
											"end": 7692,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7460,
											"end": 7698,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7417,
											"end": 7698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7738,
											"end": 7744,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 7765,
											"end": 7785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7755,
											"end": 7785,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7755,
											"end": 7785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 7822,
											"end": 7826,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7814,
											"end": 7820,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 7794,
											"end": 7827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "tag",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7704,
											"end": 7833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7900,
											"end": 7904,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7990,
											"end": 8008,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7982,
											"end": 7988,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7979,
											"end": 8009,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 8012,
											"end": 8030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "tag",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "tag",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "394"
										},
										{
											"begin": 8072,
											"end": 8078,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 8050,
											"end": 8079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "tag",
											"source": 3,
											"value": "394"
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8042,
											"end": 8079,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8042,
											"end": 8079,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8134,
											"end": 8138,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8128,
											"end": 8132,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8139,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7839,
											"end": 8146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8236,
											"end": 8242,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8231,
											"end": 8234,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8226,
											"end": 8229,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8213,
											"end": 8243,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 8298,
											"end": 8299,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8289,
											"end": 8295,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8284,
											"end": 8287,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8280,
											"end": 8296,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8273,
											"end": 8300,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8152,
											"end": 8306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8389,
											"end": 8394,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 8471,
											"end": 8477,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 8430,
											"end": 8478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "tag",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 8414,
											"end": 8479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "tag",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8405,
											"end": 8479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8405,
											"end": 8479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8502,
											"end": 8508,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8495,
											"end": 8500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8488,
											"end": 8509,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8540,
											"end": 8544,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8533,
											"end": 8538,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8529,
											"end": 8545,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8578,
											"end": 8581,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8569,
											"end": 8575,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8564,
											"end": 8567,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8560,
											"end": 8576,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8582,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 8585,
											"end": 8664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "tag",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "tag",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 8709,
											"end": 8715,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8704,
											"end": 8707,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8699,
											"end": 8702,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 8675,
											"end": 8716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "tag",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8395,
											"end": 8722,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8312,
											"end": 8722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8796,
											"end": 8801,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8845,
											"end": 8848,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 8842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 8830,
											"end": 8836,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8826,
											"end": 8843,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8822,
											"end": 8849,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "404"
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 8853,
											"end": 8932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "tag",
											"source": 3,
											"value": "404"
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "tag",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8970,
											"end": 8976,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8957,
											"end": 8977,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "405"
										},
										{
											"begin": 9069,
											"end": 9072,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9061,
											"end": 9067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9054,
											"end": 9058,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9046,
											"end": 9052,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9042,
											"end": 9059,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 8995,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "tag",
											"source": 3,
											"value": "405"
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8986,
											"end": 9073,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8986,
											"end": 9073,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8802,
											"end": 9079,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8741,
											"end": 9079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9180,
											"end": 9186,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9188,
											"end": 9194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9196,
											"end": 9202,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9204,
											"end": 9210,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9253,
											"end": 9256,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 9241,
											"end": 9250,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9232,
											"end": 9239,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9228,
											"end": 9251,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9224,
											"end": 9257,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "407"
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 9260,
											"end": 9339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "tag",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "tag",
											"source": 3,
											"value": "407"
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9380,
											"end": 9381,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 9450,
											"end": 9457,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9441,
											"end": 9447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9430,
											"end": 9439,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 9426,
											"end": 9448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 9405,
											"end": 9458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "tag",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9395,
											"end": 9458,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 9395,
											"end": 9458,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9351,
											"end": 9468,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9507,
											"end": 9509,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "410"
										},
										{
											"begin": 9578,
											"end": 9585,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9569,
											"end": 9575,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9558,
											"end": 9567,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 9554,
											"end": 9576,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 9533,
											"end": 9586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "tag",
											"source": 3,
											"value": "410"
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9523,
											"end": 9586,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 9523,
											"end": 9586,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9478,
											"end": 9596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9635,
											"end": 9637,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "411"
										},
										{
											"begin": 9706,
											"end": 9713,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9697,
											"end": 9703,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9686,
											"end": 9695,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 9704,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 9661,
											"end": 9714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "tag",
											"source": 3,
											"value": "411"
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9651,
											"end": 9714,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9651,
											"end": 9714,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9606,
											"end": 9724,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9791,
											"end": 9793,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 9780,
											"end": 9789,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9776,
											"end": 9794,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9763,
											"end": 9795,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 9822,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9814,
											"end": 9820,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9811,
											"end": 9841,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "412"
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "413"
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 9844,
											"end": 9923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "tag",
											"source": 3,
											"value": "413"
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "tag",
											"source": 3,
											"value": "412"
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "414"
										},
										{
											"begin": 10003,
											"end": 10010,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9994,
											"end": 10000,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9983,
											"end": 9992,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 9979,
											"end": 10001,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 9949,
											"end": 10011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "tag",
											"source": 3,
											"value": "414"
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9939,
											"end": 10011,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9939,
											"end": 10011,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9734,
											"end": 10021,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9085,
											"end": 10028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10102,
											"end": 10108,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10110,
											"end": 10116,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10161,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10147,
											"end": 10156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10134,
											"end": 10157,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10130,
											"end": 10162,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "416"
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "417"
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 10165,
											"end": 10244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "tag",
											"source": 3,
											"value": "417"
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "tag",
											"source": 3,
											"value": "416"
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10285,
											"end": 10286,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "418"
										},
										{
											"begin": 10355,
											"end": 10362,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10346,
											"end": 10352,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10335,
											"end": 10344,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10331,
											"end": 10353,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 10310,
											"end": 10363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "tag",
											"source": 3,
											"value": "418"
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10300,
											"end": 10363,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10300,
											"end": 10363,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10256,
											"end": 10373,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10412,
											"end": 10414,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "419"
										},
										{
											"begin": 10483,
											"end": 10490,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10474,
											"end": 10480,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10463,
											"end": 10472,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10459,
											"end": 10481,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 10438,
											"end": 10491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "tag",
											"source": 3,
											"value": "419"
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10428,
											"end": 10491,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10428,
											"end": 10491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10383,
											"end": 10501,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10034,
											"end": 10508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10694,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 10514,
											"end": 10694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10562,
											"end": 10639,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10559,
											"end": 10560,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10552,
											"end": 10640,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10659,
											"end": 10663,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 10656,
											"end": 10657,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10649,
											"end": 10664,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10683,
											"end": 10687,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 10680,
											"end": 10681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10673,
											"end": 10688,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10744,
											"end": 10750,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10781,
											"end": 10782,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 10775,
											"end": 10779,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10771,
											"end": 10783,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 10761,
											"end": 10783,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10761,
											"end": 10783,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10829,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10822,
											"end": 10826,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10818,
											"end": 10830,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10849,
											"end": 10867,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "422"
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10905,
											"end": 10909,
											"name": "PUSH",
											"source": 3,
											"value": "7F"
										},
										{
											"begin": 10897,
											"end": 10903,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10893,
											"end": 10910,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10883,
											"end": 10910,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10883,
											"end": 10910,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "tag",
											"source": 3,
											"value": "422"
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10967,
											"end": 10969,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10959,
											"end": 10965,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10956,
											"end": 10970,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10954,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10933,
											"end": 10971,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "423"
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "424"
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 10986,
											"end": 11004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "tag",
											"source": 3,
											"value": "424"
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "tag",
											"source": 3,
											"value": "423"
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10751,
											"end": 11020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 11020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "tag",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11128,
											"end": 11139,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11165,
											"end": 11168,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11150,
											"end": 11168,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11150,
											"end": 11168,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11026,
											"end": 11174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11286,
											"end": 11289,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11314,
											"end": 11353,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "427"
										},
										{
											"begin": 11347,
											"end": 11352,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11314,
											"end": 11353,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 11314,
											"end": 11353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11314,
											"end": 11353,
											"name": "tag",
											"source": 3,
											"value": "427"
										},
										{
											"begin": 11314,
											"end": 11353,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11369,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "428"
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11446,
											"end": 11449,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11369,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 11369,
											"end": 11458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11369,
											"end": 11458,
											"name": "tag",
											"source": 3,
											"value": "428"
										},
										{
											"begin": 11369,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11362,
											"end": 11458,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 11362,
											"end": 11458,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11467,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "429"
										},
										{
											"begin": 11512,
											"end": 11518,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11507,
											"end": 11510,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11500,
											"end": 11504,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11493,
											"end": 11498,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 11489,
											"end": 11505,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11467,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 11467,
											"end": 11519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11467,
											"end": 11519,
											"name": "tag",
											"source": 3,
											"value": "429"
										},
										{
											"begin": 11467,
											"end": 11519,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11544,
											"end": 11550,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11539,
											"end": 11542,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11535,
											"end": 11551,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11528,
											"end": 11551,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11528,
											"end": 11551,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11290,
											"end": 11557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11180,
											"end": 11557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11743,
											"end": 11746,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11765,
											"end": 11860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "431"
										},
										{
											"begin": 11856,
											"end": 11859,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 11853,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11765,
											"end": 11860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 11765,
											"end": 11860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11765,
											"end": 11860,
											"name": "tag",
											"source": 3,
											"value": "431"
										},
										{
											"begin": 11765,
											"end": 11860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11758,
											"end": 11860,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11758,
											"end": 11860,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11877,
											"end": 11972,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "432"
										},
										{
											"begin": 11968,
											"end": 11971,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11959,
											"end": 11965,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11877,
											"end": 11972,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 11877,
											"end": 11972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11877,
											"end": 11972,
											"name": "tag",
											"source": 3,
											"value": "432"
										},
										{
											"begin": 11877,
											"end": 11972,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11870,
											"end": 11972,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11870,
											"end": 11972,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11989,
											"end": 11992,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11982,
											"end": 11992,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11982,
											"end": 11992,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11563,
											"end": 11998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12004,
											"end": 12102,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 12004,
											"end": 12102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12055,
											"end": 12061,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12089,
											"end": 12094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12083,
											"end": 12095,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12073,
											"end": 12095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12073,
											"end": 12095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12004,
											"end": 12102,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12004,
											"end": 12102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12004,
											"end": 12102,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12004,
											"end": 12102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12108,
											"end": 12276,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 12108,
											"end": 12276,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12191,
											"end": 12202,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12225,
											"end": 12231,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12220,
											"end": 12223,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12213,
											"end": 12232,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12265,
											"end": 12269,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12260,
											"end": 12263,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12256,
											"end": 12270,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12241,
											"end": 12270,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12241,
											"end": 12270,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12108,
											"end": 12276,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12108,
											"end": 12276,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12108,
											"end": 12276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12108,
											"end": 12276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12108,
											"end": 12276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12282,
											"end": 12642,
											"name": "tag",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 12282,
											"end": 12642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12368,
											"end": 12371,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12396,
											"end": 12434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "436"
										},
										{
											"begin": 12428,
											"end": 12433,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12396,
											"end": 12434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 12396,
											"end": 12434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12396,
											"end": 12434,
											"name": "tag",
											"source": 3,
											"value": "436"
										},
										{
											"begin": 12396,
											"end": 12434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12450,
											"end": 12520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "437"
										},
										{
											"begin": 12513,
											"end": 12519,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12508,
											"end": 12511,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 12450,
											"end": 12520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 12450,
											"end": 12520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12450,
											"end": 12520,
											"name": "tag",
											"source": 3,
											"value": "437"
										},
										{
											"begin": 12450,
											"end": 12520,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12443,
											"end": 12520,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 12443,
											"end": 12520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12529,
											"end": 12581,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "438"
										},
										{
											"begin": 12574,
											"end": 12580,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12569,
											"end": 12572,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 12562,
											"end": 12566,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12555,
											"end": 12560,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 12551,
											"end": 12567,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12529,
											"end": 12581,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 12529,
											"end": 12581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12529,
											"end": 12581,
											"name": "tag",
											"source": 3,
											"value": "438"
										},
										{
											"begin": 12529,
											"end": 12581,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12606,
											"end": 12635,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "439"
										},
										{
											"begin": 12628,
											"end": 12634,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12606,
											"end": 12635,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 12606,
											"end": 12635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12606,
											"end": 12635,
											"name": "tag",
											"source": 3,
											"value": "439"
										},
										{
											"begin": 12606,
											"end": 12635,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12601,
											"end": 12604,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12597,
											"end": 12636,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12590,
											"end": 12636,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12590,
											"end": 12636,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12372,
											"end": 12642,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12282,
											"end": 12642,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12282,
											"end": 12642,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12282,
											"end": 12642,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12282,
											"end": 12642,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12282,
											"end": 12642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12648,
											"end": 13288,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 12648,
											"end": 13288,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12843,
											"end": 12847,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12881,
											"end": 12884,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 12870,
											"end": 12879,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12866,
											"end": 12885,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12858,
											"end": 12885,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12858,
											"end": 12885,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12895,
											"end": 12966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "441"
										},
										{
											"begin": 12963,
											"end": 12964,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12952,
											"end": 12961,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12948,
											"end": 12965,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12939,
											"end": 12945,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 12895,
											"end": 12966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 12895,
											"end": 12966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12895,
											"end": 12966,
											"name": "tag",
											"source": 3,
											"value": "441"
										},
										{
											"begin": 12895,
											"end": 12966,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12976,
											"end": 13048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "442"
										},
										{
											"begin": 13044,
											"end": 13046,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13033,
											"end": 13042,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13029,
											"end": 13047,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13020,
											"end": 13026,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 12976,
											"end": 13048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 12976,
											"end": 13048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12976,
											"end": 13048,
											"name": "tag",
											"source": 3,
											"value": "442"
										},
										{
											"begin": 12976,
											"end": 13048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13058,
											"end": 13130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "443"
										},
										{
											"begin": 13126,
											"end": 13128,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 13115,
											"end": 13124,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13111,
											"end": 13129,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13102,
											"end": 13108,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 13058,
											"end": 13130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 13058,
											"end": 13130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13058,
											"end": 13130,
											"name": "tag",
											"source": 3,
											"value": "443"
										},
										{
											"begin": 13058,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13177,
											"end": 13186,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13171,
											"end": 13175,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13167,
											"end": 13187,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 13162,
											"end": 13164,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 13151,
											"end": 13160,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13147,
											"end": 13165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13140,
											"end": 13188,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13205,
											"end": 13281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "444"
										},
										{
											"begin": 13276,
											"end": 13280,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13267,
											"end": 13273,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 13205,
											"end": 13281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 13205,
											"end": 13281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13205,
											"end": 13281,
											"name": "tag",
											"source": 3,
											"value": "444"
										},
										{
											"begin": 13205,
											"end": 13281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13197,
											"end": 13281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13197,
											"end": 13281,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12648,
											"end": 13288,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 12648,
											"end": 13288,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 12648,
											"end": 13288,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12648,
											"end": 13288,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12648,
											"end": 13288,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12648,
											"end": 13288,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12648,
											"end": 13288,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12648,
											"end": 13288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13294,
											"end": 13435,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 13294,
											"end": 13435,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13350,
											"end": 13355,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13381,
											"end": 13387,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13375,
											"end": 13388,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 13366,
											"end": 13388,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13366,
											"end": 13388,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13397,
											"end": 13429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "446"
										},
										{
											"begin": 13423,
											"end": 13428,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13397,
											"end": 13429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 13397,
											"end": 13429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13397,
											"end": 13429,
											"name": "tag",
											"source": 3,
											"value": "446"
										},
										{
											"begin": 13397,
											"end": 13429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13294,
											"end": 13435,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13294,
											"end": 13435,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13294,
											"end": 13435,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13294,
											"end": 13435,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13294,
											"end": 13435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13441,
											"end": 13790,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 13441,
											"end": 13790,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13510,
											"end": 13516,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13559,
											"end": 13561,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13547,
											"end": 13556,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13538,
											"end": 13545,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 13534,
											"end": 13557,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 13530,
											"end": 13562,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 13527,
											"end": 13646,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 13527,
											"end": 13646,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "448"
										},
										{
											"begin": 13527,
											"end": 13646,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13565,
											"end": 13644,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "449"
										},
										{
											"begin": 13565,
											"end": 13644,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 13565,
											"end": 13644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13565,
											"end": 13644,
											"name": "tag",
											"source": 3,
											"value": "449"
										},
										{
											"begin": 13565,
											"end": 13644,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13527,
											"end": 13646,
											"name": "tag",
											"source": 3,
											"value": "448"
										},
										{
											"begin": 13527,
											"end": 13646,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13685,
											"end": 13686,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13710,
											"end": 13773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "450"
										},
										{
											"begin": 13765,
											"end": 13772,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 13756,
											"end": 13762,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13745,
											"end": 13754,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 13741,
											"end": 13763,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13710,
											"end": 13773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 13710,
											"end": 13773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13710,
											"end": 13773,
											"name": "tag",
											"source": 3,
											"value": "450"
										},
										{
											"begin": 13710,
											"end": 13773,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13700,
											"end": 13773,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13700,
											"end": 13773,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13656,
											"end": 13783,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13441,
											"end": 13790,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13441,
											"end": 13790,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13441,
											"end": 13790,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13441,
											"end": 13790,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13441,
											"end": 13790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"Day50_ERC721A.sol",
								"erc721a/contracts/ERC721A.sol",
								"erc721a/contracts/IERC721A.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see `_totalMinted`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Day50_ERC721A.sol\":\"Azuki\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Day50_ERC721A.sol\":{\"keccak256\":\"0xcee228b81955ce7d805d3bab7956bf8dcbf1e493a4ccafba56a6e988354d701e\",\"urls\":[\"bzz-raw://1d48b2c87df4737f4d0cefb6045c6ca513f0c3020b2a66d8d75b407826e743ab\",\"dweb:/ipfs/QmbSBmGxY8XFz9Kr3WdDFKoGeFDR52fZBp3NQ3ijpetR8m\"]},\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x53cbf7665c255e8eef7581b7b81baee6561880463969ba2bb1bfd475db79fc65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e64ab367338098474aec540e515947429475d8b7688ecbb0711f3fa371aa6263\",\"dweb:/ipfs/QmNTqiWVo11JVkdq2jC3twqaUnKgdJnjUJCNvQnJknheP5\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 111,
								"contract": "Day50_ERC721A.sol:Azuki",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 113,
								"contract": "Day50_ERC721A.sol:Azuki",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 115,
								"contract": "Day50_ERC721A.sol:Azuki",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 117,
								"contract": "Day50_ERC721A.sol:Azuki",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 121,
								"contract": "Day50_ERC721A.sol:Azuki",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 125,
								"contract": "Day50_ERC721A.sol:Azuki",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 129,
								"contract": "Day50_ERC721A.sol:Azuki",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 135,
								"contract": "Day50_ERC721A.sol:Azuki",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc721a/contracts/ERC721A.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at `_startTokenId()` (defaults to 0, e.g. 0, 1, 2, 3..). Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply. Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see `_totalMinted`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"erc721a/contracts/ERC721A.sol\":885:35000  contract ERC721A is IERC721A {... */\n  mstore(0x40, 0x80)\n    /* \"erc721a/contracts/ERC721A.sol\":3986:4140  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"erc721a/contracts/ERC721A.sol\":4060:4065  name_ */\n  dup2\n    /* \"erc721a/contracts/ERC721A.sol\":4052:4057  _name */\n  0x02\n    /* \"erc721a/contracts/ERC721A.sol\":4052:4065  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":4085:4092  symbol_ */\n  dup1\n    /* \"erc721a/contracts/ERC721A.sol\":4075:4082  _symbol */\n  0x03\n    /* \"erc721a/contracts/ERC721A.sol\":4075:4092  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":4118:4133  _startTokenId() */\n  tag_9\n    /* \"erc721a/contracts/ERC721A.sol\":4118:4131  _startTokenId */\n  shl(0x20, tag_10)\n    /* \"erc721a/contracts/ERC721A.sol\":4118:4133  _startTokenId() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"erc721a/contracts/ERC721A.sol\":4102:4115  _currentIndex */\n  0x00\n    /* \"erc721a/contracts/ERC721A.sol\":4102:4133  _currentIndex = _startTokenId() */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":3986:4140  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":885:35000  contract ERC721A is IERC721A {... */\n  jump(tag_11)\n    /* \"erc721a/contracts/ERC721A.sol\":4276:4366  function _startTokenId() internal view virtual returns (uint256) {... */\ntag_10:\n    /* \"erc721a/contracts/ERC721A.sol\":4332:4339  uint256 */\n  0x00\n    /* \"erc721a/contracts/ERC721A.sol\":4276:4366  function _startTokenId() internal view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_13:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_14:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_15:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_16:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_17:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_18:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_19:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_20:\n    /* \"#utility.yul\":957:984   */\n  tag_54\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_18\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_56\n  tag_19\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1030:1118   */\ntag_55:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_21:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_58\n  tag_13\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_59\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_20\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_22:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_62\n  tag_19\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1434:1490   */\ntag_61:\n    /* \"#utility.yul\":1508:1537   */\n  tag_63\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_18\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1917   */\ntag_23:\n    /* \"#utility.yul\":1678:1679   */\n  0x00\n    /* \"#utility.yul\":1688:1801   */\ntag_65:\n    /* \"#utility.yul\":1702:1708   */\n  dup4\n    /* \"#utility.yul\":1699:1700   */\n  dup2\n    /* \"#utility.yul\":1696:1709   */\n  lt\n    /* \"#utility.yul\":1688:1801   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":1787:1788   */\n  dup1\n    /* \"#utility.yul\":1782:1785   */\n  dup3\n    /* \"#utility.yul\":1778:1789   */\n  add\n    /* \"#utility.yul\":1772:1790   */\n  mload\n    /* \"#utility.yul\":1768:1769   */\n  dup2\n    /* \"#utility.yul\":1763:1766   */\n  dup5\n    /* \"#utility.yul\":1759:1770   */\n  add\n    /* \"#utility.yul\":1752:1791   */\n  mstore\n    /* \"#utility.yul\":1724:1726   */\n  0x20\n    /* \"#utility.yul\":1721:1722   */\n  dup2\n    /* \"#utility.yul\":1717:1727   */\n  add\n    /* \"#utility.yul\":1712:1727   */\n  swap1\n  pop\n    /* \"#utility.yul\":1688:1801   */\n  jump(tag_65)\ntag_67:\n    /* \"#utility.yul\":1819:1825   */\n  dup4\n    /* \"#utility.yul\":1816:1817   */\n  dup2\n    /* \"#utility.yul\":1813:1826   */\n  gt\n    /* \"#utility.yul\":1810:1911   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":1899:1900   */\n  0x00\n    /* \"#utility.yul\":1890:1896   */\n  dup5\n    /* \"#utility.yul\":1885:1888   */\n  dup5\n    /* \"#utility.yul\":1881:1897   */\n  add\n    /* \"#utility.yul\":1874:1901   */\n  mstore\n    /* \"#utility.yul\":1810:1911   */\ntag_68:\n    /* \"#utility.yul\":1659:1917   */\n  pop\n    /* \"#utility.yul\":1610:1917   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1923:2344   */\ntag_24:\n    /* \"#utility.yul\":2012:2017   */\n  0x00\n    /* \"#utility.yul\":2037:2103   */\n  tag_70\n    /* \"#utility.yul\":2053:2102   */\n  tag_71\n    /* \"#utility.yul\":2095:2101   */\n  dup5\n    /* \"#utility.yul\":2053:2102   */\n  tag_22\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2037:2103   */\n  tag_21\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2028:2103   */\n  swap1\n  pop\n    /* \"#utility.yul\":2126:2132   */\n  dup3\n    /* \"#utility.yul\":2119:2124   */\n  dup2\n    /* \"#utility.yul\":2112:2133   */\n  mstore\n    /* \"#utility.yul\":2164:2168   */\n  0x20\n    /* \"#utility.yul\":2157:2162   */\n  dup2\n    /* \"#utility.yul\":2153:2169   */\n  add\n    /* \"#utility.yul\":2202:2205   */\n  dup5\n    /* \"#utility.yul\":2193:2199   */\n  dup5\n    /* \"#utility.yul\":2188:2191   */\n  dup5\n    /* \"#utility.yul\":2184:2200   */\n  add\n    /* \"#utility.yul\":2181:2206   */\n  gt\n    /* \"#utility.yul\":2178:2290   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2209:2288   */\n  tag_73\n  tag_17\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2178:2290   */\ntag_72:\n    /* \"#utility.yul\":2299:2338   */\n  tag_74\n    /* \"#utility.yul\":2331:2337   */\n  dup5\n    /* \"#utility.yul\":2326:2329   */\n  dup3\n    /* \"#utility.yul\":2321:2324   */\n  dup6\n    /* \"#utility.yul\":2299:2338   */\n  tag_23\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2018:2344   */\n  pop\n    /* \"#utility.yul\":1923:2344   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2719   */\ntag_25:\n    /* \"#utility.yul\":2431:2436   */\n  0x00\n    /* \"#utility.yul\":2480:2483   */\n  dup3\n    /* \"#utility.yul\":2473:2477   */\n  0x1f\n    /* \"#utility.yul\":2465:2471   */\n  dup4\n    /* \"#utility.yul\":2461:2478   */\n  add\n    /* \"#utility.yul\":2457:2484   */\n  slt\n    /* \"#utility.yul\":2447:2569   */\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2488:2567   */\n  tag_77\n  tag_16\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2447:2569   */\ntag_76:\n    /* \"#utility.yul\":2598:2604   */\n  dup2\n    /* \"#utility.yul\":2592:2605   */\n  mload\n    /* \"#utility.yul\":2623:2713   */\n  tag_78\n    /* \"#utility.yul\":2709:2712   */\n  dup5\n    /* \"#utility.yul\":2701:2707   */\n  dup3\n    /* \"#utility.yul\":2694:2698   */\n  0x20\n    /* \"#utility.yul\":2686:2692   */\n  dup7\n    /* \"#utility.yul\":2682:2699   */\n  add\n    /* \"#utility.yul\":2623:2713   */\n  tag_24\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2614:2713   */\n  swap2\n  pop\n    /* \"#utility.yul\":2437:2719   */\n  pop\n    /* \"#utility.yul\":2364:2719   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2725:3578   */\ntag_3:\n    /* \"#utility.yul\":2824:2830   */\n  0x00\n    /* \"#utility.yul\":2832:2838   */\n  dup1\n    /* \"#utility.yul\":2881:2883   */\n  0x40\n    /* \"#utility.yul\":2869:2878   */\n  dup4\n    /* \"#utility.yul\":2860:2867   */\n  dup6\n    /* \"#utility.yul\":2856:2879   */\n  sub\n    /* \"#utility.yul\":2852:2884   */\n  slt\n    /* \"#utility.yul\":2849:2968   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":2887:2966   */\n  tag_81\n  tag_14\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2849:2968   */\ntag_80:\n    /* \"#utility.yul\":3028:3029   */\n  0x00\n    /* \"#utility.yul\":3017:3026   */\n  dup4\n    /* \"#utility.yul\":3013:3030   */\n  add\n    /* \"#utility.yul\":3007:3031   */\n  mload\n    /* \"#utility.yul\":3058:3076   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3050:3056   */\n  dup2\n    /* \"#utility.yul\":3047:3077   */\n  gt\n    /* \"#utility.yul\":3044:3161   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":3080:3159   */\n  tag_83\n  tag_15\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3044:3161   */\ntag_82:\n    /* \"#utility.yul\":3185:3259   */\n  tag_84\n    /* \"#utility.yul\":3251:3258   */\n  dup6\n    /* \"#utility.yul\":3242:3248   */\n  dup3\n    /* \"#utility.yul\":3231:3240   */\n  dup7\n    /* \"#utility.yul\":3227:3249   */\n  add\n    /* \"#utility.yul\":3185:3259   */\n  tag_25\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3175:3259   */\n  swap3\n  pop\n    /* \"#utility.yul\":2978:3269   */\n  pop\n    /* \"#utility.yul\":3329:3331   */\n  0x20\n    /* \"#utility.yul\":3318:3327   */\n  dup4\n    /* \"#utility.yul\":3314:3332   */\n  add\n    /* \"#utility.yul\":3308:3333   */\n  mload\n    /* \"#utility.yul\":3360:3378   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3352:3358   */\n  dup2\n    /* \"#utility.yul\":3349:3379   */\n  gt\n    /* \"#utility.yul\":3346:3463   */\n  iszero\n  tag_85\n  jumpi\n    /* \"#utility.yul\":3382:3461   */\n  tag_86\n  tag_15\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3346:3463   */\ntag_85:\n    /* \"#utility.yul\":3487:3561   */\n  tag_87\n    /* \"#utility.yul\":3553:3560   */\n  dup6\n    /* \"#utility.yul\":3544:3550   */\n  dup3\n    /* \"#utility.yul\":3533:3542   */\n  dup7\n    /* \"#utility.yul\":3529:3551   */\n  add\n    /* \"#utility.yul\":3487:3561   */\n  tag_25\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3477:3561   */\n  swap2\n  pop\n    /* \"#utility.yul\":3279:3571   */\n  pop\n    /* \"#utility.yul\":2725:3578   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3584:3683   */\ntag_26:\n    /* \"#utility.yul\":3636:3642   */\n  0x00\n    /* \"#utility.yul\":3670:3675   */\n  dup2\n    /* \"#utility.yul\":3664:3676   */\n  mload\n    /* \"#utility.yul\":3654:3676   */\n  swap1\n  pop\n    /* \"#utility.yul\":3584:3683   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3689:3869   */\ntag_27:\n    /* \"#utility.yul\":3737:3814   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3734:3735   */\n  0x00\n    /* \"#utility.yul\":3727:3815   */\n  mstore\n    /* \"#utility.yul\":3834:3838   */\n  0x22\n    /* \"#utility.yul\":3831:3832   */\n  0x04\n    /* \"#utility.yul\":3824:3839   */\n  mstore\n    /* \"#utility.yul\":3858:3862   */\n  0x24\n    /* \"#utility.yul\":3855:3856   */\n  0x00\n    /* \"#utility.yul\":3848:3863   */\n  revert\n    /* \"#utility.yul\":3875:4195   */\ntag_28:\n    /* \"#utility.yul\":3919:3925   */\n  0x00\n    /* \"#utility.yul\":3956:3957   */\n  0x02\n    /* \"#utility.yul\":3950:3954   */\n  dup3\n    /* \"#utility.yul\":3946:3958   */\n  div\n    /* \"#utility.yul\":3936:3958   */\n  swap1\n  pop\n    /* \"#utility.yul\":4003:4004   */\n  0x01\n    /* \"#utility.yul\":3997:4001   */\n  dup3\n    /* \"#utility.yul\":3993:4005   */\n  and\n    /* \"#utility.yul\":4024:4042   */\n  dup1\n    /* \"#utility.yul\":4014:4095   */\n  tag_91\n  jumpi\n    /* \"#utility.yul\":4080:4084   */\n  0x7f\n    /* \"#utility.yul\":4072:4078   */\n  dup3\n    /* \"#utility.yul\":4068:4085   */\n  and\n    /* \"#utility.yul\":4058:4085   */\n  swap2\n  pop\n    /* \"#utility.yul\":4014:4095   */\ntag_91:\n    /* \"#utility.yul\":4142:4144   */\n  0x20\n    /* \"#utility.yul\":4134:4140   */\n  dup3\n    /* \"#utility.yul\":4131:4145   */\n  lt\n    /* \"#utility.yul\":4111:4129   */\n  dup2\n    /* \"#utility.yul\":4108:4146   */\n  sub\n    /* \"#utility.yul\":4105:4189   */\n  tag_92\n  jumpi\n    /* \"#utility.yul\":4161:4179   */\n  tag_93\n  tag_27\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4105:4189   */\ntag_92:\n    /* \"#utility.yul\":3926:4195   */\n  pop\n    /* \"#utility.yul\":3875:4195   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4201:4342   */\ntag_29:\n    /* \"#utility.yul\":4250:4254   */\n  0x00\n    /* \"#utility.yul\":4273:4276   */\n  dup2\n    /* \"#utility.yul\":4265:4276   */\n  swap1\n  pop\n    /* \"#utility.yul\":4296:4299   */\n  dup2\n    /* \"#utility.yul\":4293:4294   */\n  0x00\n    /* \"#utility.yul\":4286:4300   */\n  mstore\n    /* \"#utility.yul\":4330:4334   */\n  0x20\n    /* \"#utility.yul\":4327:4328   */\n  0x00\n    /* \"#utility.yul\":4317:4335   */\n  keccak256\n    /* \"#utility.yul\":4309:4335   */\n  swap1\n  pop\n    /* \"#utility.yul\":4201:4342   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4348:4441   */\ntag_30:\n    /* \"#utility.yul\":4385:4391   */\n  0x00\n    /* \"#utility.yul\":4432:4434   */\n  0x20\n    /* \"#utility.yul\":4427:4429   */\n  0x1f\n    /* \"#utility.yul\":4420:4425   */\n  dup4\n    /* \"#utility.yul\":4416:4430   */\n  add\n    /* \"#utility.yul\":4412:4435   */\n  div\n    /* \"#utility.yul\":4402:4435   */\n  swap1\n  pop\n    /* \"#utility.yul\":4348:4441   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4447:4554   */\ntag_31:\n    /* \"#utility.yul\":4491:4499   */\n  0x00\n    /* \"#utility.yul\":4541:4546   */\n  dup3\n    /* \"#utility.yul\":4535:4539   */\n  dup3\n    /* \"#utility.yul\":4531:4547   */\n  shl\n    /* \"#utility.yul\":4510:4547   */\n  swap1\n  pop\n    /* \"#utility.yul\":4447:4554   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4560:4953   */\ntag_32:\n    /* \"#utility.yul\":4629:4635   */\n  0x00\n    /* \"#utility.yul\":4679:4680   */\n  0x08\n    /* \"#utility.yul\":4667:4677   */\n  dup4\n    /* \"#utility.yul\":4663:4681   */\n  mul\n    /* \"#utility.yul\":4702:4799   */\n  tag_98\n    /* \"#utility.yul\":4732:4798   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4721:4730   */\n  dup3\n    /* \"#utility.yul\":4702:4799   */\n  tag_31\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":4820:4859   */\n  tag_99\n    /* \"#utility.yul\":4850:4858   */\n  dup7\n    /* \"#utility.yul\":4839:4848   */\n  dup4\n    /* \"#utility.yul\":4820:4859   */\n  tag_31\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4808:4859   */\n  swap6\n  pop\n    /* \"#utility.yul\":4892:4896   */\n  dup1\n    /* \"#utility.yul\":4888:4897   */\n  not\n    /* \"#utility.yul\":4881:4886   */\n  dup5\n    /* \"#utility.yul\":4877:4898   */\n  and\n    /* \"#utility.yul\":4868:4898   */\n  swap4\n  pop\n    /* \"#utility.yul\":4941:4945   */\n  dup1\n    /* \"#utility.yul\":4931:4939   */\n  dup7\n    /* \"#utility.yul\":4927:4946   */\n  and\n    /* \"#utility.yul\":4920:4925   */\n  dup5\n    /* \"#utility.yul\":4917:4947   */\n  or\n    /* \"#utility.yul\":4907:4947   */\n  swap3\n  pop\n    /* \"#utility.yul\":4636:4953   */\n  pop\n  pop\n    /* \"#utility.yul\":4560:4953   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4959:5036   */\ntag_33:\n    /* \"#utility.yul\":4996:5003   */\n  0x00\n    /* \"#utility.yul\":5025:5030   */\n  dup2\n    /* \"#utility.yul\":5014:5030   */\n  swap1\n  pop\n    /* \"#utility.yul\":4959:5036   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5042:5102   */\ntag_34:\n    /* \"#utility.yul\":5070:5073   */\n  0x00\n    /* \"#utility.yul\":5091:5096   */\n  dup2\n    /* \"#utility.yul\":5084:5096   */\n  swap1\n  pop\n    /* \"#utility.yul\":5042:5102   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5108:5250   */\ntag_35:\n    /* \"#utility.yul\":5158:5167   */\n  0x00\n    /* \"#utility.yul\":5191:5244   */\n  tag_103\n    /* \"#utility.yul\":5209:5243   */\n  tag_104\n    /* \"#utility.yul\":5218:5242   */\n  tag_105\n    /* \"#utility.yul\":5236:5241   */\n  dup5\n    /* \"#utility.yul\":5218:5242   */\n  tag_33\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5209:5243   */\n  tag_34\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5191:5244   */\n  tag_33\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5178:5244   */\n  swap1\n  pop\n    /* \"#utility.yul\":5108:5250   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5256:5331   */\ntag_36:\n    /* \"#utility.yul\":5299:5302   */\n  0x00\n    /* \"#utility.yul\":5320:5325   */\n  dup2\n    /* \"#utility.yul\":5313:5325   */\n  swap1\n  pop\n    /* \"#utility.yul\":5256:5331   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5337:5606   */\ntag_37:\n    /* \"#utility.yul\":5447:5486   */\n  tag_108\n    /* \"#utility.yul\":5478:5485   */\n  dup4\n    /* \"#utility.yul\":5447:5486   */\n  tag_35\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":5508:5599   */\n  tag_109\n    /* \"#utility.yul\":5557:5598   */\n  tag_110\n    /* \"#utility.yul\":5581:5597   */\n  dup3\n    /* \"#utility.yul\":5557:5598   */\n  tag_36\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5549:5555   */\n  dup5\n    /* \"#utility.yul\":5542:5546   */\n  dup5\n    /* \"#utility.yul\":5536:5547   */\n  sload\n    /* \"#utility.yul\":5508:5599   */\n  tag_32\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5502:5506   */\n  dup3\n    /* \"#utility.yul\":5495:5600   */\n  sstore\n    /* \"#utility.yul\":5413:5606   */\n  pop\n    /* \"#utility.yul\":5337:5606   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5612:5685   */\ntag_38:\n    /* \"#utility.yul\":5657:5660   */\n  0x00\n    /* \"#utility.yul\":5612:5685   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5691:5880   */\ntag_39:\n    /* \"#utility.yul\":5768:5800   */\n  tag_113\n  tag_38\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5809:5874   */\n  tag_114\n    /* \"#utility.yul\":5867:5873   */\n  dup2\n    /* \"#utility.yul\":5859:5865   */\n  dup5\n    /* \"#utility.yul\":5853:5857   */\n  dup5\n    /* \"#utility.yul\":5809:5874   */\n  tag_37\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5744:5880   */\n  pop\n    /* \"#utility.yul\":5691:5880   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5886:6072   */\ntag_40:\n    /* \"#utility.yul\":5946:6066   */\ntag_116:\n    /* \"#utility.yul\":5963:5966   */\n  dup2\n    /* \"#utility.yul\":5956:5961   */\n  dup2\n    /* \"#utility.yul\":5953:5967   */\n  lt\n    /* \"#utility.yul\":5946:6066   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":6017:6056   */\n  tag_119\n    /* \"#utility.yul\":6054:6055   */\n  0x00\n    /* \"#utility.yul\":6047:6052   */\n  dup3\n    /* \"#utility.yul\":6017:6056   */\n  tag_39\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":5990:5991   */\n  0x01\n    /* \"#utility.yul\":5983:5988   */\n  dup2\n    /* \"#utility.yul\":5979:5992   */\n  add\n    /* \"#utility.yul\":5970:5992   */\n  swap1\n  pop\n    /* \"#utility.yul\":5946:6066   */\n  jump(tag_116)\ntag_118:\n    /* \"#utility.yul\":5886:6072   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6078:6621   */\ntag_41:\n    /* \"#utility.yul\":6179:6181   */\n  0x1f\n    /* \"#utility.yul\":6174:6177   */\n  dup3\n    /* \"#utility.yul\":6171:6182   */\n  gt\n    /* \"#utility.yul\":6168:6614   */\n  iszero\n  tag_121\n  jumpi\n    /* \"#utility.yul\":6213:6251   */\n  tag_122\n    /* \"#utility.yul\":6245:6250   */\n  dup2\n    /* \"#utility.yul\":6213:6251   */\n  tag_29\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6297:6326   */\n  tag_123\n    /* \"#utility.yul\":6315:6325   */\n  dup5\n    /* \"#utility.yul\":6297:6326   */\n  tag_30\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":6287:6295   */\n  dup2\n    /* \"#utility.yul\":6283:6327   */\n  add\n    /* \"#utility.yul\":6480:6482   */\n  0x20\n    /* \"#utility.yul\":6468:6478   */\n  dup6\n    /* \"#utility.yul\":6465:6483   */\n  lt\n    /* \"#utility.yul\":6462:6511   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":6501:6509   */\n  dup2\n    /* \"#utility.yul\":6486:6509   */\n  swap1\n  pop\n    /* \"#utility.yul\":6462:6511   */\ntag_124:\n    /* \"#utility.yul\":6524:6604   */\n  tag_125\n    /* \"#utility.yul\":6580:6602   */\n  tag_126\n    /* \"#utility.yul\":6598:6601   */\n  dup6\n    /* \"#utility.yul\":6580:6602   */\n  tag_30\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6570:6578   */\n  dup4\n    /* \"#utility.yul\":6566:6603   */\n  add\n    /* \"#utility.yul\":6553:6564   */\n  dup3\n    /* \"#utility.yul\":6524:6604   */\n  tag_40\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6183:6614   */\n  pop\n  pop\n    /* \"#utility.yul\":6168:6614   */\ntag_121:\n    /* \"#utility.yul\":6078:6621   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6627:6744   */\ntag_42:\n    /* \"#utility.yul\":6681:6689   */\n  0x00\n    /* \"#utility.yul\":6731:6736   */\n  dup3\n    /* \"#utility.yul\":6725:6729   */\n  dup3\n    /* \"#utility.yul\":6721:6737   */\n  shr\n    /* \"#utility.yul\":6700:6737   */\n  swap1\n  pop\n    /* \"#utility.yul\":6627:6744   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6750:6919   */\ntag_43:\n    /* \"#utility.yul\":6794:6800   */\n  0x00\n    /* \"#utility.yul\":6827:6878   */\n  tag_129\n    /* \"#utility.yul\":6875:6876   */\n  0x00\n    /* \"#utility.yul\":6871:6877   */\n  not\n    /* \"#utility.yul\":6863:6868   */\n  dup5\n    /* \"#utility.yul\":6860:6861   */\n  0x08\n    /* \"#utility.yul\":6856:6869   */\n  mul\n    /* \"#utility.yul\":6827:6878   */\n  tag_42\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":6823:6879   */\n  not\n    /* \"#utility.yul\":6908:6912   */\n  dup1\n    /* \"#utility.yul\":6902:6906   */\n  dup4\n    /* \"#utility.yul\":6898:6913   */\n  and\n    /* \"#utility.yul\":6888:6913   */\n  swap2\n  pop\n    /* \"#utility.yul\":6801:6919   */\n  pop\n    /* \"#utility.yul\":6750:6919   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6924:7219   */\ntag_44:\n    /* \"#utility.yul\":7000:7004   */\n  0x00\n    /* \"#utility.yul\":7146:7175   */\n  tag_131\n    /* \"#utility.yul\":7171:7174   */\n  dup4\n    /* \"#utility.yul\":7165:7169   */\n  dup4\n    /* \"#utility.yul\":7146:7175   */\n  tag_43\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7138:7175   */\n  swap2\n  pop\n    /* \"#utility.yul\":7208:7211   */\n  dup3\n    /* \"#utility.yul\":7205:7206   */\n  0x02\n    /* \"#utility.yul\":7201:7212   */\n  mul\n    /* \"#utility.yul\":7195:7199   */\n  dup3\n    /* \"#utility.yul\":7192:7213   */\n  or\n    /* \"#utility.yul\":7184:7213   */\n  swap1\n  pop\n    /* \"#utility.yul\":6924:7219   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7224:8619   */\ntag_7:\n    /* \"#utility.yul\":7341:7378   */\n  tag_133\n    /* \"#utility.yul\":7374:7377   */\n  dup3\n    /* \"#utility.yul\":7341:7378   */\n  tag_26\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":7443:7461   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7435:7441   */\n  dup2\n    /* \"#utility.yul\":7432:7462   */\n  gt\n    /* \"#utility.yul\":7429:7485   */\n  iszero\n  tag_134\n  jumpi\n    /* \"#utility.yul\":7465:7483   */\n  tag_135\n  tag_19\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":7429:7485   */\ntag_134:\n    /* \"#utility.yul\":7509:7547   */\n  tag_136\n    /* \"#utility.yul\":7541:7545   */\n  dup3\n    /* \"#utility.yul\":7535:7546   */\n  sload\n    /* \"#utility.yul\":7509:7547   */\n  tag_28\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":7594:7661   */\n  tag_137\n    /* \"#utility.yul\":7654:7660   */\n  dup3\n    /* \"#utility.yul\":7646:7652   */\n  dup3\n    /* \"#utility.yul\":7640:7644   */\n  dup6\n    /* \"#utility.yul\":7594:7661   */\n  tag_41\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":7688:7689   */\n  0x00\n    /* \"#utility.yul\":7712:7716   */\n  0x20\n    /* \"#utility.yul\":7699:7716   */\n  swap1\n  pop\n    /* \"#utility.yul\":7744:7746   */\n  0x1f\n    /* \"#utility.yul\":7736:7742   */\n  dup4\n    /* \"#utility.yul\":7733:7747   */\n  gt\n    /* \"#utility.yul\":7761:7762   */\n  0x01\n    /* \"#utility.yul\":7756:8374   */\n  dup2\n  eq\n  tag_139\n  jumpi\n    /* \"#utility.yul\":8418:8419   */\n  0x00\n    /* \"#utility.yul\":8435:8441   */\n  dup5\n    /* \"#utility.yul\":8432:8509   */\n  iszero\n  tag_140\n  jumpi\n    /* \"#utility.yul\":8484:8493   */\n  dup3\n    /* \"#utility.yul\":8479:8482   */\n  dup8\n    /* \"#utility.yul\":8475:8494   */\n  add\n    /* \"#utility.yul\":8469:8495   */\n  mload\n    /* \"#utility.yul\":8460:8495   */\n  swap1\n  pop\n    /* \"#utility.yul\":8432:8509   */\ntag_140:\n    /* \"#utility.yul\":8535:8602   */\n  tag_141\n    /* \"#utility.yul\":8595:8601   */\n  dup6\n    /* \"#utility.yul\":8588:8593   */\n  dup3\n    /* \"#utility.yul\":8535:8602   */\n  tag_44\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":8529:8533   */\n  dup7\n    /* \"#utility.yul\":8522:8603   */\n  sstore\n    /* \"#utility.yul\":8391:8613   */\n  pop\n    /* \"#utility.yul\":7726:8613   */\n  jump(tag_138)\n    /* \"#utility.yul\":7756:8374   */\ntag_139:\n    /* \"#utility.yul\":7808:7812   */\n  0x1f\n    /* \"#utility.yul\":7804:7813   */\n  not\n    /* \"#utility.yul\":7796:7802   */\n  dup5\n    /* \"#utility.yul\":7792:7814   */\n  and\n    /* \"#utility.yul\":7842:7879   */\n  tag_142\n    /* \"#utility.yul\":7874:7878   */\n  dup7\n    /* \"#utility.yul\":7842:7879   */\n  tag_29\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":7901:7902   */\n  0x00\n    /* \"#utility.yul\":7915:8123   */\ntag_143:\n    /* \"#utility.yul\":7929:7936   */\n  dup3\n    /* \"#utility.yul\":7926:7927   */\n  dup2\n    /* \"#utility.yul\":7923:7937   */\n  lt\n    /* \"#utility.yul\":7915:8123   */\n  iszero\n  tag_145\n  jumpi\n    /* \"#utility.yul\":8008:8017   */\n  dup5\n    /* \"#utility.yul\":8003:8006   */\n  dup10\n    /* \"#utility.yul\":7999:8018   */\n  add\n    /* \"#utility.yul\":7993:8019   */\n  mload\n    /* \"#utility.yul\":7985:7991   */\n  dup3\n    /* \"#utility.yul\":7978:8020   */\n  sstore\n    /* \"#utility.yul\":8059:8060   */\n  0x01\n    /* \"#utility.yul\":8051:8057   */\n  dup3\n    /* \"#utility.yul\":8047:8061   */\n  add\n    /* \"#utility.yul\":8037:8061   */\n  swap2\n  pop\n    /* \"#utility.yul\":8106:8108   */\n  0x20\n    /* \"#utility.yul\":8095:8104   */\n  dup6\n    /* \"#utility.yul\":8091:8109   */\n  add\n    /* \"#utility.yul\":8078:8109   */\n  swap5\n  pop\n    /* \"#utility.yul\":7952:7956   */\n  0x20\n    /* \"#utility.yul\":7949:7950   */\n  dup2\n    /* \"#utility.yul\":7945:7957   */\n  add\n    /* \"#utility.yul\":7940:7957   */\n  swap1\n  pop\n    /* \"#utility.yul\":7915:8123   */\n  jump(tag_143)\ntag_145:\n    /* \"#utility.yul\":8151:8157   */\n  dup7\n    /* \"#utility.yul\":8142:8149   */\n  dup4\n    /* \"#utility.yul\":8139:8158   */\n  lt\n    /* \"#utility.yul\":8136:8315   */\n  iszero\n  tag_146\n  jumpi\n    /* \"#utility.yul\":8209:8218   */\n  dup5\n    /* \"#utility.yul\":8204:8207   */\n  dup10\n    /* \"#utility.yul\":8200:8219   */\n  add\n    /* \"#utility.yul\":8194:8220   */\n  mload\n    /* \"#utility.yul\":8252:8300   */\n  tag_147\n    /* \"#utility.yul\":8294:8298   */\n  0x1f\n    /* \"#utility.yul\":8286:8292   */\n  dup10\n    /* \"#utility.yul\":8282:8299   */\n  and\n    /* \"#utility.yul\":8271:8280   */\n  dup3\n    /* \"#utility.yul\":8252:8300   */\n  tag_43\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":8244:8250   */\n  dup4\n    /* \"#utility.yul\":8237:8301   */\n  sstore\n    /* \"#utility.yul\":8159:8315   */\n  pop\n    /* \"#utility.yul\":8136:8315   */\ntag_146:\n    /* \"#utility.yul\":8361:8362   */\n  0x01\n    /* \"#utility.yul\":8357:8358   */\n  0x02\n    /* \"#utility.yul\":8349:8355   */\n  dup9\n    /* \"#utility.yul\":8345:8359   */\n  mul\n    /* \"#utility.yul\":8341:8363   */\n  add\n    /* \"#utility.yul\":8335:8339   */\n  dup9\n    /* \"#utility.yul\":8328:8364   */\n  sstore\n    /* \"#utility.yul\":7763:8374   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7726:8613   */\ntag_138:\n  pop\n    /* \"#utility.yul\":7316:8619   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7224:8619   */\n  pop\n  pop\n  jump\t// out\n    /* \"erc721a/contracts/ERC721A.sol\":885:35000  contract ERC721A is IERC721A {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"erc721a/contracts/ERC721A.sol\":885:35000  contract ERC721A is IERC721A {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x6352211e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x095ea7b3\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":5653:6260  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":11161:11259  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":13048:13248  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_5:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":12611:12987  function approve(address to, uint256 tokenId) public override {... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"erc721a/contracts/ERC721A.sol\":4736:5045  function totalSupply() public view override returns (uint256) {... */\n    tag_7:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":22055:24794  function transferFrom(... */\n    tag_8:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"erc721a/contracts/ERC721A.sol\":13912:14091  function safeTransferFrom(... */\n    tag_9:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      stop\n        /* \"erc721a/contracts/ERC721A.sol\":10957:11099  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_10:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":6319:6540  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_11:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":11323:11425  function symbol() public view virtual override returns (string memory) {... */\n    tag_12:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":13315:13618  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_13:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      stop\n        /* \"erc721a/contracts/ERC721A.sol\":14157:14545  function safeTransferFrom(... */\n    tag_14:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      stop\n        /* \"erc721a/contracts/ERC721A.sol\":11491:11804  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_15:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":13684:13846  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":5653:6260  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_23:\n        /* \"erc721a/contracts/ERC721A.sol\":5738:5742  bool */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":6048:6058  0x01ffc9a7 */\n      0x01ffc9a7\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6058  interfaceId == 0x01ffc9a7 */\n      0xe0\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6044  interfaceId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6058  interfaceId == 0x01ffc9a7 */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6134  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_81\n      jumpi\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":6124:6134  0x80ac58cd */\n      0x80ac58cd\n        /* \"erc721a/contracts/ERC721A.sol\":6109:6134  interfaceId == 0x80ac58cd */\n      0xe0\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":6109:6120  interfaceId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":6109:6134  interfaceId == 0x80ac58cd */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6134  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_81:\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6210  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_82\n      jumpi\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":6200:6210  0x5b5e139f */\n      0x5b5e139f\n        /* \"erc721a/contracts/ERC721A.sol\":6185:6210  interfaceId == 0x5b5e139f */\n      0xe0\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":6185:6196  interfaceId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":6185:6210  interfaceId == 0x5b5e139f */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":6033:6210  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_82:\n        /* \"erc721a/contracts/ERC721A.sol\":6014:6210  return... */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":5653:6260  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":11161:11259  function name() public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"erc721a/contracts/ERC721A.sol\":11215:11228  string memory */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":11247:11252  _name */\n      0x02\n        /* \"erc721a/contracts/ERC721A.sol\":11240:11252  return _name */\n      dup1\n      sload\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_85\n      jump\t// in\n    tag_86:\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_88\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_87)\n    tag_88:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_89:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_89\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_87:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":11161:11259  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":13048:13248  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_33:\n        /* \"erc721a/contracts/ERC721A.sol\":13116:13123  address */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13140:13156  _exists(tokenId) */\n      tag_91\n        /* \"erc721a/contracts/ERC721A.sol\":13148:13155  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":13140:13147  _exists */\n      tag_92\n        /* \"erc721a/contracts/ERC721A.sol\":13140:13156  _exists(tokenId) */\n      jump\t// in\n    tag_91:\n        /* \"erc721a/contracts/ERC721A.sol\":13135:13199  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_93\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":13165:13199  ApprovalQueryForNonexistentToken() */\n      mload(0x40)\n      0xcf4700e400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":13135:13199  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_93:\n        /* \"erc721a/contracts/ERC721A.sol\":13217:13232  _tokenApprovals */\n      0x06\n        /* \"erc721a/contracts/ERC721A.sol\":13217:13241  _tokenApprovals[tokenId] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13233:13240  tokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":13217:13241  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":13210:13241  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":13048:13248  function getApproved(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":12611:12987  function approve(address to, uint256 tokenId) public override {... */\n    tag_39:\n        /* \"erc721a/contracts/ERC721A.sol\":12683:12696  address owner */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":12699:12715  ownerOf(tokenId) */\n      tag_95\n        /* \"erc721a/contracts/ERC721A.sol\":12707:12714  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":12699:12706  ownerOf */\n      tag_53\n        /* \"erc721a/contracts/ERC721A.sol\":12699:12715  ownerOf(tokenId) */\n      jump\t// in\n    tag_95:\n        /* \"erc721a/contracts/ERC721A.sol\":12683:12715  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":12753:12758  owner */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":12730:12758  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":12730:12749  _msgSenderERC721A() */\n      tag_96\n        /* \"erc721a/contracts/ERC721A.sol\":12730:12747  _msgSenderERC721A */\n      tag_97\n        /* \"erc721a/contracts/ERC721A.sol\":12730:12749  _msgSenderERC721A() */\n      jump\t// in\n    tag_96:\n        /* \"erc721a/contracts/ERC721A.sol\":12730:12758  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":12726:12898  if (_msgSenderERC721A() != owner)... */\n      tag_98\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":12777:12821  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_99\n        /* \"erc721a/contracts/ERC721A.sol\":12794:12799  owner */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":12801:12820  _msgSenderERC721A() */\n      tag_100\n        /* \"erc721a/contracts/ERC721A.sol\":12801:12818  _msgSenderERC721A */\n      tag_97\n        /* \"erc721a/contracts/ERC721A.sol\":12801:12820  _msgSenderERC721A() */\n      jump\t// in\n    tag_100:\n        /* \"erc721a/contracts/ERC721A.sol\":12777:12793  isApprovedForAll */\n      tag_78\n        /* \"erc721a/contracts/ERC721A.sol\":12777:12821  isApprovedForAll(owner, _msgSenderERC721A()) */\n      jump\t// in\n    tag_99:\n        /* \"erc721a/contracts/ERC721A.sol\":12772:12898  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_101\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":12848:12883  ApprovalCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0xcfb3b94200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":12772:12898  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n    tag_101:\n        /* \"erc721a/contracts/ERC721A.sol\":12726:12898  if (_msgSenderERC721A() != owner)... */\n    tag_98:\n        /* \"erc721a/contracts/ERC721A.sol\":12935:12937  to */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12923  _tokenApprovals */\n      0x06\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12932  _tokenApprovals[tokenId] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":12924:12931  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12932  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":12908:12937  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":12972:12979  tokenId */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":12968:12970  to */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":12952:12980  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":12961:12966  owner */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":12952:12980  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"erc721a/contracts/ERC721A.sol\":12673:12987  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":12611:12987  function approve(address to, uint256 tokenId) public override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":4736:5045  function totalSupply() public view override returns (uint256) {... */\n    tag_41:\n        /* \"erc721a/contracts/ERC721A.sol\":4789:4796  uint256 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":5013:5028  _startTokenId() */\n      tag_103\n        /* \"erc721a/contracts/ERC721A.sol\":5013:5026  _startTokenId */\n      tag_104\n        /* \"erc721a/contracts/ERC721A.sol\":5013:5028  _startTokenId() */\n      jump\t// in\n    tag_103:\n        /* \"erc721a/contracts/ERC721A.sol\":4998:5010  _burnCounter */\n      sload(0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":4982:4995  _currentIndex */\n      sload(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":4982:5010  _currentIndex - _burnCounter */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":4982:5028  _currentIndex - _burnCounter - _startTokenId() */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":4975:5028  return _currentIndex - _burnCounter - _startTokenId() */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":4736:5045  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":22055:24794  function transferFrom(... */\n    tag_47:\n        /* \"erc721a/contracts/ERC721A.sol\":22184:22211  uint256 prevOwnershipPacked */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":22214:22241  _packedOwnershipOf(tokenId) */\n      tag_106\n        /* \"erc721a/contracts/ERC721A.sol\":22233:22240  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":22214:22232  _packedOwnershipOf */\n      tag_107\n        /* \"erc721a/contracts/ERC721A.sol\":22214:22241  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_106:\n        /* \"erc721a/contracts/ERC721A.sol\":22184:22241  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":22297:22301  from */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":22256:22301  address(uint160(prevOwnershipPacked)) != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":22272:22291  prevOwnershipPacked */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":22256:22301  address(uint160(prevOwnershipPacked)) != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":22252:22338  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n      tag_108\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22310:22338  TransferFromIncorrectOwner() */\n      mload(0x40)\n      0xa114810000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":22252:22338  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n    tag_108:\n        /* \"erc721a/contracts/ERC721A.sol\":22350:22377  uint256 approvedAddressSlot */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":22379:22402  address approvedAddress */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":22406:22434  _getApprovedAddress(tokenId) */\n      tag_109\n        /* \"erc721a/contracts/ERC721A.sol\":22426:22433  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":22406:22425  _getApprovedAddress */\n      tag_110\n        /* \"erc721a/contracts/ERC721A.sol\":22406:22434  _getApprovedAddress(tokenId) */\n      jump\t// in\n    tag_109:\n        /* \"erc721a/contracts/ERC721A.sol\":22349:22434  (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedAddress(tokenId) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":22531:22593  _isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()) */\n      tag_111\n        /* \"erc721a/contracts/ERC721A.sol\":22550:22565  approvedAddress */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":22567:22571  from */\n      dup8\n        /* \"erc721a/contracts/ERC721A.sol\":22573:22592  _msgSenderERC721A() */\n      tag_112\n        /* \"erc721a/contracts/ERC721A.sol\":22573:22590  _msgSenderERC721A */\n      tag_97\n        /* \"erc721a/contracts/ERC721A.sol\":22573:22592  _msgSenderERC721A() */\n      jump\t// in\n    tag_112:\n        /* \"erc721a/contracts/ERC721A.sol\":22531:22549  _isOwnerOrApproved */\n      tag_113\n        /* \"erc721a/contracts/ERC721A.sol\":22531:22593  _isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_111:\n        /* \"erc721a/contracts/ERC721A.sol\":22526:22699  if (!_isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_114\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22612:22655  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_115\n        /* \"erc721a/contracts/ERC721A.sol\":22629:22633  from */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":22635:22654  _msgSenderERC721A() */\n      tag_116\n        /* \"erc721a/contracts/ERC721A.sol\":22635:22652  _msgSenderERC721A */\n      tag_97\n        /* \"erc721a/contracts/ERC721A.sol\":22635:22654  _msgSenderERC721A() */\n      jump\t// in\n    tag_116:\n        /* \"erc721a/contracts/ERC721A.sol\":22612:22628  isApprovedForAll */\n      tag_78\n        /* \"erc721a/contracts/ERC721A.sol\":22612:22655  isApprovedForAll(from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_115:\n        /* \"erc721a/contracts/ERC721A.sol\":22607:22699  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n      tag_117\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22664:22699  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0x59c896be00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":22607:22699  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n    tag_117:\n        /* \"erc721a/contracts/ERC721A.sol\":22526:22699  if (!_isOwnerOrApproved(approvedAddress, from, _msgSenderERC721A()))... */\n    tag_114:\n        /* \"erc721a/contracts/ERC721A.sol\":22728:22729  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":22714:22730  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":22714:22716  to */\n      dup6\n        /* \"erc721a/contracts/ERC721A.sol\":22714:22730  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":22710:22762  if (to == address(0)) revert TransferToZeroAddress() */\n      tag_118\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22739:22762  TransferToZeroAddress() */\n      mload(0x40)\n      0xea553b3400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":22710:22762  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_118:\n        /* \"erc721a/contracts/ERC721A.sol\":22773:22816  _beforeTokenTransfers(from, to, tokenId, 1) */\n      tag_119\n        /* \"erc721a/contracts/ERC721A.sol\":22795:22799  from */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":22801:22803  to */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":22805:22812  tokenId */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":22814:22815  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":22773:22794  _beforeTokenTransfers */\n      tag_120\n        /* \"erc721a/contracts/ERC721A.sol\":22773:22816  _beforeTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_119:\n        /* \"erc721a/contracts/ERC721A.sol\":22905:22920  approvedAddress */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":22902:23059  if approvedAddress {... */\n      iszero\n      tag_121\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":23043:23044  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":23022:23041  approvedAddressSlot */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":23015:23045  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":22902:23059  if approvedAddress {... */\n    tag_121:\n        /* \"erc721a/contracts/ERC721A.sol\":23429:23447  _packedAddressData */\n      0x05\n        /* \"erc721a/contracts/ERC721A.sol\":23429:23453  _packedAddressData[from] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":23448:23452  from */\n      dup8\n        /* \"erc721a/contracts/ERC721A.sol\":23429:23453  _packedAddressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":23427:23453  --_packedAddressData[from] */\n      dup2\n      sload\n      0x01\n      swap1\n      sub\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":23497:23515  _packedAddressData */\n      0x05\n        /* \"erc721a/contracts/ERC721A.sol\":23497:23519  _packedAddressData[to] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":23516:23518  to */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":23497:23519  _packedAddressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":23495:23519  ++_packedAddressData[to] */\n      dup2\n      sload\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":23812:23954  _packOwnershipData(... */\n      tag_122\n        /* \"erc721a/contracts/ERC721A.sol\":23848:23850  to */\n      dup6\n        /* \"erc721a/contracts/ERC721A.sol\":23895:23940  _nextExtraData(from, to, prevOwnershipPacked) */\n      tag_123\n        /* \"erc721a/contracts/ERC721A.sol\":23910:23914  from */\n      dup9\n        /* \"erc721a/contracts/ERC721A.sol\":23916:23918  to */\n      dup9\n        /* \"erc721a/contracts/ERC721A.sol\":23920:23939  prevOwnershipPacked */\n      dup8\n        /* \"erc721a/contracts/ERC721A.sol\":23895:23909  _nextExtraData */\n      tag_124\n        /* \"erc721a/contracts/ERC721A.sol\":23895:23940  _nextExtraData(from, to, prevOwnershipPacked) */\n      jump\t// in\n    tag_123:\n        /* \"erc721a/contracts/ERC721A.sol\":2046:2054  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"erc721a/contracts/ERC721A.sol\":23868:23940  BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked) */\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":23812:23830  _packOwnershipData */\n      tag_125\n        /* \"erc721a/contracts/ERC721A.sol\":23812:23954  _packOwnershipData(... */\n      jump\t// in\n    tag_122:\n        /* \"erc721a/contracts/ERC721A.sol\":23783:23800  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":23783:23809  _packedOwnerships[tokenId] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":23801:23808  tokenId */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":23783:23809  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":23783:23954  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":24121:24122  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":2046:2054  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"erc721a/contracts/ERC721A.sol\":24071:24090  prevOwnershipPacked */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":24071:24117  prevOwnershipPacked & BITMASK_NEXT_INITIALIZED */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":24071:24122  prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0 */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":24067:24683  if (prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0) {... */\n      tag_126\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":24142:24161  uint256 nextTokenId */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":24174:24175  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":24164:24171  tokenId */\n      dup6\n        /* \"erc721a/contracts/ERC721A.sol\":24164:24175  tokenId + 1 */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":24142:24175  uint256 nextTokenId = tokenId + 1 */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":24329:24330  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":24295:24312  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":24295:24325  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":24313:24324  nextTokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":24295:24325  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":24295:24330  _packedOwnerships[nextTokenId] == 0 */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":24291:24669  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_127\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":24431:24444  _currentIndex */\n      sload(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":24416:24427  nextTokenId */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":24416:24444  nextTokenId != _currentIndex */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":24412:24651  if (nextTokenId != _currentIndex) {... */\n      tag_128\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":24609:24628  prevOwnershipPacked */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":24576:24593  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":24576:24606  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":24594:24605  nextTokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":24576:24606  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":24576:24628  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":24412:24651  if (nextTokenId != _currentIndex) {... */\n    tag_128:\n        /* \"erc721a/contracts/ERC721A.sol\":24291:24669  if (_packedOwnerships[nextTokenId] == 0) {... */\n    tag_127:\n        /* \"erc721a/contracts/ERC721A.sol\":24124:24683  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":24067:24683  if (prevOwnershipPacked & BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_126:\n        /* \"erc721a/contracts/ERC721A.sol\":24727:24734  tokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":24723:24725  to */\n      dup6\n        /* \"erc721a/contracts/ERC721A.sol\":24708:24735  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":24717:24721  from */\n      dup8\n        /* \"erc721a/contracts/ERC721A.sol\":24708:24735  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"erc721a/contracts/ERC721A.sol\":24745:24787  _afterTokenTransfers(from, to, tokenId, 1) */\n      tag_129\n        /* \"erc721a/contracts/ERC721A.sol\":24766:24770  from */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":24772:24774  to */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":24776:24783  tokenId */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":24785:24786  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":24745:24765  _afterTokenTransfers */\n      tag_130\n        /* \"erc721a/contracts/ERC721A.sol\":24745:24787  _afterTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_129:\n        /* \"erc721a/contracts/ERC721A.sol\":22174:24794  {... */\n      pop\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":22055:24794  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":13912:14091  function safeTransferFrom(... */\n    tag_50:\n        /* \"erc721a/contracts/ERC721A.sol\":14045:14084  safeTransferFrom(from, to, tokenId, '') */\n      tag_132\n        /* \"erc721a/contracts/ERC721A.sol\":14062:14066  from */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":14068:14070  to */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":14072:14079  tokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":14045:14084  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":14045:14061  safeTransferFrom */\n      tag_70\n        /* \"erc721a/contracts/ERC721A.sol\":14045:14084  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_132:\n        /* \"erc721a/contracts/ERC721A.sol\":13912:14091  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":10957:11099  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_53:\n        /* \"erc721a/contracts/ERC721A.sol\":11021:11028  address */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":11063:11090  _packedOwnershipOf(tokenId) */\n      tag_134\n        /* \"erc721a/contracts/ERC721A.sol\":11082:11089  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":11063:11081  _packedOwnershipOf */\n      tag_107\n        /* \"erc721a/contracts/ERC721A.sol\":11063:11090  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_134:\n        /* \"erc721a/contracts/ERC721A.sol\":11040:11092  return address(uint160(_packedOwnershipOf(tokenId))) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":10957:11099  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":6319:6540  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_58:\n        /* \"erc721a/contracts/ERC721A.sol\":6383:6390  uint256 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":6423:6424  0 */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":6406:6425  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":6406:6411  owner */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":6406:6425  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":6402:6462  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      tag_136\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":6434:6462  BalanceQueryForZeroAddress() */\n      mload(0x40)\n      0x8f4eb60400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":6402:6462  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_136:\n        /* \"erc721a/contracts/ERC721A.sol\":1022:1035  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"erc721a/contracts/ERC721A.sol\":6479:6497  _packedAddressData */\n      0x05\n        /* \"erc721a/contracts/ERC721A.sol\":6479:6504  _packedAddressData[owner] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":6498:6503  owner */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":6479:6504  _packedAddressData[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":6479:6533  _packedAddressData[owner] & BITMASK_ADDRESS_DATA_ENTRY */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":6472:6533  return _packedAddressData[owner] & BITMASK_ADDRESS_DATA_ENTRY */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":6319:6540  function balanceOf(address owner) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":11323:11425  function symbol() public view virtual override returns (string memory) {... */\n    tag_61:\n        /* \"erc721a/contracts/ERC721A.sol\":11379:11392  string memory */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":11411:11418  _symbol */\n      0x03\n        /* \"erc721a/contracts/ERC721A.sol\":11404:11418  return _symbol */\n      dup1\n      sload\n      tag_138\n      swap1\n      tag_85\n      jump\t// in\n    tag_138:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_139\n      swap1\n      tag_85\n      jump\t// in\n    tag_139:\n      dup1\n      iszero\n      tag_140\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_141\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_140)\n    tag_141:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_142:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_142\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_140:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":11323:11425  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":13315:13618  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_66:\n        /* \"erc721a/contracts/ERC721A.sol\":13425:13444  _msgSenderERC721A() */\n      tag_144\n        /* \"erc721a/contracts/ERC721A.sol\":13425:13442  _msgSenderERC721A */\n      tag_97\n        /* \"erc721a/contracts/ERC721A.sol\":13425:13444  _msgSenderERC721A() */\n      jump\t// in\n    tag_144:\n        /* \"erc721a/contracts/ERC721A.sol\":13413:13444  operator == _msgSenderERC721A() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":13413:13421  operator */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":13413:13444  operator == _msgSenderERC721A() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":13409:13470  if (operator == _msgSenderERC721A()) revert ApproveToCaller() */\n      tag_145\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":13453:13470  ApproveToCaller() */\n      mload(0x40)\n      0xb06307db00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":13409:13470  if (operator == _msgSenderERC721A()) revert ApproveToCaller() */\n    tag_145:\n        /* \"erc721a/contracts/ERC721A.sol\":13533:13541  approved */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13499  _operatorApprovals */\n      0x07\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13520  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13500:13519  _msgSenderERC721A() */\n      tag_146\n        /* \"erc721a/contracts/ERC721A.sol\":13500:13517  _msgSenderERC721A */\n      tag_97\n        /* \"erc721a/contracts/ERC721A.sol\":13500:13519  _msgSenderERC721A() */\n      jump\t// in\n    tag_146:\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13520  _operatorApprovals[_msgSenderERC721A()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13530  _operatorApprovals[_msgSenderERC721A()][operator] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13521:13529  operator */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13530  _operatorApprovals[_msgSenderERC721A()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13481:13541  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":13592:13600  operator */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":13556:13611  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":13571:13590  _msgSenderERC721A() */\n      tag_147\n        /* \"erc721a/contracts/ERC721A.sol\":13571:13588  _msgSenderERC721A */\n      tag_97\n        /* \"erc721a/contracts/ERC721A.sol\":13571:13590  _msgSenderERC721A() */\n      jump\t// in\n    tag_147:\n        /* \"erc721a/contracts/ERC721A.sol\":13556:13611  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"erc721a/contracts/ERC721A.sol\":13602:13610  approved */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":13556:13611  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      tag_148\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"erc721a/contracts/ERC721A.sol\":13315:13618  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":14157:14545  function safeTransferFrom(... */\n    tag_70:\n        /* \"erc721a/contracts/ERC721A.sol\":14318:14349  transferFrom(from, to, tokenId) */\n      tag_150\n        /* \"erc721a/contracts/ERC721A.sol\":14331:14335  from */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14337:14339  to */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14341:14348  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14318:14330  transferFrom */\n      tag_47\n        /* \"erc721a/contracts/ERC721A.sol\":14318:14349  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_150:\n        /* \"erc721a/contracts/ERC721A.sol\":14381:14382  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":14363:14365  to */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":14363:14377  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"erc721a/contracts/ERC721A.sol\":14363:14382  to.code.length != 0 */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":14359:14539  if (to.code.length != 0)... */\n      tag_151\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":14401:14457  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_152\n        /* \"erc721a/contracts/ERC721A.sol\":14432:14436  from */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14438:14440  to */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14442:14449  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14451:14456  _data */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":14401:14431  _checkContractOnERC721Received */\n      tag_153\n        /* \"erc721a/contracts/ERC721A.sol\":14401:14457  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_152:\n        /* \"erc721a/contracts/ERC721A.sol\":14396:14539  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_154\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":14484:14524  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":14396:14539  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_154:\n        /* \"erc721a/contracts/ERC721A.sol\":14359:14539  if (to.code.length != 0)... */\n    tag_151:\n        /* \"erc721a/contracts/ERC721A.sol\":14157:14545  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":11491:11804  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_73:\n        /* \"erc721a/contracts/ERC721A.sol\":11564:11577  string memory */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":11594:11610  _exists(tokenId) */\n      tag_156\n        /* \"erc721a/contracts/ERC721A.sol\":11602:11609  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":11594:11601  _exists */\n      tag_92\n        /* \"erc721a/contracts/ERC721A.sol\":11594:11610  _exists(tokenId) */\n      jump\t// in\n    tag_156:\n        /* \"erc721a/contracts/ERC721A.sol\":11589:11648  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n      tag_157\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":11619:11648  URIQueryForNonexistentToken() */\n      mload(0x40)\n      0xa14c4b5000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":11589:11648  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n    tag_157:\n        /* \"erc721a/contracts/ERC721A.sol\":11659:11680  string memory baseURI */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":11683:11693  _baseURI() */\n      tag_158\n        /* \"erc721a/contracts/ERC721A.sol\":11683:11691  _baseURI */\n      tag_159\n        /* \"erc721a/contracts/ERC721A.sol\":11683:11693  _baseURI() */\n      jump\t// in\n    tag_158:\n        /* \"erc721a/contracts/ERC721A.sol\":11659:11693  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":11735:11736  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":11716:11723  baseURI */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":11710:11731  bytes(baseURI).length */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":11710:11736  bytes(baseURI).length != 0 */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":11710:11797  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      tag_160\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_161)\n    tag_160:\n        /* \"erc721a/contracts/ERC721A.sol\":11763:11770  baseURI */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":11772:11790  _toString(tokenId) */\n      tag_162\n        /* \"erc721a/contracts/ERC721A.sol\":11782:11789  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":11772:11781  _toString */\n      tag_163\n        /* \"erc721a/contracts/ERC721A.sol\":11772:11790  _toString(tokenId) */\n      jump\t// in\n    tag_162:\n        /* \"erc721a/contracts/ERC721A.sol\":11746:11791  abi.encodePacked(baseURI, _toString(tokenId)) */\n      add(0x20, mload(0x40))\n      tag_164\n      swap3\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":11710:11797  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n    tag_161:\n        /* \"erc721a/contracts/ERC721A.sol\":11703:11797  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      swap2\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":11491:11804  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":13684:13846  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_78:\n        /* \"erc721a/contracts/ERC721A.sol\":13781:13785  bool */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13822  _operatorApprovals */\n      0x07\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13829  _operatorApprovals[owner] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13823:13828  owner */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13829  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13839  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13830:13838  operator */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":13804:13839  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":13797:13839  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":13684:13846  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":14791:15059  function _exists(uint256 tokenId) internal view returns (bool) {... */\n    tag_92:\n        /* \"erc721a/contracts/ERC721A.sol\":14848:14852  bool */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":14902:14909  tokenId */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":14883:14898  _startTokenId() */\n      tag_168\n        /* \"erc721a/contracts/ERC721A.sol\":14883:14896  _startTokenId */\n      tag_104\n        /* \"erc721a/contracts/ERC721A.sol\":14883:14898  _startTokenId() */\n      jump\t// in\n    tag_168:\n        /* \"erc721a/contracts/ERC721A.sol\":14883:14909  _startTokenId() <= tokenId */\n      gt\n      iszero\n        /* \"erc721a/contracts/ERC721A.sol\":14883:14948  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_169\n      jumpi\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":14935:14948  _currentIndex */\n      sload(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":14925:14932  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":14925:14948  tokenId < _currentIndex */\n      lt\n        /* \"erc721a/contracts/ERC721A.sol\":14883:14948  _startTokenId() <= tokenId &&... */\n    tag_169:\n        /* \"erc721a/contracts/ERC721A.sol\":14883:15033  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_170\n      jumpi\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":15032:15033  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":1774:1782  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15002  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15011  _packedOwnerships[tokenId] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":15003:15010  tokenId */\n      dup6\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15011  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15028  _packedOwnerships[tokenId] & BITMASK_BURNED */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":14985:15033  _packedOwnerships[tokenId] & BITMASK_BURNED == 0 */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":14883:15033  _startTokenId() <= tokenId &&... */\n    tag_170:\n        /* \"erc721a/contracts/ERC721A.sol\":14864:15033  return... */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":14791:15059  function _exists(uint256 tokenId) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":32874:32977  function _msgSenderERC721A() internal view virtual returns (address) {... */\n    tag_97:\n        /* \"erc721a/contracts/ERC721A.sol\":32934:32941  address */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":32960:32970  msg.sender */\n      caller\n        /* \"erc721a/contracts/ERC721A.sol\":32953:32970  return msg.sender */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":32874:32977  function _msgSenderERC721A() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":4276:4366  function _startTokenId() internal view virtual returns (uint256) {... */\n    tag_104:\n        /* \"erc721a/contracts/ERC721A.sol\":4332:4339  uint256 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":4276:4366  function _startTokenId() internal view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":7949:9054  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {... */\n    tag_107:\n        /* \"erc721a/contracts/ERC721A.sol\":8016:8023  uint256 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":8035:8047  uint256 curr */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":8050:8057  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":8035:8057  uint256 curr = tokenId */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":8115:8119  curr */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":8096:8111  _startTokenId() */\n      tag_174\n        /* \"erc721a/contracts/ERC721A.sol\":8096:8109  _startTokenId */\n      tag_104\n        /* \"erc721a/contracts/ERC721A.sol\":8096:8111  _startTokenId() */\n      jump\t// in\n    tag_174:\n        /* \"erc721a/contracts/ERC721A.sol\":8096:8119  _startTokenId() <= curr */\n      gt\n        /* \"erc721a/contracts/ERC721A.sol\":8092:8990  if (_startTokenId() <= curr)... */\n      tag_175\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":8148:8161  _currentIndex */\n      sload(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":8141:8145  curr */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":8141:8161  curr < _currentIndex */\n      lt\n        /* \"erc721a/contracts/ERC721A.sol\":8137:8990  if (curr < _currentIndex) {... */\n      iszero\n      tag_176\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":8185:8199  uint256 packed */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":8202:8219  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":8202:8225  _packedOwnerships[curr] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":8220:8224  curr */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":8202:8225  _packedOwnerships[curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":8185:8225  uint256 packed = _packedOwnerships[curr] */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":8316:8317  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":1774:1782  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"erc721a/contracts/ERC721A.sol\":8289:8295  packed */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":8289:8312  packed & BITMASK_BURNED */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":8289:8317  packed & BITMASK_BURNED == 0 */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":8285:8972  if (packed & BITMASK_BURNED == 0) {... */\n      tag_177\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":8800:8911  while (packed == 0) {... */\n    tag_178:\n        /* \"erc721a/contracts/ERC721A.sol\":8817:8818  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":8807:8813  packed */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":8807:8818  packed == 0 */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":8800:8911  while (packed == 0) {... */\n      tag_179\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":8859:8876  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":8859:8884  _packedOwnerships[--curr] */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":8877:8883  --curr */\n      dup4\n      0x01\n      swap1\n      sub\n      swap4\n      pop\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":8859:8884  _packedOwnerships[--curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":8850:8884  packed = _packedOwnerships[--curr] */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":8800:8911  while (packed == 0) {... */\n      jump(tag_178)\n    tag_179:\n        /* \"erc721a/contracts/ERC721A.sol\":8943:8949  packed */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":8936:8949  return packed */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_173)\n        /* \"erc721a/contracts/ERC721A.sol\":8285:8972  if (packed & BITMASK_BURNED == 0) {... */\n    tag_177:\n        /* \"erc721a/contracts/ERC721A.sol\":8163:8990  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":8137:8990  if (curr < _currentIndex) {... */\n    tag_176:\n        /* \"erc721a/contracts/ERC721A.sol\":8092:8990  if (_startTokenId() <= curr)... */\n    tag_175:\n        /* \"erc721a/contracts/ERC721A.sol\":9016:9047  OwnerQueryForNonexistentToken() */\n      mload(0x40)\n      0xdf2d9b4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":7949:9054  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {... */\n    tag_173:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":20436:21073  function _getApprovedAddress(uint256 tokenId)... */\n    tag_110:\n        /* \"erc721a/contracts/ERC721A.sol\":20528:20555  uint256 approvedAddressSlot */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":20557:20580  address approvedAddress */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":20596:20649  mapping(uint256 => address) storage tokenApprovalsPtr */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":20652:20667  _tokenApprovals */\n      0x06\n        /* \"erc721a/contracts/ERC721A.sol\":20596:20667  mapping(uint256 => address) storage tokenApprovalsPtr = _tokenApprovals */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":20834:20841  tokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":20828:20832  0x00 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":20821:20842  mstore(0x00, tokenId) */\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":20868:20890  tokenApprovalsPtr.slot */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":20862:20866  0x20 */\n      0x20\n        /* \"erc721a/contracts/ERC721A.sol\":20855:20891  mstore(0x20, tokenApprovalsPtr.slot) */\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":20943:20947  0x40 */\n      0x40\n        /* \"erc721a/contracts/ERC721A.sol\":20937:20941  0x00 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":20927:20948  keccak256(0x00, 0x40) */\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":20904:20948  approvedAddressSlot := keccak256(0x00, 0x40) */\n      swap3\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":21037:21056  approvedAddressSlot */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":21031:21057  sload(approvedAddressSlot) */\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":21012:21057  approvedAddress := sload(approvedAddressSlot) */\n      swap2\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":20774:21067  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":20436:21073  function _getApprovedAddress(uint256 tokenId)... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":21181:21813  function _isOwnerOrApproved(... */\n    tag_113:\n        /* \"erc721a/contracts/ERC721A.sol\":21319:21330  bool result */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":21478:21493  BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"erc721a/contracts/ERC721A.sol\":21472:21476  from */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":21468:21494  and(from, BITMASK_ADDRESS) */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":21460:21494  from := and(from, BITMASK_ADDRESS) */\n      swap3\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":21635:21650  BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"erc721a/contracts/ERC721A.sol\":21624:21633  msgSender */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":21620:21651  and(msgSender, BITMASK_ADDRESS) */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":21607:21651  msgSender := and(msgSender, BITMASK_ADDRESS) */\n      swap2\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":21780:21795  approvedAddress */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":21769:21778  msgSender */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":21766:21796  eq(msgSender, approvedAddress) */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":21759:21763  from */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":21748:21757  msgSender */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":21745:21764  eq(msgSender, from) */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":21742:21797  or(eq(msgSender, from), eq(msgSender, approvedAddress)) */\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":21732:21797  result := or(eq(msgSender, from), eq(msgSender, approvedAddress)) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":21181:21813  function _isOwnerOrApproved(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":31742:31896  function _beforeTokenTransfers(... */\n    tag_120:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":30099:30401  function _nextExtraData(... */\n    tag_124:\n        /* \"erc721a/contracts/ERC721A.sol\":30230:30237  uint256 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":30249:30265  uint24 extraData */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":2166:2169  232 */\n      0xe8\n        /* \"erc721a/contracts/ERC721A.sol\":30275:30294  prevOwnershipPacked */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":30275:30315  prevOwnershipPacked >> BITPOS_EXTRA_DATA */\n      swap1\n      shr\n        /* \"erc721a/contracts/ERC721A.sol\":30249:30316  uint24 extraData = uint24(prevOwnershipPacked >> BITPOS_EXTRA_DATA) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":2166:2169  232 */\n      0xe8\n        /* \"erc721a/contracts/ERC721A.sol\":30341:30372  _extraData(from, to, extraData) */\n      tag_184\n        /* \"erc721a/contracts/ERC721A.sol\":30352:30356  from */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":30358:30360  to */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":30362:30371  extraData */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":30341:30351  _extraData */\n      tag_185\n        /* \"erc721a/contracts/ERC721A.sol\":30341:30372  _extraData(from, to, extraData) */\n      jump\t// in\n    tag_184:\n        /* \"erc721a/contracts/ERC721A.sol\":30333:30373  uint256(_extraData(from, to, extraData)) */\n      0xffffff\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":30333:30394  uint256(_extraData(from, to, extraData)) << BITPOS_EXTRA_DATA */\n      swap1\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":30326:30394  return uint256(_extraData(from, to, extraData)) << BITPOS_EXTRA_DATA */\n      swap2\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":30099:30401  function _nextExtraData(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":10460:10900  function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {... */\n    tag_125:\n        /* \"erc721a/contracts/ERC721A.sol\":10540:10554  uint256 result */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":10705:10720  BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"erc721a/contracts/ERC721A.sol\":10698:10703  owner */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":10694:10721  and(owner, BITMASK_ADDRESS) */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":10685:10721  owner := and(owner, BITMASK_ADDRESS) */\n      swap3\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":10877:10882  flags */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":10863:10874  timestamp() */\n      timestamp\n        /* \"erc721a/contracts/ERC721A.sol\":10839:10861  BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"erc721a/contracts/ERC721A.sol\":10835:10875  shl(BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":10832:10883  or(shl(BITPOS_START_TIMESTAMP, timestamp()), flags) */\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":10825:10830  owner */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":10822:10884  or(owner, or(shl(BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":10812:10884  result := or(owner, or(shl(BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":10460:10900  function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":32537:32690  function _afterTokenTransfers(... */\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":28649:29346  function _checkContractOnERC721Received(... */\n    tag_153:\n        /* \"erc721a/contracts/ERC721A.sol\":28807:28811  bool */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":28852:28854  to */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":28827:28872  ERC721A__IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"erc721a/contracts/ERC721A.sol\":28873:28892  _msgSenderERC721A() */\n      tag_189\n        /* \"erc721a/contracts/ERC721A.sol\":28873:28890  _msgSenderERC721A */\n      tag_97\n        /* \"erc721a/contracts/ERC721A.sol\":28873:28892  _msgSenderERC721A() */\n      jump\t// in\n    tag_189:\n        /* \"erc721a/contracts/ERC721A.sol\":28894:28898  from */\n      dup8\n        /* \"erc721a/contracts/ERC721A.sol\":28900:28907  tokenId */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":28909:28914  _data */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":28827:28915  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_192\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_193\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      0x01\n    tag_192:\n        /* \"erc721a/contracts/ERC721A.sol\":28823:29340  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_195\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_200\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_199)\n    tag_200:\n      0x60\n      swap2\n      pop\n    tag_199:\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":29122:29123  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":29105:29111  reason */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":29105:29118  reason.length */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":29105:29123  reason.length == 0 */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":29101:29330  if (reason.length == 0) {... */\n      tag_201\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":29150:29190  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":29101:29330  if (reason.length == 0) {... */\n    tag_201:\n        /* \"erc721a/contracts/ERC721A.sol\":29290:29296  reason */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":29284:29297  mload(reason) */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":29275:29281  reason */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":29271:29273  32 */\n      0x20\n        /* \"erc721a/contracts/ERC721A.sol\":29267:29282  add(32, reason) */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":29260:29298  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":28823:29340  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_195:\n        /* \"erc721a/contracts/ERC721A.sol\":28993:29047  ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"erc721a/contracts/ERC721A.sol\":28983:29047  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":28983:28989  retval */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":28983:29047  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":28976:29047  return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      swap2\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":28649:29346  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":12049:12141  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_159:\n        /* \"erc721a/contracts/ERC721A.sol\":12100:12113  string memory */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":12125:12134  return '' */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":12049:12141  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":33078:34998  function _toString(uint256 value) internal pure returns (string memory ptr) {... */\n    tag_163:\n        /* \"erc721a/contracts/ERC721A.sol\":33135:33152  string memory ptr */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":33548:33551  128 */\n      0x80\n        /* \"erc721a/contracts/ERC721A.sol\":33541:33545  0x40 */\n      0x40\n        /* \"erc721a/contracts/ERC721A.sol\":33535:33546  mload(0x40) */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":33531:33552  add(mload(0x40), 128) */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":33524:33552  ptr := add(mload(0x40), 128) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":33637:33640  ptr */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":33631:33635  0x40 */\n      0x40\n        /* \"erc721a/contracts/ERC721A.sol\":33624:33641  mstore(0x40, ptr) */\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":33740:33743  ptr */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":34188:34193  value */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":34316:34317  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":34311:34314  ptr */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":34307:34318  sub(ptr, 1) */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":34300:34318  ptr := sub(ptr, 1) */\n      swap3\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":34451:34453  10 */\n      0x0a\n        /* \"erc721a/contracts/ERC721A.sol\":34445:34449  temp */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":34441:34454  mod(temp, 10) */\n      mod\n        /* \"erc721a/contracts/ERC721A.sol\":34437:34439  48 */\n      0x30\n        /* \"erc721a/contracts/ERC721A.sol\":34433:34455  add(48, mod(temp, 10)) */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":34428:34431  ptr */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":34420:34456  mstore8(ptr, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"erc721a/contracts/ERC721A.sol\":34491:34493  10 */\n      0x0a\n        /* \"erc721a/contracts/ERC721A.sol\":34485:34489  temp */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":34481:34494  div(temp, 10) */\n      div\n        /* \"erc721a/contracts/ERC721A.sol\":34473:34494  temp := div(temp, 10) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":34082:34764  for {... */\n    tag_206:\n        /* \"erc721a/contracts/ERC721A.sol\":34509:34513  temp */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":34082:34764  for {... */\n      iszero\n      tag_208\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":34695:34696  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":34690:34693  ptr */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":34686:34697  sub(ptr, 1) */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":34679:34697  ptr := sub(ptr, 1) */\n      swap3\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":34745:34747  10 */\n      0x0a\n        /* \"erc721a/contracts/ERC721A.sol\":34739:34743  temp */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":34735:34748  mod(temp, 10) */\n      mod\n        /* \"erc721a/contracts/ERC721A.sol\":34731:34733  48 */\n      0x30\n        /* \"erc721a/contracts/ERC721A.sol\":34727:34749  add(48, mod(temp, 10)) */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":34722:34725  ptr */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":34714:34750  mstore8(ptr, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"erc721a/contracts/ERC721A.sol\":34602:34604  10 */\n      0x0a\n        /* \"erc721a/contracts/ERC721A.sol\":34596:34600  temp */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":34592:34605  div(temp, 10) */\n      div\n        /* \"erc721a/contracts/ERC721A.sol\":34584:34605  temp := div(temp, 10) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":34082:34764  for {... */\n      jump(tag_206)\n    tag_208:\n        /* \"erc721a/contracts/ERC721A.sol\":34086:34508  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":34801:34804  ptr */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":34796:34799  end */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":34792:34805  sub(end, ptr) */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":34914:34916  32 */\n      0x20\n        /* \"erc721a/contracts/ERC721A.sol\":34909:34912  ptr */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":34905:34917  sub(ptr, 32) */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":34898:34917  ptr := sub(ptr, 32) */\n      swap3\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":34975:34981  length */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":34970:34973  ptr */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":34963:34982  mstore(ptr, length) */\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":33173:34992  {... */\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":33078:34998  function _toString(uint256 value) internal pure returns (string memory ptr) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":30961:31104  function _extraData(... */\n    tag_185:\n        /* \"erc721a/contracts/ERC721A.sol\":31094:31100  uint24 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":30961:31104  function _extraData(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_210:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_211:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_212:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_213:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_214:\n        /* \"#utility.yul\":561:584   */\n      tag_256\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_213\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_257\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_257:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_215:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_259\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_214\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_22:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_262\n      tag_211\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":833:952   */\n    tag_261:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_263\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_215\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_216:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_217:\n        /* \"#utility.yul\":1268:1289   */\n      tag_266\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_216\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_25:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_268\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_217\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_218:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_219:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2105   */\n    tag_220:\n        /* \"#utility.yul\":1866:1867   */\n      0x00\n        /* \"#utility.yul\":1876:1989   */\n    tag_272:\n        /* \"#utility.yul\":1890:1896   */\n      dup4\n        /* \"#utility.yul\":1887:1888   */\n      dup2\n        /* \"#utility.yul\":1884:1897   */\n      lt\n        /* \"#utility.yul\":1876:1989   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":1975:1976   */\n      dup1\n        /* \"#utility.yul\":1970:1973   */\n      dup3\n        /* \"#utility.yul\":1966:1977   */\n      add\n        /* \"#utility.yul\":1960:1978   */\n      mload\n        /* \"#utility.yul\":1956:1957   */\n      dup2\n        /* \"#utility.yul\":1951:1954   */\n      dup5\n        /* \"#utility.yul\":1947:1958   */\n      add\n        /* \"#utility.yul\":1940:1979   */\n      mstore\n        /* \"#utility.yul\":1912:1914   */\n      0x20\n        /* \"#utility.yul\":1909:1910   */\n      dup2\n        /* \"#utility.yul\":1905:1915   */\n      add\n        /* \"#utility.yul\":1900:1915   */\n      swap1\n      pop\n        /* \"#utility.yul\":1876:1989   */\n      jump(tag_272)\n    tag_274:\n        /* \"#utility.yul\":2007:2013   */\n      dup4\n        /* \"#utility.yul\":2004:2005   */\n      dup2\n        /* \"#utility.yul\":2001:2014   */\n      gt\n        /* \"#utility.yul\":1998:2099   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":2087:2088   */\n      0x00\n        /* \"#utility.yul\":2078:2084   */\n      dup5\n        /* \"#utility.yul\":2073:2076   */\n      dup5\n        /* \"#utility.yul\":2069:2085   */\n      add\n        /* \"#utility.yul\":2062:2089   */\n      mstore\n        /* \"#utility.yul\":1998:2099   */\n    tag_275:\n        /* \"#utility.yul\":1847:2105   */\n      pop\n        /* \"#utility.yul\":1798:2105   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2111:2213   */\n    tag_221:\n        /* \"#utility.yul\":2152:2158   */\n      0x00\n        /* \"#utility.yul\":2203:2205   */\n      0x1f\n        /* \"#utility.yul\":2199:2206   */\n      not\n        /* \"#utility.yul\":2194:2196   */\n      0x1f\n        /* \"#utility.yul\":2187:2192   */\n      dup4\n        /* \"#utility.yul\":2183:2197   */\n      add\n        /* \"#utility.yul\":2179:2207   */\n      and\n        /* \"#utility.yul\":2169:2207   */\n      swap1\n      pop\n        /* \"#utility.yul\":2111:2213   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2583   */\n    tag_222:\n        /* \"#utility.yul\":2307:2310   */\n      0x00\n        /* \"#utility.yul\":2335:2374   */\n      tag_278\n        /* \"#utility.yul\":2368:2373   */\n      dup3\n        /* \"#utility.yul\":2335:2374   */\n      tag_218\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":2390:2461   */\n      tag_279\n        /* \"#utility.yul\":2454:2460   */\n      dup2\n        /* \"#utility.yul\":2449:2452   */\n      dup6\n        /* \"#utility.yul\":2390:2461   */\n      tag_219\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":2383:2461   */\n      swap4\n      pop\n        /* \"#utility.yul\":2470:2522   */\n      tag_280\n        /* \"#utility.yul\":2515:2521   */\n      dup2\n        /* \"#utility.yul\":2510:2513   */\n      dup6\n        /* \"#utility.yul\":2503:2507   */\n      0x20\n        /* \"#utility.yul\":2496:2501   */\n      dup7\n        /* \"#utility.yul\":2492:2508   */\n      add\n        /* \"#utility.yul\":2470:2522   */\n      tag_220\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":2547:2576   */\n      tag_281\n        /* \"#utility.yul\":2569:2575   */\n      dup2\n        /* \"#utility.yul\":2547:2576   */\n      tag_221\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":2542:2545   */\n      dup5\n        /* \"#utility.yul\":2538:2577   */\n      add\n        /* \"#utility.yul\":2531:2577   */\n      swap2\n      pop\n        /* \"#utility.yul\":2311:2583   */\n      pop\n        /* \"#utility.yul\":2219:2583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2589:2902   */\n    tag_29:\n        /* \"#utility.yul\":2702:2706   */\n      0x00\n        /* \"#utility.yul\":2740:2742   */\n      0x20\n        /* \"#utility.yul\":2729:2738   */\n      dup3\n        /* \"#utility.yul\":2725:2743   */\n      add\n        /* \"#utility.yul\":2717:2743   */\n      swap1\n      pop\n        /* \"#utility.yul\":2789:2798   */\n      dup2\n        /* \"#utility.yul\":2783:2787   */\n      dup2\n        /* \"#utility.yul\":2779:2799   */\n      sub\n        /* \"#utility.yul\":2775:2776   */\n      0x00\n        /* \"#utility.yul\":2764:2773   */\n      dup4\n        /* \"#utility.yul\":2760:2777   */\n      add\n        /* \"#utility.yul\":2753:2800   */\n      mstore\n        /* \"#utility.yul\":2817:2895   */\n      tag_283\n        /* \"#utility.yul\":2890:2894   */\n      dup2\n        /* \"#utility.yul\":2881:2887   */\n      dup5\n        /* \"#utility.yul\":2817:2895   */\n      tag_222\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":2809:2895   */\n      swap1\n      pop\n        /* \"#utility.yul\":2589:2902   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2908:2985   */\n    tag_223:\n        /* \"#utility.yul\":2945:2952   */\n      0x00\n        /* \"#utility.yul\":2974:2979   */\n      dup2\n        /* \"#utility.yul\":2963:2979   */\n      swap1\n      pop\n        /* \"#utility.yul\":2908:2985   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2991:3113   */\n    tag_224:\n        /* \"#utility.yul\":3064:3088   */\n      tag_286\n        /* \"#utility.yul\":3082:3087   */\n      dup2\n        /* \"#utility.yul\":3064:3088   */\n      tag_223\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":3057:3062   */\n      dup2\n        /* \"#utility.yul\":3054:3089   */\n      eq\n        /* \"#utility.yul\":3044:3107   */\n      tag_287\n      jumpi\n        /* \"#utility.yul\":3103:3104   */\n      0x00\n        /* \"#utility.yul\":3100:3101   */\n      dup1\n        /* \"#utility.yul\":3093:3105   */\n      revert\n        /* \"#utility.yul\":3044:3107   */\n    tag_287:\n        /* \"#utility.yul\":2991:3113   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3119:3258   */\n    tag_225:\n        /* \"#utility.yul\":3165:3170   */\n      0x00\n        /* \"#utility.yul\":3203:3209   */\n      dup2\n        /* \"#utility.yul\":3190:3210   */\n      calldataload\n        /* \"#utility.yul\":3181:3210   */\n      swap1\n      pop\n        /* \"#utility.yul\":3219:3252   */\n      tag_289\n        /* \"#utility.yul\":3246:3251   */\n      dup2\n        /* \"#utility.yul\":3219:3252   */\n      tag_224\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":3119:3258   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3264:3593   */\n    tag_32:\n        /* \"#utility.yul\":3323:3329   */\n      0x00\n        /* \"#utility.yul\":3372:3374   */\n      0x20\n        /* \"#utility.yul\":3360:3369   */\n      dup3\n        /* \"#utility.yul\":3351:3358   */\n      dup5\n        /* \"#utility.yul\":3347:3370   */\n      sub\n        /* \"#utility.yul\":3343:3375   */\n      slt\n        /* \"#utility.yul\":3340:3459   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":3378:3457   */\n      tag_292\n      tag_211\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":3340:3459   */\n    tag_291:\n        /* \"#utility.yul\":3498:3499   */\n      0x00\n        /* \"#utility.yul\":3523:3576   */\n      tag_293\n        /* \"#utility.yul\":3568:3575   */\n      dup5\n        /* \"#utility.yul\":3559:3565   */\n      dup3\n        /* \"#utility.yul\":3548:3557   */\n      dup6\n        /* \"#utility.yul\":3544:3566   */\n      add\n        /* \"#utility.yul\":3523:3576   */\n      tag_225\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":3513:3576   */\n      swap2\n      pop\n        /* \"#utility.yul\":3469:3586   */\n      pop\n        /* \"#utility.yul\":3264:3593   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3599:3725   */\n    tag_226:\n        /* \"#utility.yul\":3636:3643   */\n      0x00\n        /* \"#utility.yul\":3676:3718   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3669:3674   */\n      dup3\n        /* \"#utility.yul\":3665:3719   */\n      and\n        /* \"#utility.yul\":3654:3719   */\n      swap1\n      pop\n        /* \"#utility.yul\":3599:3725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3731:3827   */\n    tag_227:\n        /* \"#utility.yul\":3768:3775   */\n      0x00\n        /* \"#utility.yul\":3797:3821   */\n      tag_296\n        /* \"#utility.yul\":3815:3820   */\n      dup3\n        /* \"#utility.yul\":3797:3821   */\n      tag_226\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":3786:3821   */\n      swap1\n      pop\n        /* \"#utility.yul\":3731:3827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3833:3951   */\n    tag_228:\n        /* \"#utility.yul\":3920:3944   */\n      tag_298\n        /* \"#utility.yul\":3938:3943   */\n      dup2\n        /* \"#utility.yul\":3920:3944   */\n      tag_227\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":3915:3918   */\n      dup3\n        /* \"#utility.yul\":3908:3945   */\n      mstore\n        /* \"#utility.yul\":3833:3951   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3957:4179   */\n    tag_35:\n        /* \"#utility.yul\":4050:4054   */\n      0x00\n        /* \"#utility.yul\":4088:4090   */\n      0x20\n        /* \"#utility.yul\":4077:4086   */\n      dup3\n        /* \"#utility.yul\":4073:4091   */\n      add\n        /* \"#utility.yul\":4065:4091   */\n      swap1\n      pop\n        /* \"#utility.yul\":4101:4172   */\n      tag_300\n        /* \"#utility.yul\":4169:4170   */\n      0x00\n        /* \"#utility.yul\":4158:4167   */\n      dup4\n        /* \"#utility.yul\":4154:4171   */\n      add\n        /* \"#utility.yul\":4145:4151   */\n      dup5\n        /* \"#utility.yul\":4101:4172   */\n      tag_228\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":3957:4179   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4185:4307   */\n    tag_229:\n        /* \"#utility.yul\":4258:4282   */\n      tag_302\n        /* \"#utility.yul\":4276:4281   */\n      dup2\n        /* \"#utility.yul\":4258:4282   */\n      tag_227\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":4251:4256   */\n      dup2\n        /* \"#utility.yul\":4248:4283   */\n      eq\n        /* \"#utility.yul\":4238:4301   */\n      tag_303\n      jumpi\n        /* \"#utility.yul\":4297:4298   */\n      0x00\n        /* \"#utility.yul\":4294:4295   */\n      dup1\n        /* \"#utility.yul\":4287:4299   */\n      revert\n        /* \"#utility.yul\":4238:4301   */\n    tag_303:\n        /* \"#utility.yul\":4185:4307   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4313:4452   */\n    tag_230:\n        /* \"#utility.yul\":4359:4364   */\n      0x00\n        /* \"#utility.yul\":4397:4403   */\n      dup2\n        /* \"#utility.yul\":4384:4404   */\n      calldataload\n        /* \"#utility.yul\":4375:4404   */\n      swap1\n      pop\n        /* \"#utility.yul\":4413:4446   */\n      tag_305\n        /* \"#utility.yul\":4440:4445   */\n      dup2\n        /* \"#utility.yul\":4413:4446   */\n      tag_229\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":4313:4452   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4458:4932   */\n    tag_38:\n        /* \"#utility.yul\":4526:4532   */\n      0x00\n        /* \"#utility.yul\":4534:4540   */\n      dup1\n        /* \"#utility.yul\":4583:4585   */\n      0x40\n        /* \"#utility.yul\":4571:4580   */\n      dup4\n        /* \"#utility.yul\":4562:4569   */\n      dup6\n        /* \"#utility.yul\":4558:4581   */\n      sub\n        /* \"#utility.yul\":4554:4586   */\n      slt\n        /* \"#utility.yul\":4551:4670   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":4589:4668   */\n      tag_308\n      tag_211\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":4551:4670   */\n    tag_307:\n        /* \"#utility.yul\":4709:4710   */\n      0x00\n        /* \"#utility.yul\":4734:4787   */\n      tag_309\n        /* \"#utility.yul\":4779:4786   */\n      dup6\n        /* \"#utility.yul\":4770:4776   */\n      dup3\n        /* \"#utility.yul\":4759:4768   */\n      dup7\n        /* \"#utility.yul\":4755:4777   */\n      add\n        /* \"#utility.yul\":4734:4787   */\n      tag_230\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":4724:4787   */\n      swap3\n      pop\n        /* \"#utility.yul\":4680:4797   */\n      pop\n        /* \"#utility.yul\":4836:4838   */\n      0x20\n        /* \"#utility.yul\":4862:4915   */\n      tag_310\n        /* \"#utility.yul\":4907:4914   */\n      dup6\n        /* \"#utility.yul\":4898:4904   */\n      dup3\n        /* \"#utility.yul\":4887:4896   */\n      dup7\n        /* \"#utility.yul\":4883:4905   */\n      add\n        /* \"#utility.yul\":4862:4915   */\n      tag_225\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":4852:4915   */\n      swap2\n      pop\n        /* \"#utility.yul\":4807:4925   */\n      pop\n        /* \"#utility.yul\":4458:4932   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4938:5056   */\n    tag_231:\n        /* \"#utility.yul\":5025:5049   */\n      tag_312\n        /* \"#utility.yul\":5043:5048   */\n      dup2\n        /* \"#utility.yul\":5025:5049   */\n      tag_223\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":5020:5023   */\n      dup3\n        /* \"#utility.yul\":5013:5050   */\n      mstore\n        /* \"#utility.yul\":4938:5056   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5062:5284   */\n    tag_43:\n        /* \"#utility.yul\":5155:5159   */\n      0x00\n        /* \"#utility.yul\":5193:5195   */\n      0x20\n        /* \"#utility.yul\":5182:5191   */\n      dup3\n        /* \"#utility.yul\":5178:5196   */\n      add\n        /* \"#utility.yul\":5170:5196   */\n      swap1\n      pop\n        /* \"#utility.yul\":5206:5277   */\n      tag_314\n        /* \"#utility.yul\":5274:5275   */\n      0x00\n        /* \"#utility.yul\":5263:5272   */\n      dup4\n        /* \"#utility.yul\":5259:5276   */\n      add\n        /* \"#utility.yul\":5250:5256   */\n      dup5\n        /* \"#utility.yul\":5206:5277   */\n      tag_231\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":5062:5284   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5290:5909   */\n    tag_46:\n        /* \"#utility.yul\":5367:5373   */\n      0x00\n        /* \"#utility.yul\":5375:5381   */\n      dup1\n        /* \"#utility.yul\":5383:5389   */\n      0x00\n        /* \"#utility.yul\":5432:5434   */\n      0x60\n        /* \"#utility.yul\":5420:5429   */\n      dup5\n        /* \"#utility.yul\":5411:5418   */\n      dup7\n        /* \"#utility.yul\":5407:5430   */\n      sub\n        /* \"#utility.yul\":5403:5435   */\n      slt\n        /* \"#utility.yul\":5400:5519   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":5438:5517   */\n      tag_317\n      tag_211\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":5400:5519   */\n    tag_316:\n        /* \"#utility.yul\":5558:5559   */\n      0x00\n        /* \"#utility.yul\":5583:5636   */\n      tag_318\n        /* \"#utility.yul\":5628:5635   */\n      dup7\n        /* \"#utility.yul\":5619:5625   */\n      dup3\n        /* \"#utility.yul\":5608:5617   */\n      dup8\n        /* \"#utility.yul\":5604:5626   */\n      add\n        /* \"#utility.yul\":5583:5636   */\n      tag_230\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":5573:5636   */\n      swap4\n      pop\n        /* \"#utility.yul\":5529:5646   */\n      pop\n        /* \"#utility.yul\":5685:5687   */\n      0x20\n        /* \"#utility.yul\":5711:5764   */\n      tag_319\n        /* \"#utility.yul\":5756:5763   */\n      dup7\n        /* \"#utility.yul\":5747:5753   */\n      dup3\n        /* \"#utility.yul\":5736:5745   */\n      dup8\n        /* \"#utility.yul\":5732:5754   */\n      add\n        /* \"#utility.yul\":5711:5764   */\n      tag_230\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":5701:5764   */\n      swap3\n      pop\n        /* \"#utility.yul\":5656:5774   */\n      pop\n        /* \"#utility.yul\":5813:5815   */\n      0x40\n        /* \"#utility.yul\":5839:5892   */\n      tag_320\n        /* \"#utility.yul\":5884:5891   */\n      dup7\n        /* \"#utility.yul\":5875:5881   */\n      dup3\n        /* \"#utility.yul\":5864:5873   */\n      dup8\n        /* \"#utility.yul\":5860:5882   */\n      add\n        /* \"#utility.yul\":5839:5892   */\n      tag_225\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":5829:5892   */\n      swap2\n      pop\n        /* \"#utility.yul\":5784:5902   */\n      pop\n        /* \"#utility.yul\":5290:5909   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5915:6244   */\n    tag_57:\n        /* \"#utility.yul\":5974:5980   */\n      0x00\n        /* \"#utility.yul\":6023:6025   */\n      0x20\n        /* \"#utility.yul\":6011:6020   */\n      dup3\n        /* \"#utility.yul\":6002:6009   */\n      dup5\n        /* \"#utility.yul\":5998:6021   */\n      sub\n        /* \"#utility.yul\":5994:6026   */\n      slt\n        /* \"#utility.yul\":5991:6110   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":6029:6108   */\n      tag_323\n      tag_211\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":5991:6110   */\n    tag_322:\n        /* \"#utility.yul\":6149:6150   */\n      0x00\n        /* \"#utility.yul\":6174:6227   */\n      tag_324\n        /* \"#utility.yul\":6219:6226   */\n      dup5\n        /* \"#utility.yul\":6210:6216   */\n      dup3\n        /* \"#utility.yul\":6199:6208   */\n      dup6\n        /* \"#utility.yul\":6195:6217   */\n      add\n        /* \"#utility.yul\":6174:6227   */\n      tag_230\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":6164:6227   */\n      swap2\n      pop\n        /* \"#utility.yul\":6120:6237   */\n      pop\n        /* \"#utility.yul\":5915:6244   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6250:6366   */\n    tag_232:\n        /* \"#utility.yul\":6320:6341   */\n      tag_326\n        /* \"#utility.yul\":6335:6340   */\n      dup2\n        /* \"#utility.yul\":6320:6341   */\n      tag_216\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":6313:6318   */\n      dup2\n        /* \"#utility.yul\":6310:6342   */\n      eq\n        /* \"#utility.yul\":6300:6360   */\n      tag_327\n      jumpi\n        /* \"#utility.yul\":6356:6357   */\n      0x00\n        /* \"#utility.yul\":6353:6354   */\n      dup1\n        /* \"#utility.yul\":6346:6358   */\n      revert\n        /* \"#utility.yul\":6300:6360   */\n    tag_327:\n        /* \"#utility.yul\":6250:6366   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6372:6505   */\n    tag_233:\n        /* \"#utility.yul\":6415:6420   */\n      0x00\n        /* \"#utility.yul\":6453:6459   */\n      dup2\n        /* \"#utility.yul\":6440:6460   */\n      calldataload\n        /* \"#utility.yul\":6431:6460   */\n      swap1\n      pop\n        /* \"#utility.yul\":6469:6499   */\n      tag_329\n        /* \"#utility.yul\":6493:6498   */\n      dup2\n        /* \"#utility.yul\":6469:6499   */\n      tag_232\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":6372:6505   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6511:6979   */\n    tag_65:\n        /* \"#utility.yul\":6576:6582   */\n      0x00\n        /* \"#utility.yul\":6584:6590   */\n      dup1\n        /* \"#utility.yul\":6633:6635   */\n      0x40\n        /* \"#utility.yul\":6621:6630   */\n      dup4\n        /* \"#utility.yul\":6612:6619   */\n      dup6\n        /* \"#utility.yul\":6608:6631   */\n      sub\n        /* \"#utility.yul\":6604:6636   */\n      slt\n        /* \"#utility.yul\":6601:6720   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":6639:6718   */\n      tag_332\n      tag_211\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":6601:6720   */\n    tag_331:\n        /* \"#utility.yul\":6759:6760   */\n      0x00\n        /* \"#utility.yul\":6784:6837   */\n      tag_333\n        /* \"#utility.yul\":6829:6836   */\n      dup6\n        /* \"#utility.yul\":6820:6826   */\n      dup3\n        /* \"#utility.yul\":6809:6818   */\n      dup7\n        /* \"#utility.yul\":6805:6827   */\n      add\n        /* \"#utility.yul\":6784:6837   */\n      tag_230\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":6774:6837   */\n      swap3\n      pop\n        /* \"#utility.yul\":6730:6847   */\n      pop\n        /* \"#utility.yul\":6886:6888   */\n      0x20\n        /* \"#utility.yul\":6912:6962   */\n      tag_334\n        /* \"#utility.yul\":6954:6961   */\n      dup6\n        /* \"#utility.yul\":6945:6951   */\n      dup3\n        /* \"#utility.yul\":6934:6943   */\n      dup7\n        /* \"#utility.yul\":6930:6952   */\n      add\n        /* \"#utility.yul\":6912:6962   */\n      tag_233\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":6902:6962   */\n      swap2\n      pop\n        /* \"#utility.yul\":6857:6972   */\n      pop\n        /* \"#utility.yul\":6511:6979   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6985:7102   */\n    tag_234:\n        /* \"#utility.yul\":7094:7095   */\n      0x00\n        /* \"#utility.yul\":7091:7092   */\n      dup1\n        /* \"#utility.yul\":7084:7096   */\n      revert\n        /* \"#utility.yul\":7108:7225   */\n    tag_235:\n        /* \"#utility.yul\":7217:7218   */\n      0x00\n        /* \"#utility.yul\":7214:7215   */\n      dup1\n        /* \"#utility.yul\":7207:7219   */\n      revert\n        /* \"#utility.yul\":7231:7411   */\n    tag_236:\n        /* \"#utility.yul\":7279:7356   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7276:7277   */\n      0x00\n        /* \"#utility.yul\":7269:7357   */\n      mstore\n        /* \"#utility.yul\":7376:7380   */\n      0x41\n        /* \"#utility.yul\":7373:7374   */\n      0x04\n        /* \"#utility.yul\":7366:7381   */\n      mstore\n        /* \"#utility.yul\":7400:7404   */\n      0x24\n        /* \"#utility.yul\":7397:7398   */\n      0x00\n        /* \"#utility.yul\":7390:7405   */\n      revert\n        /* \"#utility.yul\":7417:7698   */\n    tag_237:\n        /* \"#utility.yul\":7500:7527   */\n      tag_339\n        /* \"#utility.yul\":7522:7526   */\n      dup3\n        /* \"#utility.yul\":7500:7527   */\n      tag_221\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":7492:7498   */\n      dup2\n        /* \"#utility.yul\":7488:7528   */\n      add\n        /* \"#utility.yul\":7630:7636   */\n      dup2\n        /* \"#utility.yul\":7618:7628   */\n      dup2\n        /* \"#utility.yul\":7615:7637   */\n      lt\n        /* \"#utility.yul\":7594:7612   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7582:7592   */\n      dup3\n        /* \"#utility.yul\":7579:7613   */\n      gt\n        /* \"#utility.yul\":7576:7638   */\n      or\n        /* \"#utility.yul\":7573:7661   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":7641:7659   */\n      tag_341\n      tag_236\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":7573:7661   */\n    tag_340:\n        /* \"#utility.yul\":7681:7691   */\n      dup1\n        /* \"#utility.yul\":7677:7679   */\n      0x40\n        /* \"#utility.yul\":7670:7692   */\n      mstore\n        /* \"#utility.yul\":7460:7698   */\n      pop\n        /* \"#utility.yul\":7417:7698   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7704:7833   */\n    tag_238:\n        /* \"#utility.yul\":7738:7744   */\n      0x00\n        /* \"#utility.yul\":7765:7785   */\n      tag_343\n      tag_210\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":7755:7785   */\n      swap1\n      pop\n        /* \"#utility.yul\":7794:7827   */\n      tag_344\n        /* \"#utility.yul\":7822:7826   */\n      dup3\n        /* \"#utility.yul\":7814:7820   */\n      dup3\n        /* \"#utility.yul\":7794:7827   */\n      tag_237\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":7704:7833   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7839:8146   */\n    tag_239:\n        /* \"#utility.yul\":7900:7904   */\n      0x00\n        /* \"#utility.yul\":7990:8008   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7982:7988   */\n      dup3\n        /* \"#utility.yul\":7979:8009   */\n      gt\n        /* \"#utility.yul\":7976:8032   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":8012:8030   */\n      tag_347\n      tag_236\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":7976:8032   */\n    tag_346:\n        /* \"#utility.yul\":8050:8079   */\n      tag_348\n        /* \"#utility.yul\":8072:8078   */\n      dup3\n        /* \"#utility.yul\":8050:8079   */\n      tag_221\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":8042:8079   */\n      swap1\n      pop\n        /* \"#utility.yul\":8134:8138   */\n      0x20\n        /* \"#utility.yul\":8128:8132   */\n      dup2\n        /* \"#utility.yul\":8124:8139   */\n      add\n        /* \"#utility.yul\":8116:8139   */\n      swap1\n      pop\n        /* \"#utility.yul\":7839:8146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8152:8306   */\n    tag_240:\n        /* \"#utility.yul\":8236:8242   */\n      dup3\n        /* \"#utility.yul\":8231:8234   */\n      dup2\n        /* \"#utility.yul\":8226:8229   */\n      dup4\n        /* \"#utility.yul\":8213:8243   */\n      calldatacopy\n        /* \"#utility.yul\":8298:8299   */\n      0x00\n        /* \"#utility.yul\":8289:8295   */\n      dup4\n        /* \"#utility.yul\":8284:8287   */\n      dup4\n        /* \"#utility.yul\":8280:8296   */\n      add\n        /* \"#utility.yul\":8273:8300   */\n      mstore\n        /* \"#utility.yul\":8152:8306   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8312:8722   */\n    tag_241:\n        /* \"#utility.yul\":8389:8394   */\n      0x00\n        /* \"#utility.yul\":8414:8479   */\n      tag_351\n        /* \"#utility.yul\":8430:8478   */\n      tag_352\n        /* \"#utility.yul\":8471:8477   */\n      dup5\n        /* \"#utility.yul\":8430:8478   */\n      tag_239\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":8414:8479   */\n      tag_238\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":8405:8479   */\n      swap1\n      pop\n        /* \"#utility.yul\":8502:8508   */\n      dup3\n        /* \"#utility.yul\":8495:8500   */\n      dup2\n        /* \"#utility.yul\":8488:8509   */\n      mstore\n        /* \"#utility.yul\":8540:8544   */\n      0x20\n        /* \"#utility.yul\":8533:8538   */\n      dup2\n        /* \"#utility.yul\":8529:8545   */\n      add\n        /* \"#utility.yul\":8578:8581   */\n      dup5\n        /* \"#utility.yul\":8569:8575   */\n      dup5\n        /* \"#utility.yul\":8564:8567   */\n      dup5\n        /* \"#utility.yul\":8560:8576   */\n      add\n        /* \"#utility.yul\":8557:8582   */\n      gt\n        /* \"#utility.yul\":8554:8666   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":8585:8664   */\n      tag_354\n      tag_235\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":8554:8666   */\n    tag_353:\n        /* \"#utility.yul\":8675:8716   */\n      tag_355\n        /* \"#utility.yul\":8709:8715   */\n      dup5\n        /* \"#utility.yul\":8704:8707   */\n      dup3\n        /* \"#utility.yul\":8699:8702   */\n      dup6\n        /* \"#utility.yul\":8675:8716   */\n      tag_240\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":8395:8722   */\n      pop\n        /* \"#utility.yul\":8312:8722   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8741:9079   */\n    tag_242:\n        /* \"#utility.yul\":8796:8801   */\n      0x00\n        /* \"#utility.yul\":8845:8848   */\n      dup3\n        /* \"#utility.yul\":8838:8842   */\n      0x1f\n        /* \"#utility.yul\":8830:8836   */\n      dup4\n        /* \"#utility.yul\":8826:8843   */\n      add\n        /* \"#utility.yul\":8822:8849   */\n      slt\n        /* \"#utility.yul\":8812:8934   */\n      tag_357\n      jumpi\n        /* \"#utility.yul\":8853:8932   */\n      tag_358\n      tag_234\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":8812:8934   */\n    tag_357:\n        /* \"#utility.yul\":8970:8976   */\n      dup2\n        /* \"#utility.yul\":8957:8977   */\n      calldataload\n        /* \"#utility.yul\":8995:9073   */\n      tag_359\n        /* \"#utility.yul\":9069:9072   */\n      dup5\n        /* \"#utility.yul\":9061:9067   */\n      dup3\n        /* \"#utility.yul\":9054:9058   */\n      0x20\n        /* \"#utility.yul\":9046:9052   */\n      dup7\n        /* \"#utility.yul\":9042:9059   */\n      add\n        /* \"#utility.yul\":8995:9073   */\n      tag_241\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":8986:9073   */\n      swap2\n      pop\n        /* \"#utility.yul\":8802:9079   */\n      pop\n        /* \"#utility.yul\":8741:9079   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9085:10028   */\n    tag_69:\n        /* \"#utility.yul\":9180:9186   */\n      0x00\n        /* \"#utility.yul\":9188:9194   */\n      dup1\n        /* \"#utility.yul\":9196:9202   */\n      0x00\n        /* \"#utility.yul\":9204:9210   */\n      dup1\n        /* \"#utility.yul\":9253:9256   */\n      0x80\n        /* \"#utility.yul\":9241:9250   */\n      dup6\n        /* \"#utility.yul\":9232:9239   */\n      dup8\n        /* \"#utility.yul\":9228:9251   */\n      sub\n        /* \"#utility.yul\":9224:9257   */\n      slt\n        /* \"#utility.yul\":9221:9341   */\n      iszero\n      tag_361\n      jumpi\n        /* \"#utility.yul\":9260:9339   */\n      tag_362\n      tag_211\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":9221:9341   */\n    tag_361:\n        /* \"#utility.yul\":9380:9381   */\n      0x00\n        /* \"#utility.yul\":9405:9458   */\n      tag_363\n        /* \"#utility.yul\":9450:9457   */\n      dup8\n        /* \"#utility.yul\":9441:9447   */\n      dup3\n        /* \"#utility.yul\":9430:9439   */\n      dup9\n        /* \"#utility.yul\":9426:9448   */\n      add\n        /* \"#utility.yul\":9405:9458   */\n      tag_230\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":9395:9458   */\n      swap5\n      pop\n        /* \"#utility.yul\":9351:9468   */\n      pop\n        /* \"#utility.yul\":9507:9509   */\n      0x20\n        /* \"#utility.yul\":9533:9586   */\n      tag_364\n        /* \"#utility.yul\":9578:9585   */\n      dup8\n        /* \"#utility.yul\":9569:9575   */\n      dup3\n        /* \"#utility.yul\":9558:9567   */\n      dup9\n        /* \"#utility.yul\":9554:9576   */\n      add\n        /* \"#utility.yul\":9533:9586   */\n      tag_230\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":9523:9586   */\n      swap4\n      pop\n        /* \"#utility.yul\":9478:9596   */\n      pop\n        /* \"#utility.yul\":9635:9637   */\n      0x40\n        /* \"#utility.yul\":9661:9714   */\n      tag_365\n        /* \"#utility.yul\":9706:9713   */\n      dup8\n        /* \"#utility.yul\":9697:9703   */\n      dup3\n        /* \"#utility.yul\":9686:9695   */\n      dup9\n        /* \"#utility.yul\":9682:9704   */\n      add\n        /* \"#utility.yul\":9661:9714   */\n      tag_225\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":9651:9714   */\n      swap3\n      pop\n        /* \"#utility.yul\":9606:9724   */\n      pop\n        /* \"#utility.yul\":9791:9793   */\n      0x60\n        /* \"#utility.yul\":9780:9789   */\n      dup6\n        /* \"#utility.yul\":9776:9794   */\n      add\n        /* \"#utility.yul\":9763:9795   */\n      calldataload\n        /* \"#utility.yul\":9822:9840   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9814:9820   */\n      dup2\n        /* \"#utility.yul\":9811:9841   */\n      gt\n        /* \"#utility.yul\":9808:9925   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":9844:9923   */\n      tag_367\n      tag_212\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":9808:9925   */\n    tag_366:\n        /* \"#utility.yul\":9949:10011   */\n      tag_368\n        /* \"#utility.yul\":10003:10010   */\n      dup8\n        /* \"#utility.yul\":9994:10000   */\n      dup3\n        /* \"#utility.yul\":9983:9992   */\n      dup9\n        /* \"#utility.yul\":9979:10001   */\n      add\n        /* \"#utility.yul\":9949:10011   */\n      tag_242\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":9939:10011   */\n      swap2\n      pop\n        /* \"#utility.yul\":9734:10021   */\n      pop\n        /* \"#utility.yul\":9085:10028   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10034:10508   */\n    tag_77:\n        /* \"#utility.yul\":10102:10108   */\n      0x00\n        /* \"#utility.yul\":10110:10116   */\n      dup1\n        /* \"#utility.yul\":10159:10161   */\n      0x40\n        /* \"#utility.yul\":10147:10156   */\n      dup4\n        /* \"#utility.yul\":10138:10145   */\n      dup6\n        /* \"#utility.yul\":10134:10157   */\n      sub\n        /* \"#utility.yul\":10130:10162   */\n      slt\n        /* \"#utility.yul\":10127:10246   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":10165:10244   */\n      tag_371\n      tag_211\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":10127:10246   */\n    tag_370:\n        /* \"#utility.yul\":10285:10286   */\n      0x00\n        /* \"#utility.yul\":10310:10363   */\n      tag_372\n        /* \"#utility.yul\":10355:10362   */\n      dup6\n        /* \"#utility.yul\":10346:10352   */\n      dup3\n        /* \"#utility.yul\":10335:10344   */\n      dup7\n        /* \"#utility.yul\":10331:10353   */\n      add\n        /* \"#utility.yul\":10310:10363   */\n      tag_230\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":10300:10363   */\n      swap3\n      pop\n        /* \"#utility.yul\":10256:10373   */\n      pop\n        /* \"#utility.yul\":10412:10414   */\n      0x20\n        /* \"#utility.yul\":10438:10491   */\n      tag_373\n        /* \"#utility.yul\":10483:10490   */\n      dup6\n        /* \"#utility.yul\":10474:10480   */\n      dup3\n        /* \"#utility.yul\":10463:10472   */\n      dup7\n        /* \"#utility.yul\":10459:10481   */\n      add\n        /* \"#utility.yul\":10438:10491   */\n      tag_230\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":10428:10491   */\n      swap2\n      pop\n        /* \"#utility.yul\":10383:10501   */\n      pop\n        /* \"#utility.yul\":10034:10508   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10514:10694   */\n    tag_243:\n        /* \"#utility.yul\":10562:10639   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10559:10560   */\n      0x00\n        /* \"#utility.yul\":10552:10640   */\n      mstore\n        /* \"#utility.yul\":10659:10663   */\n      0x22\n        /* \"#utility.yul\":10656:10657   */\n      0x04\n        /* \"#utility.yul\":10649:10664   */\n      mstore\n        /* \"#utility.yul\":10683:10687   */\n      0x24\n        /* \"#utility.yul\":10680:10681   */\n      0x00\n        /* \"#utility.yul\":10673:10688   */\n      revert\n        /* \"#utility.yul\":10700:11020   */\n    tag_85:\n        /* \"#utility.yul\":10744:10750   */\n      0x00\n        /* \"#utility.yul\":10781:10782   */\n      0x02\n        /* \"#utility.yul\":10775:10779   */\n      dup3\n        /* \"#utility.yul\":10771:10783   */\n      div\n        /* \"#utility.yul\":10761:10783   */\n      swap1\n      pop\n        /* \"#utility.yul\":10828:10829   */\n      0x01\n        /* \"#utility.yul\":10822:10826   */\n      dup3\n        /* \"#utility.yul\":10818:10830   */\n      and\n        /* \"#utility.yul\":10849:10867   */\n      dup1\n        /* \"#utility.yul\":10839:10920   */\n      tag_376\n      jumpi\n        /* \"#utility.yul\":10905:10909   */\n      0x7f\n        /* \"#utility.yul\":10897:10903   */\n      dup3\n        /* \"#utility.yul\":10893:10910   */\n      and\n        /* \"#utility.yul\":10883:10910   */\n      swap2\n      pop\n        /* \"#utility.yul\":10839:10920   */\n    tag_376:\n        /* \"#utility.yul\":10967:10969   */\n      0x20\n        /* \"#utility.yul\":10959:10965   */\n      dup3\n        /* \"#utility.yul\":10956:10970   */\n      lt\n        /* \"#utility.yul\":10936:10954   */\n      dup2\n        /* \"#utility.yul\":10933:10971   */\n      sub\n        /* \"#utility.yul\":10930:11014   */\n      tag_377\n      jumpi\n        /* \"#utility.yul\":10986:11004   */\n      tag_378\n      tag_243\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":10930:11014   */\n    tag_377:\n        /* \"#utility.yul\":10751:11020   */\n      pop\n        /* \"#utility.yul\":10700:11020   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11026:11174   */\n    tag_244:\n        /* \"#utility.yul\":11128:11139   */\n      0x00\n        /* \"#utility.yul\":11165:11168   */\n      dup2\n        /* \"#utility.yul\":11150:11168   */\n      swap1\n      pop\n        /* \"#utility.yul\":11026:11174   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11180:11557   */\n    tag_245:\n        /* \"#utility.yul\":11286:11289   */\n      0x00\n        /* \"#utility.yul\":11314:11353   */\n      tag_381\n        /* \"#utility.yul\":11347:11352   */\n      dup3\n        /* \"#utility.yul\":11314:11353   */\n      tag_218\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":11369:11458   */\n      tag_382\n        /* \"#utility.yul\":11451:11457   */\n      dup2\n        /* \"#utility.yul\":11446:11449   */\n      dup6\n        /* \"#utility.yul\":11369:11458   */\n      tag_244\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":11362:11458   */\n      swap4\n      pop\n        /* \"#utility.yul\":11467:11519   */\n      tag_383\n        /* \"#utility.yul\":11512:11518   */\n      dup2\n        /* \"#utility.yul\":11507:11510   */\n      dup6\n        /* \"#utility.yul\":11500:11504   */\n      0x20\n        /* \"#utility.yul\":11493:11498   */\n      dup7\n        /* \"#utility.yul\":11489:11505   */\n      add\n        /* \"#utility.yul\":11467:11519   */\n      tag_220\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":11544:11550   */\n      dup1\n        /* \"#utility.yul\":11539:11542   */\n      dup5\n        /* \"#utility.yul\":11535:11551   */\n      add\n        /* \"#utility.yul\":11528:11551   */\n      swap2\n      pop\n        /* \"#utility.yul\":11290:11557   */\n      pop\n        /* \"#utility.yul\":11180:11557   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11563:11998   */\n    tag_165:\n        /* \"#utility.yul\":11743:11746   */\n      0x00\n        /* \"#utility.yul\":11765:11860   */\n      tag_385\n        /* \"#utility.yul\":11856:11859   */\n      dup3\n        /* \"#utility.yul\":11847:11853   */\n      dup6\n        /* \"#utility.yul\":11765:11860   */\n      tag_245\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":11758:11860   */\n      swap2\n      pop\n        /* \"#utility.yul\":11877:11972   */\n      tag_386\n        /* \"#utility.yul\":11968:11971   */\n      dup3\n        /* \"#utility.yul\":11959:11965   */\n      dup5\n        /* \"#utility.yul\":11877:11972   */\n      tag_245\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":11870:11972   */\n      swap2\n      pop\n        /* \"#utility.yul\":11989:11992   */\n      dup2\n        /* \"#utility.yul\":11982:11992   */\n      swap1\n      pop\n        /* \"#utility.yul\":11563:11998   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12004:12102   */\n    tag_246:\n        /* \"#utility.yul\":12055:12061   */\n      0x00\n        /* \"#utility.yul\":12089:12094   */\n      dup2\n        /* \"#utility.yul\":12083:12095   */\n      mload\n        /* \"#utility.yul\":12073:12095   */\n      swap1\n      pop\n        /* \"#utility.yul\":12004:12102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12108:12276   */\n    tag_247:\n        /* \"#utility.yul\":12191:12202   */\n      0x00\n        /* \"#utility.yul\":12225:12231   */\n      dup3\n        /* \"#utility.yul\":12220:12223   */\n      dup3\n        /* \"#utility.yul\":12213:12232   */\n      mstore\n        /* \"#utility.yul\":12265:12269   */\n      0x20\n        /* \"#utility.yul\":12260:12263   */\n      dup3\n        /* \"#utility.yul\":12256:12270   */\n      add\n        /* \"#utility.yul\":12241:12270   */\n      swap1\n      pop\n        /* \"#utility.yul\":12108:12276   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12282:12642   */\n    tag_248:\n        /* \"#utility.yul\":12368:12371   */\n      0x00\n        /* \"#utility.yul\":12396:12434   */\n      tag_390\n        /* \"#utility.yul\":12428:12433   */\n      dup3\n        /* \"#utility.yul\":12396:12434   */\n      tag_246\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":12450:12520   */\n      tag_391\n        /* \"#utility.yul\":12513:12519   */\n      dup2\n        /* \"#utility.yul\":12508:12511   */\n      dup6\n        /* \"#utility.yul\":12450:12520   */\n      tag_247\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":12443:12520   */\n      swap4\n      pop\n        /* \"#utility.yul\":12529:12581   */\n      tag_392\n        /* \"#utility.yul\":12574:12580   */\n      dup2\n        /* \"#utility.yul\":12569:12572   */\n      dup6\n        /* \"#utility.yul\":12562:12566   */\n      0x20\n        /* \"#utility.yul\":12555:12560   */\n      dup7\n        /* \"#utility.yul\":12551:12567   */\n      add\n        /* \"#utility.yul\":12529:12581   */\n      tag_220\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":12606:12635   */\n      tag_393\n        /* \"#utility.yul\":12628:12634   */\n      dup2\n        /* \"#utility.yul\":12606:12635   */\n      tag_221\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":12601:12604   */\n      dup5\n        /* \"#utility.yul\":12597:12636   */\n      add\n        /* \"#utility.yul\":12590:12636   */\n      swap2\n      pop\n        /* \"#utility.yul\":12372:12642   */\n      pop\n        /* \"#utility.yul\":12282:12642   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12648:13288   */\n    tag_191:\n        /* \"#utility.yul\":12843:12847   */\n      0x00\n        /* \"#utility.yul\":12881:12884   */\n      0x80\n        /* \"#utility.yul\":12870:12879   */\n      dup3\n        /* \"#utility.yul\":12866:12885   */\n      add\n        /* \"#utility.yul\":12858:12885   */\n      swap1\n      pop\n        /* \"#utility.yul\":12895:12966   */\n      tag_395\n        /* \"#utility.yul\":12963:12964   */\n      0x00\n        /* \"#utility.yul\":12952:12961   */\n      dup4\n        /* \"#utility.yul\":12948:12965   */\n      add\n        /* \"#utility.yul\":12939:12945   */\n      dup8\n        /* \"#utility.yul\":12895:12966   */\n      tag_228\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":12976:13048   */\n      tag_396\n        /* \"#utility.yul\":13044:13046   */\n      0x20\n        /* \"#utility.yul\":13033:13042   */\n      dup4\n        /* \"#utility.yul\":13029:13047   */\n      add\n        /* \"#utility.yul\":13020:13026   */\n      dup7\n        /* \"#utility.yul\":12976:13048   */\n      tag_228\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":13058:13130   */\n      tag_397\n        /* \"#utility.yul\":13126:13128   */\n      0x40\n        /* \"#utility.yul\":13115:13124   */\n      dup4\n        /* \"#utility.yul\":13111:13129   */\n      add\n        /* \"#utility.yul\":13102:13108   */\n      dup6\n        /* \"#utility.yul\":13058:13130   */\n      tag_231\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":13177:13186   */\n      dup2\n        /* \"#utility.yul\":13171:13175   */\n      dup2\n        /* \"#utility.yul\":13167:13187   */\n      sub\n        /* \"#utility.yul\":13162:13164   */\n      0x60\n        /* \"#utility.yul\":13151:13160   */\n      dup4\n        /* \"#utility.yul\":13147:13165   */\n      add\n        /* \"#utility.yul\":13140:13188   */\n      mstore\n        /* \"#utility.yul\":13205:13281   */\n      tag_398\n        /* \"#utility.yul\":13276:13280   */\n      dup2\n        /* \"#utility.yul\":13267:13273   */\n      dup5\n        /* \"#utility.yul\":13205:13281   */\n      tag_248\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":13197:13281   */\n      swap1\n      pop\n        /* \"#utility.yul\":12648:13288   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13294:13435   */\n    tag_249:\n        /* \"#utility.yul\":13350:13355   */\n      0x00\n        /* \"#utility.yul\":13381:13387   */\n      dup2\n        /* \"#utility.yul\":13375:13388   */\n      mload\n        /* \"#utility.yul\":13366:13388   */\n      swap1\n      pop\n        /* \"#utility.yul\":13397:13429   */\n      tag_400\n        /* \"#utility.yul\":13423:13428   */\n      dup2\n        /* \"#utility.yul\":13397:13429   */\n      tag_214\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":13294:13435   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13441:13790   */\n    tag_194:\n        /* \"#utility.yul\":13510:13516   */\n      0x00\n        /* \"#utility.yul\":13559:13561   */\n      0x20\n        /* \"#utility.yul\":13547:13556   */\n      dup3\n        /* \"#utility.yul\":13538:13545   */\n      dup5\n        /* \"#utility.yul\":13534:13557   */\n      sub\n        /* \"#utility.yul\":13530:13562   */\n      slt\n        /* \"#utility.yul\":13527:13646   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":13565:13644   */\n      tag_403\n      tag_211\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":13527:13646   */\n    tag_402:\n        /* \"#utility.yul\":13685:13686   */\n      0x00\n        /* \"#utility.yul\":13710:13773   */\n      tag_404\n        /* \"#utility.yul\":13765:13772   */\n      dup5\n        /* \"#utility.yul\":13756:13762   */\n      dup3\n        /* \"#utility.yul\":13745:13754   */\n      dup6\n        /* \"#utility.yul\":13741:13763   */\n      add\n        /* \"#utility.yul\":13710:13773   */\n      tag_249\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":13700:13773   */\n      swap2\n      pop\n        /* \"#utility.yul\":13656:13783   */\n      pop\n        /* \"#utility.yul\":13441:13790   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209e492944546e91f22acdc689d462b234087ab03f208e410778784c7a2524bebe64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_156": {
									"entryPoint": null,
									"id": 156,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_165": {
									"entryPoint": 121,
									"id": 165,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 413,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 126,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1104,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 939,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 359,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 683,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 173,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 146,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 151,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 141,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 136,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 820,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1037,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 833,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 989,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1032,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8622:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:3"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:3"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:3"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:3",
														"type": ""
													}
												],
												"src": "580:102:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:3",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:3"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:3"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:3"
															},
															"nodeType": "YulIf",
															"src": "1030:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:3",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:3"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:3",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:3",
														"type": ""
													}
												],
												"src": "874:281:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:3",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:3"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:3"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:3"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:3",
														"type": ""
													}
												],
												"src": "1161:129:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:3"
															},
															"nodeType": "YulIf",
															"src": "1434:56:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:3"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:3"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:3",
														"type": ""
													}
												],
												"src": "1296:308:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1659:258:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1669:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1678:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1673:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1738:63:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1763:3:3"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1768:1:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1759:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1759:11:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1782:3:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1787:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1778:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1778:11:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1772:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:18:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1752:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1752:39:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1752:39:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1699:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1702:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1696:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1710:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1712:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1721:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1724:2:3",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1717:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1717:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1712:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1692:3:3",
																"statements": []
															},
															"src": "1688:113:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1835:76:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1885:3:3"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1890:6:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1881:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1881:16:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1899:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1874:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1874:27:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1874:27:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1816:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1819:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1813:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1813:13:3"
															},
															"nodeType": "YulIf",
															"src": "1810:101:3"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1641:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1646:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1651:6:3",
														"type": ""
													}
												],
												"src": "1610:307:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2018:326:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2028:75:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2095:6:3"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2053:41:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2053:49:3"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2037:15:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2037:66:3"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2028:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2119:5:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2126:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2112:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2112:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2112:21:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2142:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2157:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2164:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2153:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2153:16:3"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2146:3:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2207:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2209:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2209:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2209:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2188:3:3"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2193:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2184:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2184:16:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2202:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2181:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2181:25:3"
															},
															"nodeType": "YulIf",
															"src": "2178:112:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2321:3:3"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2326:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2331:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2299:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2299:39:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2299:39:3"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1991:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1996:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2004:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2012:5:3",
														"type": ""
													}
												],
												"src": "1923:421:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2437:282:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2486:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2488:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2488:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2488:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2465:6:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2473:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2461:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2461:17:3"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2480:3:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2457:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2457:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2450:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2450:35:3"
															},
															"nodeType": "YulIf",
															"src": "2447:122:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2578:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2598:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2592:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2592:13:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2582:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2614:99:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2686:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2694:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2682:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2682:17:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2701:6:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2709:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2623:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2623:90:3"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2614:5:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2415:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2423:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2431:5:3",
														"type": ""
													}
												],
												"src": "2364:355:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2839:739:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2885:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2887:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2887:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2887:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2869:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2856:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2856:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2881:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2852:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2852:32:3"
															},
															"nodeType": "YulIf",
															"src": "2849:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2978:291:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2993:38:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3017:9:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3028:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3013:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3013:17:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3007:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3007:24:3"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2997:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3078:83:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3080:77:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3080:79:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3080:79:3"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3050:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3058:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3047:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3047:30:3"
																	},
																	"nodeType": "YulIf",
																	"src": "3044:117:3"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3175:84:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3231:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3242:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3227:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3227:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3251:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3185:41:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3185:74:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3175:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3279:292:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3294:39:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3318:9:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3329:2:3",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3314:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3314:18:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3308:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3308:25:3"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3298:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3380:83:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3382:77:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3382:79:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3382:79:3"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3352:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3360:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3349:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3349:30:3"
																	},
																	"nodeType": "YulIf",
																	"src": "3346:117:3"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3477:84:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3533:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3544:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3529:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3529:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3553:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3487:41:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3487:74:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3477:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2801:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2812:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2824:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2832:6:3",
														"type": ""
													}
												],
												"src": "2725:853:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3643:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3654:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3670:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3664:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3664:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3654:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3626:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3636:6:3",
														"type": ""
													}
												],
												"src": "3584:99:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3717:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3734:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3737:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3727:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3727:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3727:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3831:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3834:4:3",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3824:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3824:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3824:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3855:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3858:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3848:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3848:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3848:15:3"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3689:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3926:269:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3936:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3950:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3956:1:3",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3946:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3946:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3936:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3967:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3997:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4003:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3993:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3993:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3971:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4044:51:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4058:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4072:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4080:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4068:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4068:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4058:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4024:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4017:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4017:26:3"
															},
															"nodeType": "YulIf",
															"src": "4014:81:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4147:42:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4161:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4161:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4161:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4111:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4134:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4142:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4131:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4131:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4108:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4108:38:3"
															},
															"nodeType": "YulIf",
															"src": "4105:84:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3910:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3919:6:3",
														"type": ""
													}
												],
												"src": "3875:320:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4255:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4265:11:3",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4273:3:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4265:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4293:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4296:3:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4286:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4286:14:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4286:14:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4309:26:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4327:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4330:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4317:9:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4317:18:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4309:4:3"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4242:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4250:4:3",
														"type": ""
													}
												],
												"src": "4201:141:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4392:49:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4402:33:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4420:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4427:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4416:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4416:14:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4432:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4412:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4412:23:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4402:6:3"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4375:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4385:6:3",
														"type": ""
													}
												],
												"src": "4348:93:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4500:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4510:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4535:4:3"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4541:5:3"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4531:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4531:16:3"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4510:8:3"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4475:4:3",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4481:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4491:8:3",
														"type": ""
													}
												],
												"src": "4447:107:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4636:317:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4646:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "4667:10:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4679:1:3",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4663:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4663:18:3"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "4650:9:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4690:109:3",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4721:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4732:66:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4702:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4702:97:3"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4694:4:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4808:51:3",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4839:9:3"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "4850:8:3"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4820:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4820:39:3"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "4808:8:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4868:30:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4881:5:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4892:4:3"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4888:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4888:9:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4877:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4877:21:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4868:5:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4907:40:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4920:5:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "4931:8:3"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4941:4:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4927:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4927:19:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4917:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4917:30:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4907:6:3"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4597:5:3",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "4604:10:3",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "4616:8:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4629:6:3",
														"type": ""
													}
												],
												"src": "4560:393:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5004:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5014:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5025:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5014:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4986:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4996:7:3",
														"type": ""
													}
												],
												"src": "4959:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5074:28:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5084:12:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5091:5:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5084:3:3"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5060:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5070:3:3",
														"type": ""
													}
												],
												"src": "5042:60:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5168:82:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5178:66:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5236:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5218:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5218:24:3"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5209:8:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5209:34:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5191:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5191:53:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5178:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5148:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5158:9:3",
														"type": ""
													}
												],
												"src": "5108:142:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5303:28:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5313:12:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5320:5:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5313:3:3"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5289:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5299:3:3",
														"type": ""
													}
												],
												"src": "5256:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5413:193:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5423:63:3",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5478:7:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5447:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5447:39:3"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5427:16:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5502:4:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5542:4:3"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5536:5:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5536:11:3"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5549:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "5581:16:3"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5557:23:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5557:41:3"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5508:27:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5508:91:3"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5495:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5495:105:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5495:105:3"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5390:4:3",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5396:6:3",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5404:7:3",
														"type": ""
													}
												],
												"src": "5337:269:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5661:24:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5671:8:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5678:1:3",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5671:3:3"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5657:3:3",
														"type": ""
													}
												],
												"src": "5612:73:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5744:136:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5754:46:3",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5768:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5768:32:3"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "5758:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5853:4:3"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5859:6:3"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "5867:6:3"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5809:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5809:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5809:65:3"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5730:4:3",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5736:6:3",
														"type": ""
													}
												],
												"src": "5691:189:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5936:136:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6003:63:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "6047:5:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6054:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "6017:29:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6017:39:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6017:39:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "5956:5:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5963:3:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5953:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5953:14:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5968:26:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5970:22:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5983:5:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5990:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5979:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5979:13:3"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "5970:5:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5950:2:3",
																"statements": []
															},
															"src": "5946:120:3"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "5924:5:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5931:3:3",
														"type": ""
													}
												],
												"src": "5886:186:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6157:464:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6183:431:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6197:54:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6245:5:3"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "6213:31:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6213:38:3"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "6201:8:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6264:63:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "6287:8:3"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "6315:10:3"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "6297:17:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6297:29:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6283:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6283:44:3"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6268:11:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6484:27:3",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6486:23:3",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6501:8:3"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6486:11:3"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6468:10:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6480:2:3",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6465:2:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6465:18:3"
																		},
																		"nodeType": "YulIf",
																		"src": "6462:49:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "6553:11:3"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "6570:8:3"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6598:3:3"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "6580:17:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6580:22:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6566:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6566:37:3"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6524:28:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6524:80:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6524:80:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6174:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6179:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6171:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6171:11:3"
															},
															"nodeType": "YulIf",
															"src": "6168:446:3"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6133:5:3",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6140:3:3",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6145:10:3",
														"type": ""
													}
												],
												"src": "6078:543:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6690:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6700:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "6725:4:3"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6731:5:3"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6721:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6721:16:3"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6700:8:3"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "6665:4:3",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6671:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6681:8:3",
														"type": ""
													}
												],
												"src": "6627:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6801:118:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6811:68:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6860:1:3",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "6863:5:3"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "6856:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6856:13:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6875:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6871:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6871:6:3"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "6827:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6827:51:3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "6823:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6823:56:3"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "6815:4:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6888:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6902:4:3"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "6908:4:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6898:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6898:15:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6888:6:3"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6778:4:3",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "6784:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6794:6:3",
														"type": ""
													}
												],
												"src": "6750:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7005:214:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7138:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7165:4:3"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7171:3:3"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7146:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7146:29:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7138:4:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7184:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7195:4:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7205:1:3",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7208:3:3"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7201:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7201:11:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7192:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7192:21:3"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7184:4:3"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6986:4:3",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6992:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "7000:4:3",
														"type": ""
													}
												],
												"src": "6924:295:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7316:1303:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7327:51:3",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7374:3:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7341:32:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7341:37:3"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7331:6:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7463:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7465:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7465:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7465:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7435:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7443:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7432:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7432:30:3"
															},
															"nodeType": "YulIf",
															"src": "7429:56:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7495:52:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "7541:4:3"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "7535:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7535:11:3"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7509:25:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7509:38:3"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7499:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7640:4:3"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "7646:6:3"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7654:6:3"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7594:45:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7594:67:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7594:67:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7671:18:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7688:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7675:9:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7699:17:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7712:4:3",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "7699:9:3"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7763:611:3",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7777:37:3",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7796:6:3"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7808:4:3",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7804:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7804:9:3"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7792:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7792:22:3"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "7781:7:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7828:51:3",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7874:4:3"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7842:31:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7842:37:3"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "7832:6:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7892:10:3",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7901:1:3",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "7896:1:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7960:163:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7985:6:3"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "8003:3:3"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "8008:9:3"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "7999:3:3"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7999:19:3"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "7993:5:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7993:26:3"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7978:6:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7978:42:3"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7978:42:3"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8037:24:3",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8051:6:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8059:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8047:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8047:14:3"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "8037:6:3"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8078:31:3",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8095:9:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8106:2:3",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8091:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8091:18:3"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8078:9:3"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7926:1:3"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7929:7:3"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7923:2:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7923:14:3"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "7938:21:3",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7940:17:3",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "7949:1:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7952:4:3",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7945:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7945:12:3"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7940:1:3"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "7919:3:3",
																					"statements": []
																				},
																				"src": "7915:208:3"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8159:156:3",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8177:43:3",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8204:3:3"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8209:9:3"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8200:3:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8200:19:3"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8194:5:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8194:26:3"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8181:9:3",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8244:6:3"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8271:9:3"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "8286:6:3"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "8294:4:3",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "8282:3:3"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8282:17:3"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "8252:18:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8252:48:3"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8237:6:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8237:64:3"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8237:64:3"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8142:7:3"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8151:6:3"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8139:2:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8139:19:3"
																				},
																				"nodeType": "YulIf",
																				"src": "8136:179:3"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8335:4:3"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8349:6:3"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8357:1:3",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "8345:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8345:14:3"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8361:1:3",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8341:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8341:22:3"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8328:6:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8328:36:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8328:36:3"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7756:618:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7761:1:3",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8391:222:3",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8405:14:3",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8418:1:3",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8409:5:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8442:67:3",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8460:35:3",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8479:3:3"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8484:9:3"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8475:3:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8475:19:3"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8469:5:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8469:26:3"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8460:5:3"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8435:6:3"
																				},
																				"nodeType": "YulIf",
																				"src": "8432:77:3"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8529:4:3"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8588:5:3"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8595:6:3"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8535:52:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8535:67:3"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8522:6:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8522:81:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8522:81:3"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8383:230:3",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7736:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7744:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7733:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7733:14:3"
															},
															"nodeType": "YulSwitch",
															"src": "7726:887:3"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7305:4:3",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7311:3:3",
														"type": ""
													}
												],
												"src": "7224:1395:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001eec38038062001eec83398181016040528101906200003791906200021b565b8160029081620000489190620004eb565b5080600390816200005a9190620004eb565b506200006b6200007960201b60201c565b6000819055505050620005d2565b600090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000e7826200009c565b810181811067ffffffffffffffff82111715620001095762000108620000ad565b5b80604052505050565b60006200011e6200007e565b90506200012c8282620000dc565b919050565b600067ffffffffffffffff8211156200014f576200014e620000ad565b5b6200015a826200009c565b9050602081019050919050565b60005b83811015620001875780820151818401526020810190506200016a565b8381111562000197576000848401525b50505050565b6000620001b4620001ae8462000131565b62000112565b905082815260208101848484011115620001d357620001d262000097565b5b620001e084828562000167565b509392505050565b600082601f8301126200020057620001ff62000092565b5b8151620002128482602086016200019d565b91505092915050565b6000806040838503121562000235576200023462000088565b5b600083015167ffffffffffffffff8111156200025657620002556200008d565b5b6200026485828601620001e8565b925050602083015167ffffffffffffffff8111156200028857620002876200008d565b5b6200029685828601620001e8565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002f357607f821691505b602082108103620003095762000308620002ab565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003737fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000334565b6200037f868362000334565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003cc620003c6620003c08462000397565b620003a1565b62000397565b9050919050565b6000819050919050565b620003e883620003ab565b62000400620003f782620003d3565b84845462000341565b825550505050565b600090565b6200041762000408565b62000424818484620003dd565b505050565b5b818110156200044c57620004406000826200040d565b6001810190506200042a565b5050565b601f8211156200049b5762000465816200030f565b620004708462000324565b8101602085101562000480578190505b620004986200048f8562000324565b83018262000429565b50505b505050565b600082821c905092915050565b6000620004c060001984600802620004a0565b1980831691505092915050565b6000620004db8383620004ad565b9150826002028217905092915050565b620004f682620002a0565b67ffffffffffffffff811115620005125762000511620000ad565b5b6200051e8254620002da565b6200052b82828562000450565b600060209050601f8311600181146200056357600084156200054e578287015190505b6200055a8582620004cd565b865550620005ca565b601f19841662000573866200030f565b60005b828110156200059d5784890151825560018201915060208501945060208101905062000576565b86831015620005bd5784890151620005b9601f891682620004ad565b8355505b6001600288020188555050505b505050505050565b61190a80620005e26000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb4651461025d578063b88d4fde14610279578063c87b56dd14610295578063e985e9c5146102c5576100ea565b80636352211e146101df57806370a082311461020f57806395d89b411461023f576100ea565b8063095ea7b3116100c8578063095ea7b31461016d57806318160ddd1461018957806323b872dd146101a757806342842e0e146101c3576100ea565b806301ffc9a7146100ef57806306fdde031461011f578063081812fc1461013d575b600080fd5b610109600480360381019061010491906111da565b6102f5565b6040516101169190611222565b60405180910390f35b610127610387565b60405161013491906112d6565b60405180910390f35b6101576004803603810190610152919061132e565b610419565b604051610164919061139c565b60405180910390f35b610187600480360381019061018291906113e3565b610495565b005b6101916105d6565b60405161019e9190611432565b60405180910390f35b6101c160048036038101906101bc919061144d565b6105ed565b005b6101dd60048036038101906101d8919061144d565b61090f565b005b6101f960048036038101906101f4919061132e565b61092f565b604051610206919061139c565b60405180910390f35b610229600480360381019061022491906114a0565b610941565b6040516102369190611432565b60405180910390f35b6102476109f9565b60405161025491906112d6565b60405180910390f35b610277600480360381019061027291906114f9565b610a8b565b005b610293600480360381019061028e919061166e565b610c02565b005b6102af60048036038101906102aa919061132e565b610c75565b6040516102bc91906112d6565b60405180910390f35b6102df60048036038101906102da91906116f1565b610d13565b6040516102ec9190611222565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061035057506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103805750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606002805461039690611760565b80601f01602080910402602001604051908101604052809291908181526020018280546103c290611760565b801561040f5780601f106103e45761010080835404028352916020019161040f565b820191906000526020600020905b8154815290600101906020018083116103f257829003601f168201915b5050505050905090565b600061042482610da7565b61045a576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104a08261092f565b90508073ffffffffffffffffffffffffffffffffffffffff166104c1610e06565b73ffffffffffffffffffffffffffffffffffffffff1614610524576104ed816104e8610e06565b610d13565b610523576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826006600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60006105e0610e0e565b6001546000540303905090565b60006105f882610e13565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461065f576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008061066b84610edf565b91509150610681818761067c610e06565b610f01565b6106cd5761069686610691610e06565b610d13565b6106cc576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610733576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107408686866001610f45565b801561074b57600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815460010191905081905550610819856107f5888887610f4b565b7c020000000000000000000000000000000000000000000000000000000017610f73565b600460008681526020019081526020016000208190555060007c020000000000000000000000000000000000000000000000000000000084160361089f576000600185019050600060046000838152602001908152602001600020540361089d57600054811461089c578360046000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46109078686866001610f9e565b505050505050565b61092a83838360405180602001604052806000815250610c02565b505050565b600061093a82610e13565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109a8576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b606060038054610a0890611760565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3490611760565b8015610a815780601f10610a5657610100808354040283529160200191610a81565b820191906000526020600020905b815481529060010190602001808311610a6457829003601f168201915b5050505050905090565b610a93610e06565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610af7576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060076000610b04610e06565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610bb1610e06565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610bf69190611222565b60405180910390a35050565b610c0d8484846105ed565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610c6f57610c3884848484610fa4565b610c6e576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6060610c8082610da7565b610cb6576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610cc06110f4565b90506000815103610ce05760405180602001604052806000815250610d0b565b80610cea8461110b565b604051602001610cfb9291906117cd565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081610db2610e0e565b11158015610dc1575060005482105b8015610dff575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b600033905090565b600090565b60008082905080610e22610e0e565b11610ea857600054811015610ea75760006004600083815260200190815260200160002054905060007c0100000000000000000000000000000000000000000000000000000000821603610ea5575b60008103610e9b576004600083600190039350838152602001908152602001600020549050610e71565b8092505050610eda565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000806000600690508360005280602052604060002092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e8610f62868684611165565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02610fca610e06565b8786866040518563ffffffff1660e01b8152600401610fec9493929190611846565b6020604051808303816000875af192505050801561102857506040513d601f19601f8201168201806040525081019061102591906118a7565b60015b6110a1573d8060008114611058576040519150601f19603f3d011682016040523d82523d6000602084013e61105d565b606091505b506000815103611099576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b60606080604051019050806040528082600183039250600a81066030018353600a810490505b801561115157600183039250600a81066030018353600a81049050611131565b508181036020830392508083525050919050565b60009392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6111b781611182565b81146111c257600080fd5b50565b6000813590506111d4816111ae565b92915050565b6000602082840312156111f0576111ef611178565b5b60006111fe848285016111c5565b91505092915050565b60008115159050919050565b61121c81611207565b82525050565b60006020820190506112376000830184611213565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561127757808201518184015260208101905061125c565b83811115611286576000848401525b50505050565b6000601f19601f8301169050919050565b60006112a88261123d565b6112b28185611248565b93506112c2818560208601611259565b6112cb8161128c565b840191505092915050565b600060208201905081810360008301526112f0818461129d565b905092915050565b6000819050919050565b61130b816112f8565b811461131657600080fd5b50565b60008135905061132881611302565b92915050565b60006020828403121561134457611343611178565b5b600061135284828501611319565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113868261135b565b9050919050565b6113968161137b565b82525050565b60006020820190506113b1600083018461138d565b92915050565b6113c08161137b565b81146113cb57600080fd5b50565b6000813590506113dd816113b7565b92915050565b600080604083850312156113fa576113f9611178565b5b6000611408858286016113ce565b925050602061141985828601611319565b9150509250929050565b61142c816112f8565b82525050565b60006020820190506114476000830184611423565b92915050565b60008060006060848603121561146657611465611178565b5b6000611474868287016113ce565b9350506020611485868287016113ce565b925050604061149686828701611319565b9150509250925092565b6000602082840312156114b6576114b5611178565b5b60006114c4848285016113ce565b91505092915050565b6114d681611207565b81146114e157600080fd5b50565b6000813590506114f3816114cd565b92915050565b600080604083850312156115105761150f611178565b5b600061151e858286016113ce565b925050602061152f858286016114e4565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61157b8261128c565b810181811067ffffffffffffffff8211171561159a57611599611543565b5b80604052505050565b60006115ad61116e565b90506115b98282611572565b919050565b600067ffffffffffffffff8211156115d9576115d8611543565b5b6115e28261128c565b9050602081019050919050565b82818337600083830152505050565b600061161161160c846115be565b6115a3565b90508281526020810184848401111561162d5761162c61153e565b5b6116388482856115ef565b509392505050565b600082601f83011261165557611654611539565b5b81356116658482602086016115fe565b91505092915050565b6000806000806080858703121561168857611687611178565b5b6000611696878288016113ce565b94505060206116a7878288016113ce565b93505060406116b887828801611319565b925050606085013567ffffffffffffffff8111156116d9576116d861117d565b5b6116e587828801611640565b91505092959194509250565b6000806040838503121561170857611707611178565b5b6000611716858286016113ce565b9250506020611727858286016113ce565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061177857607f821691505b60208210810361178b5761178a611731565b5b50919050565b600081905092915050565b60006117a78261123d565b6117b18185611791565b93506117c1818560208601611259565b80840191505092915050565b60006117d9828561179c565b91506117e5828461179c565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000611818826117f1565b61182281856117fc565b9350611832818560208601611259565b61183b8161128c565b840191505092915050565b600060808201905061185b600083018761138d565b611868602083018661138d565b6118756040830185611423565b8181036060830152611887818461180d565b905095945050505050565b6000815190506118a1816111ae565b92915050565b6000602082840312156118bd576118bc611178565b5b60006118cb84828501611892565b9150509291505056fea26469706673582212209e492944546e91f22acdc689d462b234087ab03f208e410778784c7a2524bebe64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1EEC CODESIZE SUB DUP1 PUSH3 0x1EEC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x21B JUMP JUMPDEST DUP2 PUSH1 0x2 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4EB JUMP JUMPDEST POP DUP1 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4EB JUMP JUMPDEST POP PUSH3 0x6B PUSH3 0x79 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x5D2 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xE7 DUP3 PUSH3 0x9C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x109 JUMPI PUSH3 0x108 PUSH3 0xAD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x11E PUSH3 0x7E JUMP JUMPDEST SWAP1 POP PUSH3 0x12C DUP3 DUP3 PUSH3 0xDC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x14F JUMPI PUSH3 0x14E PUSH3 0xAD JUMP JUMPDEST JUMPDEST PUSH3 0x15A DUP3 PUSH3 0x9C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x187 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x16A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x197 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1B4 PUSH3 0x1AE DUP5 PUSH3 0x131 JUMP JUMPDEST PUSH3 0x112 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1D3 JUMPI PUSH3 0x1D2 PUSH3 0x97 JUMP JUMPDEST JUMPDEST PUSH3 0x1E0 DUP5 DUP3 DUP6 PUSH3 0x167 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x200 JUMPI PUSH3 0x1FF PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x212 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x19D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x235 JUMPI PUSH3 0x234 PUSH3 0x88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x256 JUMPI PUSH3 0x255 PUSH3 0x8D JUMP JUMPDEST JUMPDEST PUSH3 0x264 DUP6 DUP3 DUP7 ADD PUSH3 0x1E8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x288 JUMPI PUSH3 0x287 PUSH3 0x8D JUMP JUMPDEST JUMPDEST PUSH3 0x296 DUP6 DUP3 DUP7 ADD PUSH3 0x1E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2F3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x309 JUMPI PUSH3 0x308 PUSH3 0x2AB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x373 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x334 JUMP JUMPDEST PUSH3 0x37F DUP7 DUP4 PUSH3 0x334 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3CC PUSH3 0x3C6 PUSH3 0x3C0 DUP5 PUSH3 0x397 JUMP JUMPDEST PUSH3 0x3A1 JUMP JUMPDEST PUSH3 0x397 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3E8 DUP4 PUSH3 0x3AB JUMP JUMPDEST PUSH3 0x400 PUSH3 0x3F7 DUP3 PUSH3 0x3D3 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x341 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x417 PUSH3 0x408 JUMP JUMPDEST PUSH3 0x424 DUP2 DUP5 DUP5 PUSH3 0x3DD JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x44C JUMPI PUSH3 0x440 PUSH1 0x0 DUP3 PUSH3 0x40D JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x42A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x49B JUMPI PUSH3 0x465 DUP2 PUSH3 0x30F JUMP JUMPDEST PUSH3 0x470 DUP5 PUSH3 0x324 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x480 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x498 PUSH3 0x48F DUP6 PUSH3 0x324 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x429 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4C0 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x4A0 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4DB DUP4 DUP4 PUSH3 0x4AD JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4F6 DUP3 PUSH3 0x2A0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x512 JUMPI PUSH3 0x511 PUSH3 0xAD JUMP JUMPDEST JUMPDEST PUSH3 0x51E DUP3 SLOAD PUSH3 0x2DA JUMP JUMPDEST PUSH3 0x52B DUP3 DUP3 DUP6 PUSH3 0x450 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x563 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x54E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x55A DUP6 DUP3 PUSH3 0x4CD JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5CA JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x573 DUP7 PUSH3 0x30F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x59D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x576 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x5BD JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x5B9 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x4AD JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x190A DUP1 PUSH3 0x5E2 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2C5 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x23F JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1C3 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x11DA JUMP JUMPDEST PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1222 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x387 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x132E JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x139C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x13E3 JUMP JUMPDEST PUSH2 0x495 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x191 PUSH2 0x5D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x1432 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x144D JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x144D JUMP JUMPDEST PUSH2 0x90F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x132E JUMP JUMPDEST PUSH2 0x92F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x139C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x14A0 JUMP JUMPDEST PUSH2 0x941 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1432 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH2 0x9F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x14F9 JUMP JUMPDEST PUSH2 0xA8B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x166E JUMP JUMPDEST PUSH2 0xC02 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x132E JUMP JUMPDEST PUSH2 0xC75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x16F1 JUMP JUMPDEST PUSH2 0xD13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x1222 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x350 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x380 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x396 SWAP1 PUSH2 0x1760 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3C2 SWAP1 PUSH2 0x1760 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x40F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3E4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x40F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x424 DUP3 PUSH2 0xDA7 JUMP JUMPDEST PUSH2 0x45A JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A0 DUP3 PUSH2 0x92F JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4C1 PUSH2 0xE06 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x524 JUMPI PUSH2 0x4ED DUP2 PUSH2 0x4E8 PUSH2 0xE06 JUMP JUMPDEST PUSH2 0xD13 JUMP JUMPDEST PUSH2 0x523 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E0 PUSH2 0xE0E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F8 DUP3 PUSH2 0xE13 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x65F JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x66B DUP5 PUSH2 0xEDF JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x681 DUP2 DUP8 PUSH2 0x67C PUSH2 0xE06 JUMP JUMPDEST PUSH2 0xF01 JUMP JUMPDEST PUSH2 0x6CD JUMPI PUSH2 0x696 DUP7 PUSH2 0x691 PUSH2 0xE06 JUMP JUMPDEST PUSH2 0xD13 JUMP JUMPDEST PUSH2 0x6CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x733 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x740 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xF45 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x74B JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x819 DUP6 PUSH2 0x7F5 DUP9 DUP9 DUP8 PUSH2 0xF4B JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH2 0xF73 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND SUB PUSH2 0x89F JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x89D JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x89C JUMPI DUP4 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x907 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xF9E JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x92A DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC02 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93A DUP3 PUSH2 0xE13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0xA08 SWAP1 PUSH2 0x1760 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA34 SWAP1 PUSH2 0x1760 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA81 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA56 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA81 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA64 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA93 PUSH2 0xE06 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06307DB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0xB04 PUSH2 0xE06 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBB1 PUSH2 0xE06 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xBF6 SWAP2 SWAP1 PUSH2 0x1222 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xC0D DUP5 DUP5 DUP5 PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0xC6F JUMPI PUSH2 0xC38 DUP5 DUP5 DUP5 DUP5 PUSH2 0xFA4 JUMP JUMPDEST PUSH2 0xC6E JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC80 DUP3 PUSH2 0xDA7 JUMP JUMPDEST PUSH2 0xCB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCC0 PUSH2 0x10F4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xCE0 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD0B JUMP JUMPDEST DUP1 PUSH2 0xCEA DUP5 PUSH2 0x110B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCFB SWAP3 SWAP2 SWAP1 PUSH2 0x17CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xDB2 PUSH2 0xE0E JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xDC1 JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0xDFF JUMPI POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP DUP1 PUSH2 0xE22 PUSH2 0xE0E JUMP JUMPDEST GT PUSH2 0xEA8 JUMPI PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0xEA7 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND SUB PUSH2 0xEA5 JUMPI JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0xE9B JUMPI PUSH1 0x4 PUSH1 0x0 DUP4 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0xE71 JUMP JUMPDEST DUP1 SWAP3 POP POP POP PUSH2 0xEDA JUMP JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 SWAP1 POP DUP4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 POP DUP3 SLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 POP DUP4 DUP3 EQ DUP4 DUP4 EQ OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE8 DUP4 SWAP1 SHR SWAP1 POP PUSH1 0xE8 PUSH2 0xF62 DUP7 DUP7 DUP5 PUSH2 0x1165 JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 SHL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP DUP2 TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xFCA PUSH2 0xE06 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFEC SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1846 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1028 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1025 SWAP2 SWAP1 PUSH2 0x18A7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x10A1 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1058 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x105D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1099 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x80 PUSH1 0x40 MLOAD ADD SWAP1 POP DUP1 PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP JUMPDEST DUP1 ISZERO PUSH2 0x1151 JUMPI PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP PUSH2 0x1131 JUMP JUMPDEST POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 SUB SWAP3 POP DUP1 DUP4 MSTORE POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11B7 DUP2 PUSH2 0x1182 JUMP JUMPDEST DUP2 EQ PUSH2 0x11C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11D4 DUP2 PUSH2 0x11AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11F0 JUMPI PUSH2 0x11EF PUSH2 0x1178 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11FE DUP5 DUP3 DUP6 ADD PUSH2 0x11C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x121C DUP2 PUSH2 0x1207 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1237 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1213 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1277 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x125C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1286 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A8 DUP3 PUSH2 0x123D JUMP JUMPDEST PUSH2 0x12B2 DUP2 DUP6 PUSH2 0x1248 JUMP JUMPDEST SWAP4 POP PUSH2 0x12C2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1259 JUMP JUMPDEST PUSH2 0x12CB DUP2 PUSH2 0x128C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12F0 DUP2 DUP5 PUSH2 0x129D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x130B DUP2 PUSH2 0x12F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1328 DUP2 PUSH2 0x1302 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1344 JUMPI PUSH2 0x1343 PUSH2 0x1178 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1352 DUP5 DUP3 DUP6 ADD PUSH2 0x1319 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1386 DUP3 PUSH2 0x135B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1396 DUP2 PUSH2 0x137B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13B1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x138D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13C0 DUP2 PUSH2 0x137B JUMP JUMPDEST DUP2 EQ PUSH2 0x13CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13DD DUP2 PUSH2 0x13B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13FA JUMPI PUSH2 0x13F9 PUSH2 0x1178 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1408 DUP6 DUP3 DUP7 ADD PUSH2 0x13CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1419 DUP6 DUP3 DUP7 ADD PUSH2 0x1319 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x142C DUP2 PUSH2 0x12F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1447 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1423 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1466 JUMPI PUSH2 0x1465 PUSH2 0x1178 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1474 DUP7 DUP3 DUP8 ADD PUSH2 0x13CE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1485 DUP7 DUP3 DUP8 ADD PUSH2 0x13CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1496 DUP7 DUP3 DUP8 ADD PUSH2 0x1319 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B6 JUMPI PUSH2 0x14B5 PUSH2 0x1178 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14C4 DUP5 DUP3 DUP6 ADD PUSH2 0x13CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14D6 DUP2 PUSH2 0x1207 JUMP JUMPDEST DUP2 EQ PUSH2 0x14E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14F3 DUP2 PUSH2 0x14CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1510 JUMPI PUSH2 0x150F PUSH2 0x1178 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x151E DUP6 DUP3 DUP7 ADD PUSH2 0x13CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x152F DUP6 DUP3 DUP7 ADD PUSH2 0x14E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x157B DUP3 PUSH2 0x128C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x159A JUMPI PUSH2 0x1599 PUSH2 0x1543 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15AD PUSH2 0x116E JUMP JUMPDEST SWAP1 POP PUSH2 0x15B9 DUP3 DUP3 PUSH2 0x1572 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15D9 JUMPI PUSH2 0x15D8 PUSH2 0x1543 JUMP JUMPDEST JUMPDEST PUSH2 0x15E2 DUP3 PUSH2 0x128C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1611 PUSH2 0x160C DUP5 PUSH2 0x15BE JUMP JUMPDEST PUSH2 0x15A3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x162D JUMPI PUSH2 0x162C PUSH2 0x153E JUMP JUMPDEST JUMPDEST PUSH2 0x1638 DUP5 DUP3 DUP6 PUSH2 0x15EF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1655 JUMPI PUSH2 0x1654 PUSH2 0x1539 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1665 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x15FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1688 JUMPI PUSH2 0x1687 PUSH2 0x1178 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1696 DUP8 DUP3 DUP9 ADD PUSH2 0x13CE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x16A7 DUP8 DUP3 DUP9 ADD PUSH2 0x13CE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x16B8 DUP8 DUP3 DUP9 ADD PUSH2 0x1319 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16D9 JUMPI PUSH2 0x16D8 PUSH2 0x117D JUMP JUMPDEST JUMPDEST PUSH2 0x16E5 DUP8 DUP3 DUP9 ADD PUSH2 0x1640 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1708 JUMPI PUSH2 0x1707 PUSH2 0x1178 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1716 DUP6 DUP3 DUP7 ADD PUSH2 0x13CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1727 DUP6 DUP3 DUP7 ADD PUSH2 0x13CE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1778 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x178B JUMPI PUSH2 0x178A PUSH2 0x1731 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A7 DUP3 PUSH2 0x123D JUMP JUMPDEST PUSH2 0x17B1 DUP2 DUP6 PUSH2 0x1791 JUMP JUMPDEST SWAP4 POP PUSH2 0x17C1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1259 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17D9 DUP3 DUP6 PUSH2 0x179C JUMP JUMPDEST SWAP2 POP PUSH2 0x17E5 DUP3 DUP5 PUSH2 0x179C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1818 DUP3 PUSH2 0x17F1 JUMP JUMPDEST PUSH2 0x1822 DUP2 DUP6 PUSH2 0x17FC JUMP JUMPDEST SWAP4 POP PUSH2 0x1832 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1259 JUMP JUMPDEST PUSH2 0x183B DUP2 PUSH2 0x128C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x185B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x138D JUMP JUMPDEST PUSH2 0x1868 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x138D JUMP JUMPDEST PUSH2 0x1875 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1423 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1887 DUP2 DUP5 PUSH2 0x180D JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x18A1 DUP2 PUSH2 0x11AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18BD JUMPI PUSH2 0x18BC PUSH2 0x1178 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18CB DUP5 DUP3 DUP6 ADD PUSH2 0x1892 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 0x49 0x29 DIFFICULTY SLOAD PUSH15 0x91F22ACDC689D462B234087AB03F20 DUP15 COINBASE SMOD PUSH25 0x784C7A2524BEBE64736F6C634300080F003300000000000000 ",
							"sourceMap": "885:34115:1:-:0;;;3986:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4060:5;4052;:13;;;;;;:::i;:::-;;4085:7;4075;:17;;;;;;:::i;:::-;;4118:15;:13;;;:15;;:::i;:::-;4102:13;:31;;;;3986:154;;885:34115;;4276:90;4332:7;4276:90;:::o;7:75:3:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:853::-;2824:6;2832;2881:2;2869:9;2860:7;2856:23;2852:32;2849:119;;;2887:79;;:::i;:::-;2849:119;3028:1;3017:9;3013:17;3007:24;3058:18;3050:6;3047:30;3044:117;;;3080:79;;:::i;:::-;3044:117;3185:74;3251:7;3242:6;3231:9;3227:22;3185:74;:::i;:::-;3175:84;;2978:291;3329:2;3318:9;3314:18;3308:25;3360:18;3352:6;3349:30;3346:117;;;3382:79;;:::i;:::-;3346:117;3487:74;3553:7;3544:6;3533:9;3529:22;3487:74;:::i;:::-;3477:84;;3279:292;2725:853;;;;;:::o;3584:99::-;3636:6;3670:5;3664:12;3654:22;;3584:99;;;:::o;3689:180::-;3737:77;3734:1;3727:88;3834:4;3831:1;3824:15;3858:4;3855:1;3848:15;3875:320;3919:6;3956:1;3950:4;3946:12;3936:22;;4003:1;3997:4;3993:12;4024:18;4014:81;;4080:4;4072:6;4068:17;4058:27;;4014:81;4142:2;4134:6;4131:14;4111:18;4108:38;4105:84;;4161:18;;:::i;:::-;4105:84;3926:269;3875:320;;;:::o;4201:141::-;4250:4;4273:3;4265:11;;4296:3;4293:1;4286:14;4330:4;4327:1;4317:18;4309:26;;4201:141;;;:::o;4348:93::-;4385:6;4432:2;4427;4420:5;4416:14;4412:23;4402:33;;4348:93;;;:::o;4447:107::-;4491:8;4541:5;4535:4;4531:16;4510:37;;4447:107;;;;:::o;4560:393::-;4629:6;4679:1;4667:10;4663:18;4702:97;4732:66;4721:9;4702:97;:::i;:::-;4820:39;4850:8;4839:9;4820:39;:::i;:::-;4808:51;;4892:4;4888:9;4881:5;4877:21;4868:30;;4941:4;4931:8;4927:19;4920:5;4917:30;4907:40;;4636:317;;4560:393;;;;;:::o;4959:77::-;4996:7;5025:5;5014:16;;4959:77;;;:::o;5042:60::-;5070:3;5091:5;5084:12;;5042:60;;;:::o;5108:142::-;5158:9;5191:53;5209:34;5218:24;5236:5;5218:24;:::i;:::-;5209:34;:::i;:::-;5191:53;:::i;:::-;5178:66;;5108:142;;;:::o;5256:75::-;5299:3;5320:5;5313:12;;5256:75;;;:::o;5337:269::-;5447:39;5478:7;5447:39;:::i;:::-;5508:91;5557:41;5581:16;5557:41;:::i;:::-;5549:6;5542:4;5536:11;5508:91;:::i;:::-;5502:4;5495:105;5413:193;5337:269;;;:::o;5612:73::-;5657:3;5612:73;:::o;5691:189::-;5768:32;;:::i;:::-;5809:65;5867:6;5859;5853:4;5809:65;:::i;:::-;5744:136;5691:189;;:::o;5886:186::-;5946:120;5963:3;5956:5;5953:14;5946:120;;;6017:39;6054:1;6047:5;6017:39;:::i;:::-;5990:1;5983:5;5979:13;5970:22;;5946:120;;;5886:186;;:::o;6078:543::-;6179:2;6174:3;6171:11;6168:446;;;6213:38;6245:5;6213:38;:::i;:::-;6297:29;6315:10;6297:29;:::i;:::-;6287:8;6283:44;6480:2;6468:10;6465:18;6462:49;;;6501:8;6486:23;;6462:49;6524:80;6580:22;6598:3;6580:22;:::i;:::-;6570:8;6566:37;6553:11;6524:80;:::i;:::-;6183:431;;6168:446;6078:543;;;:::o;6627:117::-;6681:8;6731:5;6725:4;6721:16;6700:37;;6627:117;;;;:::o;6750:169::-;6794:6;6827:51;6875:1;6871:6;6863:5;6860:1;6856:13;6827:51;:::i;:::-;6823:56;6908:4;6902;6898:15;6888:25;;6801:118;6750:169;;;;:::o;6924:295::-;7000:4;7146:29;7171:3;7165:4;7146:29;:::i;:::-;7138:37;;7208:3;7205:1;7201:11;7195:4;7192:21;7184:29;;6924:295;;;;:::o;7224:1395::-;7341:37;7374:3;7341:37;:::i;:::-;7443:18;7435:6;7432:30;7429:56;;;7465:18;;:::i;:::-;7429:56;7509:38;7541:4;7535:11;7509:38;:::i;:::-;7594:67;7654:6;7646;7640:4;7594:67;:::i;:::-;7688:1;7712:4;7699:17;;7744:2;7736:6;7733:14;7761:1;7756:618;;;;8418:1;8435:6;8432:77;;;8484:9;8479:3;8475:19;8469:26;8460:35;;8432:77;8535:67;8595:6;8588:5;8535:67;:::i;:::-;8529:4;8522:81;8391:222;7726:887;;7756:618;7808:4;7804:9;7796:6;7792:22;7842:37;7874:4;7842:37;:::i;:::-;7901:1;7915:208;7929:7;7926:1;7923:14;7915:208;;;8008:9;8003:3;7999:19;7993:26;7985:6;7978:42;8059:1;8051:6;8047:14;8037:24;;8106:2;8095:9;8091:18;8078:31;;7952:4;7949:1;7945:12;7940:17;;7915:208;;;8151:6;8142:7;8139:19;8136:179;;;8209:9;8204:3;8200:19;8194:26;8252:48;8294:4;8286:6;8282:17;8271:9;8252:48;:::i;:::-;8244:6;8237:64;8159:156;8136:179;8361:1;8357;8349:6;8345:14;8341:22;8335:4;8328:36;7763:611;;;7726:887;;7316:1303;;;7224:1395;;:::o;885:34115:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_1643": {
									"entryPoint": 3998,
									"id": 1643,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_617": {
									"entryPoint": 4340,
									"id": 617,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1630": {
									"entryPoint": 3909,
									"id": 1630,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_1527": {
									"entryPoint": 4004,
									"id": 1527,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_828": {
									"entryPoint": 3495,
									"id": 828,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_1617": {
									"entryPoint": 4453,
									"id": 1617,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedAddress_1149": {
									"entryPoint": 3807,
									"id": 1149,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isOwnerOrApproved_1163": {
									"entryPoint": 3841,
									"id": 1163,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_msgSenderERC721A_1653": {
									"entryPoint": 3590,
									"id": 1653,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_1604": {
									"entryPoint": 3915,
									"id": 1604,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_packOwnershipData_525": {
									"entryPoint": 3955,
									"id": 525,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_405": {
									"entryPoint": 3603,
									"id": 405,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_startTokenId_165": {
									"entryPoint": 3598,
									"id": 165,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_toString_1663": {
									"entryPoint": 4363,
									"id": 1663,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@approve_671": {
									"entryPoint": 1173,
									"id": 671,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_260": {
									"entryPoint": 2369,
									"id": 260,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_693": {
									"entryPoint": 1049,
									"id": 693,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_745": {
									"entryPoint": 3347,
									"id": 745,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_555": {
									"entryPoint": 903,
									"id": 555,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_545": {
									"entryPoint": 2351,
									"id": 545,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_764": {
									"entryPoint": 2319,
									"id": 764,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_802": {
									"entryPoint": 3074,
									"id": 802,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_727": {
									"entryPoint": 2699,
									"id": 727,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_234": {
									"entryPoint": 757,
									"id": 234,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_565": {
									"entryPoint": 2553,
									"id": 565,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_608": {
									"entryPoint": 3189,
									"id": 608,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_190": {
									"entryPoint": 1494,
									"id": 190,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1308": {
									"entryPoint": 1517,
									"id": 1308,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 5630,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5070,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 4549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 6290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 5696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 5742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4910,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4627,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6093,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6214,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4462,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 5566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 6129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4615,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 5615,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 4697,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5937,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5443,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5433,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5438,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4477,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4472,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 5047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 4526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13793:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:3",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:3",
														"type": ""
													}
												],
												"src": "334:149:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:3"
															},
															"nodeType": "YulIf",
															"src": "541:62:3"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:3",
														"type": ""
													}
												],
												"src": "489:120:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:3"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:3",
														"type": ""
													}
												],
												"src": "615:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:3"
															},
															"nodeType": "YulIf",
															"src": "833:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:3",
														"type": ""
													}
												],
												"src": "758:327:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:3",
														"type": ""
													}
												],
												"src": "1091:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:3",
														"type": ""
													}
												],
												"src": "1187:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:3",
														"type": ""
													}
												],
												"src": "1302:210:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:3",
														"type": ""
													}
												],
												"src": "1518:99:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:3",
														"type": ""
													}
												],
												"src": "1623:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1847:258:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1857:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1866:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1861:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1926:63:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1951:3:3"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1956:1:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1947:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1947:11:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1970:3:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1975:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1966:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1966:11:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1960:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:18:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1940:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1940:39:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1940:39:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1887:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1890:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1884:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1884:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1898:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1900:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1909:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1912:2:3",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1905:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1905:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1900:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1880:3:3",
																"statements": []
															},
															"src": "1876:113:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2023:76:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2073:3:3"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2078:6:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2069:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2069:16:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2087:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2062:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2062:27:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2062:27:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2004:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2007:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2001:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2001:13:3"
															},
															"nodeType": "YulIf",
															"src": "1998:101:3"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1829:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1834:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1839:6:3",
														"type": ""
													}
												],
												"src": "1798:307:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2159:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2169:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2187:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2194:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2183:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2183:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2203:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2199:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2199:7:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2179:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2179:28:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2169:6:3"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2142:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2152:6:3",
														"type": ""
													}
												],
												"src": "2111:102:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2311:272:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2321:53:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2368:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2335:32:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2335:39:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2325:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2383:78:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2449:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2454:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2390:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2390:71:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2496:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2503:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2492:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2492:16:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2510:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2515:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2470:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2470:52:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2470:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2531:46:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2542:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2569:6:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2547:21:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2547:29:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2538:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2538:39:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2292:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2299:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2307:3:3",
														"type": ""
													}
												],
												"src": "2219:364:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2707:195:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2717:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2729:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2740:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2725:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2725:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2717:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2764:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2775:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2760:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2760:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2783:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2789:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2779:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2779:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2753:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2753:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2753:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2809:86:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2881:6:3"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2890:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2817:63:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2817:78:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2809:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2679:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2691:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2702:4:3",
														"type": ""
													}
												],
												"src": "2589:313:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2953:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2963:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2974:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2963:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2935:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2945:7:3",
														"type": ""
													}
												],
												"src": "2908:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3034:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3091:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3100:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3103:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3093:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3093:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3093:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3057:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3082:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3064:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3064:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3054:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3054:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3047:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3047:43:3"
															},
															"nodeType": "YulIf",
															"src": "3044:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3027:5:3",
														"type": ""
													}
												],
												"src": "2991:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3171:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3181:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3203:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3190:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3190:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3181:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3246:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3219:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3219:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3219:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3149:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3157:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3165:5:3",
														"type": ""
													}
												],
												"src": "3119:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3330:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3376:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3378:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3378:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3378:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3351:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3360:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3347:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3347:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3372:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3343:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3343:32:3"
															},
															"nodeType": "YulIf",
															"src": "3340:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "3469:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3484:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3498:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3488:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3513:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3548:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3559:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3544:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3544:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3568:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3523:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3523:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3513:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3300:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3311:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3323:6:3",
														"type": ""
													}
												],
												"src": "3264:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3644:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3654:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3669:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3676:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3665:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3665:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3654:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3626:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3636:7:3",
														"type": ""
													}
												],
												"src": "3599:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3776:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3786:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3815:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3797:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3797:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3786:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3758:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3768:7:3",
														"type": ""
													}
												],
												"src": "3731:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3915:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3938:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3920:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3920:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3908:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3908:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3908:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3886:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3893:3:3",
														"type": ""
													}
												],
												"src": "3833:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4055:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4065:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4077:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4088:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4073:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4073:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4065:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4145:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4158:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4169:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4154:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4154:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4101:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4101:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4101:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4027:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4039:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4050:4:3",
														"type": ""
													}
												],
												"src": "3957:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4228:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4285:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4294:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4297:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4287:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4287:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4287:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4251:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4276:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4258:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4258:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4248:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4248:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4241:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4241:43:3"
															},
															"nodeType": "YulIf",
															"src": "4238:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4221:5:3",
														"type": ""
													}
												],
												"src": "4185:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4365:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4375:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4397:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4384:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4384:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4375:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4440:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4413:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4413:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4413:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4343:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4351:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4359:5:3",
														"type": ""
													}
												],
												"src": "4313:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4541:391:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4587:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4589:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4589:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4589:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4562:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4571:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4558:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4558:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4583:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4554:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4554:32:3"
															},
															"nodeType": "YulIf",
															"src": "4551:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "4680:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4695:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4709:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4699:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4724:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4759:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4770:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4755:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4755:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4779:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4734:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4734:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4724:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4807:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4822:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4836:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4826:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4852:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4887:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4898:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4883:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4883:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4907:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4862:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4862:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4852:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4503:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4514:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4526:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4534:6:3",
														"type": ""
													}
												],
												"src": "4458:474:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5003:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5020:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5043:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5025:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5025:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5013:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5013:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5013:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4991:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4998:3:3",
														"type": ""
													}
												],
												"src": "4938:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5160:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5170:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5182:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5193:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5178:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5178:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5170:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5250:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5263:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5274:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5259:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5259:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5206:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5206:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5206:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5132:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5144:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5155:4:3",
														"type": ""
													}
												],
												"src": "5062:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5390:519:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5436:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5438:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5438:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5438:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5411:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5420:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5407:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5407:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5432:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5403:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5403:32:3"
															},
															"nodeType": "YulIf",
															"src": "5400:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "5529:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5544:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5558:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5548:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5573:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5608:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5619:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5604:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5604:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5628:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5583:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5583:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5573:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5656:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5671:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5685:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5675:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5701:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5736:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5747:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5732:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5732:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5756:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5711:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5711:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5701:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5784:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5799:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5813:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5803:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5829:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5864:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5875:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5860:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5860:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5884:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5839:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5839:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5829:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5344:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5355:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5367:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5375:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5383:6:3",
														"type": ""
													}
												],
												"src": "5290:619:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5981:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6027:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6029:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6029:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6029:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6002:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6011:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5998:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5998:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6023:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5994:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5994:32:3"
															},
															"nodeType": "YulIf",
															"src": "5991:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "6120:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6135:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6149:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6139:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6164:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6199:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6210:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6195:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6195:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6219:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6174:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6174:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6164:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5951:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5962:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5974:6:3",
														"type": ""
													}
												],
												"src": "5915:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6290:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6344:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6353:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6356:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6346:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6346:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6346:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6313:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6335:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6320:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6320:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6310:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6310:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6303:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6303:40:3"
															},
															"nodeType": "YulIf",
															"src": "6300:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6283:5:3",
														"type": ""
													}
												],
												"src": "6250:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6421:84:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6431:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6453:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6440:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6440:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6431:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6493:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6469:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6469:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6469:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6399:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6407:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6415:5:3",
														"type": ""
													}
												],
												"src": "6372:133:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6591:388:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6637:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6639:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6639:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6639:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6612:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6621:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6608:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6608:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6633:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6604:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6604:32:3"
															},
															"nodeType": "YulIf",
															"src": "6601:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "6730:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6745:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6759:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6749:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6774:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6809:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6820:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6805:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6805:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6829:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6784:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6784:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6774:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6857:115:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6872:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6886:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6876:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6902:60:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6934:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6945:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6930:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6930:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6954:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6912:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6912:50:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6902:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6553:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6564:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6576:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6584:6:3",
														"type": ""
													}
												],
												"src": "6511:468:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7074:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7091:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7094:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7084:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7084:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7084:12:3"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "6985:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7197:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7214:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7217:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7207:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7207:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7207:12:3"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7108:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7259:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7276:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7279:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7269:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7269:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7269:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7373:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7376:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7366:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7366:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7366:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7397:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7400:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7390:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7390:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7390:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7231:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7460:238:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7470:58:3",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7492:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7522:4:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7500:21:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7500:27:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7488:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7488:40:3"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7474:10:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7639:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7641:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7641:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7641:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7582:10:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7594:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7579:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7579:34:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7618:10:3"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7630:6:3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7615:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7615:22:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7576:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7576:62:3"
															},
															"nodeType": "YulIf",
															"src": "7573:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7677:2:3",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7681:10:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7670:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7670:22:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7670:22:3"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7446:6:3",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7454:4:3",
														"type": ""
													}
												],
												"src": "7417:281:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7745:88:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7755:30:3",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "7765:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7765:20:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7755:6:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7814:6:3"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7822:4:3"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7794:19:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7794:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7794:33:3"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7729:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7738:6:3",
														"type": ""
													}
												],
												"src": "7704:129:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7905:241:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8010:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8012:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8012:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8012:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7982:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7990:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7979:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7979:30:3"
															},
															"nodeType": "YulIf",
															"src": "7976:56:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8042:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8072:6:3"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "8050:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8050:29:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8042:4:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8116:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8128:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8134:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8124:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8124:15:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8116:4:3"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7889:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7900:4:3",
														"type": ""
													}
												],
												"src": "7839:307:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8203:103:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8226:3:3"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8231:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8236:6:3"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8213:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8213:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8213:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8284:3:3"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8289:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8280:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8280:16:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8298:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8273:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8273:27:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8273:27:3"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8185:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8190:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8195:6:3",
														"type": ""
													}
												],
												"src": "8152:154:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8395:327:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8405:74:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8471:6:3"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8430:40:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8430:48:3"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8414:15:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8414:65:3"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8405:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8495:5:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8502:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8488:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8488:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8488:21:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8518:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8533:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8540:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8529:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8529:16:3"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8522:3:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8583:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8585:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8585:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8585:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8564:3:3"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8569:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8560:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8560:16:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8578:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8557:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8557:25:3"
															},
															"nodeType": "YulIf",
															"src": "8554:112:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8699:3:3"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8704:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8709:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8675:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8675:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8675:41:3"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8368:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8373:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8381:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8389:5:3",
														"type": ""
													}
												],
												"src": "8312:410:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8802:277:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8851:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8853:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8853:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8853:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8830:6:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8838:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8826:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8826:17:3"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8845:3:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8822:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8822:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8815:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8815:35:3"
															},
															"nodeType": "YulIf",
															"src": "8812:122:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8943:34:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8970:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8957:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8957:20:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8947:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8986:87:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9046:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9054:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9042:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9042:17:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9061:6:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9069:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8995:46:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8995:78:3"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8986:5:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8780:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8788:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8796:5:3",
														"type": ""
													}
												],
												"src": "8741:338:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9211:817:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9258:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9260:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9260:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9260:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9232:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9241:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9228:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9228:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9253:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9224:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9224:33:3"
															},
															"nodeType": "YulIf",
															"src": "9221:120:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "9351:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9366:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9380:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9370:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9395:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9430:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9441:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9426:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9426:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9450:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9405:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9405:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9395:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9478:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9493:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9507:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9497:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9523:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9558:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9569:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9554:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9554:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9578:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9533:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9533:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9523:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9606:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9621:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9635:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9625:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9651:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9686:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9697:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9682:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9682:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9706:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9661:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9661:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9651:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9734:287:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9749:46:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9780:9:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9791:2:3",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9776:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9776:18:3"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9763:12:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9763:32:3"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9753:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9842:83:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9844:77:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9844:79:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9844:79:3"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9814:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9822:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9811:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9811:30:3"
																	},
																	"nodeType": "YulIf",
																	"src": "9808:117:3"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9939:72:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9983:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9994:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9979:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9979:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10003:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9949:29:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9949:62:3"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9939:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9157:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9168:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9180:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9188:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9196:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9204:6:3",
														"type": ""
													}
												],
												"src": "9085:943:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10117:391:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10163:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10165:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10165:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10165:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10138:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10147:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10134:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10134:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10159:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10130:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10130:32:3"
															},
															"nodeType": "YulIf",
															"src": "10127:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "10256:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10271:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10285:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10275:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10300:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10335:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10346:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10331:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10331:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10355:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10310:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10310:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10300:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10383:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10398:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10412:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10402:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10428:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10463:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10474:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10459:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10459:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10483:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10438:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10438:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10428:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10079:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10090:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10102:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10110:6:3",
														"type": ""
													}
												],
												"src": "10034:474:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10542:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10559:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10562:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10552:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10552:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10552:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10656:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10659:4:3",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10649:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10649:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10649:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10680:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10683:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10673:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10673:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10673:15:3"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "10514:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10751:269:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10761:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10775:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10781:1:3",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10771:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10771:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10761:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10792:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10822:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10828:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10818:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10818:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10796:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10869:51:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10883:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "10897:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10905:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10893:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10893:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10883:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10849:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10842:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10842:26:3"
															},
															"nodeType": "YulIf",
															"src": "10839:81:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10972:42:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "10986:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10986:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10986:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10936:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10959:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10967:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10956:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10956:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10933:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10933:38:3"
															},
															"nodeType": "YulIf",
															"src": "10930:84:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10735:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10744:6:3",
														"type": ""
													}
												],
												"src": "10700:320:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11140:34:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11150:18:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11165:3:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11150:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11112:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11117:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11128:11:3",
														"type": ""
													}
												],
												"src": "11026:148:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11290:267:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11300:53:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11347:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11314:32:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11314:39:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11304:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11362:96:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11446:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11451:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11369:76:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11369:89:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11362:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11493:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11500:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11489:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11489:16:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11507:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11512:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11467:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11467:52:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11467:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11528:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11539:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11544:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11535:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11535:16:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11528:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11271:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11278:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11286:3:3",
														"type": ""
													}
												],
												"src": "11180:377:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11747:251:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11758:102:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11847:6:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11856:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11765:81:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11765:95:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11758:3:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11870:102:3",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11959:6:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11968:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11877:81:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11877:95:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11870:3:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11982:10:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11989:3:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11982:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11718:3:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11724:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11732:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11743:3:3",
														"type": ""
													}
												],
												"src": "11563:435:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12062:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12073:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12089:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12083:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12083:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12073:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12045:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12055:6:3",
														"type": ""
													}
												],
												"src": "12004:98:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12203:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12220:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12225:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12213:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12213:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12213:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12241:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12260:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12265:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12256:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12256:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "12241:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12175:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12180:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "12191:11:3",
														"type": ""
													}
												],
												"src": "12108:168:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12372:270:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12382:52:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12428:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12396:31:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12396:38:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12386:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12443:77:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12508:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12513:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12450:57:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12450:70:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12443:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12555:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12562:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12551:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12551:16:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12569:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12574:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "12529:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12529:52:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12529:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12590:46:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12601:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12628:6:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "12606:21:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12606:29:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12597:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12597:39:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12590:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12353:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12360:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12368:3:3",
														"type": ""
													}
												],
												"src": "12282:360:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12848:440:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12858:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12870:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12881:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12866:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12866:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12858:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12939:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12952:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12963:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12948:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12948:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12895:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12895:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12895:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13020:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13033:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13044:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13029:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13029:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12976:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12976:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12976:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13102:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13115:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13126:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13111:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13111:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13058:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13058:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13058:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13151:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13162:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13147:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13147:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13171:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13177:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13167:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13167:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13140:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13140:48:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13140:48:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13197:84:3",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "13267:6:3"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13276:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13205:61:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13205:76:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13197:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12796:9:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12808:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12816:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12824:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12832:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12843:4:3",
														"type": ""
													}
												],
												"src": "12648:640:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13356:79:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13366:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "13381:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13375:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13375:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "13366:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13423:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "13397:25:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13397:32:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13397:32:3"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "13334:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13342:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13350:5:3",
														"type": ""
													}
												],
												"src": "13294:141:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13517:273:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13563:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "13565:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13565:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13565:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13538:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13547:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13534:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13534:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13559:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13530:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13530:32:3"
															},
															"nodeType": "YulIf",
															"src": "13527:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "13656:127:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13671:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13685:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13675:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13700:73:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13745:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13756:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13741:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13741:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13765:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "13710:30:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13710:63:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "13700:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13487:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13498:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13510:6:3",
														"type": ""
													}
												],
												"src": "13441:349:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb4651461025d578063b88d4fde14610279578063c87b56dd14610295578063e985e9c5146102c5576100ea565b80636352211e146101df57806370a082311461020f57806395d89b411461023f576100ea565b8063095ea7b3116100c8578063095ea7b31461016d57806318160ddd1461018957806323b872dd146101a757806342842e0e146101c3576100ea565b806301ffc9a7146100ef57806306fdde031461011f578063081812fc1461013d575b600080fd5b610109600480360381019061010491906111da565b6102f5565b6040516101169190611222565b60405180910390f35b610127610387565b60405161013491906112d6565b60405180910390f35b6101576004803603810190610152919061132e565b610419565b604051610164919061139c565b60405180910390f35b610187600480360381019061018291906113e3565b610495565b005b6101916105d6565b60405161019e9190611432565b60405180910390f35b6101c160048036038101906101bc919061144d565b6105ed565b005b6101dd60048036038101906101d8919061144d565b61090f565b005b6101f960048036038101906101f4919061132e565b61092f565b604051610206919061139c565b60405180910390f35b610229600480360381019061022491906114a0565b610941565b6040516102369190611432565b60405180910390f35b6102476109f9565b60405161025491906112d6565b60405180910390f35b610277600480360381019061027291906114f9565b610a8b565b005b610293600480360381019061028e919061166e565b610c02565b005b6102af60048036038101906102aa919061132e565b610c75565b6040516102bc91906112d6565b60405180910390f35b6102df60048036038101906102da91906116f1565b610d13565b6040516102ec9190611222565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061035057506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103805750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606002805461039690611760565b80601f01602080910402602001604051908101604052809291908181526020018280546103c290611760565b801561040f5780601f106103e45761010080835404028352916020019161040f565b820191906000526020600020905b8154815290600101906020018083116103f257829003601f168201915b5050505050905090565b600061042482610da7565b61045a576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104a08261092f565b90508073ffffffffffffffffffffffffffffffffffffffff166104c1610e06565b73ffffffffffffffffffffffffffffffffffffffff1614610524576104ed816104e8610e06565b610d13565b610523576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826006600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60006105e0610e0e565b6001546000540303905090565b60006105f882610e13565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461065f576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008061066b84610edf565b91509150610681818761067c610e06565b610f01565b6106cd5761069686610691610e06565b610d13565b6106cc576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610733576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107408686866001610f45565b801561074b57600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815460010191905081905550610819856107f5888887610f4b565b7c020000000000000000000000000000000000000000000000000000000017610f73565b600460008681526020019081526020016000208190555060007c020000000000000000000000000000000000000000000000000000000084160361089f576000600185019050600060046000838152602001908152602001600020540361089d57600054811461089c578360046000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46109078686866001610f9e565b505050505050565b61092a83838360405180602001604052806000815250610c02565b505050565b600061093a82610e13565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109a8576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b606060038054610a0890611760565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3490611760565b8015610a815780601f10610a5657610100808354040283529160200191610a81565b820191906000526020600020905b815481529060010190602001808311610a6457829003601f168201915b5050505050905090565b610a93610e06565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610af7576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060076000610b04610e06565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610bb1610e06565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610bf69190611222565b60405180910390a35050565b610c0d8484846105ed565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610c6f57610c3884848484610fa4565b610c6e576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6060610c8082610da7565b610cb6576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610cc06110f4565b90506000815103610ce05760405180602001604052806000815250610d0b565b80610cea8461110b565b604051602001610cfb9291906117cd565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081610db2610e0e565b11158015610dc1575060005482105b8015610dff575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b600033905090565b600090565b60008082905080610e22610e0e565b11610ea857600054811015610ea75760006004600083815260200190815260200160002054905060007c0100000000000000000000000000000000000000000000000000000000821603610ea5575b60008103610e9b576004600083600190039350838152602001908152602001600020549050610e71565b8092505050610eda565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000806000600690508360005280602052604060002092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e8610f62868684611165565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02610fca610e06565b8786866040518563ffffffff1660e01b8152600401610fec9493929190611846565b6020604051808303816000875af192505050801561102857506040513d601f19601f8201168201806040525081019061102591906118a7565b60015b6110a1573d8060008114611058576040519150601f19603f3d011682016040523d82523d6000602084013e61105d565b606091505b506000815103611099576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b60606080604051019050806040528082600183039250600a81066030018353600a810490505b801561115157600183039250600a81066030018353600a81049050611131565b508181036020830392508083525050919050565b60009392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6111b781611182565b81146111c257600080fd5b50565b6000813590506111d4816111ae565b92915050565b6000602082840312156111f0576111ef611178565b5b60006111fe848285016111c5565b91505092915050565b60008115159050919050565b61121c81611207565b82525050565b60006020820190506112376000830184611213565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561127757808201518184015260208101905061125c565b83811115611286576000848401525b50505050565b6000601f19601f8301169050919050565b60006112a88261123d565b6112b28185611248565b93506112c2818560208601611259565b6112cb8161128c565b840191505092915050565b600060208201905081810360008301526112f0818461129d565b905092915050565b6000819050919050565b61130b816112f8565b811461131657600080fd5b50565b60008135905061132881611302565b92915050565b60006020828403121561134457611343611178565b5b600061135284828501611319565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113868261135b565b9050919050565b6113968161137b565b82525050565b60006020820190506113b1600083018461138d565b92915050565b6113c08161137b565b81146113cb57600080fd5b50565b6000813590506113dd816113b7565b92915050565b600080604083850312156113fa576113f9611178565b5b6000611408858286016113ce565b925050602061141985828601611319565b9150509250929050565b61142c816112f8565b82525050565b60006020820190506114476000830184611423565b92915050565b60008060006060848603121561146657611465611178565b5b6000611474868287016113ce565b9350506020611485868287016113ce565b925050604061149686828701611319565b9150509250925092565b6000602082840312156114b6576114b5611178565b5b60006114c4848285016113ce565b91505092915050565b6114d681611207565b81146114e157600080fd5b50565b6000813590506114f3816114cd565b92915050565b600080604083850312156115105761150f611178565b5b600061151e858286016113ce565b925050602061152f858286016114e4565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61157b8261128c565b810181811067ffffffffffffffff8211171561159a57611599611543565b5b80604052505050565b60006115ad61116e565b90506115b98282611572565b919050565b600067ffffffffffffffff8211156115d9576115d8611543565b5b6115e28261128c565b9050602081019050919050565b82818337600083830152505050565b600061161161160c846115be565b6115a3565b90508281526020810184848401111561162d5761162c61153e565b5b6116388482856115ef565b509392505050565b600082601f83011261165557611654611539565b5b81356116658482602086016115fe565b91505092915050565b6000806000806080858703121561168857611687611178565b5b6000611696878288016113ce565b94505060206116a7878288016113ce565b93505060406116b887828801611319565b925050606085013567ffffffffffffffff8111156116d9576116d861117d565b5b6116e587828801611640565b91505092959194509250565b6000806040838503121561170857611707611178565b5b6000611716858286016113ce565b9250506020611727858286016113ce565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061177857607f821691505b60208210810361178b5761178a611731565b5b50919050565b600081905092915050565b60006117a78261123d565b6117b18185611791565b93506117c1818560208601611259565b80840191505092915050565b60006117d9828561179c565b91506117e5828461179c565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000611818826117f1565b61182281856117fc565b9350611832818560208601611259565b61183b8161128c565b840191505092915050565b600060808201905061185b600083018761138d565b611868602083018661138d565b6118756040830185611423565b8181036060830152611887818461180d565b905095945050505050565b6000815190506118a1816111ae565b92915050565b6000602082840312156118bd576118bc611178565b5b60006118cb84828501611892565b9150509291505056fea26469706673582212209e492944546e91f22acdc689d462b234087ab03f208e410778784c7a2524bebe64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2C5 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x23F JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1C3 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x11DA JUMP JUMPDEST PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1222 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x387 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x132E JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x139C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x13E3 JUMP JUMPDEST PUSH2 0x495 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x191 PUSH2 0x5D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x1432 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x144D JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x144D JUMP JUMPDEST PUSH2 0x90F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x132E JUMP JUMPDEST PUSH2 0x92F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x139C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x14A0 JUMP JUMPDEST PUSH2 0x941 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1432 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH2 0x9F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x14F9 JUMP JUMPDEST PUSH2 0xA8B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x166E JUMP JUMPDEST PUSH2 0xC02 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x132E JUMP JUMPDEST PUSH2 0xC75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x16F1 JUMP JUMPDEST PUSH2 0xD13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x1222 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x350 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x380 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x396 SWAP1 PUSH2 0x1760 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3C2 SWAP1 PUSH2 0x1760 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x40F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3E4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x40F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x424 DUP3 PUSH2 0xDA7 JUMP JUMPDEST PUSH2 0x45A JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A0 DUP3 PUSH2 0x92F JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4C1 PUSH2 0xE06 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x524 JUMPI PUSH2 0x4ED DUP2 PUSH2 0x4E8 PUSH2 0xE06 JUMP JUMPDEST PUSH2 0xD13 JUMP JUMPDEST PUSH2 0x523 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E0 PUSH2 0xE0E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F8 DUP3 PUSH2 0xE13 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x65F JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x66B DUP5 PUSH2 0xEDF JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x681 DUP2 DUP8 PUSH2 0x67C PUSH2 0xE06 JUMP JUMPDEST PUSH2 0xF01 JUMP JUMPDEST PUSH2 0x6CD JUMPI PUSH2 0x696 DUP7 PUSH2 0x691 PUSH2 0xE06 JUMP JUMPDEST PUSH2 0xD13 JUMP JUMPDEST PUSH2 0x6CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x733 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x740 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xF45 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x74B JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x819 DUP6 PUSH2 0x7F5 DUP9 DUP9 DUP8 PUSH2 0xF4B JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH2 0xF73 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND SUB PUSH2 0x89F JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x89D JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x89C JUMPI DUP4 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x907 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xF9E JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x92A DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC02 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93A DUP3 PUSH2 0xE13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0xA08 SWAP1 PUSH2 0x1760 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA34 SWAP1 PUSH2 0x1760 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA81 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA56 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA81 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA64 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA93 PUSH2 0xE06 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06307DB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0xB04 PUSH2 0xE06 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBB1 PUSH2 0xE06 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xBF6 SWAP2 SWAP1 PUSH2 0x1222 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xC0D DUP5 DUP5 DUP5 PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0xC6F JUMPI PUSH2 0xC38 DUP5 DUP5 DUP5 DUP5 PUSH2 0xFA4 JUMP JUMPDEST PUSH2 0xC6E JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC80 DUP3 PUSH2 0xDA7 JUMP JUMPDEST PUSH2 0xCB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCC0 PUSH2 0x10F4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xCE0 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD0B JUMP JUMPDEST DUP1 PUSH2 0xCEA DUP5 PUSH2 0x110B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCFB SWAP3 SWAP2 SWAP1 PUSH2 0x17CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xDB2 PUSH2 0xE0E JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xDC1 JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0xDFF JUMPI POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP DUP1 PUSH2 0xE22 PUSH2 0xE0E JUMP JUMPDEST GT PUSH2 0xEA8 JUMPI PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0xEA7 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND SUB PUSH2 0xEA5 JUMPI JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0xE9B JUMPI PUSH1 0x4 PUSH1 0x0 DUP4 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0xE71 JUMP JUMPDEST DUP1 SWAP3 POP POP POP PUSH2 0xEDA JUMP JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 SWAP1 POP DUP4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 POP DUP3 SLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 POP DUP4 DUP3 EQ DUP4 DUP4 EQ OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE8 DUP4 SWAP1 SHR SWAP1 POP PUSH1 0xE8 PUSH2 0xF62 DUP7 DUP7 DUP5 PUSH2 0x1165 JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 SHL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP DUP2 TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xFCA PUSH2 0xE06 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFEC SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1846 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1028 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1025 SWAP2 SWAP1 PUSH2 0x18A7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x10A1 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1058 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x105D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1099 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x80 PUSH1 0x40 MLOAD ADD SWAP1 POP DUP1 PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP JUMPDEST DUP1 ISZERO PUSH2 0x1151 JUMPI PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP PUSH2 0x1131 JUMP JUMPDEST POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 SUB SWAP3 POP DUP1 DUP4 MSTORE POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11B7 DUP2 PUSH2 0x1182 JUMP JUMPDEST DUP2 EQ PUSH2 0x11C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11D4 DUP2 PUSH2 0x11AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11F0 JUMPI PUSH2 0x11EF PUSH2 0x1178 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11FE DUP5 DUP3 DUP6 ADD PUSH2 0x11C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x121C DUP2 PUSH2 0x1207 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1237 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1213 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1277 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x125C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1286 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A8 DUP3 PUSH2 0x123D JUMP JUMPDEST PUSH2 0x12B2 DUP2 DUP6 PUSH2 0x1248 JUMP JUMPDEST SWAP4 POP PUSH2 0x12C2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1259 JUMP JUMPDEST PUSH2 0x12CB DUP2 PUSH2 0x128C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12F0 DUP2 DUP5 PUSH2 0x129D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x130B DUP2 PUSH2 0x12F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1328 DUP2 PUSH2 0x1302 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1344 JUMPI PUSH2 0x1343 PUSH2 0x1178 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1352 DUP5 DUP3 DUP6 ADD PUSH2 0x1319 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1386 DUP3 PUSH2 0x135B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1396 DUP2 PUSH2 0x137B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13B1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x138D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13C0 DUP2 PUSH2 0x137B JUMP JUMPDEST DUP2 EQ PUSH2 0x13CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13DD DUP2 PUSH2 0x13B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13FA JUMPI PUSH2 0x13F9 PUSH2 0x1178 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1408 DUP6 DUP3 DUP7 ADD PUSH2 0x13CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1419 DUP6 DUP3 DUP7 ADD PUSH2 0x1319 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x142C DUP2 PUSH2 0x12F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1447 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1423 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1466 JUMPI PUSH2 0x1465 PUSH2 0x1178 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1474 DUP7 DUP3 DUP8 ADD PUSH2 0x13CE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1485 DUP7 DUP3 DUP8 ADD PUSH2 0x13CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1496 DUP7 DUP3 DUP8 ADD PUSH2 0x1319 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B6 JUMPI PUSH2 0x14B5 PUSH2 0x1178 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14C4 DUP5 DUP3 DUP6 ADD PUSH2 0x13CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14D6 DUP2 PUSH2 0x1207 JUMP JUMPDEST DUP2 EQ PUSH2 0x14E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14F3 DUP2 PUSH2 0x14CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1510 JUMPI PUSH2 0x150F PUSH2 0x1178 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x151E DUP6 DUP3 DUP7 ADD PUSH2 0x13CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x152F DUP6 DUP3 DUP7 ADD PUSH2 0x14E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x157B DUP3 PUSH2 0x128C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x159A JUMPI PUSH2 0x1599 PUSH2 0x1543 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15AD PUSH2 0x116E JUMP JUMPDEST SWAP1 POP PUSH2 0x15B9 DUP3 DUP3 PUSH2 0x1572 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15D9 JUMPI PUSH2 0x15D8 PUSH2 0x1543 JUMP JUMPDEST JUMPDEST PUSH2 0x15E2 DUP3 PUSH2 0x128C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1611 PUSH2 0x160C DUP5 PUSH2 0x15BE JUMP JUMPDEST PUSH2 0x15A3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x162D JUMPI PUSH2 0x162C PUSH2 0x153E JUMP JUMPDEST JUMPDEST PUSH2 0x1638 DUP5 DUP3 DUP6 PUSH2 0x15EF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1655 JUMPI PUSH2 0x1654 PUSH2 0x1539 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1665 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x15FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1688 JUMPI PUSH2 0x1687 PUSH2 0x1178 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1696 DUP8 DUP3 DUP9 ADD PUSH2 0x13CE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x16A7 DUP8 DUP3 DUP9 ADD PUSH2 0x13CE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x16B8 DUP8 DUP3 DUP9 ADD PUSH2 0x1319 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16D9 JUMPI PUSH2 0x16D8 PUSH2 0x117D JUMP JUMPDEST JUMPDEST PUSH2 0x16E5 DUP8 DUP3 DUP9 ADD PUSH2 0x1640 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1708 JUMPI PUSH2 0x1707 PUSH2 0x1178 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1716 DUP6 DUP3 DUP7 ADD PUSH2 0x13CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1727 DUP6 DUP3 DUP7 ADD PUSH2 0x13CE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1778 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x178B JUMPI PUSH2 0x178A PUSH2 0x1731 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A7 DUP3 PUSH2 0x123D JUMP JUMPDEST PUSH2 0x17B1 DUP2 DUP6 PUSH2 0x1791 JUMP JUMPDEST SWAP4 POP PUSH2 0x17C1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1259 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17D9 DUP3 DUP6 PUSH2 0x179C JUMP JUMPDEST SWAP2 POP PUSH2 0x17E5 DUP3 DUP5 PUSH2 0x179C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1818 DUP3 PUSH2 0x17F1 JUMP JUMPDEST PUSH2 0x1822 DUP2 DUP6 PUSH2 0x17FC JUMP JUMPDEST SWAP4 POP PUSH2 0x1832 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1259 JUMP JUMPDEST PUSH2 0x183B DUP2 PUSH2 0x128C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x185B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x138D JUMP JUMPDEST PUSH2 0x1868 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x138D JUMP JUMPDEST PUSH2 0x1875 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1423 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1887 DUP2 DUP5 PUSH2 0x180D JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x18A1 DUP2 PUSH2 0x11AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18BD JUMPI PUSH2 0x18BC PUSH2 0x1178 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18CB DUP5 DUP3 DUP6 ADD PUSH2 0x1892 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 0x49 0x29 DIFFICULTY SLOAD PUSH15 0x91F22ACDC689D462B234087AB03F20 DUP15 COINBASE SMOD PUSH25 0x784C7A2524BEBE64736F6C634300080F003300000000000000 ",
							"sourceMap": "885:34115:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5653:607;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11161:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13048:200;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12611:376;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4736:309;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22055:2739;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13912:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10957:142;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6319:221;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11323:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13315:303;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14157:388;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11491:313;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13684:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5653:607;5738:4;6048:10;6033:25;;:11;:25;;;;:101;;;;6124:10;6109:25;;:11;:25;;;;6033:101;:177;;;;6200:10;6185:25;;:11;:25;;;;6033:177;6014:196;;5653:607;;;:::o;11161:98::-;11215:13;11247:5;11240:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11161:98;:::o;13048:200::-;13116:7;13140:16;13148:7;13140;:16::i;:::-;13135:64;;13165:34;;;;;;;;;;;;;;13135:64;13217:15;:24;13233:7;13217:24;;;;;;;;;;;;;;;;;;;;;13210:31;;13048:200;;;:::o;12611:376::-;12683:13;12699:16;12707:7;12699;:16::i;:::-;12683:32;;12753:5;12730:28;;:19;:17;:19::i;:::-;:28;;;12726:172;;12777:44;12794:5;12801:19;:17;:19::i;:::-;12777:16;:44::i;:::-;12772:126;;12848:35;;;;;;;;;;;;;;12772:126;12726:172;12935:2;12908:15;:24;12924:7;12908:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12972:7;12968:2;12952:28;;12961:5;12952:28;;;;;;;;;;;;12673:314;12611:376;;:::o;4736:309::-;4789:7;5013:15;:13;:15::i;:::-;4998:12;;4982:13;;:28;:46;4975:53;;4736:309;:::o;22055:2739::-;22184:27;22214;22233:7;22214:18;:27::i;:::-;22184:57;;22297:4;22256:45;;22272:19;22256:45;;;22252:86;;22310:28;;;;;;;;;;;;;;22252:86;22350:27;22379:23;22406:28;22426:7;22406:19;:28::i;:::-;22349:85;;;;22531:62;22550:15;22567:4;22573:19;:17;:19::i;:::-;22531:18;:62::i;:::-;22526:173;;22612:43;22629:4;22635:19;:17;:19::i;:::-;22612:16;:43::i;:::-;22607:92;;22664:35;;;;;;;;;;;;;;22607:92;22526:173;22728:1;22714:16;;:2;:16;;;22710:52;;22739:23;;;;;;;;;;;;;;22710:52;22773:43;22795:4;22801:2;22805:7;22814:1;22773:21;:43::i;:::-;22905:15;22902:157;;;23043:1;23022:19;23015:30;22902:157;23429:18;:24;23448:4;23429:24;;;;;;;;;;;;;;;;23427:26;;;;;;;;;;;;23497:18;:22;23516:2;23497:22;;;;;;;;;;;;;;;;23495:24;;;;;;;;;;;23812:142;23848:2;23895:45;23910:4;23916:2;23920:19;23895:14;:45::i;:::-;2046:8;23868:72;23812:18;:142::i;:::-;23783:17;:26;23801:7;23783:26;;;;;;;;;;;:171;;;;24121:1;2046:8;24071:19;:46;:51;24067:616;;24142:19;24174:1;24164:7;:11;24142:33;;24329:1;24295:17;:30;24313:11;24295:30;;;;;;;;;;;;:35;24291:378;;24431:13;;24416:11;:28;24412:239;;24609:19;24576:17;:30;24594:11;24576:30;;;;;;;;;;;:52;;;;24412:239;24291:378;24124:559;24067:616;24727:7;24723:2;24708:27;;24717:4;24708:27;;;;;;;;;;;;24745:42;24766:4;24772:2;24776:7;24785:1;24745:20;:42::i;:::-;22174:2620;;;22055:2739;;;:::o;13912:179::-;14045:39;14062:4;14068:2;14072:7;14045:39;;;;;;;;;;;;:16;:39::i;:::-;13912:179;;;:::o;10957:142::-;11021:7;11063:27;11082:7;11063:18;:27::i;:::-;11040:52;;10957:142;;;:::o;6319:221::-;6383:7;6423:1;6406:19;;:5;:19;;;6402:60;;6434:28;;;;;;;;;;;;;;6402:60;1022:13;6479:18;:25;6498:5;6479:25;;;;;;;;;;;;;;;;:54;6472:61;;6319:221;;;:::o;11323:102::-;11379:13;11411:7;11404:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11323:102;:::o;13315:303::-;13425:19;:17;:19::i;:::-;13413:31;;:8;:31;;;13409:61;;13453:17;;;;;;;;;;;;;;13409:61;13533:8;13481:18;:39;13500:19;:17;:19::i;:::-;13481:39;;;;;;;;;;;;;;;:49;13521:8;13481:49;;;;;;;;;;;;;;;;:60;;;;;;;;;;;;;;;;;;13592:8;13556:55;;13571:19;:17;:19::i;:::-;13556:55;;;13602:8;13556:55;;;;;;:::i;:::-;;;;;;;;13315:303;;:::o;14157:388::-;14318:31;14331:4;14337:2;14341:7;14318:12;:31::i;:::-;14381:1;14363:2;:14;;;:19;14359:180;;14401:56;14432:4;14438:2;14442:7;14451:5;14401:30;:56::i;:::-;14396:143;;14484:40;;;;;;;;;;;;;;14396:143;14359:180;14157:388;;;;:::o;11491:313::-;11564:13;11594:16;11602:7;11594;:16::i;:::-;11589:59;;11619:29;;;;;;;;;;;;;;11589:59;11659:21;11683:10;:8;:10::i;:::-;11659:34;;11735:1;11716:7;11710:21;:26;:87;;;;;;;;;;;;;;;;;11763:7;11772:18;11782:7;11772:9;:18::i;:::-;11746:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11710:87;11703:94;;;11491:313;;;:::o;13684:162::-;13781:4;13804:18;:25;13823:5;13804:25;;;;;;;;;;;;;;;:35;13830:8;13804:35;;;;;;;;;;;;;;;;;;;;;;;;;13797:42;;13684:162;;;;:::o;14791:268::-;14848:4;14902:7;14883:15;:13;:15::i;:::-;:26;;:65;;;;;14935:13;;14925:7;:23;14883:65;:150;;;;;15032:1;1774:8;14985:17;:26;15003:7;14985:26;;;;;;;;;;;;:43;:48;14883:150;14864:169;;14791:268;;;:::o;32874:103::-;32934:7;32960:10;32953:17;;32874:103;:::o;4276:90::-;4332:7;4276:90;:::o;7949:1105::-;8016:7;8035:12;8050:7;8035:22;;8115:4;8096:15;:13;:15::i;:::-;:23;8092:898;;8148:13;;8141:4;:20;8137:853;;;8185:14;8202:17;:23;8220:4;8202:23;;;;;;;;;;;;8185:40;;8316:1;1774:8;8289:6;:23;:28;8285:687;;8800:111;8817:1;8807:6;:11;8800:111;;8859:17;:25;8877:6;;;;;;;8859:25;;;;;;;;;;;;8850:34;;8800:111;;;8943:6;8936:13;;;;;;8285:687;8163:827;8137:853;8092:898;9016:31;;;;;;;;;;;;;;7949:1105;;;;:::o;20436:637::-;20528:27;20557:23;20596:53;20652:15;20596:71;;20834:7;20828:4;20821:21;20868:22;20862:4;20855:36;20943:4;20937;20927:21;20904:44;;21037:19;21031:26;21012:45;;20774:293;20436:637;;;:::o;21181:632::-;21319:11;21478:15;21472:4;21468:26;21460:34;;21635:15;21624:9;21620:31;21607:44;;21780:15;21769:9;21766:30;21759:4;21748:9;21745:19;21742:55;21732:65;;21181:632;;;;;:::o;31742:154::-;;;;;:::o;30099:302::-;30230:7;30249:16;2166:3;30275:19;:40;;30249:67;;2166:3;30341:31;30352:4;30358:2;30362:9;30341:10;:31::i;:::-;30333:40;;:61;;30326:68;;;30099:302;;;;;:::o;10460:440::-;10540:14;10705:15;10698:5;10694:27;10685:36;;10877:5;10863:11;10839:22;10835:40;10832:51;10825:5;10822:62;10812:72;;10460:440;;;;:::o;32537:153::-;;;;;:::o;28649:697::-;28807:4;28852:2;28827:45;;;28873:19;:17;:19::i;:::-;28894:4;28900:7;28909:5;28827:88;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;28823:517;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29122:1;29105:6;:13;:18;29101:229;;29150:40;;;;;;;;;;;;;;29101:229;29290:6;29284:13;29275:6;29271:2;29267:15;29260:38;28823:517;28993:54;;;28983:64;;;:6;:64;;;;28976:71;;;28649:697;;;;;;:::o;12049:92::-;12100:13;12125:9;;;;;;;;;;;;;;12049:92;:::o;33078:1920::-;33135:17;33548:3;33541:4;33535:11;33531:21;33524:28;;33637:3;33631:4;33624:17;33740:3;34188:5;34316:1;34311:3;34307:11;34300:18;;34451:2;34445:4;34441:13;34437:2;34433:22;34428:3;34420:36;34491:2;34485:4;34481:13;34473:21;;34082:682;34509:4;34082:682;;;34695:1;34690:3;34686:11;34679:18;;34745:2;34739:4;34735:13;34731:2;34727:22;34722:3;34714:36;34602:2;34596:4;34592:13;34584:21;;34082:682;;;34086:422;34801:3;34796;34792:13;34914:2;34909:3;34905:12;34898:19;;34975:6;34970:3;34963:19;33173:1819;;33078:1920;;;:::o;30961:143::-;31094:6;30961:143;;;;;:::o;7:75:3:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:118::-;5025:24;5043:5;5025:24;:::i;:::-;5020:3;5013:37;4938:118;;:::o;5062:222::-;5155:4;5193:2;5182:9;5178:18;5170:26;;5206:71;5274:1;5263:9;5259:17;5250:6;5206:71;:::i;:::-;5062:222;;;;:::o;5290:619::-;5367:6;5375;5383;5432:2;5420:9;5411:7;5407:23;5403:32;5400:119;;;5438:79;;:::i;:::-;5400:119;5558:1;5583:53;5628:7;5619:6;5608:9;5604:22;5583:53;:::i;:::-;5573:63;;5529:117;5685:2;5711:53;5756:7;5747:6;5736:9;5732:22;5711:53;:::i;:::-;5701:63;;5656:118;5813:2;5839:53;5884:7;5875:6;5864:9;5860:22;5839:53;:::i;:::-;5829:63;;5784:118;5290:619;;;;;:::o;5915:329::-;5974:6;6023:2;6011:9;6002:7;5998:23;5994:32;5991:119;;;6029:79;;:::i;:::-;5991:119;6149:1;6174:53;6219:7;6210:6;6199:9;6195:22;6174:53;:::i;:::-;6164:63;;6120:117;5915:329;;;;:::o;6250:116::-;6320:21;6335:5;6320:21;:::i;:::-;6313:5;6310:32;6300:60;;6356:1;6353;6346:12;6300:60;6250:116;:::o;6372:133::-;6415:5;6453:6;6440:20;6431:29;;6469:30;6493:5;6469:30;:::i;:::-;6372:133;;;;:::o;6511:468::-;6576:6;6584;6633:2;6621:9;6612:7;6608:23;6604:32;6601:119;;;6639:79;;:::i;:::-;6601:119;6759:1;6784:53;6829:7;6820:6;6809:9;6805:22;6784:53;:::i;:::-;6774:63;;6730:117;6886:2;6912:50;6954:7;6945:6;6934:9;6930:22;6912:50;:::i;:::-;6902:60;;6857:115;6511:468;;;;;:::o;6985:117::-;7094:1;7091;7084:12;7108:117;7217:1;7214;7207:12;7231:180;7279:77;7276:1;7269:88;7376:4;7373:1;7366:15;7400:4;7397:1;7390:15;7417:281;7500:27;7522:4;7500:27;:::i;:::-;7492:6;7488:40;7630:6;7618:10;7615:22;7594:18;7582:10;7579:34;7576:62;7573:88;;;7641:18;;:::i;:::-;7573:88;7681:10;7677:2;7670:22;7460:238;7417:281;;:::o;7704:129::-;7738:6;7765:20;;:::i;:::-;7755:30;;7794:33;7822:4;7814:6;7794:33;:::i;:::-;7704:129;;;:::o;7839:307::-;7900:4;7990:18;7982:6;7979:30;7976:56;;;8012:18;;:::i;:::-;7976:56;8050:29;8072:6;8050:29;:::i;:::-;8042:37;;8134:4;8128;8124:15;8116:23;;7839:307;;;:::o;8152:154::-;8236:6;8231:3;8226;8213:30;8298:1;8289:6;8284:3;8280:16;8273:27;8152:154;;;:::o;8312:410::-;8389:5;8414:65;8430:48;8471:6;8430:48;:::i;:::-;8414:65;:::i;:::-;8405:74;;8502:6;8495:5;8488:21;8540:4;8533:5;8529:16;8578:3;8569:6;8564:3;8560:16;8557:25;8554:112;;;8585:79;;:::i;:::-;8554:112;8675:41;8709:6;8704:3;8699;8675:41;:::i;:::-;8395:327;8312:410;;;;;:::o;8741:338::-;8796:5;8845:3;8838:4;8830:6;8826:17;8822:27;8812:122;;8853:79;;:::i;:::-;8812:122;8970:6;8957:20;8995:78;9069:3;9061:6;9054:4;9046:6;9042:17;8995:78;:::i;:::-;8986:87;;8802:277;8741:338;;;;:::o;9085:943::-;9180:6;9188;9196;9204;9253:3;9241:9;9232:7;9228:23;9224:33;9221:120;;;9260:79;;:::i;:::-;9221:120;9380:1;9405:53;9450:7;9441:6;9430:9;9426:22;9405:53;:::i;:::-;9395:63;;9351:117;9507:2;9533:53;9578:7;9569:6;9558:9;9554:22;9533:53;:::i;:::-;9523:63;;9478:118;9635:2;9661:53;9706:7;9697:6;9686:9;9682:22;9661:53;:::i;:::-;9651:63;;9606:118;9791:2;9780:9;9776:18;9763:32;9822:18;9814:6;9811:30;9808:117;;;9844:79;;:::i;:::-;9808:117;9949:62;10003:7;9994:6;9983:9;9979:22;9949:62;:::i;:::-;9939:72;;9734:287;9085:943;;;;;;;:::o;10034:474::-;10102:6;10110;10159:2;10147:9;10138:7;10134:23;10130:32;10127:119;;;10165:79;;:::i;:::-;10127:119;10285:1;10310:53;10355:7;10346:6;10335:9;10331:22;10310:53;:::i;:::-;10300:63;;10256:117;10412:2;10438:53;10483:7;10474:6;10463:9;10459:22;10438:53;:::i;:::-;10428:63;;10383:118;10034:474;;;;;:::o;10514:180::-;10562:77;10559:1;10552:88;10659:4;10656:1;10649:15;10683:4;10680:1;10673:15;10700:320;10744:6;10781:1;10775:4;10771:12;10761:22;;10828:1;10822:4;10818:12;10849:18;10839:81;;10905:4;10897:6;10893:17;10883:27;;10839:81;10967:2;10959:6;10956:14;10936:18;10933:38;10930:84;;10986:18;;:::i;:::-;10930:84;10751:269;10700:320;;;:::o;11026:148::-;11128:11;11165:3;11150:18;;11026:148;;;;:::o;11180:377::-;11286:3;11314:39;11347:5;11314:39;:::i;:::-;11369:89;11451:6;11446:3;11369:89;:::i;:::-;11362:96;;11467:52;11512:6;11507:3;11500:4;11493:5;11489:16;11467:52;:::i;:::-;11544:6;11539:3;11535:16;11528:23;;11290:267;11180:377;;;;:::o;11563:435::-;11743:3;11765:95;11856:3;11847:6;11765:95;:::i;:::-;11758:102;;11877:95;11968:3;11959:6;11877:95;:::i;:::-;11870:102;;11989:3;11982:10;;11563:435;;;;;:::o;12004:98::-;12055:6;12089:5;12083:12;12073:22;;12004:98;;;:::o;12108:168::-;12191:11;12225:6;12220:3;12213:19;12265:4;12260:3;12256:14;12241:29;;12108:168;;;;:::o;12282:360::-;12368:3;12396:38;12428:5;12396:38;:::i;:::-;12450:70;12513:6;12508:3;12450:70;:::i;:::-;12443:77;;12529:52;12574:6;12569:3;12562:4;12555:5;12551:16;12529:52;:::i;:::-;12606:29;12628:6;12606:29;:::i;:::-;12601:3;12597:39;12590:46;;12372:270;12282:360;;;;:::o;12648:640::-;12843:4;12881:3;12870:9;12866:19;12858:27;;12895:71;12963:1;12952:9;12948:17;12939:6;12895:71;:::i;:::-;12976:72;13044:2;13033:9;13029:18;13020:6;12976:72;:::i;:::-;13058;13126:2;13115:9;13111:18;13102:6;13058:72;:::i;:::-;13177:9;13171:4;13167:20;13162:2;13151:9;13147:18;13140:48;13205:76;13276:4;13267:6;13205:76;:::i;:::-;13197:84;;12648:640;;;;;;;:::o;13294:141::-;13350:5;13381:6;13375:13;13366:22;;13397:32;13423:5;13397:32;:::i;:::-;13294:141;;;;:::o;13441:349::-;13510:6;13559:2;13547:9;13538:7;13534:23;13530:32;13527:119;;;13565:79;;:::i;:::-;13527:119;13685:1;13710:63;13765:7;13756:6;13745:9;13741:22;13710:63;:::i;:::-;13700:73;;13656:127;13441:349;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1282000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2927",
								"getApproved(uint256)": "7375",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "745",
								"symbol()": "infinite",
								"tokenURI(uint256)": "5542",
								"totalSupply()": "4621",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "17",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "17",
								"_burn(uint256)": "infinite",
								"_burn(uint256,bool)": "infinite",
								"_checkContractOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "4416",
								"_extraData(address,address,uint24)": "24",
								"_getApprovedAddress(uint256)": "2221",
								"_getAux(address)": "infinite",
								"_initializeOwnershipAt(uint256)": "infinite",
								"_isOwnerOrApproved(address,address,address)": "78",
								"_mint(address,uint256)": "infinite",
								"_mintERC2309(address,uint256)": "infinite",
								"_msgSenderERC721A()": "22",
								"_nextExtraData(address,address,uint256)": "114",
								"_nextInitializedFlag(uint256)": "infinite",
								"_nextTokenId()": "infinite",
								"_numberBurned(address)": "infinite",
								"_numberMinted(address)": "infinite",
								"_ownershipAt(uint256)": "infinite",
								"_ownershipOf(uint256)": "infinite",
								"_packOwnershipData(address,uint256)": "61",
								"_packedOwnershipOf(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_setAux(address,uint64)": "infinite",
								"_setExtraDataAt(uint256,uint24)": "infinite",
								"_startTokenId()": "15",
								"_toString(uint256)": "infinite",
								"_totalBurned()": "infinite",
								"_totalMinted()": "infinite",
								"_unpackedOwnership(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3986,
									"end": 4140,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4060,
									"end": 4065,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4057,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 4052,
									"end": 4065,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4065,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4085,
									"end": 4092,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4082,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 4075,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4075,
									"end": 4092,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4133,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 4118,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 4118,
									"end": 4131,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4118,
									"end": 4131,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4133,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4118,
									"end": 4133,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4133,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4133,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 4118,
									"end": 4133,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4102,
									"end": 4115,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4102,
									"end": 4133,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4102,
									"end": 4133,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4102,
									"end": 4133,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4102,
									"end": 4133,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3986,
									"end": 4140,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4276,
									"end": 4366,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 4276,
									"end": 4366,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4332,
									"end": 4339,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4276,
									"end": 4366,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4276,
									"end": 4366,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "54"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 3,
									"value": "54"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "55"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "56"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 3,
									"value": "56"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 3,
									"value": "55"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "59"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 3,
									"value": "59"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "63"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 3,
									"value": "63"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1678,
									"end": 1679,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "tag",
									"source": 3,
									"value": "65"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1702,
									"end": 1708,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1699,
									"end": 1700,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1696,
									"end": 1709,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "67"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1787,
									"end": 1788,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1782,
									"end": 1785,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1778,
									"end": 1789,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1772,
									"end": 1790,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1768,
									"end": 1769,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1763,
									"end": 1766,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1759,
									"end": 1770,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1752,
									"end": 1791,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1724,
									"end": 1726,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1721,
									"end": 1722,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1717,
									"end": 1727,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1712,
									"end": 1727,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1712,
									"end": 1727,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "65"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "tag",
									"source": 3,
									"value": "67"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1819,
									"end": 1825,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1816,
									"end": 1817,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1813,
									"end": 1826,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "68"
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1899,
									"end": 1900,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1890,
									"end": 1896,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1885,
									"end": 1888,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1881,
									"end": 1897,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1874,
									"end": 1901,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "tag",
									"source": 3,
									"value": "68"
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1659,
									"end": 1917,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1610,
									"end": 1917,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2012,
									"end": 2017,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "70"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "71"
								},
								{
									"begin": 2095,
									"end": 2101,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 2053,
									"end": 2102,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "tag",
									"source": 3,
									"value": "71"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 2037,
									"end": 2103,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "70"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2028,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2028,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2126,
									"end": 2132,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2119,
									"end": 2124,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2112,
									"end": 2133,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2164,
									"end": 2168,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2157,
									"end": 2162,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2153,
									"end": 2169,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2202,
									"end": 2205,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2193,
									"end": 2199,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2188,
									"end": 2191,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2184,
									"end": 2200,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2181,
									"end": 2206,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "72"
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 2209,
									"end": 2288,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "tag",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "tag",
									"source": 3,
									"value": "72"
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "74"
								},
								{
									"begin": 2331,
									"end": 2337,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2326,
									"end": 2329,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2321,
									"end": 2324,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 2299,
									"end": 2338,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "tag",
									"source": 3,
									"value": "74"
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2018,
									"end": 2344,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1923,
									"end": 2344,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2431,
									"end": 2436,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2480,
									"end": 2483,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2473,
									"end": 2477,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 2465,
									"end": 2471,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2461,
									"end": 2478,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2457,
									"end": 2484,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "76"
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "77"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 2488,
									"end": 2567,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "tag",
									"source": 3,
									"value": "77"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "tag",
									"source": 3,
									"value": "76"
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2598,
									"end": 2604,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2592,
									"end": 2605,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "78"
								},
								{
									"begin": 2709,
									"end": 2712,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2701,
									"end": 2707,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2694,
									"end": 2698,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2686,
									"end": 2692,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 2682,
									"end": 2699,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 2623,
									"end": 2713,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "tag",
									"source": 3,
									"value": "78"
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2614,
									"end": 2713,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2614,
									"end": 2713,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2437,
									"end": 2719,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2364,
									"end": 2719,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2824,
									"end": 2830,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2832,
									"end": 2838,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2881,
									"end": 2883,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2869,
									"end": 2878,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2860,
									"end": 2867,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 2856,
									"end": 2879,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 2852,
									"end": 2884,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "81"
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 2887,
									"end": 2966,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "tag",
									"source": 3,
									"value": "81"
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "tag",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3028,
									"end": 3029,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3017,
									"end": 3026,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3013,
									"end": 3030,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3007,
									"end": 3031,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3058,
									"end": 3076,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3050,
									"end": 3056,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3047,
									"end": 3077,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "82"
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "83"
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 3080,
									"end": 3159,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "tag",
									"source": 3,
									"value": "83"
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "tag",
									"source": 3,
									"value": "82"
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "84"
								},
								{
									"begin": 3251,
									"end": 3258,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 3242,
									"end": 3248,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3231,
									"end": 3240,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 3227,
									"end": 3249,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 3185,
									"end": 3259,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "tag",
									"source": 3,
									"value": "84"
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3175,
									"end": 3259,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 3175,
									"end": 3259,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2978,
									"end": 3269,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3329,
									"end": 3331,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3318,
									"end": 3327,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3314,
									"end": 3332,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3308,
									"end": 3333,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3360,
									"end": 3378,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3352,
									"end": 3358,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3349,
									"end": 3379,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "85"
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "86"
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 3382,
									"end": 3461,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "tag",
									"source": 3,
									"value": "86"
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "tag",
									"source": 3,
									"value": "85"
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "87"
								},
								{
									"begin": 3553,
									"end": 3560,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 3544,
									"end": 3550,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3533,
									"end": 3542,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 3529,
									"end": 3551,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 3487,
									"end": 3561,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "tag",
									"source": 3,
									"value": "87"
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3477,
									"end": 3561,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3477,
									"end": 3561,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3279,
									"end": 3571,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2725,
									"end": 3578,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3584,
									"end": 3683,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 3584,
									"end": 3683,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3636,
									"end": 3642,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3670,
									"end": 3675,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3664,
									"end": 3676,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3654,
									"end": 3676,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3654,
									"end": 3676,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3584,
									"end": 3683,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3584,
									"end": 3683,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3584,
									"end": 3683,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3584,
									"end": 3683,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3689,
									"end": 3869,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 3689,
									"end": 3869,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3737,
									"end": 3814,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3734,
									"end": 3735,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3727,
									"end": 3815,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3834,
									"end": 3838,
									"name": "PUSH",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 3831,
									"end": 3832,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 3824,
									"end": 3839,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3858,
									"end": 3862,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 3855,
									"end": 3856,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3848,
									"end": 3863,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 3875,
									"end": 4195,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 3875,
									"end": 4195,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3919,
									"end": 3925,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3956,
									"end": 3957,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 3950,
									"end": 3954,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3946,
									"end": 3958,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 3936,
									"end": 3958,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3936,
									"end": 3958,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4003,
									"end": 4004,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 3997,
									"end": 4001,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3993,
									"end": 4005,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 4024,
									"end": 4042,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4014,
									"end": 4095,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "91"
								},
								{
									"begin": 4014,
									"end": 4095,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 4080,
									"end": 4084,
									"name": "PUSH",
									"source": 3,
									"value": "7F"
								},
								{
									"begin": 4072,
									"end": 4078,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4068,
									"end": 4085,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 4058,
									"end": 4085,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 4058,
									"end": 4085,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4014,
									"end": 4095,
									"name": "tag",
									"source": 3,
									"value": "91"
								},
								{
									"begin": 4014,
									"end": 4095,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4142,
									"end": 4144,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4134,
									"end": 4140,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4131,
									"end": 4145,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 4111,
									"end": 4129,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4108,
									"end": 4146,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 4105,
									"end": 4189,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "92"
								},
								{
									"begin": 4105,
									"end": 4189,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 4161,
									"end": 4179,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "93"
								},
								{
									"begin": 4161,
									"end": 4179,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 4161,
									"end": 4179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4161,
									"end": 4179,
									"name": "tag",
									"source": 3,
									"value": "93"
								},
								{
									"begin": 4161,
									"end": 4179,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4105,
									"end": 4189,
									"name": "tag",
									"source": 3,
									"value": "92"
								},
								{
									"begin": 4105,
									"end": 4189,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3926,
									"end": 4195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3875,
									"end": 4195,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3875,
									"end": 4195,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3875,
									"end": 4195,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3875,
									"end": 4195,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4201,
									"end": 4342,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 4201,
									"end": 4342,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4250,
									"end": 4254,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4273,
									"end": 4276,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4265,
									"end": 4276,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4265,
									"end": 4276,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4296,
									"end": 4299,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4293,
									"end": 4294,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4286,
									"end": 4300,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4330,
									"end": 4334,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4327,
									"end": 4328,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4317,
									"end": 4335,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 4309,
									"end": 4335,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4309,
									"end": 4335,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4201,
									"end": 4342,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 4201,
									"end": 4342,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4201,
									"end": 4342,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4201,
									"end": 4342,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4348,
									"end": 4441,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 4348,
									"end": 4441,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4385,
									"end": 4391,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4432,
									"end": 4434,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4427,
									"end": 4429,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 4420,
									"end": 4425,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 4416,
									"end": 4430,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4412,
									"end": 4435,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 4402,
									"end": 4435,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4402,
									"end": 4435,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4348,
									"end": 4441,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 4348,
									"end": 4441,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4348,
									"end": 4441,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4348,
									"end": 4441,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4447,
									"end": 4554,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 4447,
									"end": 4554,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4491,
									"end": 4499,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4541,
									"end": 4546,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4535,
									"end": 4539,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4531,
									"end": 4547,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 4510,
									"end": 4547,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4510,
									"end": 4547,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4447,
									"end": 4554,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 4447,
									"end": 4554,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 4447,
									"end": 4554,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4447,
									"end": 4554,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4447,
									"end": 4554,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4560,
									"end": 4953,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 4560,
									"end": 4953,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4629,
									"end": 4635,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 4667,
									"end": 4677,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 4663,
									"end": 4681,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 4702,
									"end": 4799,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "98"
								},
								{
									"begin": 4732,
									"end": 4798,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4721,
									"end": 4730,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4702,
									"end": 4799,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 4702,
									"end": 4799,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4702,
									"end": 4799,
									"name": "tag",
									"source": 3,
									"value": "98"
								},
								{
									"begin": 4702,
									"end": 4799,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4820,
									"end": 4859,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "99"
								},
								{
									"begin": 4850,
									"end": 4858,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 4839,
									"end": 4848,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 4820,
									"end": 4859,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 4820,
									"end": 4859,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4820,
									"end": 4859,
									"name": "tag",
									"source": 3,
									"value": "99"
								},
								{
									"begin": 4820,
									"end": 4859,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4808,
									"end": 4859,
									"name": "SWAP6",
									"source": 3
								},
								{
									"begin": 4808,
									"end": 4859,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4892,
									"end": 4896,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4888,
									"end": 4897,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 4881,
									"end": 4886,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 4877,
									"end": 4898,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 4868,
									"end": 4898,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 4868,
									"end": 4898,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4941,
									"end": 4945,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4931,
									"end": 4939,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 4927,
									"end": 4946,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 4920,
									"end": 4925,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 4917,
									"end": 4947,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 4907,
									"end": 4947,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 4907,
									"end": 4947,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4636,
									"end": 4953,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4636,
									"end": 4953,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4560,
									"end": 4953,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 4560,
									"end": 4953,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 4560,
									"end": 4953,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4560,
									"end": 4953,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4560,
									"end": 4953,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4560,
									"end": 4953,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4959,
									"end": 5036,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 4959,
									"end": 5036,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4996,
									"end": 5003,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5025,
									"end": 5030,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5014,
									"end": 5030,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5014,
									"end": 5030,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4959,
									"end": 5036,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 4959,
									"end": 5036,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4959,
									"end": 5036,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4959,
									"end": 5036,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5042,
									"end": 5102,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 5042,
									"end": 5102,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5070,
									"end": 5073,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5091,
									"end": 5096,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5084,
									"end": 5096,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5084,
									"end": 5096,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5042,
									"end": 5102,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5042,
									"end": 5102,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5042,
									"end": 5102,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5042,
									"end": 5102,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5108,
									"end": 5250,
									"name": "tag",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 5108,
									"end": 5250,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5158,
									"end": 5167,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5191,
									"end": 5244,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "103"
								},
								{
									"begin": 5209,
									"end": 5243,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "104"
								},
								{
									"begin": 5218,
									"end": 5242,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "105"
								},
								{
									"begin": 5236,
									"end": 5241,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 5218,
									"end": 5242,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 5218,
									"end": 5242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5218,
									"end": 5242,
									"name": "tag",
									"source": 3,
									"value": "105"
								},
								{
									"begin": 5218,
									"end": 5242,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5209,
									"end": 5243,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 5209,
									"end": 5243,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5209,
									"end": 5243,
									"name": "tag",
									"source": 3,
									"value": "104"
								},
								{
									"begin": 5209,
									"end": 5243,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5191,
									"end": 5244,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 5191,
									"end": 5244,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5191,
									"end": 5244,
									"name": "tag",
									"source": 3,
									"value": "103"
								},
								{
									"begin": 5191,
									"end": 5244,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5178,
									"end": 5244,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5178,
									"end": 5244,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5108,
									"end": 5250,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5108,
									"end": 5250,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5108,
									"end": 5250,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5108,
									"end": 5250,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5256,
									"end": 5331,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 5256,
									"end": 5331,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5299,
									"end": 5302,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5320,
									"end": 5325,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5313,
									"end": 5325,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5313,
									"end": 5325,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5256,
									"end": 5331,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5256,
									"end": 5331,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5256,
									"end": 5331,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5256,
									"end": 5331,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5337,
									"end": 5606,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 5337,
									"end": 5606,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5447,
									"end": 5486,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "108"
								},
								{
									"begin": 5478,
									"end": 5485,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 5447,
									"end": 5486,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 5447,
									"end": 5486,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5447,
									"end": 5486,
									"name": "tag",
									"source": 3,
									"value": "108"
								},
								{
									"begin": 5447,
									"end": 5486,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5508,
									"end": 5599,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "109"
								},
								{
									"begin": 5557,
									"end": 5598,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "110"
								},
								{
									"begin": 5581,
									"end": 5597,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5557,
									"end": 5598,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 5557,
									"end": 5598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5557,
									"end": 5598,
									"name": "tag",
									"source": 3,
									"value": "110"
								},
								{
									"begin": 5557,
									"end": 5598,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5549,
									"end": 5555,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 5542,
									"end": 5546,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 5536,
									"end": 5547,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 5508,
									"end": 5599,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 5508,
									"end": 5599,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5508,
									"end": 5599,
									"name": "tag",
									"source": 3,
									"value": "109"
								},
								{
									"begin": 5508,
									"end": 5599,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5502,
									"end": 5506,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5495,
									"end": 5600,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 5413,
									"end": 5606,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5337,
									"end": 5606,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5337,
									"end": 5606,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5337,
									"end": 5606,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5337,
									"end": 5606,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5612,
									"end": 5685,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 5612,
									"end": 5685,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5657,
									"end": 5660,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5612,
									"end": 5685,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5612,
									"end": 5685,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5691,
									"end": 5880,
									"name": "tag",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 5691,
									"end": 5880,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5768,
									"end": 5800,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "113"
								},
								{
									"begin": 5768,
									"end": 5800,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 5768,
									"end": 5800,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5768,
									"end": 5800,
									"name": "tag",
									"source": 3,
									"value": "113"
								},
								{
									"begin": 5768,
									"end": 5800,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5809,
									"end": 5874,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "114"
								},
								{
									"begin": 5867,
									"end": 5873,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5859,
									"end": 5865,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 5853,
									"end": 5857,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 5809,
									"end": 5874,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 5809,
									"end": 5874,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5809,
									"end": 5874,
									"name": "tag",
									"source": 3,
									"value": "114"
								},
								{
									"begin": 5809,
									"end": 5874,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5744,
									"end": 5880,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5691,
									"end": 5880,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5691,
									"end": 5880,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5691,
									"end": 5880,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5886,
									"end": 6072,
									"name": "tag",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5886,
									"end": 6072,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5946,
									"end": 6066,
									"name": "tag",
									"source": 3,
									"value": "116"
								},
								{
									"begin": 5946,
									"end": 6066,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5963,
									"end": 5966,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5956,
									"end": 5961,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5953,
									"end": 5967,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 5946,
									"end": 6066,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 5946,
									"end": 6066,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "118"
								},
								{
									"begin": 5946,
									"end": 6066,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6017,
									"end": 6056,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "119"
								},
								{
									"begin": 6054,
									"end": 6055,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6047,
									"end": 6052,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6017,
									"end": 6056,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 6017,
									"end": 6056,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6017,
									"end": 6056,
									"name": "tag",
									"source": 3,
									"value": "119"
								},
								{
									"begin": 6017,
									"end": 6056,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5990,
									"end": 5991,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 5983,
									"end": 5988,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5979,
									"end": 5992,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5970,
									"end": 5992,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5970,
									"end": 5992,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5946,
									"end": 6066,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "116"
								},
								{
									"begin": 5946,
									"end": 6066,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5946,
									"end": 6066,
									"name": "tag",
									"source": 3,
									"value": "118"
								},
								{
									"begin": 5946,
									"end": 6066,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5886,
									"end": 6072,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5886,
									"end": 6072,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5886,
									"end": 6072,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6078,
									"end": 6621,
									"name": "tag",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 6078,
									"end": 6621,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6179,
									"end": 6181,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 6174,
									"end": 6177,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6171,
									"end": 6182,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 6168,
									"end": 6614,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6168,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "121"
								},
								{
									"begin": 6168,
									"end": 6614,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6213,
									"end": 6251,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "122"
								},
								{
									"begin": 6245,
									"end": 6250,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6213,
									"end": 6251,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 6213,
									"end": 6251,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6213,
									"end": 6251,
									"name": "tag",
									"source": 3,
									"value": "122"
								},
								{
									"begin": 6213,
									"end": 6251,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6297,
									"end": 6326,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "123"
								},
								{
									"begin": 6315,
									"end": 6325,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 6297,
									"end": 6326,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 6297,
									"end": 6326,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6297,
									"end": 6326,
									"name": "tag",
									"source": 3,
									"value": "123"
								},
								{
									"begin": 6297,
									"end": 6326,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6287,
									"end": 6295,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6283,
									"end": 6327,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6480,
									"end": 6482,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6468,
									"end": 6478,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 6465,
									"end": 6483,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6462,
									"end": 6511,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6462,
									"end": 6511,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "124"
								},
								{
									"begin": 6462,
									"end": 6511,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6501,
									"end": 6509,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6486,
									"end": 6509,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6486,
									"end": 6509,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6462,
									"end": 6511,
									"name": "tag",
									"source": 3,
									"value": "124"
								},
								{
									"begin": 6462,
									"end": 6511,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6524,
									"end": 6604,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "125"
								},
								{
									"begin": 6580,
									"end": 6602,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "126"
								},
								{
									"begin": 6598,
									"end": 6601,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 6580,
									"end": 6602,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 6580,
									"end": 6602,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6580,
									"end": 6602,
									"name": "tag",
									"source": 3,
									"value": "126"
								},
								{
									"begin": 6580,
									"end": 6602,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6578,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6566,
									"end": 6603,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6553,
									"end": 6564,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6524,
									"end": 6604,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6524,
									"end": 6604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6524,
									"end": 6604,
									"name": "tag",
									"source": 3,
									"value": "125"
								},
								{
									"begin": 6524,
									"end": 6604,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6183,
									"end": 6614,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6183,
									"end": 6614,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6168,
									"end": 6614,
									"name": "tag",
									"source": 3,
									"value": "121"
								},
								{
									"begin": 6168,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6078,
									"end": 6621,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6078,
									"end": 6621,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6078,
									"end": 6621,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6078,
									"end": 6621,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6627,
									"end": 6744,
									"name": "tag",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 6627,
									"end": 6744,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6681,
									"end": 6689,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6731,
									"end": 6736,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6725,
									"end": 6729,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6721,
									"end": 6737,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 6700,
									"end": 6737,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6700,
									"end": 6737,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6627,
									"end": 6744,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6627,
									"end": 6744,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6627,
									"end": 6744,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6627,
									"end": 6744,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6627,
									"end": 6744,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6750,
									"end": 6919,
									"name": "tag",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 6750,
									"end": 6919,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6794,
									"end": 6800,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6827,
									"end": 6878,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "129"
								},
								{
									"begin": 6875,
									"end": 6876,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6871,
									"end": 6877,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 6863,
									"end": 6868,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 6860,
									"end": 6861,
									"name": "PUSH",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 6856,
									"end": 6869,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 6827,
									"end": 6878,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 6827,
									"end": 6878,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6827,
									"end": 6878,
									"name": "tag",
									"source": 3,
									"value": "129"
								},
								{
									"begin": 6827,
									"end": 6878,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6823,
									"end": 6879,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 6908,
									"end": 6912,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6902,
									"end": 6906,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6898,
									"end": 6913,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6888,
									"end": 6913,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6888,
									"end": 6913,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6801,
									"end": 6919,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6750,
									"end": 6919,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6750,
									"end": 6919,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6750,
									"end": 6919,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6750,
									"end": 6919,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6750,
									"end": 6919,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6924,
									"end": 7219,
									"name": "tag",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 6924,
									"end": 7219,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7000,
									"end": 7004,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7146,
									"end": 7175,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "131"
								},
								{
									"begin": 7171,
									"end": 7174,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7165,
									"end": 7169,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7146,
									"end": 7175,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 7146,
									"end": 7175,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7146,
									"end": 7175,
									"name": "tag",
									"source": 3,
									"value": "131"
								},
								{
									"begin": 7146,
									"end": 7175,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7138,
									"end": 7175,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7138,
									"end": 7175,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7208,
									"end": 7211,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7205,
									"end": 7206,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 7201,
									"end": 7212,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 7195,
									"end": 7199,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7192,
									"end": 7213,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 7184,
									"end": 7213,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7184,
									"end": 7213,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6924,
									"end": 7219,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6924,
									"end": 7219,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6924,
									"end": 7219,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6924,
									"end": 7219,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6924,
									"end": 7219,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7224,
									"end": 8619,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 7224,
									"end": 8619,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7341,
									"end": 7378,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "133"
								},
								{
									"begin": 7374,
									"end": 7377,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7341,
									"end": 7378,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 7341,
									"end": 7378,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7341,
									"end": 7378,
									"name": "tag",
									"source": 3,
									"value": "133"
								},
								{
									"begin": 7341,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7443,
									"end": 7461,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7435,
									"end": 7441,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7432,
									"end": 7462,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 7429,
									"end": 7485,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 7429,
									"end": 7485,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "134"
								},
								{
									"begin": 7429,
									"end": 7485,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7465,
									"end": 7483,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "135"
								},
								{
									"begin": 7465,
									"end": 7483,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 7465,
									"end": 7483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7465,
									"end": 7483,
									"name": "tag",
									"source": 3,
									"value": "135"
								},
								{
									"begin": 7465,
									"end": 7483,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7429,
									"end": 7485,
									"name": "tag",
									"source": 3,
									"value": "134"
								},
								{
									"begin": 7429,
									"end": 7485,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7509,
									"end": 7547,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "136"
								},
								{
									"begin": 7541,
									"end": 7545,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7535,
									"end": 7546,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7509,
									"end": 7547,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 7509,
									"end": 7547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7509,
									"end": 7547,
									"name": "tag",
									"source": 3,
									"value": "136"
								},
								{
									"begin": 7509,
									"end": 7547,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7594,
									"end": 7661,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "137"
								},
								{
									"begin": 7654,
									"end": 7660,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7646,
									"end": 7652,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7640,
									"end": 7644,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 7594,
									"end": 7661,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 7594,
									"end": 7661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7594,
									"end": 7661,
									"name": "tag",
									"source": 3,
									"value": "137"
								},
								{
									"begin": 7594,
									"end": 7661,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7688,
									"end": 7689,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7712,
									"end": 7716,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7699,
									"end": 7716,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7699,
									"end": 7716,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7744,
									"end": 7746,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 7736,
									"end": 7742,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7733,
									"end": 7747,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 7761,
									"end": 7762,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 7756,
									"end": 8374,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7756,
									"end": 8374,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 7756,
									"end": 8374,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "139"
								},
								{
									"begin": 7756,
									"end": 8374,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 8418,
									"end": 8419,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 8435,
									"end": 8441,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 8432,
									"end": 8509,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 8432,
									"end": 8509,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "140"
								},
								{
									"begin": 8432,
									"end": 8509,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 8484,
									"end": 8493,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 8479,
									"end": 8482,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 8475,
									"end": 8494,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 8469,
									"end": 8495,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 8460,
									"end": 8495,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 8460,
									"end": 8495,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 8432,
									"end": 8509,
									"name": "tag",
									"source": 3,
									"value": "140"
								},
								{
									"begin": 8432,
									"end": 8509,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 8535,
									"end": 8602,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "141"
								},
								{
									"begin": 8595,
									"end": 8601,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 8588,
									"end": 8593,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 8535,
									"end": 8602,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 8535,
									"end": 8602,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 8535,
									"end": 8602,
									"name": "tag",
									"source": 3,
									"value": "141"
								},
								{
									"begin": 8535,
									"end": 8602,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 8529,
									"end": 8533,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 8522,
									"end": 8603,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 8391,
									"end": 8613,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7726,
									"end": 8613,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "138"
								},
								{
									"begin": 7726,
									"end": 8613,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7756,
									"end": 8374,
									"name": "tag",
									"source": 3,
									"value": "139"
								},
								{
									"begin": 7756,
									"end": 8374,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7808,
									"end": 7812,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 7804,
									"end": 7813,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 7796,
									"end": 7802,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 7792,
									"end": 7814,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7842,
									"end": 7879,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "142"
								},
								{
									"begin": 7874,
									"end": 7878,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 7842,
									"end": 7879,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 7842,
									"end": 7879,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7842,
									"end": 7879,
									"name": "tag",
									"source": 3,
									"value": "142"
								},
								{
									"begin": 7842,
									"end": 7879,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7901,
									"end": 7902,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7915,
									"end": 8123,
									"name": "tag",
									"source": 3,
									"value": "143"
								},
								{
									"begin": 7915,
									"end": 8123,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7929,
									"end": 7936,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7926,
									"end": 7927,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7923,
									"end": 7937,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 7915,
									"end": 8123,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 7915,
									"end": 8123,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "145"
								},
								{
									"begin": 7915,
									"end": 8123,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 8008,
									"end": 8017,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 8003,
									"end": 8006,
									"name": "DUP10",
									"source": 3
								},
								{
									"begin": 7999,
									"end": 8018,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7993,
									"end": 8019,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7985,
									"end": 7991,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7978,
									"end": 8020,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 8059,
									"end": 8060,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 8051,
									"end": 8057,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 8047,
									"end": 8061,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 8037,
									"end": 8061,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 8037,
									"end": 8061,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 8106,
									"end": 8108,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 8095,
									"end": 8104,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 8091,
									"end": 8109,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 8078,
									"end": 8109,
									"name": "SWAP5",
									"source": 3
								},
								{
									"begin": 8078,
									"end": 8109,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7952,
									"end": 7956,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7949,
									"end": 7950,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7945,
									"end": 7957,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7940,
									"end": 7957,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7940,
									"end": 7957,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7915,
									"end": 8123,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "143"
								},
								{
									"begin": 7915,
									"end": 8123,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7915,
									"end": 8123,
									"name": "tag",
									"source": 3,
									"value": "145"
								},
								{
									"begin": 7915,
									"end": 8123,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 8151,
									"end": 8157,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 8142,
									"end": 8149,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 8139,
									"end": 8158,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 8136,
									"end": 8315,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 8136,
									"end": 8315,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "146"
								},
								{
									"begin": 8136,
									"end": 8315,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 8209,
									"end": 8218,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 8204,
									"end": 8207,
									"name": "DUP10",
									"source": 3
								},
								{
									"begin": 8200,
									"end": 8219,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 8194,
									"end": 8220,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 8252,
									"end": 8300,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "147"
								},
								{
									"begin": 8294,
									"end": 8298,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 8286,
									"end": 8292,
									"name": "DUP10",
									"source": 3
								},
								{
									"begin": 8282,
									"end": 8299,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 8271,
									"end": 8280,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 8252,
									"end": 8300,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 8252,
									"end": 8300,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 8252,
									"end": 8300,
									"name": "tag",
									"source": 3,
									"value": "147"
								},
								{
									"begin": 8252,
									"end": 8300,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 8244,
									"end": 8250,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 8237,
									"end": 8301,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 8159,
									"end": 8315,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 8136,
									"end": 8315,
									"name": "tag",
									"source": 3,
									"value": "146"
								},
								{
									"begin": 8136,
									"end": 8315,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 8361,
									"end": 8362,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 8357,
									"end": 8358,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 8349,
									"end": 8355,
									"name": "DUP9",
									"source": 3
								},
								{
									"begin": 8345,
									"end": 8359,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 8341,
									"end": 8363,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 8335,
									"end": 8339,
									"name": "DUP9",
									"source": 3
								},
								{
									"begin": 8328,
									"end": 8364,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7763,
									"end": 8374,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7763,
									"end": 8374,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7763,
									"end": 8374,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7726,
									"end": 8613,
									"name": "tag",
									"source": 3,
									"value": "138"
								},
								{
									"begin": 7726,
									"end": 8613,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7726,
									"end": 8613,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7316,
									"end": 8619,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7316,
									"end": 8619,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7316,
									"end": 8619,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7224,
									"end": 8619,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7224,
									"end": 8619,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7224,
									"end": 8619,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 885,
									"end": 35000,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209e492944546e91f22acdc689d462b234087ab03f208e410778784c7a2524bebe64736f6c634300080f0033",
									".code": [
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "6352211E"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "A22CB465"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "A22CB465"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "B88D4FDE"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "C87B56DD"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "E985E9C5"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "6352211E"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "42842E0E"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A7"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "81812FC"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 35000,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5653,
											"end": 6260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5653,
											"end": 6260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5653,
											"end": 6260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 11161,
											"end": 11259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 11161,
											"end": 11259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 13048,
											"end": 13248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 13048,
											"end": 13248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 13048,
											"end": 13248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 12611,
											"end": 12987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 12611,
											"end": 12987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4736,
											"end": 5045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4736,
											"end": 5045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 22055,
											"end": 24794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 22055,
											"end": 24794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 13912,
											"end": 14091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 13912,
											"end": 14091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 10957,
											"end": 11099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 10957,
											"end": 11099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 10957,
											"end": 11099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 6319,
											"end": 6540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 6319,
											"end": 6540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 6319,
											"end": 6540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 11323,
											"end": 11425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 11323,
											"end": 11425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 13315,
											"end": 13618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 13315,
											"end": 13618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 14157,
											"end": 14545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 14157,
											"end": 14545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 11491,
											"end": 11804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 11491,
											"end": 11804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 11491,
											"end": 11804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 13684,
											"end": 13846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 13684,
											"end": 13846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 13684,
											"end": 13846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6048,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A7"
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6044,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6058,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6124,
											"end": 6134,
											"name": "PUSH",
											"source": 1,
											"value": "80AC58CD"
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6120,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6134,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 6033,
											"end": 6134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6200,
											"end": 6210,
											"name": "PUSH",
											"source": 1,
											"value": "5B5E139F"
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6185,
											"end": 6196,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6185,
											"end": 6210,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 6033,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6014,
											"end": 6210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6014,
											"end": 6210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 6260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11228,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11247,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 11240,
											"end": 11252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 11240,
											"end": 11252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13116,
											"end": 13123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13140,
											"end": 13156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 13148,
											"end": 13155,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13140,
											"end": 13147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 13140,
											"end": 13156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13140,
											"end": 13156,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 13140,
											"end": 13156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13135,
											"end": 13199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 13135,
											"end": 13199,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "PUSH",
											"source": 1,
											"value": "CF4700E400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13135,
											"end": 13199,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 13135,
											"end": 13199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13232,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13233,
											"end": 13240,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13217,
											"end": 13241,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13210,
											"end": 13241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13210,
											"end": 13241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12683,
											"end": 12696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12699,
											"end": 12715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 12707,
											"end": 12714,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 12699,
											"end": 12715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12699,
											"end": 12715,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 12699,
											"end": 12715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12683,
											"end": 12715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12683,
											"end": 12715,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12753,
											"end": 12758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12730,
											"end": 12758,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12730,
											"end": 12758,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12730,
											"end": 12749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 12730,
											"end": 12747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 12730,
											"end": 12749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12730,
											"end": 12749,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 12730,
											"end": 12749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12730,
											"end": 12758,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12730,
											"end": 12758,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12730,
											"end": 12758,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12726,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 12726,
											"end": 12898,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12777,
											"end": 12821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 12794,
											"end": 12799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12801,
											"end": 12820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 12801,
											"end": 12818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 12801,
											"end": 12820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12801,
											"end": 12820,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 12801,
											"end": 12820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12777,
											"end": 12793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 12777,
											"end": 12821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12777,
											"end": 12821,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 12777,
											"end": 12821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12772,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 12772,
											"end": 12898,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "PUSH",
											"source": 1,
											"value": "CFB3B94200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12883,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12772,
											"end": 12898,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 12772,
											"end": 12898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12726,
											"end": 12898,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 12726,
											"end": 12898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12935,
											"end": 12937,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12923,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12924,
											"end": 12931,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12972,
											"end": 12979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12968,
											"end": 12970,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12961,
											"end": 12966,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12980,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 12673,
											"end": 12987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4789,
											"end": 4796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 5013,
											"end": 5026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5013,
											"end": 5028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5010,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4998,
											"end": 5010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4982,
											"end": 4995,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4982,
											"end": 4995,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4982,
											"end": 5010,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4982,
											"end": 5028,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4975,
											"end": 5028,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4975,
											"end": 5028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22184,
											"end": 22211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22214,
											"end": 22241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 22233,
											"end": 22240,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22214,
											"end": 22232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 22214,
											"end": 22241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22214,
											"end": 22241,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 22214,
											"end": 22241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22184,
											"end": 22241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22184,
											"end": 22241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22297,
											"end": 22301,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22256,
											"end": 22301,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22256,
											"end": 22301,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22272,
											"end": 22291,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22256,
											"end": 22301,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22256,
											"end": 22301,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22256,
											"end": 22301,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 22252,
											"end": 22338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 22252,
											"end": 22338,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "PUSH",
											"source": 1,
											"value": "A114810000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22338,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22252,
											"end": 22338,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 22252,
											"end": 22338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22350,
											"end": 22377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22379,
											"end": 22402,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22406,
											"end": 22434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 22426,
											"end": 22433,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 22406,
											"end": 22425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 22406,
											"end": 22434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22406,
											"end": 22434,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 22406,
											"end": 22434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22349,
											"end": 22434,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22349,
											"end": 22434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22349,
											"end": 22434,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22349,
											"end": 22434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22531,
											"end": 22593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 22550,
											"end": 22565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22567,
											"end": 22571,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 22573,
											"end": 22592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 22573,
											"end": 22590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 22573,
											"end": 22592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22573,
											"end": 22592,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 22573,
											"end": 22592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22531,
											"end": 22549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 22531,
											"end": 22593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22531,
											"end": 22593,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 22531,
											"end": 22593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22526,
											"end": 22699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 22526,
											"end": 22699,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22612,
											"end": 22655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 22629,
											"end": 22633,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22635,
											"end": 22654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 22635,
											"end": 22652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 22635,
											"end": 22654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22635,
											"end": 22654,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 22635,
											"end": 22654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22612,
											"end": 22628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 22612,
											"end": 22655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22612,
											"end": 22655,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 22612,
											"end": 22655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22607,
											"end": 22699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 22607,
											"end": 22699,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "PUSH",
											"source": 1,
											"value": "59C896BE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22699,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22607,
											"end": 22699,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 22607,
											"end": 22699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22526,
											"end": 22699,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 22526,
											"end": 22699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22728,
											"end": 22729,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22714,
											"end": 22730,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22714,
											"end": 22730,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22714,
											"end": 22716,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 22714,
											"end": 22730,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22714,
											"end": 22730,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22714,
											"end": 22730,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22710,
											"end": 22762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 22710,
											"end": 22762,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "PUSH",
											"source": 1,
											"value": "EA553B3400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22739,
											"end": 22762,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22710,
											"end": 22762,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 22710,
											"end": 22762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22773,
											"end": 22816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 22795,
											"end": 22799,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22801,
											"end": 22803,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22805,
											"end": 22812,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22814,
											"end": 22815,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 22773,
											"end": 22794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 22773,
											"end": 22816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22773,
											"end": 22816,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 22773,
											"end": 22816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22905,
											"end": 22920,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23043,
											"end": 23044,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23022,
											"end": 23041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23015,
											"end": 23045,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 22902,
											"end": 23059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23447,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23448,
											"end": 23452,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 23429,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 23427,
											"end": 23453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23515,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23516,
											"end": 23518,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 23497,
											"end": 23519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 23495,
											"end": 23519,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23812,
											"end": 23954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 23848,
											"end": 23850,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 23895,
											"end": 23940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 23910,
											"end": 23914,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 23916,
											"end": 23918,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 23920,
											"end": 23939,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 23895,
											"end": 23909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 23895,
											"end": 23940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23895,
											"end": 23940,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 23895,
											"end": 23940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2054,
											"name": "PUSH",
											"source": 1,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23868,
											"end": 23940,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 23812,
											"end": 23830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 23812,
											"end": 23954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23812,
											"end": 23954,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 23812,
											"end": 23954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23800,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23801,
											"end": 23808,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23783,
											"end": 23809,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23954,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 23783,
											"end": 23954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24121,
											"end": 24122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2054,
											"name": "PUSH",
											"source": 1,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24071,
											"end": 24090,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24071,
											"end": 24117,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24071,
											"end": 24122,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24067,
											"end": 24683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 24067,
											"end": 24683,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24142,
											"end": 24161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24174,
											"end": 24175,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 24164,
											"end": 24171,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 24164,
											"end": 24175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24142,
											"end": 24175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24142,
											"end": 24175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24329,
											"end": 24330,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24295,
											"end": 24312,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24313,
											"end": 24324,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24325,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 24295,
											"end": 24330,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24291,
											"end": 24669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 24291,
											"end": 24669,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24431,
											"end": 24444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24431,
											"end": 24444,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 24416,
											"end": 24427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24416,
											"end": 24444,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 24412,
											"end": 24651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 24412,
											"end": 24651,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24609,
											"end": 24628,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24593,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24594,
											"end": 24605,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24576,
											"end": 24606,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24628,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 24576,
											"end": 24628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24412,
											"end": 24651,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 24412,
											"end": 24651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24291,
											"end": 24669,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 24291,
											"end": 24669,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24124,
											"end": 24683,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24067,
											"end": 24683,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 24067,
											"end": 24683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24727,
											"end": 24734,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24723,
											"end": 24725,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24717,
											"end": 24721,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24708,
											"end": 24735,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 24745,
											"end": 24787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 24766,
											"end": 24770,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 24772,
											"end": 24774,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 24776,
											"end": 24783,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 24785,
											"end": 24786,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 24745,
											"end": 24765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 24745,
											"end": 24787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24745,
											"end": 24787,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 24745,
											"end": 24787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22174,
											"end": 24794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22174,
											"end": 24794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22174,
											"end": 24794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22055,
											"end": 24794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 14062,
											"end": 14066,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14068,
											"end": 14070,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14072,
											"end": 14079,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 14045,
											"end": 14084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 14045,
											"end": 14084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 14091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11021,
											"end": 11028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11063,
											"end": 11090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 11082,
											"end": 11089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11063,
											"end": 11081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 11063,
											"end": 11090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11063,
											"end": 11090,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 11063,
											"end": 11090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11040,
											"end": 11092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11040,
											"end": 11092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 11099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6383,
											"end": 6390,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6423,
											"end": 6424,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6406,
											"end": 6411,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6402,
											"end": 6462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 6402,
											"end": 6462,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "PUSH",
											"source": 1,
											"value": "8F4EB60400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6462,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6402,
											"end": 6462,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 6402,
											"end": 6462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1035,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6479,
											"end": 6497,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6498,
											"end": 6503,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6533,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6472,
											"end": 6533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6472,
											"end": 6533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11379,
											"end": 11392,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11411,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 11404,
											"end": 11418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 11404,
											"end": 11418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13425,
											"end": 13444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 13425,
											"end": 13442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 13425,
											"end": 13444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13425,
											"end": 13444,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 13425,
											"end": 13444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13413,
											"end": 13444,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13413,
											"end": 13444,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13413,
											"end": 13421,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13413,
											"end": 13444,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13413,
											"end": 13444,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13413,
											"end": 13444,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13409,
											"end": 13470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 13409,
											"end": 13470,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "PUSH",
											"source": 1,
											"value": "B06307DB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13409,
											"end": 13470,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 13409,
											"end": 13470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13533,
											"end": 13541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13500,
											"end": 13519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 13500,
											"end": 13517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 13500,
											"end": 13519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13500,
											"end": 13519,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 13500,
											"end": 13519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13481,
											"end": 13520,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13521,
											"end": 13529,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13600,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13571,
											"end": 13590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 13571,
											"end": 13588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 13571,
											"end": 13590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13571,
											"end": 13590,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 13571,
											"end": 13590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13602,
											"end": 13610,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 13556,
											"end": 13611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13611,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13315,
											"end": 13618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14318,
											"end": 14349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 14331,
											"end": 14335,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14337,
											"end": 14339,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14341,
											"end": 14348,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14318,
											"end": 14330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 14318,
											"end": 14349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14318,
											"end": 14349,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 14318,
											"end": 14349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14381,
											"end": 14382,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14363,
											"end": 14365,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14363,
											"end": 14377,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14363,
											"end": 14377,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14363,
											"end": 14377,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 14363,
											"end": 14382,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14359,
											"end": 14539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 14359,
											"end": 14539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14401,
											"end": 14457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 14432,
											"end": 14436,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14438,
											"end": 14440,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14442,
											"end": 14449,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14451,
											"end": 14456,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14401,
											"end": 14431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 14401,
											"end": 14457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14401,
											"end": 14457,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 14401,
											"end": 14457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14396,
											"end": 14539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 14396,
											"end": 14539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "PUSH",
											"source": 1,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14396,
											"end": 14539,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 14396,
											"end": 14539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14359,
											"end": 14539,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 14359,
											"end": 14539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14157,
											"end": 14545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11564,
											"end": 11577,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11594,
											"end": 11610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 11602,
											"end": 11609,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11594,
											"end": 11601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 11594,
											"end": 11610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11594,
											"end": 11610,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 11594,
											"end": 11610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11589,
											"end": 11648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 11589,
											"end": 11648,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "PUSH",
											"source": 1,
											"value": "A14C4B5000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11648,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11589,
											"end": 11648,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 11589,
											"end": 11648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11659,
											"end": 11680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11683,
											"end": 11693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 11683,
											"end": 11691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 11683,
											"end": 11693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11683,
											"end": 11693,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 11683,
											"end": 11693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11659,
											"end": 11693,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11659,
											"end": 11693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11735,
											"end": 11736,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11716,
											"end": 11723,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11731,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11736,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11763,
											"end": 11770,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11772,
											"end": 11790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 11782,
											"end": 11789,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11772,
											"end": 11781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 11772,
											"end": 11790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11772,
											"end": 11790,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 11772,
											"end": 11790,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 11746,
											"end": 11791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11746,
											"end": 11791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 11710,
											"end": 11797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11703,
											"end": 11797,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11703,
											"end": 11797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11703,
											"end": 11797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13781,
											"end": 13785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13804,
											"end": 13822,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13823,
											"end": 13828,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13804,
											"end": 13829,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13830,
											"end": 13838,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 13804,
											"end": 13839,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13797,
											"end": 13839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13797,
											"end": 13839,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 15059,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 14791,
											"end": 15059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14848,
											"end": 14852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14902,
											"end": 14909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 14883,
											"end": 14896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 14883,
											"end": 14898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14898,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 14883,
											"end": 14898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14909,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14909,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14935,
											"end": 14948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14935,
											"end": 14948,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 14925,
											"end": 14932,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14925,
											"end": 14948,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 14883,
											"end": 14948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15032,
											"end": 15033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1774,
											"end": 1782,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14985,
											"end": 15002,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15003,
											"end": 15010,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15011,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15028,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15033,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 14883,
											"end": 15033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14864,
											"end": 15033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14864,
											"end": 15033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 15059,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 15059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 15059,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 15059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32874,
											"end": 32977,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 32874,
											"end": 32977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32934,
											"end": 32941,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32960,
											"end": 32970,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 32953,
											"end": 32970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32953,
											"end": 32970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32874,
											"end": 32977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32874,
											"end": 32977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4366,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4276,
											"end": 4366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4332,
											"end": 4339,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8016,
											"end": 8023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8035,
											"end": 8047,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8050,
											"end": 8057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8035,
											"end": 8057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8035,
											"end": 8057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8115,
											"end": 8119,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8096,
											"end": 8111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 8096,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 8096,
											"end": 8111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8096,
											"end": 8111,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 8096,
											"end": 8111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8096,
											"end": 8119,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8092,
											"end": 8990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 8092,
											"end": 8990,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8148,
											"end": 8161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8148,
											"end": 8161,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8141,
											"end": 8145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8141,
											"end": 8161,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8199,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8202,
											"end": 8219,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8220,
											"end": 8224,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8225,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8225,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8316,
											"end": 8317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1774,
											"end": 1782,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8289,
											"end": 8295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8289,
											"end": 8312,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8289,
											"end": 8317,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8285,
											"end": 8972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 8285,
											"end": 8972,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8817,
											"end": 8818,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8807,
											"end": 8813,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8807,
											"end": 8818,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8876,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8877,
											"end": 8883,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8877,
											"end": 8883,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8877,
											"end": 8883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8877,
											"end": 8883,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8877,
											"end": 8883,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8877,
											"end": 8883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8877,
											"end": 8883,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8850,
											"end": 8884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8850,
											"end": 8884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 8800,
											"end": 8911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8943,
											"end": 8949,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8936,
											"end": 8949,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8936,
											"end": 8949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8936,
											"end": 8949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8936,
											"end": 8949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8936,
											"end": 8949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 8936,
											"end": 8949,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8285,
											"end": 8972,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 8285,
											"end": 8972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 8137,
											"end": 8990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8092,
											"end": 8990,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 8092,
											"end": 8990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "PUSH",
											"source": 1,
											"value": "DF2D9B4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9047,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 9054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 9054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20436,
											"end": 21073,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 20436,
											"end": 21073,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20528,
											"end": 20555,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20557,
											"end": 20580,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20596,
											"end": 20649,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20652,
											"end": 20667,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 20596,
											"end": 20667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20596,
											"end": 20667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20834,
											"end": 20841,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20828,
											"end": 20832,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20821,
											"end": 20842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20868,
											"end": 20890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20862,
											"end": 20866,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20855,
											"end": 20891,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20943,
											"end": 20947,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20937,
											"end": 20941,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20927,
											"end": 20948,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 20904,
											"end": 20948,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20904,
											"end": 20948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21037,
											"end": 21056,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21031,
											"end": 21057,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 21012,
											"end": 21057,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21012,
											"end": 21057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20774,
											"end": 21067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20436,
											"end": 21073,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20436,
											"end": 21073,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20436,
											"end": 21073,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20436,
											"end": 21073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21181,
											"end": 21813,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 21181,
											"end": 21813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21319,
											"end": 21330,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21478,
											"end": 21493,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21472,
											"end": 21476,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21468,
											"end": 21494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21460,
											"end": 21494,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21460,
											"end": 21494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21635,
											"end": 21650,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21624,
											"end": 21633,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21620,
											"end": 21651,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21607,
											"end": 21651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21607,
											"end": 21651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21780,
											"end": 21795,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21769,
											"end": 21778,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21766,
											"end": 21796,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 21759,
											"end": 21763,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21748,
											"end": 21757,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21745,
											"end": 21764,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 21742,
											"end": 21797,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 21732,
											"end": 21797,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21732,
											"end": 21797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21181,
											"end": 21813,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 21181,
											"end": 21813,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21181,
											"end": 21813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21181,
											"end": 21813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21181,
											"end": 21813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21181,
											"end": 21813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31742,
											"end": 31896,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 31742,
											"end": 31896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31742,
											"end": 31896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31742,
											"end": 31896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31742,
											"end": 31896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31742,
											"end": 31896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31742,
											"end": 31896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30099,
											"end": 30401,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 30099,
											"end": 30401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30230,
											"end": 30237,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30249,
											"end": 30265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "E8"
										},
										{
											"begin": 30275,
											"end": 30294,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30275,
											"end": 30315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30275,
											"end": 30315,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 30249,
											"end": 30316,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30249,
											"end": 30316,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "E8"
										},
										{
											"begin": 30341,
											"end": 30372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 30352,
											"end": 30356,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 30358,
											"end": 30360,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 30362,
											"end": 30371,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 30341,
											"end": 30351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 30341,
											"end": 30372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30341,
											"end": 30372,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 30341,
											"end": 30372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30333,
											"end": 30373,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFF"
										},
										{
											"begin": 30333,
											"end": 30373,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 30333,
											"end": 30394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30333,
											"end": 30394,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 30326,
											"end": 30394,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30326,
											"end": 30394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30326,
											"end": 30394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30099,
											"end": 30401,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 30099,
											"end": 30401,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 30099,
											"end": 30401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30099,
											"end": 30401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30099,
											"end": 30401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30099,
											"end": 30401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10900,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 10460,
											"end": 10900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10540,
											"end": 10554,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10705,
											"end": 10720,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10698,
											"end": 10703,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10694,
											"end": 10721,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10685,
											"end": 10721,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10685,
											"end": 10721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10877,
											"end": 10882,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10863,
											"end": 10874,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 10839,
											"end": 10861,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 10835,
											"end": 10875,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 10832,
											"end": 10883,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 10825,
											"end": 10830,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10822,
											"end": 10884,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 10812,
											"end": 10884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10812,
											"end": 10884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10900,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10900,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32537,
											"end": 32690,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 32537,
											"end": 32690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32537,
											"end": 32690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32537,
											"end": 32690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32537,
											"end": 32690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32537,
											"end": 32690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32537,
											"end": 32690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28807,
											"end": 28811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28852,
											"end": 28854,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28872,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28827,
											"end": 28872,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28872,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 28873,
											"end": 28892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 28873,
											"end": 28890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 28873,
											"end": 28892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28873,
											"end": 28892,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 28873,
											"end": 28892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28894,
											"end": 28898,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 28900,
											"end": 28907,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 28909,
											"end": 28914,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 28827,
											"end": 28915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 28827,
											"end": 28915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 28827,
											"end": 28915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29122,
											"end": 29123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29105,
											"end": 29111,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29105,
											"end": 29118,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 29105,
											"end": 29123,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 29101,
											"end": 29330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 29101,
											"end": 29330,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "PUSH",
											"source": 1,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29150,
											"end": 29190,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 29101,
											"end": 29330,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 29101,
											"end": 29330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29290,
											"end": 29296,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29284,
											"end": 29297,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 29275,
											"end": 29281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29271,
											"end": 29273,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29267,
											"end": 29282,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29260,
											"end": 29298,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 28823,
											"end": 29340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28993,
											"end": 29047,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 28993,
											"end": 29047,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 28993,
											"end": 29047,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28983,
											"end": 28989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28983,
											"end": 29047,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 28976,
											"end": 29047,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28976,
											"end": 29047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28976,
											"end": 29047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28649,
											"end": 29346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12049,
											"end": 12141,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 12049,
											"end": 12141,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12100,
											"end": 12113,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12049,
											"end": 12141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12049,
											"end": 12141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 33078,
											"end": 34998,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 33078,
											"end": 34998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33135,
											"end": 33152,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 33548,
											"end": 33551,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 33541,
											"end": 33545,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33535,
											"end": 33546,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 33531,
											"end": 33552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33524,
											"end": 33552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33524,
											"end": 33552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33637,
											"end": 33640,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33631,
											"end": 33635,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33624,
											"end": 33641,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33740,
											"end": 33743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34188,
											"end": 34193,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 34316,
											"end": 34317,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 34311,
											"end": 34314,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34307,
											"end": 34318,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34300,
											"end": 34318,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34300,
											"end": 34318,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34451,
											"end": 34453,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 34445,
											"end": 34449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34441,
											"end": 34454,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 34437,
											"end": 34439,
											"name": "PUSH",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 34433,
											"end": 34455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34428,
											"end": 34431,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34420,
											"end": 34456,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 34491,
											"end": 34493,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 34485,
											"end": 34489,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34481,
											"end": 34494,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 34473,
											"end": 34494,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34473,
											"end": 34494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34509,
											"end": 34513,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 34695,
											"end": 34696,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 34690,
											"end": 34693,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34686,
											"end": 34697,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34679,
											"end": 34697,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34679,
											"end": 34697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34745,
											"end": 34747,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 34739,
											"end": 34743,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34735,
											"end": 34748,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 34731,
											"end": 34733,
											"name": "PUSH",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 34727,
											"end": 34749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34722,
											"end": 34725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34714,
											"end": 34750,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 34602,
											"end": 34604,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 34596,
											"end": 34600,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34592,
											"end": 34605,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 34584,
											"end": 34605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34584,
											"end": 34605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 34082,
											"end": 34764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34086,
											"end": 34508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34801,
											"end": 34804,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34796,
											"end": 34799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34792,
											"end": 34805,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34914,
											"end": 34916,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34909,
											"end": 34912,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34905,
											"end": 34917,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34898,
											"end": 34917,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34898,
											"end": 34917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34975,
											"end": 34981,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34970,
											"end": 34973,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34963,
											"end": 34982,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33173,
											"end": 34992,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33173,
											"end": 34992,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33078,
											"end": 34998,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33078,
											"end": 34998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33078,
											"end": 34998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33078,
											"end": 34998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30961,
											"end": 31104,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 30961,
											"end": 31104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31094,
											"end": 31100,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30961,
											"end": 31104,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 30961,
											"end": 31104,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 30961,
											"end": 31104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30961,
											"end": 31104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30961,
											"end": 31104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30961,
											"end": 31104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1866,
											"end": 1867,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1887,
											"end": 1888,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 1897,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 1976,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1970,
											"end": 1973,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1966,
											"end": 1977,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1960,
											"end": 1978,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 1957,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1951,
											"end": 1954,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1947,
											"end": 1958,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 1979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1914,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1909,
											"end": 1910,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1905,
											"end": 1915,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2007,
											"end": 2013,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2004,
											"end": 2005,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2001,
											"end": 2014,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2087,
											"end": 2088,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2076,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2069,
											"end": 2085,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2062,
											"end": 2089,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 2105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1798,
											"end": 2105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2152,
											"end": 2158,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2205,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2196,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2187,
											"end": 2192,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2197,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2179,
											"end": 2207,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2169,
											"end": 2207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2169,
											"end": 2207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2307,
											"end": 2310,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 2368,
											"end": 2373,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 2335,
											"end": 2374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 2454,
											"end": 2460,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2452,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 2390,
											"end": 2461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2383,
											"end": 2461,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2383,
											"end": 2461,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 2515,
											"end": 2521,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2513,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2503,
											"end": 2507,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2496,
											"end": 2501,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2508,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 2470,
											"end": 2522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 2569,
											"end": 2575,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 2547,
											"end": 2576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2542,
											"end": 2545,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2577,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2577,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2577,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2311,
											"end": 2583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2702,
											"end": 2706,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2740,
											"end": 2742,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2729,
											"end": 2738,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2725,
											"end": 2743,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2717,
											"end": 2743,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2717,
											"end": 2743,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2789,
											"end": 2798,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2787,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2779,
											"end": 2799,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2775,
											"end": 2776,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2760,
											"end": 2777,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2753,
											"end": 2800,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 2890,
											"end": 2894,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2887,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2817,
											"end": 2895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2895,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2895,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2945,
											"end": 2952,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2974,
											"end": 2979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2963,
											"end": 2979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2963,
											"end": 2979,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2908,
											"end": 2985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2991,
											"end": 3113,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 2991,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 3082,
											"end": 3087,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 3064,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3057,
											"end": 3062,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3089,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3103,
											"end": 3104,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3101,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3093,
											"end": 3105,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2991,
											"end": 3113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2991,
											"end": 3113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3165,
											"end": 3170,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3209,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3190,
											"end": 3210,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3181,
											"end": 3210,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3181,
											"end": 3210,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 3246,
											"end": 3251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 3219,
											"end": 3252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3119,
											"end": 3258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3329,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3372,
											"end": 3374,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3360,
											"end": 3369,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3351,
											"end": 3358,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3370,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 3378,
											"end": 3457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3498,
											"end": 3499,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 3568,
											"end": 3575,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 3565,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3548,
											"end": 3557,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3544,
											"end": 3566,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 3523,
											"end": 3576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3513,
											"end": 3576,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3513,
											"end": 3576,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3469,
											"end": 3586,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3264,
											"end": 3593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3718,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 3719,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3654,
											"end": 3719,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3654,
											"end": 3719,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3599,
											"end": 3725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3768,
											"end": 3775,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 3815,
											"end": 3820,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 3797,
											"end": 3821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3786,
											"end": 3821,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3786,
											"end": 3821,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 3938,
											"end": 3943,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 3920,
											"end": 3944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "tag",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3915,
											"end": 3918,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 3945,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3833,
											"end": 3951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4050,
											"end": 4054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4088,
											"end": 4090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4077,
											"end": 4086,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4073,
											"end": 4091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4065,
											"end": 4091,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4065,
											"end": 4091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 4169,
											"end": 4170,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4158,
											"end": 4167,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4154,
											"end": 4171,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4145,
											"end": 4151,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 4101,
											"end": 4172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4185,
											"end": 4307,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 4185,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 4276,
											"end": 4281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 4258,
											"end": 4282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4251,
											"end": 4256,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4248,
											"end": 4283,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4297,
											"end": 4298,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4287,
											"end": 4299,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "tag",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4185,
											"end": 4307,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4185,
											"end": 4307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4364,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4397,
											"end": 4403,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4384,
											"end": 4404,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4404,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4404,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 4440,
											"end": 4445,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 4413,
											"end": 4446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "tag",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4313,
											"end": 4452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4526,
											"end": 4532,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4534,
											"end": 4540,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4583,
											"end": 4585,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4571,
											"end": 4580,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4558,
											"end": 4581,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4554,
											"end": 4586,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 4589,
											"end": 4668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "tag",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4710,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 4779,
											"end": 4786,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4770,
											"end": 4776,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4768,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4755,
											"end": 4777,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 4734,
											"end": 4787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "tag",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4724,
											"end": 4787,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4724,
											"end": 4787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4836,
											"end": 4838,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 4907,
											"end": 4914,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4898,
											"end": 4904,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4887,
											"end": 4896,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4883,
											"end": 4905,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 4862,
											"end": 4915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "tag",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4852,
											"end": 4915,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4852,
											"end": 4915,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4807,
											"end": 4925,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4458,
											"end": 4932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4938,
											"end": 5056,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 4938,
											"end": 5056,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5025,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 5043,
											"end": 5048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5025,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 5025,
											"end": 5049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5025,
											"end": 5049,
											"name": "tag",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 5025,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5020,
											"end": 5023,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5050,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4938,
											"end": 5056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4938,
											"end": 5056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4938,
											"end": 5056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5155,
											"end": 5159,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5193,
											"end": 5195,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5182,
											"end": 5191,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5178,
											"end": 5196,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5170,
											"end": 5196,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5170,
											"end": 5196,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 5274,
											"end": 5275,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5263,
											"end": 5272,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5259,
											"end": 5276,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5250,
											"end": 5256,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 5206,
											"end": 5277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "tag",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5062,
											"end": 5284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5373,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5375,
											"end": 5381,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5383,
											"end": 5389,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5432,
											"end": 5434,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5420,
											"end": 5429,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5411,
											"end": 5418,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5407,
											"end": 5430,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5403,
											"end": 5435,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5438,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 5438,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 5438,
											"end": 5517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5438,
											"end": 5517,
											"name": "tag",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 5438,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "tag",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5558,
											"end": 5559,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 5628,
											"end": 5635,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5619,
											"end": 5625,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5608,
											"end": 5617,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5604,
											"end": 5626,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5583,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 5583,
											"end": 5636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5583,
											"end": 5636,
											"name": "tag",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 5583,
											"end": 5636,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5573,
											"end": 5636,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5573,
											"end": 5636,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5529,
											"end": 5646,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5685,
											"end": 5687,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5711,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 5756,
											"end": 5763,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5747,
											"end": 5753,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5736,
											"end": 5745,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5732,
											"end": 5754,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5711,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 5711,
											"end": 5764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5711,
											"end": 5764,
											"name": "tag",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 5711,
											"end": 5764,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5701,
											"end": 5764,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5701,
											"end": 5764,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5774,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5813,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5839,
											"end": 5892,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 5884,
											"end": 5891,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5875,
											"end": 5881,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5864,
											"end": 5873,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5860,
											"end": 5882,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5839,
											"end": 5892,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 5839,
											"end": 5892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5839,
											"end": 5892,
											"name": "tag",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 5839,
											"end": 5892,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5829,
											"end": 5892,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5829,
											"end": 5892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5784,
											"end": 5902,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5290,
											"end": 5909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5974,
											"end": 5980,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6023,
											"end": 6025,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6011,
											"end": 6020,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6002,
											"end": 6009,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5998,
											"end": 6021,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5994,
											"end": 6026,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6029,
											"end": 6108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 6029,
											"end": 6108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 6029,
											"end": 6108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6029,
											"end": 6108,
											"name": "tag",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 6029,
											"end": 6108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "tag",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6149,
											"end": 6150,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6174,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 6219,
											"end": 6226,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6210,
											"end": 6216,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6199,
											"end": 6208,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6195,
											"end": 6217,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6174,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 6174,
											"end": 6227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6174,
											"end": 6227,
											"name": "tag",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 6174,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6164,
											"end": 6227,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6164,
											"end": 6227,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6120,
											"end": 6237,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5915,
											"end": 6244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6250,
											"end": 6366,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 6250,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 6320,
											"end": 6341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "tag",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6313,
											"end": 6318,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6310,
											"end": 6342,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6357,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6353,
											"end": 6354,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6346,
											"end": 6358,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "tag",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6250,
											"end": 6366,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6250,
											"end": 6366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6415,
											"end": 6420,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6453,
											"end": 6459,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6440,
											"end": 6460,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 6431,
											"end": 6460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6431,
											"end": 6460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 6493,
											"end": 6498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 6469,
											"end": 6499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "tag",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6372,
											"end": 6505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6576,
											"end": 6582,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6584,
											"end": 6590,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6633,
											"end": 6635,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6621,
											"end": 6630,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6612,
											"end": 6619,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6631,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6604,
											"end": 6636,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 6639,
											"end": 6718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "tag",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "tag",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6759,
											"end": 6760,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 6829,
											"end": 6836,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6820,
											"end": 6826,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6809,
											"end": 6818,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6805,
											"end": 6827,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 6784,
											"end": 6837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "tag",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6774,
											"end": 6837,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6774,
											"end": 6837,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6730,
											"end": 6847,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6886,
											"end": 6888,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 6954,
											"end": 6961,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6945,
											"end": 6951,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6934,
											"end": 6943,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6930,
											"end": 6952,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 6912,
											"end": 6962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "tag",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6902,
											"end": 6962,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6902,
											"end": 6962,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6857,
											"end": 6972,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6511,
											"end": 6979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6985,
											"end": 7102,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 6985,
											"end": 7102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7094,
											"end": 7095,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7091,
											"end": 7092,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7084,
											"end": 7096,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7108,
											"end": 7225,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 7108,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7217,
											"end": 7218,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7214,
											"end": 7215,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7207,
											"end": 7219,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7231,
											"end": 7411,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 7231,
											"end": 7411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7279,
											"end": 7356,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7276,
											"end": 7277,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7269,
											"end": 7357,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7376,
											"end": 7380,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 7373,
											"end": 7374,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7366,
											"end": 7381,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7400,
											"end": 7404,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 7397,
											"end": 7398,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7390,
											"end": 7405,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 7522,
											"end": 7526,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 7500,
											"end": 7527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "tag",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7492,
											"end": 7498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7630,
											"end": 7636,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7618,
											"end": 7628,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7615,
											"end": 7637,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7594,
											"end": 7612,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7582,
											"end": 7592,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7579,
											"end": 7613,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 7576,
											"end": 7638,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 7641,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "tag",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "tag",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7681,
											"end": 7691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7677,
											"end": 7679,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7670,
											"end": 7692,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7460,
											"end": 7698,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7417,
											"end": 7698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7738,
											"end": 7744,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 7765,
											"end": 7785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7755,
											"end": 7785,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7755,
											"end": 7785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 7822,
											"end": 7826,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7814,
											"end": 7820,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 7794,
											"end": 7827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "tag",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7704,
											"end": 7833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7900,
											"end": 7904,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7990,
											"end": 8008,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7982,
											"end": 7988,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7979,
											"end": 8009,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 8012,
											"end": 8030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "tag",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "tag",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 8072,
											"end": 8078,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 8050,
											"end": 8079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "tag",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8042,
											"end": 8079,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8042,
											"end": 8079,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8134,
											"end": 8138,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8128,
											"end": 8132,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8139,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7839,
											"end": 8146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8236,
											"end": 8242,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8231,
											"end": 8234,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8226,
											"end": 8229,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8213,
											"end": 8243,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 8298,
											"end": 8299,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8289,
											"end": 8295,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8284,
											"end": 8287,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8280,
											"end": 8296,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8273,
											"end": 8300,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8152,
											"end": 8306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8389,
											"end": 8394,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 8471,
											"end": 8477,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 8430,
											"end": 8478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "tag",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 8414,
											"end": 8479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "tag",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8405,
											"end": 8479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8405,
											"end": 8479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8502,
											"end": 8508,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8495,
											"end": 8500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8488,
											"end": 8509,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8540,
											"end": 8544,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8533,
											"end": 8538,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8529,
											"end": 8545,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8578,
											"end": 8581,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8569,
											"end": 8575,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8564,
											"end": 8567,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8560,
											"end": 8576,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8582,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 8585,
											"end": 8664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "tag",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "tag",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 8709,
											"end": 8715,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8704,
											"end": 8707,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8699,
											"end": 8702,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 8675,
											"end": 8716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "tag",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8395,
											"end": 8722,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8312,
											"end": 8722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8796,
											"end": 8801,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8845,
											"end": 8848,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 8842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 8830,
											"end": 8836,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8826,
											"end": 8843,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8822,
											"end": 8849,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 8853,
											"end": 8932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "tag",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "tag",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8970,
											"end": 8976,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8957,
											"end": 8977,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 9069,
											"end": 9072,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9061,
											"end": 9067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9054,
											"end": 9058,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9046,
											"end": 9052,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9042,
											"end": 9059,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 8995,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "tag",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8986,
											"end": 9073,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8986,
											"end": 9073,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8802,
											"end": 9079,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8741,
											"end": 9079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9180,
											"end": 9186,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9188,
											"end": 9194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9196,
											"end": 9202,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9204,
											"end": 9210,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9253,
											"end": 9256,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 9241,
											"end": 9250,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9232,
											"end": 9239,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9228,
											"end": 9251,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9224,
											"end": 9257,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 9260,
											"end": 9339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "tag",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "tag",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9380,
											"end": 9381,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 9450,
											"end": 9457,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9441,
											"end": 9447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9430,
											"end": 9439,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 9426,
											"end": 9448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 9405,
											"end": 9458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "tag",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9395,
											"end": 9458,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 9395,
											"end": 9458,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9351,
											"end": 9468,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9507,
											"end": 9509,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 9578,
											"end": 9585,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9569,
											"end": 9575,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9558,
											"end": 9567,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 9554,
											"end": 9576,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 9533,
											"end": 9586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "tag",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9523,
											"end": 9586,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 9523,
											"end": 9586,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9478,
											"end": 9596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9635,
											"end": 9637,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 9706,
											"end": 9713,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9697,
											"end": 9703,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9686,
											"end": 9695,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 9704,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 9661,
											"end": 9714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "tag",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9651,
											"end": 9714,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9651,
											"end": 9714,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9606,
											"end": 9724,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9791,
											"end": 9793,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 9780,
											"end": 9789,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9776,
											"end": 9794,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9763,
											"end": 9795,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 9822,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9814,
											"end": 9820,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9811,
											"end": 9841,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 9844,
											"end": 9923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "tag",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "tag",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 10003,
											"end": 10010,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9994,
											"end": 10000,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9983,
											"end": 9992,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 9979,
											"end": 10001,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 9949,
											"end": 10011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "tag",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9939,
											"end": 10011,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9939,
											"end": 10011,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9734,
											"end": 10021,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9085,
											"end": 10028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10102,
											"end": 10108,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10110,
											"end": 10116,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10161,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10147,
											"end": 10156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10134,
											"end": 10157,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10130,
											"end": 10162,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 10165,
											"end": 10244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "tag",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "tag",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10285,
											"end": 10286,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 10355,
											"end": 10362,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10346,
											"end": 10352,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10335,
											"end": 10344,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10331,
											"end": 10353,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 10310,
											"end": 10363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "tag",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10300,
											"end": 10363,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10300,
											"end": 10363,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10256,
											"end": 10373,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10412,
											"end": 10414,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 10483,
											"end": 10490,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10474,
											"end": 10480,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10463,
											"end": 10472,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10459,
											"end": 10481,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 10438,
											"end": 10491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "tag",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10428,
											"end": 10491,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10428,
											"end": 10491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10383,
											"end": 10501,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10034,
											"end": 10508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10694,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 10514,
											"end": 10694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10562,
											"end": 10639,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10559,
											"end": 10560,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10552,
											"end": 10640,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10659,
											"end": 10663,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 10656,
											"end": 10657,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10649,
											"end": 10664,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10683,
											"end": 10687,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 10680,
											"end": 10681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10673,
											"end": 10688,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10744,
											"end": 10750,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10781,
											"end": 10782,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 10775,
											"end": 10779,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10771,
											"end": 10783,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 10761,
											"end": 10783,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10761,
											"end": 10783,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10829,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10822,
											"end": 10826,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10818,
											"end": 10830,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10849,
											"end": 10867,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10905,
											"end": 10909,
											"name": "PUSH",
											"source": 3,
											"value": "7F"
										},
										{
											"begin": 10897,
											"end": 10903,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10893,
											"end": 10910,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10883,
											"end": 10910,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10883,
											"end": 10910,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "tag",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10967,
											"end": 10969,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10959,
											"end": 10965,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10956,
											"end": 10970,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10954,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10933,
											"end": 10971,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 10986,
											"end": 11004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "tag",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "tag",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10751,
											"end": 11020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 11020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11128,
											"end": 11139,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11165,
											"end": 11168,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11150,
											"end": 11168,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11150,
											"end": 11168,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11026,
											"end": 11174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11286,
											"end": 11289,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11314,
											"end": 11353,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 11347,
											"end": 11352,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11314,
											"end": 11353,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 11314,
											"end": 11353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11314,
											"end": 11353,
											"name": "tag",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 11314,
											"end": 11353,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11369,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11446,
											"end": 11449,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11369,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 11369,
											"end": 11458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11369,
											"end": 11458,
											"name": "tag",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 11369,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11362,
											"end": 11458,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 11362,
											"end": 11458,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11467,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "383"
										},
										{
											"begin": 11512,
											"end": 11518,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11507,
											"end": 11510,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11500,
											"end": 11504,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11493,
											"end": 11498,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 11489,
											"end": 11505,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11467,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 11467,
											"end": 11519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11467,
											"end": 11519,
											"name": "tag",
											"source": 3,
											"value": "383"
										},
										{
											"begin": 11467,
											"end": 11519,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11544,
											"end": 11550,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11539,
											"end": 11542,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11535,
											"end": 11551,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11528,
											"end": 11551,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11528,
											"end": 11551,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11290,
											"end": 11557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11180,
											"end": 11557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11743,
											"end": 11746,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11765,
											"end": 11860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 11856,
											"end": 11859,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11847,
											"end": 11853,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11765,
											"end": 11860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 11765,
											"end": 11860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11765,
											"end": 11860,
											"name": "tag",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 11765,
											"end": 11860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11758,
											"end": 11860,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11758,
											"end": 11860,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11877,
											"end": 11972,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 11968,
											"end": 11971,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11959,
											"end": 11965,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11877,
											"end": 11972,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 11877,
											"end": 11972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11877,
											"end": 11972,
											"name": "tag",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 11877,
											"end": 11972,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11870,
											"end": 11972,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11870,
											"end": 11972,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11989,
											"end": 11992,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11982,
											"end": 11992,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11982,
											"end": 11992,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11563,
											"end": 11998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12004,
											"end": 12102,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 12004,
											"end": 12102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12055,
											"end": 12061,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12089,
											"end": 12094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12083,
											"end": 12095,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12073,
											"end": 12095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12073,
											"end": 12095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12004,
											"end": 12102,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12004,
											"end": 12102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12004,
											"end": 12102,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12004,
											"end": 12102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12108,
											"end": 12276,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 12108,
											"end": 12276,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12191,
											"end": 12202,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12225,
											"end": 12231,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12220,
											"end": 12223,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12213,
											"end": 12232,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12265,
											"end": 12269,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12260,
											"end": 12263,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12256,
											"end": 12270,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12241,
											"end": 12270,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12241,
											"end": 12270,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12108,
											"end": 12276,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12108,
											"end": 12276,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12108,
											"end": 12276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12108,
											"end": 12276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12108,
											"end": 12276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12282,
											"end": 12642,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 12282,
											"end": 12642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12368,
											"end": 12371,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12396,
											"end": 12434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 12428,
											"end": 12433,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12396,
											"end": 12434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 12396,
											"end": 12434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12396,
											"end": 12434,
											"name": "tag",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 12396,
											"end": 12434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12450,
											"end": 12520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 12513,
											"end": 12519,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12508,
											"end": 12511,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 12450,
											"end": 12520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 12450,
											"end": 12520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12450,
											"end": 12520,
											"name": "tag",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 12450,
											"end": 12520,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12443,
											"end": 12520,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 12443,
											"end": 12520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12529,
											"end": 12581,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 12574,
											"end": 12580,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12569,
											"end": 12572,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 12562,
											"end": 12566,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12555,
											"end": 12560,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 12551,
											"end": 12567,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12529,
											"end": 12581,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 12529,
											"end": 12581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12529,
											"end": 12581,
											"name": "tag",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 12529,
											"end": 12581,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12606,
											"end": 12635,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 12628,
											"end": 12634,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12606,
											"end": 12635,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 12606,
											"end": 12635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12606,
											"end": 12635,
											"name": "tag",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 12606,
											"end": 12635,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12601,
											"end": 12604,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12597,
											"end": 12636,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12590,
											"end": 12636,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12590,
											"end": 12636,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12372,
											"end": 12642,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12282,
											"end": 12642,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12282,
											"end": 12642,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12282,
											"end": 12642,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12282,
											"end": 12642,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12282,
											"end": 12642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12648,
											"end": 13288,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 12648,
											"end": 13288,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12843,
											"end": 12847,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12881,
											"end": 12884,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 12870,
											"end": 12879,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12866,
											"end": 12885,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12858,
											"end": 12885,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12858,
											"end": 12885,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12895,
											"end": 12966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 12963,
											"end": 12964,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12952,
											"end": 12961,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12948,
											"end": 12965,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12939,
											"end": 12945,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 12895,
											"end": 12966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 12895,
											"end": 12966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12895,
											"end": 12966,
											"name": "tag",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 12895,
											"end": 12966,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12976,
											"end": 13048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 13044,
											"end": 13046,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13033,
											"end": 13042,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13029,
											"end": 13047,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13020,
											"end": 13026,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 12976,
											"end": 13048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 12976,
											"end": 13048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12976,
											"end": 13048,
											"name": "tag",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 12976,
											"end": 13048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13058,
											"end": 13130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 13126,
											"end": 13128,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 13115,
											"end": 13124,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13111,
											"end": 13129,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13102,
											"end": 13108,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 13058,
											"end": 13130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 13058,
											"end": 13130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13058,
											"end": 13130,
											"name": "tag",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 13058,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13177,
											"end": 13186,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13171,
											"end": 13175,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13167,
											"end": 13187,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 13162,
											"end": 13164,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 13151,
											"end": 13160,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13147,
											"end": 13165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13140,
											"end": 13188,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13205,
											"end": 13281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 13276,
											"end": 13280,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13267,
											"end": 13273,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 13205,
											"end": 13281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 13205,
											"end": 13281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13205,
											"end": 13281,
											"name": "tag",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 13205,
											"end": 13281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13197,
											"end": 13281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13197,
											"end": 13281,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12648,
											"end": 13288,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 12648,
											"end": 13288,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 12648,
											"end": 13288,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12648,
											"end": 13288,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12648,
											"end": 13288,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12648,
											"end": 13288,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12648,
											"end": 13288,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12648,
											"end": 13288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13294,
											"end": 13435,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 13294,
											"end": 13435,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13350,
											"end": 13355,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13381,
											"end": 13387,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13375,
											"end": 13388,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 13366,
											"end": 13388,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13366,
											"end": 13388,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13397,
											"end": 13429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 13423,
											"end": 13428,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13397,
											"end": 13429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 13397,
											"end": 13429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13397,
											"end": 13429,
											"name": "tag",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 13397,
											"end": 13429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13294,
											"end": 13435,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13294,
											"end": 13435,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13294,
											"end": 13435,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13294,
											"end": 13435,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13294,
											"end": 13435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13441,
											"end": 13790,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 13441,
											"end": 13790,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13510,
											"end": 13516,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13559,
											"end": 13561,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13547,
											"end": 13556,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13538,
											"end": 13545,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 13534,
											"end": 13557,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 13530,
											"end": 13562,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 13527,
											"end": 13646,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 13527,
											"end": 13646,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "402"
										},
										{
											"begin": 13527,
											"end": 13646,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13565,
											"end": 13644,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 13565,
											"end": 13644,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 13565,
											"end": 13644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13565,
											"end": 13644,
											"name": "tag",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 13565,
											"end": 13644,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13527,
											"end": 13646,
											"name": "tag",
											"source": 3,
											"value": "402"
										},
										{
											"begin": 13527,
											"end": 13646,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13685,
											"end": 13686,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13710,
											"end": 13773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "404"
										},
										{
											"begin": 13765,
											"end": 13772,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 13756,
											"end": 13762,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13745,
											"end": 13754,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 13741,
											"end": 13763,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13710,
											"end": 13773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 13710,
											"end": 13773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13710,
											"end": 13773,
											"name": "tag",
											"source": 3,
											"value": "404"
										},
										{
											"begin": 13710,
											"end": 13773,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13700,
											"end": 13773,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13700,
											"end": 13773,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13656,
											"end": 13783,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13441,
											"end": 13790,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13441,
											"end": 13790,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13441,
											"end": 13790,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13441,
											"end": 13790,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13441,
											"end": 13790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"Day50_ERC721A.sol",
								"erc721a/contracts/ERC721A.sol",
								"erc721a/contracts/IERC721A.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at `_startTokenId()` (defaults to 0, e.g. 0, 1, 2, 3..). Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply. Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see `_totalMinted`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x53cbf7665c255e8eef7581b7b81baee6561880463969ba2bb1bfd475db79fc65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e64ab367338098474aec540e515947429475d8b7688ecbb0711f3fa371aa6263\",\"dweb:/ipfs/QmNTqiWVo11JVkdq2jC3twqaUnKgdJnjUJCNvQnJknheP5\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 111,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 113,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 115,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 117,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 121,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 125,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 129,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 135,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721A__IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token receiver interface.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token receiver interface.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/ERC721A.sol\":\"ERC721A__IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x53cbf7665c255e8eef7581b7b81baee6561880463969ba2bb1bfd475db79fc65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e64ab367338098474aec540e515947429475d8b7688ecbb0711f3fa371aa6263\",\"dweb:/ipfs/QmNTqiWVo11JVkdq2jC3twqaUnKgdJnjUJCNvQnJknheP5\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc721a/contracts/IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of an ERC721A compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the ERC2309 standard. See `_mintERC2309` for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721A compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the ERC2309 standard. See `_mintERC2309` for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0x14469c33c8a3ba9a3627c02ec94dcd9f7f3d6d540f89ea37a358f625058eb309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a86910ef1502c5c09f71c311d3a9f6d9004b01a3e585628de5240b4096e0d10\",\"dweb:/ipfs/QmQZNkC3oApQvLXgTHnJyQv1LjHokriTSDDupRyTijD1xY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> Day50_ERC721A.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Day50_ERC721A.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Day50_ERC721A.sol": {
				"ast": {
					"absolutePath": "Day50_ERC721A.sol",
					"exportedSymbols": {
						"Azuki": [
							25
						],
						"ERC721A": [
							1664
						],
						"ERC721A__IERC721Receiver": [
							43
						],
						"IERC721A": [
							1873
						]
					},
					"id": 26,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"absolutePath": "erc721a/contracts/ERC721A.sol",
							"file": "erc721a/contracts/ERC721A.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 26,
							"sourceUnit": 1665,
							"src": "25:39:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "ERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1664,
										"src": "84:7:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "84:7:0"
								}
							],
							"canonicalName": "Azuki",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 25,
							"linearizedBaseContracts": [
								25,
								1664,
								1873
							],
							"name": "Azuki",
							"nameLocation": "75:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "136:2:0",
										"statements": []
									},
									"id": 12,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "417a756b69",
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "118:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8259708f963947d28484bf669e6cdd15ac12e7d813de008356896f65b003a79b",
														"typeString": "literal_string \"Azuki\""
													},
													"value": "Azuki"
												},
												{
													"hexValue": "415a554b49",
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "127:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_184a09271b0532717108cdd656088ca8d5a200eb75d6eb742b2d77961d97dd73",
														"typeString": "literal_string \"AZUKI\""
													},
													"value": "AZUKI"
												}
											],
											"id": 9,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 6,
												"name": "ERC721A",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1664,
												"src": "110:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "110:25:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "107:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "136:0:0"
									},
									"scope": 25,
									"src": "96:42:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "191:117:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 18,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "282:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "282:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 20,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "294:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 17,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															843,
															905
														],
														"referencedDeclaration": 843,
														"src": "272:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "272:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "272:31:0"
											}
										]
									},
									"functionSelector": "a0712d68",
									"id": 24,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "151:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "164:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "156:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "156:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "155:18:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "191:0:0"
									},
									"scope": 25,
									"src": "142:166:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 26,
							"src": "66:244:0",
							"usedErrors": [
								1670,
								1673,
								1676,
								1679,
								1682,
								1685,
								1688,
								1691,
								1694,
								1697,
								1700,
								1703,
								1706,
								1709
							]
						}
					],
					"src": "0:310:0"
				},
				"id": 0
			},
			"erc721a/contracts/ERC721A.sol": {
				"ast": {
					"absolutePath": "erc721a/contracts/ERC721A.sol",
					"exportedSymbols": {
						"ERC721A": [
							1664
						],
						"ERC721A__IERC721Receiver": [
							43
						],
						"IERC721A": [
							1873
						]
					},
					"id": 1665,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 27,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:1"
						},
						{
							"absolutePath": "erc721a/contracts/IERC721A.sol",
							"file": "./IERC721A.sol",
							"id": 28,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1665,
							"sourceUnit": 1874,
							"src": "109:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC721A__IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 29,
								"nodeType": "StructuredDocumentation",
								"src": "135:48:1",
								"text": " @dev ERC721 token receiver interface."
							},
							"fullyImplemented": false,
							"id": 43,
							"linearizedBaseContracts": [
								43
							],
							"name": "ERC721A__IERC721Receiver",
							"nameLocation": "194:24:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "150b7a02",
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "234:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "268:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "260:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "260:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "294:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "286:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "286:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "316:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "308:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "348:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "333:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 36,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "333:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "250:108:1"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "377:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 39,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "377:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "376:8:1"
									},
									"scope": 43,
									"src": "225:160:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1665,
							"src": "184:203:1",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 45,
										"name": "IERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1873,
										"src": "905:8:1"
									},
									"id": 46,
									"nodeType": "InheritanceSpecifier",
									"src": "905:8:1"
								}
							],
							"canonicalName": "ERC721A",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 44,
								"nodeType": "StructuredDocumentation",
								"src": "389:495:1",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard,\n including the Metadata extension. Built to optimize for lower gas during batch mints.\n Assumes serials are sequentially minted starting at `_startTokenId()`\n (defaults to 0, e.g. 0, 1, 2, 3..).\n Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256)."
							},
							"fullyImplemented": true,
							"id": 1664,
							"linearizedBaseContracts": [
								1664,
								1873
							],
							"name": "ERC721A",
							"nameLocation": "894:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 54,
									"mutability": "constant",
									"name": "BITMASK_ADDRESS_DATA_ENTRY",
									"nameLocation": "993:26:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "968:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 47,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "968:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										},
										"id": 53,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1023:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 49,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1028:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "1023:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													}
												}
											],
											"id": 51,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1022:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18446744073709551616_by_1",
												"typeString": "int_const 18446744073709551616"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 52,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1034:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1022:13:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 57,
									"mutability": "constant",
									"name": "BITPOS_NUMBER_MINTED",
									"nameLocation": "1133:20:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "1108:50:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 55,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1108:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3634",
										"id": 56,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1156:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "64"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 60,
									"mutability": "constant",
									"name": "BITPOS_NUMBER_BURNED",
									"nameLocation": "1256:20:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "1231:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 58,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1231:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313238",
										"id": 59,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1279:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "128"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 63,
									"mutability": "constant",
									"name": "BITPOS_AUX",
									"nameLocation": "1371:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "1346:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 61,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1346:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313932",
										"id": 62,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1384:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "192"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 71,
									"mutability": "constant",
									"name": "BITMASK_AUX_COMPLEMENT",
									"nameLocation": "1500:22:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "1475:64:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 64,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1475:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										},
										"id": 70,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1526:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313932",
														"id": 66,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1531:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_192_by_1",
															"typeString": "int_const 192"
														},
														"value": "192"
													},
													"src": "1526:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													}
												}
											],
											"id": 68,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1525:10:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
												"typeString": "int_const 6277...(50 digits omitted)...2896"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 69,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1538:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1525:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 74,
									"mutability": "constant",
									"name": "BITPOS_START_TIMESTAMP",
									"nameLocation": "1636:22:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "1611:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 72,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1611:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313630",
										"id": 73,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1661:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_160_by_1",
											"typeString": "int_const 160"
										},
										"value": "160"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 79,
									"mutability": "constant",
									"name": "BITMASK_BURNED",
									"nameLocation": "1757:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "1732:50:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 75,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1732:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										},
										"id": 78,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 76,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1774:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323234",
											"id": 77,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1779:3:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_224_by_1",
												"typeString": "int_const 224"
											},
											"value": "224"
										},
										"src": "1774:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 82,
									"mutability": "constant",
									"name": "BITPOS_NEXT_INITIALIZED",
									"nameLocation": "1888:23:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "1863:54:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 80,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1863:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323235",
										"id": 81,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1914:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_225_by_1",
											"typeString": "int_const 225"
										},
										"value": "225"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 87,
									"mutability": "constant",
									"name": "BITMASK_NEXT_INITIALIZED",
									"nameLocation": "2019:24:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "1994:60:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 83,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1994:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										},
										"id": 86,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 84,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2046:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323235",
											"id": 85,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2051:3:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_225_by_1",
												"typeString": "int_const 225"
											},
											"value": "225"
										},
										"src": "2046:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 90,
									"mutability": "constant",
									"name": "BITPOS_EXTRA_DATA",
									"nameLocation": "2146:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "2121:48:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 88,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2121:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323332",
										"id": 89,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2166:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_232_by_1",
											"typeString": "int_const 232"
										},
										"value": "232"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 98,
									"mutability": "constant",
									"name": "BITMASK_EXTRA_DATA_COMPLEMENT",
									"nameLocation": "2287:29:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "2262:71:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 91,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2262:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										},
										"id": 97,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 92,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2320:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "323332",
														"id": 93,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2325:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_232_by_1",
															"typeString": "int_const 232"
														},
														"value": "232"
													},
													"src": "2320:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													}
												}
											],
											"id": 95,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2319:10:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
												"typeString": "int_const 6901...(62 digits omitted)...9296"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 96,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2332:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2319:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 106,
									"mutability": "constant",
									"name": "BITMASK_ADDRESS",
									"nameLocation": "2418:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "2393:57:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 99,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2393:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										},
										"id": 105,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 100,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2437:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313630",
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2442:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160_by_1",
															"typeString": "int_const 160"
														},
														"value": "160"
													},
													"src": "2437:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													}
												}
											],
											"id": 103,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2436:10:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
												"typeString": "int_const 1461...(41 digits omitted)...2976"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 104,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2449:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2436:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 109,
									"mutability": "constant",
									"name": "MAX_MINT_ERC2309_QUANTITY_LIMIT",
									"nameLocation": "2758:31:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "2733:63:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 107,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2733:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35303030",
										"id": 108,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2792:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "5000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 111,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "2870:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "2854:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 110,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2854:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 113,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "2942:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "2926:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 112,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2926:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 115,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "2994:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "2979:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 114,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2979:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 117,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "3041:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "3026:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 116,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3026:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 121,
									"mutability": "mutable",
									"name": "_packedOwnerships",
									"nameLocation": "3468:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "3432:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 120,
										"keyType": {
											"id": 118,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3440:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3432:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 119,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3451:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 125,
									"mutability": "mutable",
									"name": "_packedAddressData",
									"nameLocation": "3727:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "3691:54:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 124,
										"keyType": {
											"id": 122,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3699:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3691:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 123,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3710:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 129,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "3838:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "3802:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 128,
										"keyType": {
											"id": 126,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3810:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3802:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 127,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3821:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 135,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "3961:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "3908:71:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 134,
										"keyType": {
											"id": 130,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3916:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3908:44:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 133,
											"keyType": {
												"id": 131,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3935:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "3927:24:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 132,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "3946:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "4042:98:1",
										"statements": [
											{
												"expression": {
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 142,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "4052:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 143,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "4060:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "4052:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4052:13:1"
											},
											{
												"expression": {
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 146,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "4075:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 147,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "4085:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "4075:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "4075:17:1"
											},
											{
												"expression": {
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 150,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "4102:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 151,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "4118:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4118:15:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4102:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "4102:31:1"
											}
										]
									},
									"id": 156,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "4012:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "3998:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 136,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3998:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "4033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "4019:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 138,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4019:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3997:44:1"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4042:0:1"
									},
									"scope": 1664,
									"src": "3986:154:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "4341:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4358:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 161,
												"id": 163,
												"nodeType": "Return",
												"src": "4351:8:1"
											}
										]
									},
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "4146:125:1",
										"text": " @dev Returns the starting token ID.\n To change the starting token ID, please override this function."
									},
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "4285:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4298:2:1"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "4332:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4332:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4331:9:1"
									},
									"scope": 1664,
									"src": "4276:90:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "4496:37:1",
										"statements": [
											{
												"expression": {
													"id": 171,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 111,
													"src": "4513:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 170,
												"id": 172,
												"nodeType": "Return",
												"src": "4506:20:1"
											}
										]
									},
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "4372:63:1",
										"text": " @dev Returns the next token ID to be minted."
									},
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextTokenId",
									"nameLocation": "4449:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4461:2:1"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "4487:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4487:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4486:9:1"
									},
									"scope": 1664,
									"src": "4440:93:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1724
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "4798:247:1",
										"statements": [
											{
												"id": 188,
												"nodeType": "UncheckedBlock",
												"src": "4951:88:1",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 181,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "4982:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 182,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "4998:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4982:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 184,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "5013:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5013:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4982:46:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 180,
														"id": 187,
														"nodeType": "Return",
														"src": "4975:53:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "4539:192:1",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see `_totalMinted`."
									},
									"functionSelector": "18160ddd",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "4745:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 177,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4771:8:1"
									},
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4756:2:1"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "4789:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4789:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4788:9:1"
									},
									"scope": 1664,
									"src": "4736:309:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "5194:223:1",
										"statements": [
											{
												"id": 201,
												"nodeType": "UncheckedBlock",
												"src": "5338:73:1",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 196,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "5369:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 197,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "5385:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5385:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5369:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 195,
														"id": 200,
														"nodeType": "Return",
														"src": "5362:38:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5051:82:1",
										"text": " @dev Returns the total amount of tokens minted in the contract."
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "5147:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5159:2:1"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "5185:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5185:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5184:9:1"
									},
									"scope": 1664,
									"src": "5138:279:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "5550:36:1",
										"statements": [
											{
												"expression": {
													"id": 209,
													"name": "_burnCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 113,
													"src": "5567:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 208,
												"id": 210,
												"nodeType": "Return",
												"src": "5560:19:1"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "5423:66:1",
										"text": " @dev Returns the total number of tokens burned."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalBurned",
									"nameLocation": "5503:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5515:2:1"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5541:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5541:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5540:9:1"
									},
									"scope": 1664,
									"src": "5494:92:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1732
									],
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "5744:516:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 227,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 221,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "6033:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783031666663396137",
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6048:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33540519_by_1",
																	"typeString": "int_const 33540519"
																},
																"value": "0x01ffc9a7"
															},
															"src": "6033:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 224,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "6109:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783830616335386364",
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6124:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2158778573_by_1",
																	"typeString": "int_const 2158778573"
																},
																"value": "0x80ac58cd"
															},
															"src": "6109:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6033:101:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 228,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "6185:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30783562356531333966",
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6200:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1532892063_by_1",
																"typeString": "int_const 1532892063"
															},
															"value": "0x5b5e139f"
														},
														"src": "6185:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6033:177:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 220,
												"id": 232,
												"nodeType": "Return",
												"src": "6014:196:1"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "5592:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "5662:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 217,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5720:8:1"
									},
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "5687:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "5680:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 214,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "5680:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5679:20:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "5738:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 218,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5738:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5737:6:1"
									},
									"scope": 1664,
									"src": "5653:607:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1767
									],
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "6392:148:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 243,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "6406:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6423:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6415:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 244,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6415:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6415:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6406:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 252,
												"nodeType": "IfStatement",
												"src": "6402:60:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 249,
															"name": "BalanceQueryForZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1679,
															"src": "6434:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6434:28:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 251,
													"nodeType": "RevertStatement",
													"src": "6427:35:1"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 253,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "6479:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 255,
														"indexExpression": {
															"id": 254,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "6498:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6479:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 256,
														"name": "BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "6507:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6479:54:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 242,
												"id": 258,
												"nodeType": "Return",
												"src": "6472:61:1"
											}
										]
									},
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "6266:48:1",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "6328:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 239,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6365:8:1"
									},
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6346:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "6338:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6338:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6337:15:1"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "6383:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6383:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6382:9:1"
									},
									"scope": 1664,
									"src": "6319:221:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "6687:104:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 268,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 125,
																		"src": "6705:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 270,
																	"indexExpression": {
																		"id": 269,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 263,
																		"src": "6724:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6705:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 271,
																	"name": "BITPOS_NUMBER_MINTED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 57,
																	"src": "6734:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6705:49:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 273,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6704:51:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 274,
														"name": "BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "6758:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6704:80:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 267,
												"id": 276,
												"nodeType": "Return",
												"src": "6697:87:1"
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "6546:66:1",
										"text": " Returns the number of tokens minted by `owner`."
									},
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "6626:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6648:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "6640:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6640:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6639:15:1"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "6678:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6678:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6677:9:1"
									},
									"scope": 1664,
									"src": "6617:174:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "6954:104:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 286,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 125,
																		"src": "6972:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 288,
																	"indexExpression": {
																		"id": 287,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "6991:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6972:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 289,
																	"name": "BITPOS_NUMBER_BURNED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "7001:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6972:49:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 291,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6971:51:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 292,
														"name": "BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "7025:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6971:80:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 285,
												"id": 294,
												"nodeType": "Return",
												"src": "6964:87:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "6797:82:1",
										"text": " Returns the number of tokens burned by or on behalf of `owner`."
									},
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "6893:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6915:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "6907:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6907:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6906:15:1"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "6945:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6945:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6944:9:1"
									},
									"scope": 1664,
									"src": "6884:174:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "7234:71:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 306,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 125,
																	"src": "7258:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 308,
																"indexExpression": {
																	"id": 307,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 299,
																	"src": "7277:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7258:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 309,
																"name": "BITPOS_AUX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "7287:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7258:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 305,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7251:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 304,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "7251:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7251:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 303,
												"id": 312,
												"nodeType": "Return",
												"src": "7244:54:1"
											}
										]
									},
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "7064:102:1",
										"text": " Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used)."
									},
									"id": 314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "7180:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7196:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "7188:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7188:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7187:15:1"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "7226:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 301,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "7226:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7225:8:1"
									},
									"scope": 1664,
									"src": "7171:134:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "7540:332:1",
										"statements": [
											{
												"assignments": [
													323
												],
												"declarations": [
													{
														"constant": false,
														"id": 323,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "7558:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 350,
														"src": "7550:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 322,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7550:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 327,
												"initialValue": {
													"baseExpression": {
														"id": 324,
														"name": "_packedAddressData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "7567:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 326,
													"indexExpression": {
														"id": 325,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "7586:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7567:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7550:42:1"
											},
											{
												"assignments": [
													329
												],
												"declarations": [
													{
														"constant": false,
														"id": 329,
														"mutability": "mutable",
														"name": "auxCasted",
														"nameLocation": "7610:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 350,
														"src": "7602:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 328,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7602:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 330,
												"nodeType": "VariableDeclarationStatement",
												"src": "7602:17:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7702:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7716:16:1",
															"value": {
																"name": "aux",
																"nodeType": "YulIdentifier",
																"src": "7729:3:1"
															},
															"variableNames": [
																{
																	"name": "auxCasted",
																	"nodeType": "YulIdentifier",
																	"src": "7716:9:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 319,
														"isOffset": false,
														"isSlot": false,
														"src": "7729:3:1",
														"valueSize": 1
													},
													{
														"declaration": 329,
														"isOffset": false,
														"isSlot": false,
														"src": "7716:9:1",
														"valueSize": 1
													}
												],
												"id": 331,
												"nodeType": "InlineAssembly",
												"src": "7693:49:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 332,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "7751:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 333,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 323,
																		"src": "7761:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 334,
																		"name": "BITMASK_AUX_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 71,
																		"src": "7770:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7761:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 336,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7760:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 337,
																		"name": "auxCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 329,
																		"src": "7797:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 338,
																		"name": "BITPOS_AUX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 63,
																		"src": "7810:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7797:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 340,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7796:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7760:61:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7751:70:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "7751:70:1"
											},
											{
												"expression": {
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 344,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "7831:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 346,
														"indexExpression": {
															"id": 345,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "7850:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7831:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 347,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "7859:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7831:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 349,
												"nodeType": "ExpressionStatement",
												"src": "7831:34:1"
											}
										]
									},
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "7311:171:1",
										"text": " Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."
									},
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "7496:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7512:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "7504:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7504:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "7526:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "7519:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 318,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "7519:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7503:27:1"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7540:0:1"
									},
									"scope": 1664,
									"src": "7487:385:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 404,
										"nodeType": "Block",
										"src": "8025:1029:1",
										"statements": [
											{
												"assignments": [
													360
												],
												"declarations": [
													{
														"constant": false,
														"id": 360,
														"mutability": "mutable",
														"name": "curr",
														"nameLocation": "8043:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 404,
														"src": "8035:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 359,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8035:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 362,
												"initialValue": {
													"id": 361,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 354,
													"src": "8050:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8035:22:1"
											},
											{
												"id": 400,
												"nodeType": "UncheckedBlock",
												"src": "8068:932:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 363,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "8096:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8096:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 365,
																"name": "curr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 360,
																"src": "8115:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8096:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 399,
														"nodeType": "IfStatement",
														"src": "8092:898:1",
														"trueBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 367,
																	"name": "curr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "8141:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 368,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "8148:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8141:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 398,
															"nodeType": "IfStatement",
															"src": "8137:853:1",
															"trueBody": {
																"id": 397,
																"nodeType": "Block",
																"src": "8163:827:1",
																"statements": [
																	{
																		"assignments": [
																			371
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 371,
																				"mutability": "mutable",
																				"name": "packed",
																				"nameLocation": "8193:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 397,
																				"src": "8185:14:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 370,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "8185:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 375,
																		"initialValue": {
																			"baseExpression": {
																				"id": 372,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 121,
																				"src": "8202:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 374,
																			"indexExpression": {
																				"id": 373,
																				"name": "curr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 360,
																				"src": "8220:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8202:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "8185:40:1"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 380,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 378,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 376,
																					"name": "packed",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 371,
																					"src": "8289:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&",
																				"rightExpression": {
																					"id": 377,
																					"name": "BITMASK_BURNED",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 79,
																					"src": "8298:14:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8289:23:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 379,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8316:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "8289:28:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 396,
																		"nodeType": "IfStatement",
																		"src": "8285:687:1",
																		"trueBody": {
																			"id": 395,
																			"nodeType": "Block",
																			"src": "8319:653:1",
																			"statements": [
																				{
																					"body": {
																						"id": 391,
																						"nodeType": "Block",
																						"src": "8820:91:1",
																						"statements": [
																							{
																								"expression": {
																									"id": 389,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 384,
																										"name": "packed",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 371,
																										"src": "8850:6:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"baseExpression": {
																											"id": 385,
																											"name": "_packedOwnerships",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 121,
																											"src": "8859:17:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																												"typeString": "mapping(uint256 => uint256)"
																											}
																										},
																										"id": 388,
																										"indexExpression": {
																											"id": 387,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "UnaryOperation",
																											"operator": "--",
																											"prefix": true,
																											"src": "8877:6:1",
																											"subExpression": {
																												"id": 386,
																												"name": "curr",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 360,
																												"src": "8879:4:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "8859:25:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "8850:34:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 390,
																								"nodeType": "ExpressionStatement",
																								"src": "8850:34:1"
																							}
																						]
																					},
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 383,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 381,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 371,
																							"src": "8807:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 382,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "8817:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "8807:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 392,
																					"nodeType": "WhileStatement",
																					"src": "8800:111:1"
																				},
																				{
																					"expression": {
																						"id": 393,
																						"name": "packed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 371,
																						"src": "8943:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"functionReturnParameters": 358,
																					"id": 394,
																					"nodeType": "Return",
																					"src": "8936:13:1"
																				}
																			]
																		}
																	}
																]
															}
														}
													}
												]
											},
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 401,
														"name": "OwnerQueryForNonexistentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1688,
														"src": "9016:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9016:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 403,
												"nodeType": "RevertStatement",
												"src": "9009:38:1"
											}
										]
									},
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "7878:66:1",
										"text": " Returns the packed ownership data of `tokenId`."
									},
									"id": 405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packedOwnershipOf",
									"nameLocation": "7958:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7985:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "7977:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7977:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7976:17:1"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "8016:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8015:9:1"
									},
									"scope": 1664,
									"src": "7949:1105:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "9242:259:1",
										"statements": [
											{
												"expression": {
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 414,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "9252:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1718_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 416,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1711,
														"src": "9252:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 421,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 408,
																		"src": "9285:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9277:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 419,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "9277:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9269:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 417,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9269:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9269:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9252:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "9252:41:1"
											},
											{
												"expression": {
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 426,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "9303:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1718_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 428,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1713,
														"src": "9303:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 431,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 408,
																	"src": "9337:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 432,
																	"name": "BITPOS_START_TIMESTAMP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 74,
																	"src": "9347:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9337:32:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9330:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 429,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "9330:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9330:40:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "9303:67:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "9303:67:1"
											},
											{
												"expression": {
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 437,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "9380:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1718_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 439,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "burned",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1715,
														"src": "9380:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 440,
																"name": "packed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 408,
																"src": "9399:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 441,
																"name": "BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "9408:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9399:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9426:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9399:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9380:47:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "9380:47:1"
											},
											{
												"expression": {
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 447,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "9437:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1718_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "extraData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1717,
														"src": "9437:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 452,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 408,
																	"src": "9466:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 453,
																	"name": "BITPOS_EXTRA_DATA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 90,
																	"src": "9476:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9466:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9459:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint24_$",
																"typeString": "type(uint24)"
															},
															"typeName": {
																"id": 450,
																"name": "uint24",
																"nodeType": "ElementaryTypeName",
																"src": "9459:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9459:35:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "9437:57:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "9437:57:1"
											}
										]
									},
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "9060:78:1",
										"text": " Returns the unpacked `TokenOwnership` struct from `packed`."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unpackedOwnership",
									"nameLocation": "9152:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "9179:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "9171:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9171:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9170:16:1"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "ownership",
												"nameLocation": "9231:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "9209:31:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1718_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 411,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 410,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1718,
														"src": "9209:14:1"
													},
													"referencedDeclaration": 1718,
													"src": "9209:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1718_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9208:33:1"
									},
									"scope": 1664,
									"src": "9143:358:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "9670:68:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 469,
																"name": "_packedOwnerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "9706:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 471,
															"indexExpression": {
																"id": 470,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "9724:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9706:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 468,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "9687:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$1718_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9687:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1718_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 467,
												"id": 473,
												"nodeType": "Return",
												"src": "9680:51:1"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "9507:75:1",
										"text": " Returns the unpacked `TokenOwnership` struct at `index`."
									},
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipAt",
									"nameLocation": "9596:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9617:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "9609:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9609:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9608:15:1"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "9647:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1718_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 465,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 464,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1718,
														"src": "9647:14:1"
													},
													"referencedDeclaration": 1718,
													"src": "9647:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1718_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9646:23:1"
									},
									"scope": 1664,
									"src": "9587:151:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "9902:128:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 481,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 121,
															"src": "9916:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 483,
														"indexExpression": {
															"id": 482,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "9934:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9916:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 484,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9944:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9916:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 495,
												"nodeType": "IfStatement",
												"src": "9912:112:1",
												"trueBody": {
													"id": 494,
													"nodeType": "Block",
													"src": "9947:77:1",
													"statements": [
														{
															"expression": {
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 486,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 121,
																		"src": "9961:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 488,
																	"indexExpression": {
																		"id": 487,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "9979:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9961:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 490,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 478,
																			"src": "10007:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 489,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "9988:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9988:25:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9961:52:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 493,
															"nodeType": "ExpressionStatement",
															"src": "9961:52:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "9744:97:1",
										"text": " @dev Initializes the ownership slot minted at `index` for efficiency purposes."
									},
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializeOwnershipAt",
									"nameLocation": "9855:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9886:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "9878:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9877:15:1"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9902:0:1"
									},
									"scope": 1664,
									"src": "9846:184:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "10311:71:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 508,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 500,
																	"src": "10366:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 507,
																"name": "_packedOwnershipOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "10347:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10347:27:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "10328:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$1718_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10328:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1718_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 505,
												"id": 511,
												"nodeType": "Return",
												"src": "10321:54:1"
											}
										]
									},
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "10036:185:1",
										"text": " Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around in the collection over time."
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipOf",
									"nameLocation": "10235:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10256:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "10248:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10248:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10247:17:1"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "10288:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1718_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 503,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 502,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1718,
														"src": "10288:14:1"
													},
													"referencedDeclaration": 1718,
													"src": "10288:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1718_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10287:23:1"
									},
									"scope": 1664,
									"src": "10226:156:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "10556:344:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "10575:319:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10685:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "10698:5:1"
																	},
																	{
																		"name": "BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "10705:15:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10694:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10694:27:1"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "10685:5:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10812:72:1",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "10825:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "BITPOS_START_TIMESTAMP",
																						"nodeType": "YulIdentifier",
																						"src": "10839:22:1"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "timestamp",
																							"nodeType": "YulIdentifier",
																							"src": "10863:9:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10863:11:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "10835:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10835:40:1"
																			},
																			{
																				"name": "flags",
																				"nodeType": "YulIdentifier",
																				"src": "10877:5:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "10832:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10832:51:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "10822:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10822:62:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "10812:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 106,
														"isOffset": false,
														"isSlot": false,
														"src": "10705:15:1",
														"valueSize": 1
													},
													{
														"declaration": 74,
														"isOffset": false,
														"isSlot": false,
														"src": "10839:22:1",
														"valueSize": 1
													},
													{
														"declaration": 518,
														"isOffset": false,
														"isSlot": false,
														"src": "10877:5:1",
														"valueSize": 1
													},
													{
														"declaration": 516,
														"isOffset": false,
														"isSlot": false,
														"src": "10685:5:1",
														"valueSize": 1
													},
													{
														"declaration": 516,
														"isOffset": false,
														"isSlot": false,
														"src": "10698:5:1",
														"valueSize": 1
													},
													{
														"declaration": 516,
														"isOffset": false,
														"isSlot": false,
														"src": "10825:5:1",
														"valueSize": 1
													},
													{
														"declaration": 521,
														"isOffset": false,
														"isSlot": false,
														"src": "10812:6:1",
														"valueSize": 1
													}
												],
												"id": 523,
												"nodeType": "InlineAssembly",
												"src": "10566:328:1"
											}
										]
									},
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "10388:67:1",
										"text": " @dev Packs ownership data into a single uint256."
									},
									"id": 525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packOwnershipData",
									"nameLocation": "10469:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10496:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "10488:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10488:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "flags",
												"nameLocation": "10511:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "10503:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10503:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10487:30:1"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "10548:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "10540:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10540:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10539:16:1"
									},
									"scope": 1664,
									"src": "10460:440:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1775
									],
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "11030:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 539,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 528,
																			"src": "11082:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 538,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "11063:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11063:27:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11055:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 536,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "11055:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11055:36:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 535,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11047:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 534,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11047:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11047:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 533,
												"id": 543,
												"nodeType": "Return",
												"src": "11040:52:1"
											}
										]
									},
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "10906:46:1",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "10966:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 530,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11003:8:1"
									},
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10982:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "10974:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10974:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10973:17:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "11021:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11021:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11020:9:1"
									},
									"scope": 1664,
									"src": "10957:142:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1847
									],
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "11230:29:1",
										"statements": [
											{
												"expression": {
													"id": 552,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 115,
													"src": "11247:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 551,
												"id": 553,
												"nodeType": "Return",
												"src": "11240:12:1"
											}
										]
									},
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "11105:51:1",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "11170:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 548,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11197:8:1"
									},
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11174:2:1"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "11215:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 549,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11215:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11214:15:1"
									},
									"scope": 1664,
									"src": "11161:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1853
									],
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "11394:31:1",
										"statements": [
											{
												"expression": {
													"id": 562,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 117,
													"src": "11411:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 561,
												"id": 563,
												"nodeType": "Return",
												"src": "11404:14:1"
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "11265:53:1",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "11332:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 558,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11361:8:1"
									},
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11338:2:1"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "11379:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 559,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11379:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11378:15:1"
									},
									"scope": 1664,
									"src": "11323:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1861
									],
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "11579:225:1",
										"statements": [
											{
												"condition": {
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "11593:17:1",
													"subExpression": {
														"arguments": [
															{
																"id": 575,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 568,
																"src": "11602:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 574,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "11594:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11594:16:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 581,
												"nodeType": "IfStatement",
												"src": "11589:59:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 578,
															"name": "URIQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1703,
															"src": "11619:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11619:29:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 580,
													"nodeType": "RevertStatement",
													"src": "11612:36:1"
												}
											},
											{
												"assignments": [
													583
												],
												"declarations": [
													{
														"constant": false,
														"id": 583,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "11673:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 607,
														"src": "11659:21:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 582,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "11659:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 586,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 584,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 617,
														"src": "11683:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11683:10:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11659:34:1"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 589,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 583,
																		"src": "11716:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11710:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 587,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "11710:5:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11710:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "11710:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11735:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "11710:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11795:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11710:87:1",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 598,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 583,
																		"src": "11763:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 600,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 568,
																				"src": "11782:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 599,
																			"name": "_toString",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1663,
																			"src": "11772:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11772:18:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 596,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "11746:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "11746:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11746:45:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11739:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 594,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "11739:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 603,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11739:53:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 573,
												"id": 606,
												"nodeType": "Return",
												"src": "11703:94:1"
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "11431:55:1",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "11500:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 570,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11546:8:1"
									},
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "11509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11509:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11508:17:1"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "11564:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 571,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11564:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11563:15:1"
									},
									"scope": 1664,
									"src": "11491:313:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 616,
										"nodeType": "Block",
										"src": "12115:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12132:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 613,
												"id": 615,
												"nodeType": "Return",
												"src": "12125:9:1"
											}
										]
									},
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "11810:234:1",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, it can be overridden in child contracts."
									},
									"id": 617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "12058:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12066:2:1"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "12100:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 611,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12100:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12099:15:1"
									},
									"scope": 1664,
									"src": "12049:92:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "12324:230:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "12408:140:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12483:55:1",
															"value": {
																"arguments": [
																	{
																		"name": "BITPOS_NEXT_INITIALIZED",
																		"nodeType": "YulIdentifier",
																		"src": "12497:23:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "quantity",
																				"nodeType": "YulIdentifier",
																				"src": "12525:8:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12535:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12522:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12522:15:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "12493:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12493:45:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12483:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 82,
														"isOffset": false,
														"isSlot": false,
														"src": "12497:23:1",
														"valueSize": 1
													},
													{
														"declaration": 620,
														"isOffset": false,
														"isSlot": false,
														"src": "12525:8:1",
														"valueSize": 1
													},
													{
														"declaration": 623,
														"isOffset": false,
														"isSlot": false,
														"src": "12483:6:1",
														"valueSize": 1
													}
												],
												"id": 625,
												"nodeType": "InlineAssembly",
												"src": "12399:149:1"
											}
										]
									},
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "12147:86:1",
										"text": " @dev Returns the `nextInitialized` flag set if `quantity` equals 1."
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextInitializedFlag",
									"nameLocation": "12247:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "12276:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "12268:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12268:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12267:18:1"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "12316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "12308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12307:16:1"
									},
									"scope": 1664,
									"src": "12238:316:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1815
									],
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "12673:314:1",
										"statements": [
											{
												"assignments": [
													637
												],
												"declarations": [
													{
														"constant": false,
														"id": 637,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "12691:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 670,
														"src": "12683:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 636,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12683:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 641,
												"initialValue": {
													"arguments": [
														{
															"id": 639,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "12707:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 638,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "12699:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12699:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12683:32:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 642,
															"name": "_msgSenderERC721A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1653,
															"src": "12730:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12730:19:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 644,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "12753:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12730:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 657,
												"nodeType": "IfStatement",
												"src": "12726:172:1",
												"trueBody": {
													"condition": {
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "12776:45:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 647,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "12794:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 648,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1653,
																		"src": "12801:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12801:19:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 646,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 745,
																"src": "12777:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12777:44:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 656,
													"nodeType": "IfStatement",
													"src": "12772:126:1",
													"trueBody": {
														"id": 655,
														"nodeType": "Block",
														"src": "12823:75:1",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 652,
																		"name": "ApprovalCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1670,
																		"src": "12848:33:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12848:35:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 654,
																"nodeType": "RevertStatement",
																"src": "12841:42:1"
															}
														]
													}
												}
											},
											{
												"expression": {
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 658,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "12908:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 660,
														"indexExpression": {
															"id": 659,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "12924:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12908:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 661,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "12935:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12908:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 663,
												"nodeType": "ExpressionStatement",
												"src": "12908:29:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 665,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "12961:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "12968:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 667,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "12972:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 664,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1750,
														"src": "12952:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12952:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "EmitStatement",
												"src": "12947:33:1"
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "12560:46:1",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "12620:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 634,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12664:8:1"
									},
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12636:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "12628:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12628:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12648:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "12640:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12640:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12627:29:1"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12673:0:1"
									},
									"scope": 1664,
									"src": "12611:376:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1831
									],
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "13125:123:1",
										"statements": [
											{
												"condition": {
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "13139:17:1",
													"subExpression": {
														"arguments": [
															{
																"id": 681,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "13148:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 680,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "13140:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 682,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13140:16:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 687,
												"nodeType": "IfStatement",
												"src": "13135:64:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 684,
															"name": "ApprovalQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1673,
															"src": "13165:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13165:34:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 686,
													"nodeType": "RevertStatement",
													"src": "13158:41:1"
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 688,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "13217:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 690,
													"indexExpression": {
														"id": 689,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "13233:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13217:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 679,
												"id": 691,
												"nodeType": "Return",
												"src": "13210:31:1"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "12993:50:1",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "13057:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 676,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13098:8:1"
									},
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13077:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "13069:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13068:17:1"
									},
									"returnParameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "13116:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13115:9:1"
									},
									"scope": 1664,
									"src": "13048:200:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1823
									],
									"body": {
										"id": 726,
										"nodeType": "Block",
										"src": "13399:219:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "13413:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 703,
															"name": "_msgSenderERC721A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1653,
															"src": "13425:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 704,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13425:19:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13413:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 709,
												"nodeType": "IfStatement",
												"src": "13409:61:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 706,
															"name": "ApproveToCaller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1676,
															"src": "13453:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13453:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 708,
													"nodeType": "RevertStatement",
													"src": "13446:24:1"
												}
											},
											{
												"expression": {
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 710,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "13481:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 714,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 711,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1653,
																	"src": "13500:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13500:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13481:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 715,
														"indexExpression": {
															"id": 713,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "13521:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13481:49:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 716,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "13533:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13481:60:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "13481:60:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 720,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1653,
																"src": "13571:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13571:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 722,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "13592:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 723,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 698,
															"src": "13602:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 719,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1759,
														"src": "13556:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13556:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 725,
												"nodeType": "EmitStatement",
												"src": "13551:60:1"
											}
										]
									},
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "13254:56:1",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "13324:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 700,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13390:8:1"
									},
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13350:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "13342:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13342:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13365:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "13360:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 697,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13360:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13341:33:1"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13399:0:1"
									},
									"scope": 1664,
									"src": "13315:303:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1841
									],
									"body": {
										"id": 744,
										"nodeType": "Block",
										"src": "13787:59:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 738,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 135,
															"src": "13804:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 740,
														"indexExpression": {
															"id": 739,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "13823:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13804:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 742,
													"indexExpression": {
														"id": 741,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "13830:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13804:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 737,
												"id": 743,
												"nodeType": "Return",
												"src": "13797:42:1"
											}
										]
									},
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "13624:55:1",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "13693:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 734,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13763:8:1"
									},
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13718:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "13710:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13710:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13733:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "13725:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13709:33:1"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "13781:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 735,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13781:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13780:6:1"
									},
									"scope": 1664,
									"src": "13684:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1797
									],
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "14035:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 757,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "14062:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 758,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "14068:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 759,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "14072:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14081:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 756,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															764,
															802
														],
														"referencedDeclaration": 802,
														"src": "14045:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14045:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "14045:39:1"
											}
										]
									},
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "13852:55:1",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "13921:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 754,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14026:8:1"
									},
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13955:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "13947:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13947:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13977:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "13969:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13969:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13997:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "13989:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13989:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13937:73:1"
									},
									"returnParameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14035:0:1"
									},
									"scope": 1664,
									"src": "13912:179:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1787
									],
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "14308:237:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 778,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "14331:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 779,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "14337:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 780,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "14341:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 777,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1308,
														"src": "14318:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14318:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 782,
												"nodeType": "ExpressionStatement",
												"src": "14318:31:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 783,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "14363:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "14363:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 785,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "14363:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 786,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14381:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14363:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 800,
												"nodeType": "IfStatement",
												"src": "14359:180:1",
												"trueBody": {
													"condition": {
														"id": 794,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "14400:57:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 789,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "14432:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 790,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 769,
																	"src": "14438:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 791,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 771,
																	"src": "14442:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 792,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "14451:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 788,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1527,
																"src": "14401:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14401:56:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 799,
													"nodeType": "IfStatement",
													"src": "14396:143:1",
													"trueBody": {
														"id": 798,
														"nodeType": "Block",
														"src": "14459:80:1",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 795,
																		"name": "TransferToNonERC721ReceiverImplementer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1697,
																		"src": "14484:38:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14484:40:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 797,
																"nodeType": "RevertStatement",
																"src": "14477:47:1"
															}
														]
													}
												}
											}
										]
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "14097:55:1",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "14166:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 775,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14299:8:1"
									},
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14200:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "14192:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14192:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14222:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "14214:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14214:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14242:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "14234:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14234:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "14272:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "14259:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 772,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14259:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14182:101:1"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14308:0:1"
									},
									"scope": 1664,
									"src": "14157:388:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "14854:205:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 810,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "14883:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14883:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 812,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "14902:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14883:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 814,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "14925:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 815,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "14935:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14925:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "14883:65:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 818,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "14985:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 820,
																"indexExpression": {
																	"id": 819,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "15003:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14985:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 821,
																"name": "BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "15014:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14985:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15032:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "14985:48:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14883:150:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 809,
												"id": 826,
												"nodeType": "Return",
												"src": "14864:169:1"
											}
										]
									},
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "14551:235:1",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),"
									},
									"id": 828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "14800:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14816:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "14808:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14808:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14807:17:1"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "14848:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 807,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14848:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14847:6:1"
									},
									"scope": 1664,
									"src": "14791:268:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "15196:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 837,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "15216:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 838,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "15220:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15230:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 836,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															843,
															905
														],
														"referencedDeclaration": 905,
														"src": "15206:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15206:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 841,
												"nodeType": "ExpressionStatement",
												"src": "15206:27:1"
											}
										]
									},
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "15065:68:1",
										"text": " @dev Equivalent to `_safeMint(to, quantity, '')`."
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "15147:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15165:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "15157:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15157:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "15177:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "15169:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15169:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15156:30:1"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15196:0:1"
									},
									"scope": 1664,
									"src": "15138:102:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "15749:553:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 854,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "15765:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "15769:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 853,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "15759:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15759:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "15759:19:1"
											},
											{
												"id": 903,
												"nodeType": "UncheckedBlock",
												"src": "15789:507:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 858,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 846,
																		"src": "15817:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "15817:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "15817:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15835:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15817:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 902,
														"nodeType": "IfStatement",
														"src": "15813:473:1",
														"trueBody": {
															"id": 901,
															"nodeType": "Block",
															"src": "15838:448:1",
															"statements": [
																{
																	"assignments": [
																		864
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 864,
																			"mutability": "mutable",
																			"name": "end",
																			"nameLocation": "15864:3:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 901,
																			"src": "15856:11:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 863,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "15856:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 866,
																	"initialValue": {
																		"id": 865,
																		"name": "_currentIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 111,
																		"src": "15870:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "15856:27:1"
																},
																{
																	"assignments": [
																		868
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 868,
																			"mutability": "mutable",
																			"name": "index",
																			"nameLocation": "15909:5:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 901,
																			"src": "15901:13:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 867,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "15901:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 872,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 869,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 864,
																			"src": "15917:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 870,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 848,
																			"src": "15923:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15917:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "15901:30:1"
																},
																{
																	"body": {
																		"id": 889,
																		"nodeType": "Block",
																		"src": "15952:205:1",
																		"statements": [
																			{
																				"condition": {
																					"id": 883,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "15978:63:1",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 876,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "16018:1:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 875,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "16010:7:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 874,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "16010:7:1",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 877,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16010:10:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 878,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 846,
																								"src": "16022:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 880,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "16026:7:1",
																								"subExpression": {
																									"id": 879,
																									"name": "index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 868,
																									"src": "16026:5:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 881,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 850,
																								"src": "16035:5:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 873,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1527,
																							"src": "15979:30:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 882,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "15979:62:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 888,
																				"nodeType": "IfStatement",
																				"src": "15974:165:1",
																				"trueBody": {
																					"id": 887,
																					"nodeType": "Block",
																					"src": "16043:96:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 884,
																									"name": "TransferToNonERC721ReceiverImplementer",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1697,
																									"src": "16076:38:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$__$returns$__$",
																										"typeString": "function () pure"
																									}
																								},
																								"id": 885,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16076:40:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 886,
																							"nodeType": "RevertStatement",
																							"src": "16069:47:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 890,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 868,
																			"src": "16165:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 891,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 864,
																			"src": "16173:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16165:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 893,
																	"nodeType": "DoWhileStatement",
																	"src": "15949:229:1"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 894,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 111,
																			"src": "16241:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 895,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 864,
																			"src": "16258:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16241:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 900,
																	"nodeType": "IfStatement",
																	"src": "16237:34:1",
																	"trueBody": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 897,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "16263:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16263:8:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 899,
																		"nodeType": "ExpressionStatement",
																		"src": "16263:8:1"
																	}
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "15246:390:1",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n   {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n See {_mint}.\n Emits a {Transfer} event for each mint."
									},
									"id": 905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "15650:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15677:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "15669:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "15697:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "15689:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15689:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "15728:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "15715:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 849,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15715:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15659:80:1"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15749:0:1"
									},
									"scope": 1664,
									"src": "15641:661:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "16617:1438:1",
										"statements": [
											{
												"assignments": [
													914
												],
												"declarations": [
													{
														"constant": false,
														"id": 914,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "16635:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "16627:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 913,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16627:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 916,
												"initialValue": {
													"id": 915,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 111,
													"src": "16650:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16627:36:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 917,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "16677:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16691:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16683:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 918,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16683:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16683:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16677:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 926,
												"nodeType": "IfStatement",
												"src": "16673:48:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 923,
															"name": "MintToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1682,
															"src": "16702:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 924,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16702:19:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 925,
													"nodeType": "RevertStatement",
													"src": "16695:26:1"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 927,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "16735:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 928,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16747:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16735:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 933,
												"nodeType": "IfStatement",
												"src": "16731:44:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 930,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1685,
															"src": "16757:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16757:18:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 932,
													"nodeType": "RevertStatement",
													"src": "16750:25:1"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16816:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16808:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 935,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "16808:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16808:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 939,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "16820:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 940,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "16824:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 941,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "16838:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 934,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1630,
														"src": "16786:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16786:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "ExpressionStatement",
												"src": "16786:61:1"
											},
											{
												"id": 1007,
												"nodeType": "UncheckedBlock",
												"src": "17030:949:1",
												"statements": [
													{
														"expression": {
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 944,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 125,
																	"src": "17250:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 946,
																"indexExpression": {
																	"id": 945,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "17269:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "17250:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 947,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "17276:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 950,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 948,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "17289:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 949,
																							"name": "BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 57,
																							"src": "17294:20:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "17289:25:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 951,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "17288:27:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 952,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "17318:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "17288:31:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 954,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "17287:33:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17276:44:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17250:70:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 957,
														"nodeType": "ExpressionStatement",
														"src": "17250:70:1"
													},
													{
														"expression": {
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 958,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "17556:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 960,
																"indexExpression": {
																	"id": 959,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 914,
																	"src": "17574:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "17556:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 962,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 908,
																		"src": "17626:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 974,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 964,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "17667:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 963,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 627,
																				"src": "17646:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 965,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17646:30:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 969,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "17702:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 968,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "17694:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 967,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "17694:7:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 970,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17694:10:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 971,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 908,
																					"src": "17706:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 972,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "17710:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 966,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1604,
																				"src": "17679:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17679:33:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17646:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 961,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 525,
																	"src": "17590:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17590:136:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17556:170:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 977,
														"nodeType": "ExpressionStatement",
														"src": "17556:170:1"
													},
													{
														"assignments": [
															979
														],
														"declarations": [
															{
																"constant": false,
																"id": 979,
																"mutability": "mutable",
																"name": "tokenId",
																"nameLocation": "17749:7:1",
																"nodeType": "VariableDeclaration",
																"scope": 1007,
																"src": "17741:15:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 978,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17741:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 981,
														"initialValue": {
															"id": 980,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "17759:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "17741:30:1"
													},
													{
														"assignments": [
															983
														],
														"declarations": [
															{
																"constant": false,
																"id": 983,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "17793:3:1",
																"nodeType": "VariableDeclaration",
																"scope": 1007,
																"src": "17785:11:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 982,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17785:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 987,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 984,
																"name": "startTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "17799:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 985,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "17814:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17799:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "17785:37:1"
													},
													{
														"body": {
															"id": 998,
															"nodeType": "Block",
															"src": "17839:73:1",
															"statements": [
																{
																	"eventCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "30",
																						"id": 991,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17879:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						}
																					],
																					"id": 990,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "17871:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 989,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "17871:7:1",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 992,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "17871:10:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 993,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 908,
																				"src": "17883:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 995,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "++",
																				"prefix": false,
																				"src": "17887:9:1",
																				"subExpression": {
																					"id": 994,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 979,
																					"src": "17887:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 988,
																			"name": "Transfer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1741,
																			"src": "17862:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 996,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17862:35:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 997,
																	"nodeType": "EmitStatement",
																	"src": "17857:40:1"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 999,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 979,
																"src": "17920:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1000,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "17930:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17920:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1002,
														"nodeType": "DoWhileStatement",
														"src": "17836:99:1"
													},
													{
														"expression": {
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1003,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "17949:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1004,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "17965:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17949:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1006,
														"nodeType": "ExpressionStatement",
														"src": "17949:19:1"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18017:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18009:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1009,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18009:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18009:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1013,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "18021:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1014,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "18025:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1015,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "18039:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1008,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "17988:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17988:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1017,
												"nodeType": "ExpressionStatement",
												"src": "17988:60:1"
											}
										]
									},
									"documentation": {
										"id": 906,
										"nodeType": "StructuredDocumentation",
										"src": "16308:250:1",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event for each mint."
									},
									"id": 1019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "16572:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16586:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "16578:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16578:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "16598:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "16590:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16590:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16577:30:1"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16617:0:1"
									},
									"scope": 1664,
									"src": "16563:1492:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1130,
										"nodeType": "Block",
										"src": "18956:1372:1",
										"statements": [
											{
												"assignments": [
													1028
												],
												"declarations": [
													{
														"constant": false,
														"id": 1028,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "18974:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 1130,
														"src": "18966:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1027,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18966:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1030,
												"initialValue": {
													"id": 1029,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 111,
													"src": "18989:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18966:36:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1031,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "19016:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1034,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19030:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19022:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1032,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "19022:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1035,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19022:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19016:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1040,
												"nodeType": "IfStatement",
												"src": "19012:48:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1037,
															"name": "MintToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1682,
															"src": "19041:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1038,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19041:19:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1039,
													"nodeType": "RevertStatement",
													"src": "19034:26:1"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1041,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "19074:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1042,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19086:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19074:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1047,
												"nodeType": "IfStatement",
												"src": "19070:44:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1044,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1685,
															"src": "19096:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19096:18:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1046,
													"nodeType": "RevertStatement",
													"src": "19089:25:1"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1048,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "19128:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1049,
														"name": "MAX_MINT_ERC2309_QUANTITY_LIMIT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "19139:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19128:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1054,
												"nodeType": "IfStatement",
												"src": "19124:88:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1051,
															"name": "MintERC2309QuantityExceedsLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "19179:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1052,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19179:33:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1053,
													"nodeType": "RevertStatement",
													"src": "19172:40:1"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19253:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19245:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1056,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19245:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19245:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1060,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "19257:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1061,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "19261:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1062,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "19275:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1055,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1630,
														"src": "19223:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19223:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "19223:61:1"
											},
											{
												"id": 1119,
												"nodeType": "UncheckedBlock",
												"src": "19393:859:1",
												"statements": [
													{
														"expression": {
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1065,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 125,
																	"src": "19613:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1067,
																"indexExpression": {
																	"id": 1066,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1022,
																	"src": "19632:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "19613:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1068,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1024,
																	"src": "19639:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1071,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1069,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "19652:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1070,
																							"name": "BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 57,
																							"src": "19657:20:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "19652:25:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1072,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "19651:27:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1073,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19681:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "19651:31:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1075,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "19650:33:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19639:44:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19613:70:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1078,
														"nodeType": "ExpressionStatement",
														"src": "19613:70:1"
													},
													{
														"expression": {
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1079,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "19919:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1081,
																"indexExpression": {
																	"id": 1080,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1028,
																	"src": "19937:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "19919:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1083,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1022,
																		"src": "19989:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1085,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1024,
																					"src": "20030:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1084,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 627,
																				"src": "20009:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1086,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "20009:30:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1090,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "20065:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1089,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "20057:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1088,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "20057:7:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1091,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "20057:10:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1092,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1022,
																					"src": "20069:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1093,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "20073:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1087,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1604,
																				"src": "20042:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1094,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "20042:33:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "20009:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1082,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 525,
																	"src": "19953:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19953:136:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19919:170:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1098,
														"nodeType": "ExpressionStatement",
														"src": "19919:170:1"
													},
													{
														"eventCall": {
															"arguments": [
																{
																	"id": 1100,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1028,
																	"src": "20129:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1101,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1028,
																			"src": "20143:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1102,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1024,
																			"src": "20158:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "20143:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20169:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "20143:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20180:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "20172:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1106,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "20172:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20172:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1110,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1022,
																	"src": "20184:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1099,
																"name": "ConsecutiveTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1872,
																"src": "20109:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
																	"typeString": "function (uint256,uint256,address,address)"
																}
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20109:78:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1112,
														"nodeType": "EmitStatement",
														"src": "20104:83:1"
													},
													{
														"expression": {
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1113,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "20202:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1114,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1028,
																	"src": "20218:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1115,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1024,
																	"src": "20233:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20218:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20202:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1118,
														"nodeType": "ExpressionStatement",
														"src": "20202:39:1"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20290:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20282:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1121,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20282:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20282:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1125,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "20294:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1126,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "20298:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1127,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "20312:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1120,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "20261:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20261:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "20261:60:1"
											}
										]
									},
									"documentation": {
										"id": 1020,
										"nodeType": "StructuredDocumentation",
										"src": "18061:829:1",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n This function is intended for efficient minting only during contract creation.\n It emits only one {ConsecutiveTransfer} as defined in\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n instead of a sequence of {Transfer} event(s).\n Calling this function outside of contract creation WILL make your contract\n non-compliant with the ERC721 standard.\n For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n {ConsecutiveTransfer} event is only permissible during contract creation.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {ConsecutiveTransfer} event."
									},
									"id": 1131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintERC2309",
									"nameLocation": "18904:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "18925:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "18917:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18917:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "18937:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "18929:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18929:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18916:30:1"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18956:0:1"
									},
									"scope": 1664,
									"src": "18895:1433:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1148,
										"nodeType": "Block",
										"src": "20586:487:1",
										"statements": [
											{
												"assignments": [
													1144
												],
												"declarations": [
													{
														"constant": false,
														"id": 1144,
														"mutability": "mutable",
														"name": "tokenApprovalsPtr",
														"nameLocation": "20632:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 1148,
														"src": "20596:53:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														},
														"typeName": {
															"id": 1143,
															"keyType": {
																"id": 1141,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "20604:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Mapping",
															"src": "20596:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															},
															"valueType": {
																"id": 1142,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20615:7:1",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1146,
												"initialValue": {
													"id": 1145,
													"name": "_tokenApprovals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 129,
													"src": "20652:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
														"typeString": "mapping(uint256 => address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20596:71:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "20774:293:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20828:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "tokenId",
																		"nodeType": "YulIdentifier",
																		"src": "20834:7:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20821:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20821:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20821:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20862:4:1",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "tokenApprovalsPtr.slot",
																		"nodeType": "YulIdentifier",
																		"src": "20868:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20855:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20855:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20855:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20904:44:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20937:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20943:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "20927:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20927:21:1"
															},
															"variableNames": [
																{
																	"name": "approvedAddressSlot",
																	"nodeType": "YulIdentifier",
																	"src": "20904:19:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21012:45:1",
															"value": {
																"arguments": [
																	{
																		"name": "approvedAddressSlot",
																		"nodeType": "YulIdentifier",
																		"src": "21037:19:1"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "21031:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21031:26:1"
															},
															"variableNames": [
																{
																	"name": "approvedAddress",
																	"nodeType": "YulIdentifier",
																	"src": "21012:15:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1139,
														"isOffset": false,
														"isSlot": false,
														"src": "21012:15:1",
														"valueSize": 1
													},
													{
														"declaration": 1137,
														"isOffset": false,
														"isSlot": false,
														"src": "20904:19:1",
														"valueSize": 1
													},
													{
														"declaration": 1137,
														"isOffset": false,
														"isSlot": false,
														"src": "21037:19:1",
														"valueSize": 1
													},
													{
														"declaration": 1144,
														"isOffset": false,
														"isSlot": true,
														"src": "20868:22:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1134,
														"isOffset": false,
														"isSlot": false,
														"src": "20834:7:1",
														"valueSize": 1
													}
												],
												"id": 1147,
												"nodeType": "InlineAssembly",
												"src": "20765:302:1"
											}
										]
									},
									"documentation": {
										"id": 1132,
										"nodeType": "StructuredDocumentation",
										"src": "20334:97:1",
										"text": " @dev Returns the storage slot and value for the approved address of `tokenId`."
									},
									"id": 1149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApprovedAddress",
									"nameLocation": "20445:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "20473:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "20465:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20465:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20464:17:1"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "approvedAddressSlot",
												"nameLocation": "20536:19:1",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "20528:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "20565:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "20557:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20527:54:1"
									},
									"scope": 1664,
									"src": "20436:637:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "21332:481:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "21351:456:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21460:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "from",
																		"nodeType": "YulIdentifier",
																		"src": "21472:4:1"
																	},
																	{
																		"name": "BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "21478:15:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "21468:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21468:26:1"
															},
															"variableNames": [
																{
																	"name": "from",
																	"nodeType": "YulIdentifier",
																	"src": "21460:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21607:44:1",
															"value": {
																"arguments": [
																	{
																		"name": "msgSender",
																		"nodeType": "YulIdentifier",
																		"src": "21624:9:1"
																	},
																	{
																		"name": "BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "21635:15:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "21620:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21620:31:1"
															},
															"variableNames": [
																{
																	"name": "msgSender",
																	"nodeType": "YulIdentifier",
																	"src": "21607:9:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21732:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "21748:9:1"
																			},
																			{
																				"name": "from",
																				"nodeType": "YulIdentifier",
																				"src": "21759:4:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21745:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21745:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "21769:9:1"
																			},
																			{
																				"name": "approvedAddress",
																				"nodeType": "YulIdentifier",
																				"src": "21780:15:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21766:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21766:30:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "21742:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21742:55:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "21732:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 106,
														"isOffset": false,
														"isSlot": false,
														"src": "21478:15:1",
														"valueSize": 1
													},
													{
														"declaration": 106,
														"isOffset": false,
														"isSlot": false,
														"src": "21635:15:1",
														"valueSize": 1
													},
													{
														"declaration": 1152,
														"isOffset": false,
														"isSlot": false,
														"src": "21780:15:1",
														"valueSize": 1
													},
													{
														"declaration": 1154,
														"isOffset": false,
														"isSlot": false,
														"src": "21460:4:1",
														"valueSize": 1
													},
													{
														"declaration": 1154,
														"isOffset": false,
														"isSlot": false,
														"src": "21472:4:1",
														"valueSize": 1
													},
													{
														"declaration": 1154,
														"isOffset": false,
														"isSlot": false,
														"src": "21759:4:1",
														"valueSize": 1
													},
													{
														"declaration": 1156,
														"isOffset": false,
														"isSlot": false,
														"src": "21607:9:1",
														"valueSize": 1
													},
													{
														"declaration": 1156,
														"isOffset": false,
														"isSlot": false,
														"src": "21624:9:1",
														"valueSize": 1
													},
													{
														"declaration": 1156,
														"isOffset": false,
														"isSlot": false,
														"src": "21748:9:1",
														"valueSize": 1
													},
													{
														"declaration": 1156,
														"isOffset": false,
														"isSlot": false,
														"src": "21769:9:1",
														"valueSize": 1
													},
													{
														"declaration": 1159,
														"isOffset": false,
														"isSlot": false,
														"src": "21732:6:1",
														"valueSize": 1
													}
												],
												"id": 1161,
												"nodeType": "InlineAssembly",
												"src": "21342:465:1"
											}
										]
									},
									"documentation": {
										"id": 1150,
										"nodeType": "StructuredDocumentation",
										"src": "21079:97:1",
										"text": " @dev Returns whether the `approvedAddress` is equals to `from` or `msgSender`."
									},
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isOwnerOrApproved",
									"nameLocation": "21190:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "21226:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "21218:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21218:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "21259:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "21251:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21251:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "msgSender",
												"nameLocation": "21281:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "21273:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21273:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21208:88:1"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "21324:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "21319:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1158,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21319:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21318:13:1"
									},
									"scope": 1664,
									"src": "21181:632:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1807
									],
									"body": {
										"id": 1307,
										"nodeType": "Block",
										"src": "22174:2620:1",
										"statements": [
											{
												"assignments": [
													1175
												],
												"declarations": [
													{
														"constant": false,
														"id": 1175,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "22192:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 1307,
														"src": "22184:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1174,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22184:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1179,
												"initialValue": {
													"arguments": [
														{
															"id": 1177,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "22233:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1176,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "22214:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22214:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22184:57:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1184,
																		"name": "prevOwnershipPacked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1175,
																		"src": "22272:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22264:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1182,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "22264:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22264:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22256:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1180,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "22256:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22256:37:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1187,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "22297:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22256:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1192,
												"nodeType": "IfStatement",
												"src": "22252:86:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1189,
															"name": "TransferFromIncorrectOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1694,
															"src": "22310:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22310:28:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1191,
													"nodeType": "RevertStatement",
													"src": "22303:35:1"
												}
											},
											{
												"assignments": [
													1194,
													1196
												],
												"declarations": [
													{
														"constant": false,
														"id": 1194,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "22358:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 1307,
														"src": "22350:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1193,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22350:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1196,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "22387:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 1307,
														"src": "22379:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1195,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "22379:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1200,
												"initialValue": {
													"arguments": [
														{
															"id": 1198,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "22426:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1197,
														"name": "_getApprovedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "22406:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22406:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22349:85:1"
											},
											{
												"condition": {
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "22530:63:1",
													"subExpression": {
														"arguments": [
															{
																"id": 1202,
																"name": "approvedAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1196,
																"src": "22550:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1203,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1166,
																"src": "22567:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1204,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1653,
																	"src": "22573:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22573:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1201,
															"name": "_isOwnerOrApproved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "22531:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address,address) pure returns (bool)"
															}
														},
														"id": 1206,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22531:62:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1218,
												"nodeType": "IfStatement",
												"src": "22526:173:1",
												"trueBody": {
													"condition": {
														"id": 1213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "22611:44:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 1209,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "22629:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1210,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1653,
																		"src": "22635:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22635:19:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1208,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 745,
																"src": "22612:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22612:43:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1217,
													"nodeType": "IfStatement",
													"src": "22607:92:1",
													"trueBody": {
														"errorCall": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1214,
																"name": "TransferCallerNotOwnerNorApproved",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1691,
																"src": "22664:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22664:35:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1216,
														"nodeType": "RevertStatement",
														"src": "22657:42:1"
													}
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1219,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "22714:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22728:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22720:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1220,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "22720:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1223,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22720:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22714:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1228,
												"nodeType": "IfStatement",
												"src": "22710:52:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1225,
															"name": "TransferToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1700,
															"src": "22739:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22739:23:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1227,
													"nodeType": "RevertStatement",
													"src": "22732:30:1"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1230,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "22795:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1231,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "22801:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1232,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "22805:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22814:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1229,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1630,
														"src": "22773:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22773:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1235,
												"nodeType": "ExpressionStatement",
												"src": "22773:43:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "22888:181:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22921:138:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "23022:19:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23043:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "23015:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23015:30:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23015:30:1"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "22905:15:1"
															},
															"nodeType": "YulIf",
															"src": "22902:157:1"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1196,
														"isOffset": false,
														"isSlot": false,
														"src": "22905:15:1",
														"valueSize": 1
													},
													{
														"declaration": 1194,
														"isOffset": false,
														"isSlot": false,
														"src": "23022:19:1",
														"valueSize": 1
													}
												],
												"id": 1236,
												"nodeType": "InlineAssembly",
												"src": "22879:190:1"
											},
											{
												"id": 1293,
												"nodeType": "UncheckedBlock",
												"src": "23334:1359:1",
												"statements": [
													{
														"expression": {
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "--",
															"prefix": true,
															"src": "23427:26:1",
															"subExpression": {
																"baseExpression": {
																	"id": 1237,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 125,
																	"src": "23429:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1239,
																"indexExpression": {
																	"id": 1238,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "23448:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "23429:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1241,
														"nodeType": "ExpressionStatement",
														"src": "23427:26:1"
													},
													{
														"expression": {
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "23495:24:1",
															"subExpression": {
																"baseExpression": {
																	"id": 1242,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 125,
																	"src": "23497:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1244,
																"indexExpression": {
																	"id": 1243,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1168,
																	"src": "23516:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "23497:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1246,
														"nodeType": "ExpressionStatement",
														"src": "23495:24:1"
													},
													{
														"expression": {
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1247,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "23783:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1249,
																"indexExpression": {
																	"id": 1248,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1170,
																	"src": "23801:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "23783:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1251,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1168,
																		"src": "23848:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1252,
																			"name": "BITMASK_NEXT_INITIALIZED",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 87,
																			"src": "23868:24:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1254,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1166,
																					"src": "23910:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1255,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1168,
																					"src": "23916:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1256,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1175,
																					"src": "23920:19:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1253,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1604,
																				"src": "23895:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23895:45:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "23868:72:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1250,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 525,
																	"src": "23812:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23812:142:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23783:171:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1261,
														"nodeType": "ExpressionStatement",
														"src": "23783:171:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1262,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1175,
																	"src": "24071:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1263,
																	"name": "BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 87,
																	"src": "24093:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24071:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1265,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24121:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "24071:51:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1292,
														"nodeType": "IfStatement",
														"src": "24067:616:1",
														"trueBody": {
															"id": 1291,
															"nodeType": "Block",
															"src": "24124:559:1",
															"statements": [
																{
																	"assignments": [
																		1268
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1268,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "24150:11:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 1291,
																			"src": "24142:19:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1267,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "24142:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1272,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1269,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1170,
																			"src": "24164:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24174:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "24164:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "24142:33:1"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1273,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 121,
																				"src": "24295:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1275,
																			"indexExpression": {
																				"id": 1274,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1268,
																				"src": "24313:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "24295:30:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1276,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24329:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "24295:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1290,
																	"nodeType": "IfStatement",
																	"src": "24291:378:1",
																	"trueBody": {
																		"id": 1289,
																		"nodeType": "Block",
																		"src": "24332:337:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1280,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1278,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1268,
																						"src": "24416:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1279,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 111,
																						"src": "24431:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "24416:28:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1288,
																				"nodeType": "IfStatement",
																				"src": "24412:239:1",
																				"trueBody": {
																					"id": 1287,
																					"nodeType": "Block",
																					"src": "24446:205:1",
																					"statements": [
																						{
																							"expression": {
																								"id": 1285,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1281,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 121,
																										"src": "24576:17:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1283,
																									"indexExpression": {
																										"id": 1282,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1268,
																										"src": "24594:11:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "24576:30:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1284,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1175,
																									"src": "24609:19:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "24576:52:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1286,
																							"nodeType": "ExpressionStatement",
																							"src": "24576:52:1"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1295,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "24717:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1296,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "24723:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1297,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "24727:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1294,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1741,
														"src": "24708:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24708:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1299,
												"nodeType": "EmitStatement",
												"src": "24703:32:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1301,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "24766:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1302,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "24772:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1303,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "24776:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24785:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1300,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "24745:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24745:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1306,
												"nodeType": "ExpressionStatement",
												"src": "24745:42:1"
											}
										]
									},
									"documentation": {
										"id": 1164,
										"nodeType": "StructuredDocumentation",
										"src": "21819:231:1",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "22064:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1172,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "22165:8:1"
									},
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "22094:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "22086:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22086:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22116:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "22108:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22108:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "22136:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "22128:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22128:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22076:73:1"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22174:0:1"
									},
									"scope": 1664,
									"src": "22055:2739:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1319,
										"nodeType": "Block",
										"src": "24916:38:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1315,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "24932:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24941:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1314,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1320,
															1472
														],
														"referencedDeclaration": 1472,
														"src": "24926:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24926:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1318,
												"nodeType": "ExpressionStatement",
												"src": "24926:21:1"
											}
										]
									},
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "24800:62:1",
										"text": " @dev Equivalent to `_burn(tokenId, false)`."
									},
									"id": 1320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "24876:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "24890:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "24882:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24882:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24881:17:1"
									},
									"returnParameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24916:0:1"
									},
									"scope": 1664,
									"src": "24867:87:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1471,
										"nodeType": "Block",
										"src": "25240:2928:1",
										"statements": [
											{
												"assignments": [
													1329
												],
												"declarations": [
													{
														"constant": false,
														"id": 1329,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "25258:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 1471,
														"src": "25250:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1328,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25250:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1333,
												"initialValue": {
													"arguments": [
														{
															"id": 1331,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "25299:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1330,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "25280:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25280:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25250:57:1"
											},
											{
												"assignments": [
													1335
												],
												"declarations": [
													{
														"constant": false,
														"id": 1335,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "25326:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 1471,
														"src": "25318:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1334,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "25318:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1343,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1340,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1329,
																	"src": "25349:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1339,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25341:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1338,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "25341:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25341:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1337,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "25333:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1336,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "25333:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25333:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25318:52:1"
											},
											{
												"assignments": [
													1345,
													1347
												],
												"declarations": [
													{
														"constant": false,
														"id": 1345,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "25390:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 1471,
														"src": "25382:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1344,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25382:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1347,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "25419:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 1471,
														"src": "25411:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1346,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "25411:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1351,
												"initialValue": {
													"arguments": [
														{
															"id": 1349,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "25458:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1348,
														"name": "_getApprovedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "25438:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25438:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25381:85:1"
											},
											{
												"condition": {
													"id": 1352,
													"name": "approvalCheck",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1325,
													"src": "25481:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1372,
												"nodeType": "IfStatement",
												"src": "25477:306:1",
												"trueBody": {
													"id": 1371,
													"nodeType": "Block",
													"src": "25496:287:1",
													"statements": [
														{
															"condition": {
																"id": 1359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "25599:63:1",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 1354,
																			"name": "approvedAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1347,
																			"src": "25619:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1355,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1335,
																			"src": "25636:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1356,
																				"name": "_msgSenderERC721A",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1653,
																				"src": "25642:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "25642:19:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1353,
																		"name": "_isOwnerOrApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1163,
																		"src": "25600:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address,address) pure returns (bool)"
																		}
																	},
																	"id": 1358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "25600:62:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1370,
															"nodeType": "IfStatement",
															"src": "25595:177:1",
															"trueBody": {
																"condition": {
																	"id": 1365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "25684:44:1",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1361,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1335,
																				"src": "25702:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1362,
																					"name": "_msgSenderERC721A",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1653,
																					"src": "25708:17:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1363,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "25708:19:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1360,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 745,
																			"src": "25685:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "25685:43:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1369,
																"nodeType": "IfStatement",
																"src": "25680:92:1",
																"trueBody": {
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1366,
																			"name": "TransferCallerNotOwnerNorApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1691,
																			"src": "25737:33:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "25737:35:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1368,
																	"nodeType": "RevertStatement",
																	"src": "25730:42:1"
																}
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1374,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "25815:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25829:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25821:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1375,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "25821:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25821:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1379,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "25833:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25842:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1373,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1630,
														"src": "25793:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25793:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1382,
												"nodeType": "ExpressionStatement",
												"src": "25793:51:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "25916:181:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25949:138:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "26050:19:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26071:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "26043:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26043:30:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26043:30:1"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "25933:15:1"
															},
															"nodeType": "YulIf",
															"src": "25930:157:1"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1347,
														"isOffset": false,
														"isSlot": false,
														"src": "25933:15:1",
														"valueSize": 1
													},
													{
														"declaration": 1345,
														"isOffset": false,
														"isSlot": false,
														"src": "26050:19:1",
														"valueSize": 1
													}
												],
												"id": 1383,
												"nodeType": "InlineAssembly",
												"src": "25907:190:1"
											},
											{
												"id": 1447,
												"nodeType": "UncheckedBlock",
												"src": "26364:1540:1",
												"statements": [
													{
														"expression": {
															"id": 1393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1384,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 125,
																	"src": "26675:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1386,
																"indexExpression": {
																	"id": 1385,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1335,
																	"src": "26694:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "26675:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1392,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1389,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 1387,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26704:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 1388,
																				"name": "BITPOS_NUMBER_BURNED",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 60,
																				"src": "26709:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "26704:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1390,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "26703:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26733:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "26703:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26675:59:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1394,
														"nodeType": "ExpressionStatement",
														"src": "26675:59:1"
													},
													{
														"expression": {
															"id": 1414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1395,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "26965:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1397,
																"indexExpression": {
																	"id": 1396,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1323,
																	"src": "26983:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "26965:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1399,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1335,
																		"src": "27030:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1402,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1400,
																						"name": "BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 79,
																						"src": "27053:14:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "|",
																					"rightExpression": {
																						"id": 1401,
																						"name": "BITMASK_NEXT_INITIALIZED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 87,
																						"src": "27070:24:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "27053:41:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1403,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "27052:43:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1405,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1335,
																					"src": "27113:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1408,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27127:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1407,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "27119:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1406,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "27119:7:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1409,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "27119:10:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1410,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1329,
																					"src": "27131:19:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1404,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1604,
																				"src": "27098:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27098:53:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "27052:99:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1398,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 525,
																	"src": "26994:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26994:171:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26965:200:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1415,
														"nodeType": "ExpressionStatement",
														"src": "26965:200:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1416,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1329,
																	"src": "27282:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1417,
																	"name": "BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 87,
																	"src": "27304:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "27282:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27332:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "27282:51:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1446,
														"nodeType": "IfStatement",
														"src": "27278:616:1",
														"trueBody": {
															"id": 1445,
															"nodeType": "Block",
															"src": "27335:559:1",
															"statements": [
																{
																	"assignments": [
																		1422
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1422,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "27361:11:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 1445,
																			"src": "27353:19:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1421,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "27353:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1426,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1423,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1323,
																			"src": "27375:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27385:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "27375:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "27353:33:1"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1427,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 121,
																				"src": "27506:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1429,
																			"indexExpression": {
																				"id": 1428,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1422,
																				"src": "27524:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "27506:30:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1430,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27540:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "27506:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1444,
																	"nodeType": "IfStatement",
																	"src": "27502:378:1",
																	"trueBody": {
																		"id": 1443,
																		"nodeType": "Block",
																		"src": "27543:337:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1434,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1432,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1422,
																						"src": "27627:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1433,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 111,
																						"src": "27642:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "27627:28:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1442,
																				"nodeType": "IfStatement",
																				"src": "27623:239:1",
																				"trueBody": {
																					"id": 1441,
																					"nodeType": "Block",
																					"src": "27657:205:1",
																					"statements": [
																						{
																							"expression": {
																								"id": 1439,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1435,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 121,
																										"src": "27787:17:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1437,
																									"indexExpression": {
																										"id": 1436,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1422,
																										"src": "27805:11:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "27787:30:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1438,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1329,
																									"src": "27820:19:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "27787:52:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1440,
																							"nodeType": "ExpressionStatement",
																							"src": "27787:52:1"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1449,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "27928:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27942:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27934:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1450,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "27934:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27934:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1454,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "27946:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1448,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1741,
														"src": "27919:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27919:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1456,
												"nodeType": "EmitStatement",
												"src": "27914:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1458,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "27985:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27999:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1460,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27991:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1459,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "27991:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27991:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1463,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "28003:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28012:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1457,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "27964:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27964:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1466,
												"nodeType": "ExpressionStatement",
												"src": "27964:50:1"
											},
											{
												"id": 1470,
												"nodeType": "UncheckedBlock",
												"src": "28113:49:1",
												"statements": [
													{
														"expression": {
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "28137:14:1",
															"subExpression": {
																"id": 1467,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "28137:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1469,
														"nodeType": "ExpressionStatement",
														"src": "28137:14:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1321,
										"nodeType": "StructuredDocumentation",
										"src": "24960:206:1",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "25180:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "25194:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "25186:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25186:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "25208:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "25203:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25203:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25185:37:1"
									},
									"returnParameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25240:0:1"
									},
									"scope": 1664,
									"src": "25171:2997:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1526,
										"nodeType": "Block",
										"src": "28813:533:1",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 1507,
															"nodeType": "Block",
															"src": "28962:96:1",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 1505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1499,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1497,
																			"src": "28983:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 1501,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1477,
																							"src": "29018:2:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1500,
																						"name": "ERC721A__IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 43,
																						"src": "28993:24:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$43_$",
																							"typeString": "type(contract ERC721A__IERC721Receiver)"
																						}
																					},
																					"id": 1502,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "28993:28:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$43",
																						"typeString": "contract ERC721A__IERC721Receiver"
																					}
																				},
																				"id": 1503,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 42,
																				"src": "28993:45:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 1504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "28993:54:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "28983:64:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 1485,
																	"id": 1506,
																	"nodeType": "Return",
																	"src": "28976:71:1"
																}
															]
														},
														"errorName": "",
														"id": 1508,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1498,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1497,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "28945:6:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1508,
																	"src": "28938:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 1496,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "28938:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "28924:37:1"
														},
														"src": "28916:142:1"
													},
													{
														"block": {
															"id": 1523,
															"nodeType": "Block",
															"src": "29087:253:1",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1512,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1510,
																				"src": "29105:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "29105:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29122:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "29105:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 1521,
																		"nodeType": "Block",
																		"src": "29211:119:1",
																		"statements": [
																			{
																				"AST": {
																					"nodeType": "YulBlock",
																					"src": "29238:78:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nodeType": "YulLiteral",
																												"src": "29271:2:1",
																												"type": "",
																												"value": "32"
																											},
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "29275:6:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "29267:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "29267:15:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "29290:6:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "29284:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "29284:13:1"
																									}
																								],
																								"functionName": {
																									"name": "revert",
																									"nodeType": "YulIdentifier",
																									"src": "29260:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "29260:38:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "29260:38:1"
																						}
																					]
																				},
																				"evmVersion": "london",
																				"externalReferences": [
																					{
																						"declaration": 1510,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "29275:6:1",
																						"valueSize": 1
																					},
																					{
																						"declaration": 1510,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "29290:6:1",
																						"valueSize": 1
																					}
																				],
																				"id": 1520,
																				"nodeType": "InlineAssembly",
																				"src": "29229:87:1"
																			}
																		]
																	},
																	"id": 1522,
																	"nodeType": "IfStatement",
																	"src": "29101:229:1",
																	"trueBody": {
																		"id": 1519,
																		"nodeType": "Block",
																		"src": "29125:80:1",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1516,
																						"name": "TransferToNonERC721ReceiverImplementer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1697,
																						"src": "29150:38:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 1517,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "29150:40:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1518,
																				"nodeType": "RevertStatement",
																				"src": "29143:47:1"
																			}
																		]
																	}
																}
															]
														},
														"errorName": "",
														"id": 1524,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1511,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1510,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "29079:6:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1524,
																	"src": "29066:19:1",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1509,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "29066:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "29065:21:1"
														},
														"src": "29059:281:1"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1490,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1653,
																"src": "28873:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28873:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1492,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1475,
															"src": "28894:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1493,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "28900:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1494,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1481,
															"src": "28909:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1487,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1477,
																	"src": "28852:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1486,
																"name": "ERC721A__IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "28827:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$43_$",
																	"typeString": "type(contract ERC721A__IERC721Receiver)"
																}
															},
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28827:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$43",
																"typeString": "contract ERC721A__IERC721Receiver"
															}
														},
														"id": 1489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 42,
														"src": "28827:45:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28827:88:1",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 1525,
												"nodeType": "TryStatement",
												"src": "28823:517:1"
											}
										]
									},
									"documentation": {
										"id": 1473,
										"nodeType": "StructuredDocumentation",
										"src": "28174:470:1",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 1527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "28658:30:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "28706:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "28698:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28698:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "28728:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "28720:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28720:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "28748:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "28740:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28740:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "28778:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "28765:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1480,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28765:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28688:101:1"
									},
									"returnParameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "28807:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1483,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28807:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28806:6:1"
									},
									"scope": 1664,
									"src": "28649:697:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1570,
										"nodeType": "Block",
										"src": "29508:445:1",
										"statements": [
											{
												"assignments": [
													1536
												],
												"declarations": [
													{
														"constant": false,
														"id": 1536,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "29526:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 1570,
														"src": "29518:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1535,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29518:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1540,
												"initialValue": {
													"baseExpression": {
														"id": 1537,
														"name": "_packedOwnerships",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "29535:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1539,
													"indexExpression": {
														"id": 1538,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1530,
														"src": "29553:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "29535:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29518:41:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1541,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1536,
														"src": "29573:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29583:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "29573:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1547,
												"nodeType": "IfStatement",
												"src": "29569:61:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1544,
															"name": "OwnershipNotInitializedForExtraData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1709,
															"src": "29593:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29593:37:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1546,
													"nodeType": "RevertStatement",
													"src": "29586:44:1"
												}
											},
											{
												"assignments": [
													1549
												],
												"declarations": [
													{
														"constant": false,
														"id": 1549,
														"mutability": "mutable",
														"name": "extraDataCasted",
														"nameLocation": "29648:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 1570,
														"src": "29640:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1548,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29640:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1550,
												"nodeType": "VariableDeclarationStatement",
												"src": "29640:23:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "29752:52:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29766:28:1",
															"value": {
																"name": "extraData",
																"nodeType": "YulIdentifier",
																"src": "29785:9:1"
															},
															"variableNames": [
																{
																	"name": "extraDataCasted",
																	"nodeType": "YulIdentifier",
																	"src": "29766:15:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1532,
														"isOffset": false,
														"isSlot": false,
														"src": "29785:9:1",
														"valueSize": 1
													},
													{
														"declaration": 1549,
														"isOffset": false,
														"isSlot": false,
														"src": "29766:15:1",
														"valueSize": 1
													}
												],
												"id": 1551,
												"nodeType": "InlineAssembly",
												"src": "29743:61:1"
											},
											{
												"expression": {
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1552,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1536,
														"src": "29813:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1553,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1536,
																		"src": "29823:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 1554,
																		"name": "BITMASK_EXTRA_DATA_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "29832:29:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "29823:38:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1556,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "29822:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1557,
																		"name": "extraDataCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1549,
																		"src": "29866:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 1558,
																		"name": "BITPOS_EXTRA_DATA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 90,
																		"src": "29885:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "29866:36:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1560,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "29865:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "29822:81:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29813:90:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1563,
												"nodeType": "ExpressionStatement",
												"src": "29813:90:1"
											},
											{
												"expression": {
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1564,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 121,
															"src": "29913:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1566,
														"indexExpression": {
															"id": 1565,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1530,
															"src": "29931:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "29913:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1567,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1536,
														"src": "29940:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29913:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1569,
												"nodeType": "ExpressionStatement",
												"src": "29913:33:1"
											}
										]
									},
									"documentation": {
										"id": 1528,
										"nodeType": "StructuredDocumentation",
										"src": "29352:84:1",
										"text": " @dev Directly sets the extra data for the ownership data `index`."
									},
									"id": 1571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setExtraDataAt",
									"nameLocation": "29450:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "29474:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "29466:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29466:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "extraData",
												"nameLocation": "29488:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "29481:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1531,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "29481:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29465:33:1"
									},
									"returnParameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29508:0:1"
									},
									"scope": 1664,
									"src": "29441:512:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1603,
										"nodeType": "Block",
										"src": "30239:162:1",
										"statements": [
											{
												"assignments": [
													1584
												],
												"declarations": [
													{
														"constant": false,
														"id": 1584,
														"mutability": "mutable",
														"name": "extraData",
														"nameLocation": "30256:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 1603,
														"src": "30249:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 1583,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "30249:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1591,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1587,
																"name": "prevOwnershipPacked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1578,
																"src": "30275:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 1588,
																"name": "BITPOS_EXTRA_DATA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "30298:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30275:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "30268:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 1585,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "30268:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30268:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30249:67:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1595,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1574,
																		"src": "30352:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1596,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1576,
																		"src": "30358:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1597,
																		"name": "extraData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1584,
																		"src": "30362:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"id": 1594,
																	"name": "_extraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1617,
																	"src": "30341:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_uint24_$",
																		"typeString": "function (address,address,uint24) view returns (uint24)"
																	}
																},
																"id": 1598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30341:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30333:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1592,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "30333:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30333:40:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 1600,
														"name": "BITPOS_EXTRA_DATA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "30377:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30333:61:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1582,
												"id": 1602,
												"nodeType": "Return",
												"src": "30326:68:1"
											}
										]
									},
									"documentation": {
										"id": 1572,
										"nodeType": "StructuredDocumentation",
										"src": "29959:135:1",
										"text": " @dev Returns the next extra data for the packed ownership data.\n The returned result is shifted into position."
									},
									"id": 1604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextExtraData",
									"nameLocation": "30108:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "30140:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "30132:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30132:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "30162:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "30154:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30154:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "prevOwnershipPacked",
												"nameLocation": "30182:19:1",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "30174:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30174:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30122:85:1"
									},
									"returnParameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "30230:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30230:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30229:9:1"
									},
									"scope": 1664,
									"src": "30099:302:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1616,
										"nodeType": "Block",
										"src": "31102:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1605,
										"nodeType": "StructuredDocumentation",
										"src": "30407:549:1",
										"text": " @dev Called during each token transfer to set the 24bit `extraData` field.\n Intended to be overridden by the cosumer contract.\n `previousExtraData` - the value of `extraData` before transfer.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extraData",
									"nameLocation": "30970:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "30998:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "30990:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30990:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "31020:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "31012:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31012:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "previousExtraData",
												"nameLocation": "31039:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "31032:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1610,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "31032:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30980:82:1"
									},
									"returnParameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "31094:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1613,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "31094:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31093:8:1"
									},
									"scope": 1664,
									"src": "30961:143:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1629,
										"nodeType": "Block",
										"src": "31894:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1618,
										"nodeType": "StructuredDocumentation",
										"src": "31110:627:1",
										"text": " @dev Hook that is called before a set of serially-ordered token ids are about to be transferred.\n This includes minting.\n And also called before burning one token.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "31751:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "31790:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "31782:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31782:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "31812:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "31804:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31804:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "31832:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "31824:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "31862:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "31854:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31854:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31772:104:1"
									},
									"returnParameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31894:0:1"
									},
									"scope": 1664,
									"src": "31742:154:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1642,
										"nodeType": "Block",
										"src": "32688:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1631,
										"nodeType": "StructuredDocumentation",
										"src": "31902:630:1",
										"text": " @dev Hook that is called after a set of serially-ordered token ids have been transferred.\n This includes minting.\n And also called after one token has been burned.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "32546:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "32584:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "32576:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32576:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "32606:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "32598:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32598:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "32626:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "32618:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32618:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "32656:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "32648:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32648:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32566:104:1"
									},
									"returnParameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32688:0:1"
									},
									"scope": 1664,
									"src": "32537:153:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1652,
										"nodeType": "Block",
										"src": "32943:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1649,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "32960:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "32960:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1648,
												"id": 1651,
												"nodeType": "Return",
												"src": "32953:17:1"
											}
										]
									},
									"documentation": {
										"id": 1644,
										"nodeType": "StructuredDocumentation",
										"src": "32696:173:1",
										"text": " @dev Returns the message sender (defaults to `msg.sender`).\n If you are writing GSN compatible contracts, you need to override this function."
									},
									"id": 1653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSenderERC721A",
									"nameLocation": "32883:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32900:2:1"
									},
									"returnParameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "32934:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32934:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32933:9:1"
									},
									"scope": 1664,
									"src": "32874:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1662,
										"nodeType": "Block",
										"src": "33154:1844:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "33173:1819:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "33524:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33541:4:1",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "33535:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33535:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33548:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "33531:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "33531:21:1"
															},
															"variableNames": [
																{
																	"name": "ptr",
																	"nodeType": "YulIdentifier",
																	"src": "33524:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33631:4:1",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "33637:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "33624:17:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33624:17:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "33729:14:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "33740:3:1"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "33733:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "34620:144:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "34679:18:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "34690:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "34695:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "34686:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34686:11:1"
																		},
																		"variableNames": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "34679:3:1"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "34722:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "34731:2:1",
																							"type": "",
																							"value": "48"
																						},
																						{
																							"arguments": [
																								{
																									"name": "temp",
																									"nodeType": "YulIdentifier",
																									"src": "34739:4:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "34745:2:1",
																									"type": "",
																									"value": "10"
																								}
																							],
																							"functionName": {
																								"name": "mod",
																								"nodeType": "YulIdentifier",
																								"src": "34735:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "34735:13:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "34727:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "34727:22:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "34714:7:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34714:36:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "34714:36:1"
																	}
																]
															},
															"condition": {
																"name": "temp",
																"nodeType": "YulIdentifier",
																"src": "34509:4:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "34514:105:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "34584:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "34596:4:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "34602:2:1",
																					"type": "",
																					"value": "10"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "34592:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34592:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "temp",
																				"nodeType": "YulIdentifier",
																				"src": "34584:4:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "34086:422:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "34176:17:1",
																		"value": {
																			"name": "value",
																			"nodeType": "YulIdentifier",
																			"src": "34188:5:1"
																		},
																		"variables": [
																			{
																				"name": "temp",
																				"nodeType": "YulTypedName",
																				"src": "34180:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "34300:18:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "34311:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "34316:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "34307:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34307:11:1"
																		},
																		"variableNames": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "34300:3:1"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "34428:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "34437:2:1",
																							"type": "",
																							"value": "48"
																						},
																						{
																							"arguments": [
																								{
																									"name": "temp",
																									"nodeType": "YulIdentifier",
																									"src": "34445:4:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "34451:2:1",
																									"type": "",
																									"value": "10"
																								}
																							],
																							"functionName": {
																								"name": "mod",
																								"nodeType": "YulIdentifier",
																								"src": "34441:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "34441:13:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "34433:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "34433:22:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "34420:7:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34420:36:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "34420:36:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "34473:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "34485:4:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "34491:2:1",
																					"type": "",
																					"value": "10"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "34481:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34481:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "temp",
																				"nodeType": "YulIdentifier",
																				"src": "34473:4:1"
																			}
																		]
																	}
																]
															},
															"src": "34082:682:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "34778:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "34796:3:1"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "34801:3:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "34792:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "34792:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "34782:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "34898:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "34909:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34914:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "34905:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "34905:12:1"
															},
															"variableNames": [
																{
																	"name": "ptr",
																	"nodeType": "YulIdentifier",
																	"src": "34898:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "34970:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "34975:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "34963:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "34963:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34963:19:1"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1659,
														"isOffset": false,
														"isSlot": false,
														"src": "33524:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1659,
														"isOffset": false,
														"isSlot": false,
														"src": "33637:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1659,
														"isOffset": false,
														"isSlot": false,
														"src": "33740:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1659,
														"isOffset": false,
														"isSlot": false,
														"src": "34300:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1659,
														"isOffset": false,
														"isSlot": false,
														"src": "34311:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1659,
														"isOffset": false,
														"isSlot": false,
														"src": "34428:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1659,
														"isOffset": false,
														"isSlot": false,
														"src": "34679:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1659,
														"isOffset": false,
														"isSlot": false,
														"src": "34690:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1659,
														"isOffset": false,
														"isSlot": false,
														"src": "34722:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1659,
														"isOffset": false,
														"isSlot": false,
														"src": "34801:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1659,
														"isOffset": false,
														"isSlot": false,
														"src": "34898:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1659,
														"isOffset": false,
														"isSlot": false,
														"src": "34909:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1659,
														"isOffset": false,
														"isSlot": false,
														"src": "34970:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1656,
														"isOffset": false,
														"isSlot": false,
														"src": "34188:5:1",
														"valueSize": 1
													}
												],
												"id": 1661,
												"nodeType": "InlineAssembly",
												"src": "33164:1828:1"
											}
										]
									},
									"documentation": {
										"id": 1654,
										"nodeType": "StructuredDocumentation",
										"src": "32983:90:1",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_toString",
									"nameLocation": "33087:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "33105:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "33097:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33097:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33096:15:1"
									},
									"returnParameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "ptr",
												"nameLocation": "33149:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "33135:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1658,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "33135:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33134:19:1"
									},
									"scope": 1664,
									"src": "33078:1920:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1665,
							"src": "885:34115:1",
							"usedErrors": [
								1670,
								1673,
								1676,
								1679,
								1682,
								1685,
								1688,
								1691,
								1694,
								1697,
								1700,
								1703,
								1706,
								1709
							]
						}
					],
					"src": "84:34917:1"
				},
				"id": 1
			},
			"erc721a/contracts/IERC721A.sol": {
				"ast": {
					"absolutePath": "erc721a/contracts/IERC721A.sol",
					"exportedSymbols": {
						"IERC721A": [
							1873
						]
					},
					"id": 1874,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1666,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721A",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1667,
								"nodeType": "StructuredDocumentation",
								"src": "109:59:2",
								"text": " @dev Interface of an ERC721A compliant contract."
							},
							"fullyImplemented": false,
							"id": 1873,
							"linearizedBaseContracts": [
								1873
							],
							"name": "IERC721A",
							"nameLocation": "179:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1668,
										"nodeType": "StructuredDocumentation",
										"src": "194:76:2",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "cfb3b942",
									"id": 1670,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "281:33:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "314:2:2"
									},
									"src": "275:42:2"
								},
								{
									"documentation": {
										"id": 1671,
										"nodeType": "StructuredDocumentation",
										"src": "323:44:2",
										"text": " The token does not exist."
									},
									"errorSelector": "cf4700e4",
									"id": 1673,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "378:32:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "410:2:2"
									},
									"src": "372:41:2"
								},
								{
									"documentation": {
										"id": 1674,
										"nodeType": "StructuredDocumentation",
										"src": "419:66:2",
										"text": " The caller cannot approve to their own address."
									},
									"errorSelector": "b06307db",
									"id": 1676,
									"name": "ApproveToCaller",
									"nameLocation": "496:15:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "511:2:2"
									},
									"src": "490:24:2"
								},
								{
									"documentation": {
										"id": 1677,
										"nodeType": "StructuredDocumentation",
										"src": "520:65:2",
										"text": " Cannot query the balance for the zero address."
									},
									"errorSelector": "8f4eb604",
									"id": 1679,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "596:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "622:2:2"
									},
									"src": "590:35:2"
								},
								{
									"documentation": {
										"id": 1680,
										"nodeType": "StructuredDocumentation",
										"src": "631:51:2",
										"text": " Cannot mint to the zero address."
									},
									"errorSelector": "2e076300",
									"id": 1682,
									"name": "MintToZeroAddress",
									"nameLocation": "693:17:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "710:2:2"
									},
									"src": "687:26:2"
								},
								{
									"documentation": {
										"id": 1683,
										"nodeType": "StructuredDocumentation",
										"src": "719:72:2",
										"text": " The quantity of tokens minted must be more than zero."
									},
									"errorSelector": "b562e8dd",
									"id": 1685,
									"name": "MintZeroQuantity",
									"nameLocation": "802:16:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "818:2:2"
									},
									"src": "796:25:2"
								},
								{
									"documentation": {
										"id": 1686,
										"nodeType": "StructuredDocumentation",
										"src": "827:44:2",
										"text": " The token does not exist."
									},
									"errorSelector": "df2d9b42",
									"id": 1688,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "882:29:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:2:2"
									},
									"src": "876:38:2"
								},
								{
									"documentation": {
										"id": 1689,
										"nodeType": "StructuredDocumentation",
										"src": "920:76:2",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "59c896be",
									"id": 1691,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "1007:33:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:2:2"
									},
									"src": "1001:42:2"
								},
								{
									"documentation": {
										"id": 1692,
										"nodeType": "StructuredDocumentation",
										"src": "1049:53:2",
										"text": " The token must be owned by `from`."
									},
									"errorSelector": "a1148100",
									"id": 1694,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "1113:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1139:2:2"
									},
									"src": "1107:35:2"
								},
								{
									"documentation": {
										"id": 1695,
										"nodeType": "StructuredDocumentation",
										"src": "1148:109:2",
										"text": " Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
									},
									"errorSelector": "d1a57ed6",
									"id": 1697,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "1268:38:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1306:2:2"
									},
									"src": "1262:47:2"
								},
								{
									"documentation": {
										"id": 1698,
										"nodeType": "StructuredDocumentation",
										"src": "1315:55:2",
										"text": " Cannot transfer to the zero address."
									},
									"errorSelector": "ea553b34",
									"id": 1700,
									"name": "TransferToZeroAddress",
									"nameLocation": "1381:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1402:2:2"
									},
									"src": "1375:30:2"
								},
								{
									"documentation": {
										"id": 1701,
										"nodeType": "StructuredDocumentation",
										"src": "1411:44:2",
										"text": " The token does not exist."
									},
									"errorSelector": "a14c4b50",
									"id": 1703,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "1466:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1493:2:2"
									},
									"src": "1460:36:2"
								},
								{
									"documentation": {
										"id": 1704,
										"nodeType": "StructuredDocumentation",
										"src": "1502:79:2",
										"text": " The `quantity` minted with ERC2309 exceeds the safety limit."
									},
									"errorSelector": "3db1f9af",
									"id": 1706,
									"name": "MintERC2309QuantityExceedsLimit",
									"nameLocation": "1592:31:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1623:2:2"
									},
									"src": "1586:40:2"
								},
								{
									"documentation": {
										"id": 1707,
										"nodeType": "StructuredDocumentation",
										"src": "1632:83:2",
										"text": " The `extraData` cannot be set on an unintialized ownership slot."
									},
									"errorSelector": "00d58153",
									"id": 1709,
									"name": "OwnershipNotInitializedForExtraData",
									"nameLocation": "1726:35:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1761:2:2"
									},
									"src": "1720:44:2"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 1718,
									"members": [
										{
											"constant": false,
											"id": 1711,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "1847:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 1718,
											"src": "1839:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1710,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1839:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1713,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "1960:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 1718,
											"src": "1953:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1712,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1953:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1715,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "2035:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1718,
											"src": "2030:11:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1714,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2030:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1717,
											"mutability": "mutable",
											"name": "extraData",
											"nameLocation": "2150:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 1718,
											"src": "2143:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1716,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "2143:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "1777:14:2",
									"nodeType": "StructDefinition",
									"scope": 1873,
									"src": "1770:396:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1719,
										"nodeType": "StructuredDocumentation",
										"src": "2172:193:2",
										"text": " @dev Returns the total amount of tokens stored by the contract.\n Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
									},
									"functionSelector": "18160ddd",
									"id": 1724,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2379:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2390:2:2"
									},
									"returnParameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "2416:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2416:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2415:9:2"
									},
									"scope": 1873,
									"src": "2370:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1725,
										"nodeType": "StructuredDocumentation",
										"src": "2534:340:2",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1732,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2888:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2913:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "2906:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1726,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2906:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2905:20:2"
									},
									"returnParameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "2949:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1729,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2949:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2948:6:2"
									},
									"scope": 1873,
									"src": "2879:76:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1733,
										"nodeType": "StructuredDocumentation",
										"src": "3064:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1741,
									"name": "Transfer",
									"nameLocation": "3163:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3188:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "3172:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3172:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1737,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3210:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "3194:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1739,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3230:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "3214:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3214:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3171:67:2"
									},
									"src": "3157:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1742,
										"nodeType": "StructuredDocumentation",
										"src": "3245:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1750,
									"name": "Approval",
									"nameLocation": "3350:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3375:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "3359:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3359:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3398:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "3382:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3382:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3424:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "3408:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3408:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3358:74:2"
									},
									"src": "3344:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1751,
										"nodeType": "StructuredDocumentation",
										"src": "3439:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1759,
									"name": "ApprovalForAll",
									"nameLocation": "3567:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3598:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "3582:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1755,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3621:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "3605:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3605:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1757,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3636:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "3631:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1756,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3631:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3581:64:2"
									},
									"src": "3561:85:2"
								},
								{
									"documentation": {
										"id": 1760,
										"nodeType": "StructuredDocumentation",
										"src": "3652:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1767,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3742:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3760:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "3752:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3752:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3751:15:2"
									},
									"returnParameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "3798:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "3790:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3790:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3789:17:2"
									},
									"scope": 1873,
									"src": "3733:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1768,
										"nodeType": "StructuredDocumentation",
										"src": "3813:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1775,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "3958:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3974:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "3966:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3966:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3965:17:2"
									},
									"returnParameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4014:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "4006:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:15:2"
									},
									"scope": 1873,
									"src": "3949:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1776,
										"nodeType": "StructuredDocumentation",
										"src": "4027:556:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1787,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4597:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4631:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "4623:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4623:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4653:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "4645:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4645:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4673:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "4665:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4665:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4705:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "4690:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1783,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4690:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4613:102:2"
									},
									"returnParameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4724:0:2"
									},
									"scope": 1873,
									"src": "4588:137:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1788,
										"nodeType": "StructuredDocumentation",
										"src": "4731:690:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1797,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5435:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5469:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "5461:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5461:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5491:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "5483:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5483:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5511:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "5503:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5503:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5451:73:2"
									},
									"returnParameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5533:0:2"
									},
									"scope": 1873,
									"src": "5426:108:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1798,
										"nodeType": "StructuredDocumentation",
										"src": "5540:504:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1807,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6058:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6088:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "6080:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6080:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6110:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "6102:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6102:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6130:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "6122:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6122:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6070:73:2"
									},
									"returnParameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6152:0:2"
									},
									"scope": 1873,
									"src": "6049:104:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1808,
										"nodeType": "StructuredDocumentation",
										"src": "6159:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1815,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6625:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6641:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "6633:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6633:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6653:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "6645:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6645:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6632:29:2"
									},
									"returnParameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6670:0:2"
									},
									"scope": 1873,
									"src": "6616:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1816,
										"nodeType": "StructuredDocumentation",
										"src": "6677:309:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1823,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "7000:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7026:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "7018:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7018:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "7041:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "7036:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1819,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7036:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7017:34:2"
									},
									"returnParameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7060:0:2"
									},
									"scope": 1873,
									"src": "6991:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1824,
										"nodeType": "StructuredDocumentation",
										"src": "7067:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1831,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "7220:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7240:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "7232:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7232:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7231:17:2"
									},
									"returnParameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7280:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "7272:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7272:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7271:18:2"
									},
									"scope": 1873,
									"src": "7211:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1832,
										"nodeType": "StructuredDocumentation",
										"src": "7296:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1841,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "7448:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7473:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "7465:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7488:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "7480:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7480:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7464:33:2"
									},
									"returnParameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "7521:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1838,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7521:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7520:6:2"
									},
									"scope": 1873,
									"src": "7439:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1842,
										"nodeType": "StructuredDocumentation",
										"src": "7640:58:2",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1847,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "7712:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7716:2:2"
									},
									"returnParameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "7742:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1844,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7742:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7741:15:2"
									},
									"scope": 1873,
									"src": "7703:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1848,
										"nodeType": "StructuredDocumentation",
										"src": "7763:60:2",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1853,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "7837:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7843:2:2"
									},
									"returnParameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "7869:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1850,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7869:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7868:15:2"
									},
									"scope": 1873,
									"src": "7828:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1854,
										"nodeType": "StructuredDocumentation",
										"src": "7890:90:2",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1861,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "7994:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8011:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "8003:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8003:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8002:17:2"
									},
									"returnParameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "8043:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1858,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8043:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8042:15:2"
									},
									"scope": 1873,
									"src": "7985:73:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1862,
										"nodeType": "StructuredDocumentation",
										"src": "8168:203:2",
										"text": " @dev Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`,\n as defined in the ERC2309 standard. See `_mintERC2309` for more details."
									},
									"eventSelector": "deaa91b6123d068f5821d0fb0678463d1a8a6079fe8af5de3ce5e896dcf9133d",
									"id": 1872,
									"name": "ConsecutiveTransfer",
									"nameLocation": "8382:19:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "8418:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "8402:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8402:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1866,
												"indexed": false,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "8439:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "8431:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8431:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1868,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8466:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "8450:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8450:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8488:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "8472:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8472:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8401:90:2"
									},
									"src": "8376:116:2"
								}
							],
							"scope": 1874,
							"src": "169:8325:2",
							"usedErrors": [
								1670,
								1673,
								1676,
								1679,
								1682,
								1685,
								1688,
								1691,
								1694,
								1697,
								1700,
								1703,
								1706,
								1709
							]
						}
					],
					"src": "84:8411:2"
				},
				"id": 2
			}
		}
	}
}